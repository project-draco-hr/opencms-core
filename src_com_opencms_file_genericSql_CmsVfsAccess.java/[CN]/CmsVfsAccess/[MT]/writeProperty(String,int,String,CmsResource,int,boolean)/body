{
  CmsPropertydefinition propdef=null;
  try {
    propdef=readPropertydefinition(meta,resourceType);
  }
 catch (  CmsException ex) {
  }
  if (propdef == null) {
    if (addDefinition) {
      createPropertydefinition(meta,resourceType);
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + ".writeProperty/1] "+ meta,CmsException.C_NOT_FOUND);
    }
  }
 else {
    PreparedStatement stmt=null;
    Connection conn=null;
    try {
      conn=m_SqlQueries.getConnection(projectId);
      if (readProperty(propdef.getName(),projectId,resource,resourceType) != null) {
        stmt=m_SqlQueries.getPreparedStatement(conn,projectId,"C_PROPERTIES_UPDATE");
        stmt.setString(1,m_SqlQueries.validateNull(value));
        stmt.setString(2,resource.getResourceId().toString());
        stmt.setInt(3,propdef.getId());
        stmt.executeUpdate();
      }
 else {
        stmt=m_SqlQueries.getPreparedStatement(conn,projectId,"C_PROPERTIES_CREATE");
        stmt.setInt(1,nextId(m_SqlQueries.get(projectId,"C_TABLE_PROPERTIES")));
        stmt.setInt(2,propdef.getId());
        stmt.setString(3,resource.getResourceId().toString());
        stmt.setString(4,m_SqlQueries.validateNull(value));
        stmt.executeUpdate();
      }
    }
 catch (    SQLException exc) {
      throw m_SqlQueries.getCmsException(this,null,CmsException.C_SQL_ERROR,exc);
    }
 finally {
      m_SqlQueries.closeAll(conn,stmt,null);
    }
  }
}
