{
  final TableProperty pid=(TableProperty)propertyId;
  for (int i=1; i <= m_editableColumns.size(); i++) {
    if (pid.equals(m_editableColumns.get(i - 1))) {
      AbstractTextField tf;
      if (pid.equals(TableProperty.KEY)) {
        tf=new TextField();
        tf.addValidator(new KeyValidator());
      }
 else {
        TextArea atf=new TextArea();
        atf.setRows(1);
        CmsAutoGrowingTextArea.addTo(atf,20);
        tf=atf;
      }
      tf.setWidth("100%");
      tf.setResponsive(true);
      tf.setInputPrompt(Messages.get().getBundle(UI.getCurrent().getLocale()).key(Messages.GUI_PLEASE_ADD_VALUE_0));
      tf.setData(new ComponentData(i,itemId,""));
      if (!m_valueFields.containsKey(Integer.valueOf(i))) {
        m_valueFields.put(Integer.valueOf(i),new HashMap<Integer,AbstractTextField>());
      }
      m_valueFields.get(Integer.valueOf(i)).put((Integer)itemId,tf);
      tf.addFocusListener(new FocusListener(){
        public void focus(        FocusEvent event){
          if (!m_table.isSelected(itemId)) {
            m_table.select(itemId);
          }
          if (pid == TableProperty.KEY) {
            AbstractTextField field=(AbstractTextField)event.getComponent();
            ComponentData data=(ComponentData)field.getData();
            data.setLastValue(field.getValue());
            field.setData(data);
          }
        }
      }
);
      if (pid == TableProperty.KEY) {
        tf.addBlurListener(new BlurListener(){
          public void blur(          BlurEvent event){
            AbstractTextField field=(AbstractTextField)event.getComponent();
            ComponentData data=(ComponentData)field.getData();
            if (!data.getLastValue().equals(field.getValue())) {
              KeyChangeEvent ev=new KeyChangeEvent(field,data.getItemId(),data.getLastValue(),field.getValue());
              fireKeyChangeEvent(ev);
            }
          }
        }
);
      }
      return tf;
    }
  }
  return null;
}
