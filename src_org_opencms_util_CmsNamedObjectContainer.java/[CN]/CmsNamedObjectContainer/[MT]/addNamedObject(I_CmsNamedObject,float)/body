{
  if (m_uniqueNames && m_objectsByName.get(namedObject.getName()) != null) {
    throw new IllegalStateException("This container already contains an object called " + namedObject.getName());
  }
  if (m_relativeOrdered) {
    int pos=0;
    Iterator itElems=m_objectList.iterator();
    while (itElems.hasNext()) {
      CmsNamedObjectElement element=(CmsNamedObjectElement)itElems.next();
      if (element.getPosition() > position) {
        break;
      }
      pos++;
    }
    m_objectList.add(new CmsNamedObjectElement(namedObject,position));
  }
 else {
    m_objectList.add((int)position,namedObject);
  }
  if (m_uniqueNames) {
    m_objectsByName.put(namedObject.getName(),namedObject);
  }
 else {
    I_CmsNamedObject prevObj=(I_CmsNamedObject)m_objectsByName.get(namedObject.getName());
    if (prevObj == null) {
      List list=new ArrayList();
      list.add(namedObject);
      m_objectsByName.put(namedObject.getName(),new CmsNamedObject(namedObject.getName(),list));
    }
 else {
      ((List)((CmsNamedObject)prevObj).getObject()).add(namedObject);
    }
  }
}
