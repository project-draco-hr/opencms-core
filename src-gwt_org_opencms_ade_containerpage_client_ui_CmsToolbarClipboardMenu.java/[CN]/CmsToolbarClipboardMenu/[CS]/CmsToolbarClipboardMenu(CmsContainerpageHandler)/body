{
  super(I_CmsButton.ButtonData.CLIPBOARD,handler);
  m_content=new FlowPanel();
  m_tabs=new CmsTabbedPanel<A_CmsClipboardTab>();
  m_favorites=new CmsFavoriteTab(this);
  m_recent=new CmsRecentTab();
  m_tabs.add(m_favorites,Messages.get().key(Messages.GUI_TAB_FAVORITES_TITLE_0));
  m_tabs.add(m_recent,Messages.get().key(Messages.GUI_TAB_RECENT_TITLE_0));
  m_tabs.addSelectionHandler(new SelectionHandler<Integer>(){
    /** 
 * @see com.google.gwt.event.logical.shared.SelectionHandler#onSelection(com.google.gwt.event.logical.shared.SelectionEvent)
 */
    public void onSelection(    SelectionEvent<Integer> event){
      if (m_isEditingFavorites) {
        m_favorites.saveFavorites();
      }
      CmsContainerpageController.get().saveClipboardTab(event.getSelectedItem().intValue());
      Scheduler.get().scheduleDeferred(new ScheduledCommand(){
        public void execute(){
          updateSize();
        }
      }
);
    }
  }
);
  SimplePanel tabsContainer=new SimplePanel();
  tabsContainer.addStyleName(I_CmsLayoutBundle.INSTANCE.containerpageCss().menuTabContainer());
  int dialogHeight=CmsToolbarPopup.getAvailableHeight();
  int dialogWidth=CmsToolbarPopup.getAvailableWidth();
  tabsContainer.setHeight(dialogHeight + "px");
  getPopup().setWidth(dialogWidth);
  tabsContainer.add(m_tabs);
  m_content.add(tabsContainer);
  setMenuWidget(m_content);
  m_dndController=new CmsFavoritesDNDController();
}
