{
  if (existsUser(dbc,userFqn)) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_USER_WITH_NAME_ALREADY_EXISTS_1,userFqn);
    if (LOG.isErrorEnabled()) {
      LOG.error(message.key());
    }
    throw new CmsDbEntryAlreadyExistsException(message);
  }
  try {
    CmsDAOUsers u=new CmsDAOUsers();
    u.setUserId(id.toString());
    u.setUserName(CmsOrganizationalUnit.getSimpleName(userFqn));
    u.setUserPassword(password);
    u.setUserFirstName(m_sqlManager.validateEmpty(firstname));
    u.setUserLastName(m_sqlManager.validateEmpty(lastname));
    u.setUserEmail(m_sqlManager.validateEmpty(email));
    u.setUserLastLogin(lastlogin);
    u.setUserFlags(flags);
    u.setUserOu(CmsOrganizationalUnit.SEPARATOR + CmsOrganizationalUnit.getParentFqn(userFqn));
    u.setUserDateCreated((dateCreated == 0 ? System.currentTimeMillis() : dateCreated));
    m_sqlManager.persist(dbc,u);
  }
 catch (  PersistenceException e) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_JPA_PERSITENCE,e),e);
  }
  internalWriteUserInfos(dbc,id,additionalInfos);
  return readUser(dbc,id);
}
