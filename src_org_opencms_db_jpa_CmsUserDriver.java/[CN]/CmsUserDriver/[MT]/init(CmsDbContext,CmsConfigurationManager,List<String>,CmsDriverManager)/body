{
  Map<String,Object> configuration=configurationManager.getConfiguration();
  ExtendedProperties config;
  if (configuration instanceof ExtendedProperties) {
    config=(ExtendedProperties)configuration;
  }
 else {
    config=new ExtendedProperties();
    config.putAll(configuration);
  }
  String poolUrl=config.get("db.user.pool").toString();
  String classname=config.get("db.user.sqlmanager").toString();
  m_sqlManager=initSqlManager(classname);
  m_driverManager=driverManager;
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_ASSIGNED_POOL_1,poolUrl));
  }
  m_digestAlgorithm=config.getString(CmsDriverManager.CONFIGURATION_DB + ".user.digest.type","MD5");
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DIGEST_ALGORITHM_1,m_digestAlgorithm));
  }
  m_digestFileEncoding=config.getString(CmsDriverManager.CONFIGURATION_DB + ".user.digest.encoding",CmsEncoder.ENCODING_UTF_8);
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DIGEST_ENCODING_1,m_digestFileEncoding));
  }
  try {
    m_digest=MessageDigest.getInstance(m_digestAlgorithm);
    if (CmsLog.INIT.isInfoEnabled()) {
      CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DIGEST_ENC_3,m_digest.getAlgorithm(),m_digest.getProvider().getName(),String.valueOf(m_digest.getProvider().getVersion())));
    }
  }
 catch (  NoSuchAlgorithmException e) {
    if (CmsLog.INIT.isInfoEnabled()) {
      CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_SET_DIGEST_ERROR_0),e);
    }
  }
  if ((successiveDrivers != null) && !successiveDrivers.isEmpty()) {
    if (LOG.isWarnEnabled()) {
      LOG.warn(Messages.get().getBundle().key(Messages.LOG_SUCCESSIVE_DRIVERS_UNSUPPORTED_1,getClass().getName()));
    }
  }
}
