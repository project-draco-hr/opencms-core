{
  m_searchController.updateFromRequestParameters(pageContext.getRequest().getParameterMap(),false);
  I_CmsSearchControllerCommon common=m_searchController.getCommon();
  if (common.getState().getQuery().isEmpty() && (!common.getConfig().getIgnoreQueryParam() && !common.getConfig().getSearchForEmptyQueryParam())) {
    return new CmsSearchResultWrapper(m_searchController,null,null,m_cms,null);
  }
  Map<String,String[]> queryParams=null;
  boolean isEditMode=CmsJspTagEditable.isEditableRequest(pageContext.getRequest());
  if (isEditMode) {
    String params="";
    if (common.getConfig().getIgnoreReleaseDate()) {
      params+="&fq=released:[* TO *]";
    }
    if (common.getConfig().getIgnoreExpirationDate()) {
      params+="&fq=expired:[* TO *]";
    }
    if (!params.isEmpty()) {
      queryParams=CmsRequestUtil.createParameterMap(params.substring(1));
    }
  }
  CmsSolrQuery query=new CmsSolrQuery(null,queryParams);
  m_searchController.addQueryParts(query);
  try {
    CmsSolrResultList solrResultList=m_index.search(m_cms,query,true,isEditMode ? CmsResourceFilter.IGNORE_EXPIRATION : null);
    return new CmsSearchResultWrapper(m_searchController,solrResultList,query,m_cms,null);
  }
 catch (  CmsSearchException e) {
    LOG.warn(Messages.get().getBundle().key(Messages.LOG_TAG_SEARCH_SEARCH_FAILED_0),e);
    return new CmsSearchResultWrapper(m_searchController,null,query,m_cms,e);
  }
}
