{
  Attr attr;
  NamedNodeMap attrMap;
  int i;
  Node child;
  ElementState state;
  boolean preserveSpace;
  String name;
  String value;
  state=getElementState();
  if (state == null) {
    if (!_started)     startDocument(elem.getTagName());
    preserveSpace=_format.getPreserveSpace();
  }
 else {
    if (state.empty)     printText(">");
    preserveSpace=state.preserveSpace;
    if (_format.getIndenting() && !state.preserveSpace && (state.empty || state.afterElement))     breakLine();
  }
  if (_xhtml)   printText('<' + elem.getTagName().toLowerCase());
 else   printText('<' + elem.getTagName());
  indent();
  attrMap=elem.getAttributes();
  for (i=0; i < attrMap.getLength(); ++i) {
    attr=(Attr)attrMap.item(i);
    name=attr.getName().toLowerCase();
    value=attr.getValue();
    if (attr.getSpecified()) {
      printSpace();
      if (_xhtml) {
        if (value == null)         printText(name + "=\"\"");
 else         printText(name + "=\"" + escape(value)+ '"');
      }
 else {
        if (value == null)         printText(name);
 else         printText(name + "=\"" + escape(value)+ '"');
      }
    }
  }
  if (HTMLdtd.isPreserveSpace(elem.getTagName()))   preserveSpace=true;
  if (elem.hasChildNodes() || !HTMLdtd.isEmptyTag(elem.getTagName())) {
    enterElementState(elem.getTagName(),preserveSpace);
    child=elem.getFirstChild();
    while (child != null) {
      printNode(child);
      child=child.getNextSibling();
    }
    endElement(elem.getTagName());
  }
 else {
    unindent();
    if (_xhtml)     printText(" />");
 else     printText(">");
    if (getElementState() != null && !getElementState().preserveSpace && _format.getIndenting() && (state.empty || state.afterElement))     breakLine();
    state.afterElement=true;
    state.empty=false;
  }
}
