{
  String buttonName=n.getAttribute(CmsWorkplaceDefault.C_BUTTON_NAME);
  String buttonAction=n.getAttribute(CmsWorkplaceDefault.C_BUTTON_ACTION);
  String buttonAlt=n.getAttribute(CmsWorkplaceDefault.C_BUTTON_ALT);
  String buttonHref=n.getAttribute(CmsWorkplaceDefault.C_BUTTON_HREF);
  String buttonMethod=n.getAttribute(CmsWorkplaceDefault.C_BUTTON_METHOD);
  if (buttonHref == null || "".equals(buttonHref)) {
    buttonHref="";
  }
  boolean activate=true;
  if (buttonMethod != null && !"".equals(buttonMethod)) {
    Method callMethod=null;
    try {
      callMethod=callingObject.getClass().getMethod(buttonMethod,new Class[]{CmsObject.class,CmsXmlLanguageFile.class,Hashtable.class});
      activate=((Boolean)callMethod.invoke(callingObject,new Object[]{cms,lang,parameters})).booleanValue();
    }
 catch (    NoSuchMethodException exc) {
      throwException("Could not find button activation method " + buttonMethod + " in calling class "+ callingObject.getClass().getName()+ " for generating icon.",CmsLegacyException.C_NOT_FOUND);
    }
catch (    InvocationTargetException targetEx) {
      Throwable e=targetEx.getTargetException();
      if (!(e instanceof CmsException)) {
        throwException("Button activation method " + buttonMethod + " in calling class "+ callingObject.getClass().getName()+ " throwed an exception. "+ e);
      }
 else {
        throw (CmsException)e;
      }
    }
catch (    Exception exc2) {
      throwException("Button activation method " + buttonMethod + " in calling class "+ callingObject.getClass().getName()+ " was found but could not be invoked. "+ exc2);
    }
  }
  CmsXmlWpButtonsDefFile buttondef=getButtonDefinitions(cms);
  buttonAlt=lang.getLanguageValue(CmsWorkplaceDefault.C_LANG_BUTTON + "." + buttonAlt);
  if (activate) {
    return buttondef.getButton(buttonName,buttonAction,buttonAlt,buttonHref,callingObject);
  }
 else {
    return buttondef.getDeactivatedButton(buttonName,buttonAction,buttonAlt,buttonHref,callingObject);
  }
}
