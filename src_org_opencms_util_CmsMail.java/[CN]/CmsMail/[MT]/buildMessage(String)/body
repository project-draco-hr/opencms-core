{
  String mail_encoding="ISO-8859-1";
  if (smtpHost == null || "".equals(smtpHost)) {
    throw new CmsException("No SMTP server given.");
  }
  Properties props=System.getProperties();
  props.put("mail.smtp.host",smtpHost);
  Session session=Session.getDefaultInstance(props,null);
  MimeMessage msg=new MimeMessage(session);
  InternetAddress[] to=new InternetAddress[m_to.length];
  for (int i=0; i < m_to.length; i++) {
    to[i]=new InternetAddress(m_to[i]);
  }
  msg.setFrom(new InternetAddress(m_from));
  msg.setRecipients(Message.RecipientType.TO,to);
  InternetAddress[] cc=null;
  if (m_cc != null) {
    cc=new InternetAddress[m_cc.length];
    for (int i=0; i < m_cc.length; i++) {
      cc[i]=new InternetAddress(m_cc[i]);
    }
    msg.setRecipients(Message.RecipientType.CC,cc);
  }
  InternetAddress[] bcc=null;
  if (m_bcc != null) {
    bcc=new InternetAddress[m_bcc.length];
    for (int i=0; i < m_bcc.length; i++) {
      bcc[i]=new InternetAddress(m_bcc[i]);
    }
    msg.setRecipients(Message.RecipientType.BCC,bcc);
  }
  msg.setSubject(m_subject,mail_encoding);
  if (m_type.equals("text/html")) {
    msg.setDataHandler(new DataHandler(new CmsByteArrayDataSource(m_content,m_type,mail_encoding)));
  }
 else {
    msg.setContent(m_content,m_type);
  }
  msg.setSentDate(new Date());
  return msg;
}
