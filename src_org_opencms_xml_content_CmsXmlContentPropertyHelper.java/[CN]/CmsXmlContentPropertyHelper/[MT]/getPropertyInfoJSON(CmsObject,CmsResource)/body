{
  JSONObject jsonProperties=new JSONObject();
  I_CmsXmlContentHandler contentHandler=CmsXmlContentDefinition.getContentHandlerForResource(cms,resource);
  CmsUserSettings settings=new CmsUserSettings(cms.getRequestContext().currentUser());
  CmsMessages messages=contentHandler.getMessages(settings.getLocale());
  CmsMacroResolver resolver=new CmsMacroResolver();
  resolver.setCmsObject(cms);
  resolver.setMessages(messages);
  resolver.setKeepEmptyMacros(true);
  Map<String,CmsXmlContentProperty> propertiesConf=contentHandler.getProperties();
  Iterator<Map.Entry<String,CmsXmlContentProperty>> itProperties=propertiesConf.entrySet().iterator();
  while (itProperties.hasNext()) {
    Map.Entry<String,CmsXmlContentProperty> entry=itProperties.next();
    String propertyName=entry.getKey();
    CmsXmlContentProperty conf=entry.getValue();
    JSONObject jsonProperty=new JSONObject();
    jsonProperty.put(JsonProperty.defaultValue.name(),conf.getDefault());
    jsonProperty.put(JsonProperty.type.name(),conf.getPropertyType());
    jsonProperty.put(JsonProperty.widget.name(),conf.getWidget());
    jsonProperty.put(JsonProperty.widgetConf.name(),getWidgetConfigurationAsJSON(resolver.resolveMacros(conf.getWidgetConfiguration())));
    jsonProperty.put(JsonProperty.ruleType.name(),conf.getRuleType());
    jsonProperty.put(JsonProperty.ruleRegex.name(),conf.getRuleRegex());
    jsonProperty.put(JsonProperty.niceName.name(),resolver.resolveMacros(conf.getNiceName()));
    jsonProperty.put(JsonProperty.description.name(),resolver.resolveMacros(conf.getDescription()));
    jsonProperty.put(JsonProperty.error.name(),resolver.resolveMacros(conf.getError()));
    jsonProperties.put(propertyName,jsonProperty);
  }
  return jsonProperties;
}
