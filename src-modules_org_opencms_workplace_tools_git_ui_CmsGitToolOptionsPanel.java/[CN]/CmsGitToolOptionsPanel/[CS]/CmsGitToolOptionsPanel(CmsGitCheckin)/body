{
  m_checkinBean=checkinBean;
  if (!checkinBean.isConfigFileReadable()) {
    setMargin(true);
    Label errorLabel=new Label("<h1>\n" + "        Git plugin is not configured correctly.\n" + "    </h1>\n"+ "    <p>\n"+ "        There were problems reading the configuration file <code>module-checkin.conf</code> under <code>WEB-INF/git-scripts/</code>.\n"+ "    </p>\n"+ "    <p>\n"+ "        Please ensure that the file is present and contains a valid configuration. You may use the file <code>module-checkin.conf.demo</code> under <code>WEB-INF/git-scripts/</code> as template for your own configuration.\n"+ "    </p>");
    errorLabel.setContentMode(ContentMode.HTML);
    addComponent(errorLabel);
    return;
  }
  CmsVaadinUtils.readAndLocalizeDesign(this,CmsVaadinUtils.getWpMessagesForCurrentLocale(),null);
  for (  final String moduleName : m_checkinBean.getConfiguredModules()) {
    addSelectableModule(moduleName);
  }
  updateNewModuleSelector();
  m_pullFirst.setValue(Boolean.valueOf(m_checkinBean.getDefaultAutoPullBefore()));
  m_pullAfterCommit.setValue(Boolean.valueOf(m_checkinBean.getDefaultAutoPullAfter()));
  m_addAndCommit.setValue(Boolean.valueOf(m_checkinBean.getDefaultAutoCommit()));
  m_pushAutomatically.setValue(Boolean.valueOf(m_checkinBean.getDefaultAutoPush()));
  m_commitMessage.setValue(Strings.nullToEmpty(m_checkinBean.getDefaultCommitMessage()));
  m_copyAndUnzip.setValue(Boolean.valueOf(m_checkinBean.getDefaultCopyAndUnzip()));
  m_excludeLib.setValue(Boolean.valueOf(m_checkinBean.getDefaultExcludeLibs()));
  m_ignoreUnclean.setValue(Boolean.valueOf(m_checkinBean.getDefaultIngoreUnclean()));
  m_userField.setValue(Strings.nullToEmpty(m_checkinBean.getDefaultGitUserName()));
  m_emailField.setValue(Strings.nullToEmpty(m_checkinBean.getDefaultGitUserEmail()));
  CmsUser user=A_CmsUI.getCmsObject().getRequestContext().getCurrentUser();
  String savedEmail=(String)(user.getAdditionalInfo().get(ADDINFO_EMAIL));
  String savedName=(String)(user.getAdditionalInfo().get(ADDINFO_USER));
  String savedMessage=(String)(user.getAdditionalInfo().get(ADDINFO_MESSAGE));
  if (savedEmail != null) {
    m_emailField.setValue(savedEmail);
  }
  if (savedName != null) {
    m_userField.setValue(savedName);
  }
  if (savedMessage != null) {
    m_commitMessage.setValue(savedMessage);
  }
  setAdvancedVisible(false);
  m_toggleOptions.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      setAdvancedVisible(!m_advancedVisible);
    }
  }
);
  m_okButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void buttonClick(    ClickEvent event){
      if (m_dialogTab == DialogTab.checkIn) {
        runAction(ActionType.checkIn);
      }
 else {
        runAction(ActionType.checkOut);
      }
    }
  }
);
  m_cancel.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      A_CmsUI.get().getPage().setLocation(CmsVaadinUtils.getWorkplaceLink());
    }
  }
);
  m_deselectAll.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      for (      Map.Entry<String,CheckBox> entry : m_moduleCheckboxes.entrySet()) {
        CheckBox checkBox=entry.getValue();
        checkBox.setValue(Boolean.FALSE);
      }
    }
  }
);
  m_tabs.addStyleName(ValoTheme.TABSHEET_FRAMED);
  m_tabs.addStyleName(ValoTheme.TABSHEET_PADDED_TABBAR);
  m_tabs.addSelectedTabChangeListener(new SelectedTabChangeListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void selectedTabChange(    SelectedTabChangeEvent event){
      DialogTab tab;
      if (m_tabs.getSelectedTab() == m_checkoutTab) {
        tab=DialogTab.checkOut;
      }
 else {
        tab=DialogTab.checkIn;
      }
      CmsGitToolOptionsPanel.this.setTab(tab);
    }
  }
);
  m_fetchAndReset.setValue(Boolean.TRUE);
  setTab(m_dialogTab);
}
