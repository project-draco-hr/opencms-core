{
  m_checkinBean=checkinBean;
  if (!checkinBean.hasValidConfiguration()) {
    setMargin(true);
    Label errorLabel=new Label(CmsVaadinUtils.getMessageText(Messages.GUI_GIT_APP_UNCONFIGURED_0));
    errorLabel.setContentMode(ContentMode.HTML);
    addComponent(errorLabel);
    return;
  }
  CmsVaadinUtils.readAndLocalizeDesign(this,CmsVaadinUtils.getWpMessagesForCurrentLocale(),null);
  configureConfigurationSelector();
  updateForNewConfiguration(m_checkinBean.getCurrentConfiguration());
  m_user=A_CmsUI.getCmsObject().getRequestContext().getCurrentUser();
  restoreFieldsFromUserInfo();
  setAdvancedVisible(false);
  m_toggleOptions.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      setAdvancedVisible(!m_advancedVisible);
    }
  }
);
  m_okButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void buttonClick(    ClickEvent event){
      if (m_dialogTab == DialogTab.checkIn) {
        runAction(ActionType.checkIn);
      }
 else {
        runAction(ActionType.checkOut);
      }
    }
  }
);
  m_cancel.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      A_CmsUI.get().getPage().setLocation(CmsVaadinUtils.getWorkplaceLink());
    }
  }
);
  m_deselectAll.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      for (      Map.Entry<String,CheckBox> entry : m_moduleCheckboxes.entrySet()) {
        CheckBox checkBox=entry.getValue();
        checkBox.setValue(Boolean.FALSE);
      }
    }
  }
);
  m_tabs.addStyleName(ValoTheme.TABSHEET_FRAMED);
  m_tabs.addStyleName(ValoTheme.TABSHEET_PADDED_TABBAR);
  m_tabs.addSelectedTabChangeListener(new SelectedTabChangeListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void selectedTabChange(    SelectedTabChangeEvent event){
      DialogTab tab;
      if (m_tabs.getSelectedTab() == m_checkoutTab) {
        tab=DialogTab.checkOut;
      }
 else {
        tab=DialogTab.checkIn;
      }
      CmsGitToolOptionsPanel.this.setTab(tab);
    }
  }
);
  m_fetchAndReset.setValue(Boolean.TRUE);
  setTab(m_dialogTab);
}
