{
  m_mode=action;
  setActionFlags();
  setCommonParameters();
  m_checkinBean.clearModules();
  for (  String moduleName : getSelectedModules()) {
    m_checkinBean.addModuleToExport(moduleName);
  }
  int result=m_checkinBean.checkIn();
  String log=m_checkinBean.getLogText();
  String message=null;
  boolean error=false;
switch (action) {
case checkIn:
    String messageToSave=m_checkinBean.getCommitMessage();
  String emailToSave=m_checkinBean.getGitUserEmail();
String userToSave=m_checkinBean.getGitUserName();
CmsObject cms=m_checkinBean.getCmsObject();
CmsUser user=cms.getRequestContext().getCurrentUser();
setUserInfo(user,ADDINFO_USER,userToSave);
setUserInfo(user,ADDINFO_EMAIL,emailToSave);
setUserInfo(user,ADDINFO_MESSAGE,messageToSave);
try {
cms.writeUser(user);
}
 catch (CmsException e) {
LOG.error(e.getLocalizedMessage(),e);
}
List<Button> resetButtons=new ArrayList<Button>();
Button resetHead=new Button(CmsVaadinUtils.getMessageText(Messages.GUI_GIT_BUTTON_RESET_HEAD_0));
resetHead.setDescription(CmsVaadinUtils.getMessageText(Messages.GUI_GIT_BUTTON_RESET_HEAD_DESC_0));
resetHead.addClickListener(new ClickListener(){
private static final long serialVersionUID=1L;
public void buttonClick(ClickEvent event){
runAction(ActionType.resetHead);
}
}
);
Button resetRemoteHead=new Button(CmsVaadinUtils.getMessageText(Messages.GUI_GIT_BUTTON_RESET_REMOTE_HEAD_0));
resetRemoteHead.setDescription(CmsVaadinUtils.getMessageText(Messages.GUI_GIT_BUTTON_RESET_REMOTE_HEAD_DESC_0));
resetRemoteHead.addClickListener(new ClickListener(){
private static final long serialVersionUID=1L;
public void buttonClick(ClickEvent event){
runAction(ActionType.resetRemoteHead);
}
}
);
if (result == 0) {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_CHECKIN_SUCCESSFUL_0);
}
 else if (result == 10) {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_CHECKIN_FAILED_0);
error=true;
resetButtons.add(resetRemoteHead);
resetButtons.add(resetHead);
}
 else {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_CHECKIN_FAILED_0);
error=true;
resetButtons.add(resetRemoteHead);
}
CmsGitActionResultPanel panel=new CmsGitActionResultPanel(message,log,error,resetButtons);
addAsWindow(panel);
break;
case checkOut:
if (result == 0) {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_IMPORT_SUCCESSFUL_0);
}
 else {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_IMPORT_FAILED_0);
}
CmsGitActionResultPanel checkoutResult=new CmsGitActionResultPanel(message,log,error,new ArrayList<Button>());
addAsWindow(checkoutResult);
break;
case resetHead:
if (result == 0) {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_RESET_SUCCESSFUL_0);
}
 else {
error=true;
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_RESET_FAILED_0);
}
CmsGitActionResultPanel resetResult=new CmsGitActionResultPanel(message,log,error,new ArrayList<Button>());
addAsWindow(resetResult);
break;
case resetRemoteHead:
if (result == 0) {
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_RESET_SUCCESSFUL_0);
}
 else {
error=true;
message=CmsVaadinUtils.getMessageText(Messages.GUI_GIT_RESET_FAILED_0);
}
CmsGitActionResultPanel resetRemoteResult=new CmsGitActionResultPanel(message,log,error,new ArrayList<Button>());
addAsWindow(resetRemoteResult);
break;
default :
}
}
