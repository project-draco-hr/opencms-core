{
  if (!m_completed) {
    return;
  }
  if (m_redirectTarget != null) {
    res.setOnlyBuffering(false);
    res.sendRedirect(m_redirectTarget);
  }
 else {
    CmsFlexResponse.processHeaders(m_headers,res);
    boolean hasNoSubElements=(m_elements.size() == 1);
    for (int i=0; i < m_elements.size(); i++) {
      Object o=m_elements.get(i);
      if (o instanceof String) {
        i++;
        Map<String,String[]> paramMap=CmsCollectionsGenericWrapper.map(m_elements.get(i));
        Map<String,String[]> oldParamMap=null;
        if (paramMap.size() > 0) {
          oldParamMap=req.getParameterMap();
          req.addParameterMap(paramMap);
        }
        i++;
        Map<String,Object> attrMap=CmsCollectionsGenericWrapper.map(m_elements.get(i));
        Map<String,Object> oldAttrMap=null;
        if (attrMap.size() > 0) {
          oldAttrMap=req.getAttributeMap();
          req.addAttributeMap(cloneAttributes(attrMap));
        }
        req.getRequestDispatcher((String)o).include(req,res);
        if (oldParamMap != null) {
          req.setParameterMap(oldParamMap);
        }
        if (oldAttrMap != null) {
          req.setAttributeMap(oldAttrMap);
        }
      }
 else {
        try {
          res.writeToOutputStream((byte[])o,hasNoSubElements);
        }
 catch (        IOException e) {
          CmsMessageContainer message=Messages.get().container(Messages.LOG_FLEXCACHEKEY_NOT_FOUND_1,getClass().getName());
          if (LOG.isDebugEnabled()) {
            LOG.debug(message.key());
          }
          throw new CmsFlexCacheException(message,e);
        }
      }
    }
  }
}
