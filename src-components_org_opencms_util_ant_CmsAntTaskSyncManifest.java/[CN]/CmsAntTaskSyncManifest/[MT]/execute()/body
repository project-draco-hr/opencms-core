{
  try {
    Document doc;
    log("Reading manifest: " + getSrcManifestFile(),Project.MSG_VERBOSE);
    BufferedInputStream in=new BufferedInputStream(new FileInputStream(getSrcManifestFile()));
    try {
      doc=CmsXmlUtils.unmarshalHelper(new InputSource(in),null);
    }
  finally {
      in.close();
    }
    String directory=getDirectory();
    log("Dir to synch: " + directory,Project.MSG_VERBOSE);
    String[] files=new File(directory).list();
    log("Files found to sync: " + Arrays.toString(files),Project.MSG_VERBOSE);
    for (int i=0; i < files.length; i++) {
      File file=new File(directory,files[i]);
      if (!file.isDirectory()) {
        continue;
      }
      String[] children=file.list();
      String[] newFiles=new String[files.length + children.length];
      System.arraycopy(files,0,newFiles,0,i + 1);
      for (int j=0; j < children.length; j++) {
        newFiles[j + i + 1]=files[i] + '/' + children[j];
      }
      if ((i + 1) < files.length) {
        System.arraycopy(files,i + 1,newFiles,i + 1 + children.length,files.length - (i + 1));
      }
      files=newFiles;
    }
    String prefix=m_prefix != null ? m_prefix : new File(directory).getAbsolutePath().substring(new File(getBase()).getAbsolutePath().length() + 1).replace('\\','/');
    List<Node> xmlFiles=doc.selectNodes("export/files/file/destination[starts-with(.,'" + prefix + "/')]");
    for (    Node xmlFile : xmlFiles) {
      String path=xmlFile.getText();
      File file=new File(getDirectory() + path.substring(prefix.length()));
      if (!file.exists()) {
        log("Removing old entry for non-existing file '" + path + "'",Project.MSG_DEBUG);
        CmsSetupXmlHelper.setValue(doc,getFileXpath(path),null);
      }
    }
    for (int i=0; i < files.length; i++) {
      String destination=prefix + '/' + files[i];
      if (destination.endsWith("/CVS") || destination.contains("/CVS/")) {
        continue;
      }
      String xpath=getFileXpath(destination);
      if (CmsSetupXmlHelper.getValue(doc,xpath) != null) {
        log("Skipping existing entry '" + xpath + "'",Project.MSG_DEBUG);
        continue;
      }
      String prevDest=prefix + (i == 0 ? "" : '/' + files[i - 1]);
      log("Adding new entry for file '" + destination + "'",Project.MSG_DEBUG);
      createEntry(doc,prevDest,destination);
    }
    log("Writing manifest: " + getDstManifestFile(),Project.MSG_VERBOSE);
    BufferedOutputStream out=new BufferedOutputStream(new FileOutputStream(getDstManifestFile()));
    try {
      CmsXmlUtils.marshal(doc,out,"UTF-8");
    }
  finally {
      out.close();
    }
  }
 catch (  Exception e) {
    throw new BuildException(e.getLocalizedMessage(),e);
  }
}
