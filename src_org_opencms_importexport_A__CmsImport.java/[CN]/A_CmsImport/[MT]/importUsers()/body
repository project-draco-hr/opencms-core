{
  List userNodes;
  List groupNodes;
  Element currentElement, currentGroup;
  Vector userGroups;
  Hashtable userInfo=new Hashtable();
  String name, description, flags, password, firstname, lastname, email, address, type, pwd, infoNode, defaultGroup;
  try {
    userNodes=m_docXml.selectNodes("//" + I_CmsConstants.C_EXPORT_TAG_USERDATA);
    for (int i=0; i < userNodes.size(); i++) {
      currentElement=(Element)userNodes.get(i);
      name=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_NAME);
      name=OpenCms.getImportExportManager().translateUser(name);
      pwd=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_PASSWORD);
      password=new String(Base64.decodeBase64(pwd.trim().getBytes()));
      description=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_DESCRIPTION);
      flags=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_FLAGS);
      firstname=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_FIRSTNAME);
      lastname=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_LASTNAME);
      email=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_EMAIL);
      address=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_ADDRESS);
      type=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_TYPE);
      defaultGroup=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP);
      infoNode=CmsImport.getChildElementTextValue(currentElement,I_CmsConstants.C_EXPORT_TAG_USERINFO);
      try {
        byte[] value=getFileBytes(infoNode);
        ByteArrayInputStream bin=new ByteArrayInputStream(value);
        ObjectInputStream oin=new ObjectInputStream(bin);
        userInfo=(Hashtable)oin.readObject();
      }
 catch (      IOException ioex) {
        m_report.println(ioex);
      }
      groupNodes=currentElement.selectNodes("*/" + I_CmsConstants.C_EXPORT_TAG_GROUPNAME);
      userGroups=new Vector();
      for (int j=0; j < groupNodes.size(); j++) {
        currentGroup=(Element)groupNodes.get(j);
        String userInGroup=CmsImport.getChildElementTextValue(currentGroup,I_CmsConstants.C_EXPORT_TAG_NAME);
        userInGroup=OpenCms.getImportExportManager().translateGroup(userInGroup);
        userGroups.addElement(userInGroup);
      }
      if (defaultGroup != null && !"".equalsIgnoreCase(defaultGroup)) {
        userInfo.put(I_CmsConstants.C_ADDITIONAL_INFO_DEFAULTGROUP,defaultGroup);
      }
      importUser(name,description,flags,password,firstname,lastname,email,address,type,userInfo,userGroups);
    }
  }
 catch (  Exception exc) {
    m_report.println(exc);
    throw new CmsException(CmsException.C_IMPORT_ERROR,exc);
  }
}
