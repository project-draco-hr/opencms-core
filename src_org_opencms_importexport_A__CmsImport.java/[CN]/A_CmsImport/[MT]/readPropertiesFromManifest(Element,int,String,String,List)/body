{
  Map properties=new HashMap();
  CmsProperty property=null;
  List propertyElements=parentElement.selectNodes("./" + I_CmsConstants.C_EXPORT_TAG_PROPERTIES + "/"+ I_CmsConstants.C_EXPORT_TAG_PROPERTY);
  Element propertyElement=null;
  String key=null, value=null;
  Attribute attrib=null;
  if (propertyKey != null && propertyValue != null && !"".equals(propertyKey)) {
    int warning=0;
    checkPropertyDefinition(propertyKey);
    properties.put(propertyKey,propertyValue);
  }
  for (int i=0, n=propertyElements.size(); i < n; i++) {
    propertyElement=(Element)propertyElements.get(i);
    key=CmsImport.getChildElementTextValue(propertyElement,I_CmsConstants.C_EXPORT_TAG_NAME);
    if (key == null || ignoredPropertyKeys.contains(key)) {
      continue;
    }
    if ((property=(CmsProperty)properties.get(key)) == null) {
      property=new CmsProperty();
      property.setKey(key);
      property.setAutoCreatePropertyDefinition(true);
      properties.put(key,property);
    }
    if ((value=CmsImport.getChildElementTextValue(propertyElement,I_CmsConstants.C_EXPORT_TAG_VALUE)) == null) {
      value="";
    }
    if ((attrib=propertyElement.attribute(I_CmsConstants.C_EXPORT_TAG_PROPERTY_ATTRIB_TYPE)) != null && attrib.getValue().equals(I_CmsConstants.C_EXPORT_TAG_PROPERTY_ATTRIB_TYPE_SHARED)) {
      property.setResourceValue(value);
    }
 else {
      property.setStructureValue(value);
    }
    checkPropertyDefinition(key);
  }
  return new ArrayList(properties.values());
}
