{
  Iterator keys=m_linkStorage.keySet().iterator();
  int linksSize=m_linkStorage.size();
  int i=0;
  while (keys.hasNext()) {
    String key=(String)keys.next();
    String link=(String)m_linkStorage.get(key);
    HashMap properties=(HashMap)m_linkPropertyStorage.get(key);
    m_report.print(" ( " + (++i) + " / "+ linksSize+ " ) ",I_CmsReport.C_FORMAT_NOTE);
    m_report.print(m_report.key("report.convert_link"),I_CmsReport.C_FORMAT_NOTE);
    m_report.print(key + " ");
    m_report.print(m_report.key("report.dots"),I_CmsReport.C_FORMAT_NOTE);
    if (link.startsWith("/")) {
      try {
        m_cms.readFileHeader(link);
        m_cms.createVfsLink(key,link,properties);
        m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
      }
 catch (      CmsException ex) {
        m_report.println();
        m_report.print(m_report.key("report.convert_link_notfound") + " " + link,I_CmsReport.C_FORMAT_WARNING);
      }
    }
 else {
      m_cms.createResource(key,CmsResourceTypePointer.C_RESOURCE_TYPE_ID,properties,link.getBytes(),null);
      m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
    }
  }
  m_linkStorage=null;
  m_linkPropertyStorage=null;
}
