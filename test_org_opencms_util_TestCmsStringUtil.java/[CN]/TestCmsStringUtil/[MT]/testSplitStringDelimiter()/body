{
  String toSplit;
  String delimString="/";
  String[] arrayResult;
  List listResult;
  toSplit="/system/workplace/admin/searchindex/";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("system",arrayResult[0]);
  assertEquals("workplace",arrayResult[1]);
  assertEquals("admin",arrayResult[2]);
  assertEquals("searchindex",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(0,arrayResult.length);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="               ";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals(toSplit,arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString,true);
  assertEquals(1,listResult.size());
  assertEquals("",listResult.get(0));
  toSplit="/";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(0,arrayResult.length);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="//";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals("",arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="/token";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals("token",arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="token/";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals("token",arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="///";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(2,arrayResult.length);
  assertEquals("",arrayResult[0]);
  assertEquals("",arrayResult[1]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="/a // b/ c /";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("a ",arrayResult[0]);
  assertEquals("",arrayResult[1]);
  assertEquals(" b",arrayResult[2]);
  assertEquals(" c ",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString,true);
  assertEquals(4,listResult.size());
  assertEquals("a",listResult.get(0));
  assertEquals("",listResult.get(1));
  assertEquals("b",listResult.get(2));
  assertEquals("c",listResult.get(3));
  delimString=",,";
  toSplit=",,system,,workplace,,admin,,searchindex,,";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("system",arrayResult[0]);
  assertEquals("workplace",arrayResult[1]);
  assertEquals("admin",arrayResult[2]);
  assertEquals("searchindex",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(0,arrayResult.length);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="               ";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals(toSplit,arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit=",,";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(0,arrayResult.length);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit=",,,,";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals("",arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit=",,token";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals("token",arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="token,,";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(1,arrayResult.length);
  assertEquals("token",arrayResult[0]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit=",,,,,,";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(2,arrayResult.length);
  assertEquals("",arrayResult[0]);
  assertEquals("",arrayResult[1]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit=",,a, aber nicht b,,,,b, aber nicht c,,c, but not a,,";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("a, aber nicht b",arrayResult[0]);
  assertEquals("",arrayResult[1]);
  assertEquals("b, aber nicht c",arrayResult[2]);
  assertEquals("c, but not a",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  delimString="/delim/";
  toSplit="/delim fake at start/delim//not a delim//delim//delim//delim fake at end";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("/delim fake at start",arrayResult[0]);
  assertEquals("/not a delim/",arrayResult[1]);
  assertEquals("",arrayResult[2]);
  assertEquals("/delim fake at end",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="/delim fake at start/delim//not a delim//delim//delim//delim";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("/delim fake at start",arrayResult[0]);
  assertEquals("/not a delim/",arrayResult[1]);
  assertEquals("",arrayResult[2]);
  assertEquals("/delim",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
  toSplit="/delim//delim fake at start/delim//not a delim//delim//delim//delim fake at end/delim/";
  arrayResult=CmsStringUtil.splitAsArray(toSplit,delimString);
  assertEquals(4,arrayResult.length);
  assertEquals("/delim fake at start",arrayResult[0]);
  assertEquals("/not a delim/",arrayResult[1]);
  assertEquals("",arrayResult[2]);
  assertEquals("/delim fake at end",arrayResult[3]);
  listResult=CmsStringUtil.splitAsList(toSplit,delimString);
  assertEquals(Arrays.asList(arrayResult),listResult);
}
