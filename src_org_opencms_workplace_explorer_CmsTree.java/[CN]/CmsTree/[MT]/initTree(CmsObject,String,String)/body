{
  StringBuffer retValue=new StringBuffer(512);
  String servletUrl=OpenCms.getSystemInfo().getOpenCmsContext();
  Locale locale=cms.getRequestContext().getLocale();
  CmsWorkplaceMessages messages=new CmsWorkplaceMessages(locale);
  retValue.append("function initTreeResources() {\n");
  retValue.append("\tinitResources(\"" + encoding + "\", \""+ C_PATH_WORKPLACE+ "\", \""+ skinUri+ "\", \""+ servletUrl+ "\");\n");
  List allResTypes=OpenCms.getResourceManager().getResourceTypes();
  for (int i=0; i < allResTypes.size(); i++) {
    I_CmsResourceType type=(I_CmsResourceType)allResTypes.get(i);
    int curTypeId=type.getTypeId();
    String curTypeName=type.getTypeName();
    String curTypeLocalName=messages.key("fileicon." + curTypeName);
    CmsExplorerTypeSettings typeSettings=OpenCms.getWorkplaceManager().getExplorerTypeSetting(curTypeName);
    CmsPermissionSet permissions;
    try {
      permissions=typeSettings.getAccessControlList().getPermissions(cms.getRequestContext().currentUser(),cms.getGroupsOfUser(cms.getRequestContext().currentUser().getName()));
    }
 catch (    CmsException e) {
      permissions=typeSettings.getAccessControlList().getPermissions(cms.getRequestContext().currentUser());
      if (OpenCms.getLog(CmsTree.class).isErrorEnabled()) {
        OpenCms.getLog(CmsTree.class).error("Error reading groups of user " + cms.getRequestContext().currentUser().getName());
      }
    }
    if (permissions.getPermissionString().indexOf("+w") != -1) {
      retValue.append("\taddResourceType(");
      retValue.append(curTypeId + ", \"" + curTypeName+ "\",\t\""+ curTypeLocalName+ "\",\t\"filetypes/"+ curTypeName+ ".gif\");\n");
    }
  }
  retValue.append("}\n\n");
  retValue.append("initTreeResources();\n");
  return retValue.toString();
}
