{
  try {
    CmsFile file=cms.readFile(resource);
    CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,file);
    Locale locale=new Locale("en");
    if (content.hasLocale(cms.getRequestContext().getLocale())) {
      locale=cms.getRequestContext().getLocale();
    }
    I_CmsXmlContentValue value=content.getValue("ContainerSettings",locale);
    CmsFormatterBean formatterBean;
    CmsResource jspResource=cms.readResource(FORMATTER_PATH);
    if (value == null) {
      formatterBean=new CmsFormatterBean(jspResource.getRootPath(),jspResource.getStructureId(),resource.getRootPath());
    }
 else {
      String type="";
      String minWidth="";
      String maxWidth="";
      I_CmsXmlContentValue typeVal=content.getValue(N_CONTAINER_SETTINGS + "/Type",locale);
      if (typeVal != null) {
        type=typeVal.getStringValue(cms);
      }
      I_CmsXmlContentValue minWidthVal=content.getValue(N_CONTAINER_SETTINGS + "/MinWidth",locale);
      if (minWidthVal != null) {
        minWidth=minWidthVal.getStringValue(cms);
      }
      I_CmsXmlContentValue maxWidthVal=content.getValue(N_CONTAINER_SETTINGS + "/MaxWidth",locale);
      if (maxWidthVal != null) {
        maxWidth=maxWidthVal.getStringValue(cms);
      }
      formatterBean=new CmsFormatterBean(type,FORMATTER_PATH,minWidth,maxWidth,"false","false",resource.getRootPath());
      formatterBean.setJspStructureId(jspResource.getStructureId());
    }
    return CmsFormatterConfiguration.create(cms,Collections.singletonList(formatterBean));
  }
 catch (  CmsException e) {
    return CmsFormatterConfiguration.EMPTY_CONFIGURATION;
  }
}
