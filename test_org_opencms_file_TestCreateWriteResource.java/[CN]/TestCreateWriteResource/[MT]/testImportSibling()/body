{
  CmsObject cms=getCmsObject();
  echo("Testing to import an existing resource as sibling");
  CmsProperty prop1=new CmsProperty(I_CmsConstants.C_PROPERTY_TITLE,"The title",null);
  CmsProperty prop2=new CmsProperty(I_CmsConstants.C_PROPERTY_DESCRIPTION,"The description",null);
  CmsProperty prop3=new CmsProperty(I_CmsConstants.C_PROPERTY_KEYWORDS,"The keywords",null);
  List properties=new ArrayList();
  properties.add(prop1);
  String siblingname="/folder1/test1.html";
  cms.lockResource(siblingname);
  cms.writePropertyObjects(siblingname,properties);
  cms.unlockResource(siblingname);
  long timestamp=System.currentTimeMillis() - 12345678;
  String resourcename1="/folder2/test1_sib1.html";
  String resourcename2="/folder1/subfolder11/test1_sib2.html";
  CmsFile file=cms.readFile(siblingname);
  byte[] content=file.getContents();
  assertTrue(file.getLength() > 0);
  assertTrue(content.length > 0);
  storeResources(cms,siblingname);
  CmsResource resource;
  resource=new CmsResource(file.getStructureId(),file.getResourceId(),resourcename2,CmsResourceTypePlain.C_RESOURCE_TYPE_ID,0,cms.getRequestContext().currentProject().getId(),I_CmsConstants.C_STATE_NEW,timestamp,cms.getRequestContext().currentUser().getId(),timestamp,cms.getRequestContext().currentUser().getId(),CmsResource.DATE_RELEASED_DEFAULT,CmsResource.DATE_EXPIRED_DEFAULT,1,content.length);
  properties.add(prop2);
  cms.importResource(resourcename2,resource,null,properties);
  assertProject(cms,resourcename2,cms.getRequestContext().currentProject());
  assertResourceType(cms,resourcename2,CmsResourceTypePlain.C_RESOURCE_TYPE_ID);
  assertResourceType(cms,siblingname,CmsResourceTypePlain.C_RESOURCE_TYPE_ID);
  assertState(cms,resourcename2,I_CmsConstants.C_STATE_NEW);
  assertState(cms,siblingname,I_CmsConstants.C_STATE_CHANGED);
  assertDateLastModified(cms,resourcename2,file.getDateLastModified());
  assertDateLastModified(cms,siblingname,file.getDateLastModified());
  assertUserLastModified(cms,resourcename2,cms.getRequestContext().currentUser());
  assertUserLastModified(cms,siblingname,cms.getRequestContext().currentUser());
  assertContent(cms,resourcename2,content);
  assertContent(cms,siblingname,content);
  assertSiblingCountIncremented(cms,siblingname,1);
  OpenCmsTestResourceConfigurableFilter filter=new OpenCmsTestResourceConfigurableFilter(OpenCmsTestResourceFilter.FILTER_CREATE_RESOURCE);
  filter.disableSiblingCountTest();
  assertFilter(cms,siblingname,filter);
  String contentStr="Hello this is my NEW AND CHANGED sibling content";
  content=contentStr.getBytes();
  resource=new CmsResource(file.getStructureId(),file.getResourceId(),resourcename1,CmsResourceTypePlain.C_RESOURCE_TYPE_ID,0,cms.getRequestContext().currentProject().getId(),I_CmsConstants.C_STATE_NEW,timestamp,cms.getRequestContext().currentUser().getId(),timestamp,cms.getRequestContext().currentUser().getId(),CmsResource.DATE_RELEASED_DEFAULT,CmsResource.DATE_EXPIRED_DEFAULT,1,content.length);
  properties.add(prop3);
  cms.importResource(resourcename1,resource,content,properties);
  assertProject(cms,resourcename1,cms.getRequestContext().currentProject());
  assertProject(cms,resourcename2,cms.getRequestContext().currentProject());
  assertResourceType(cms,resourcename1,CmsResourceTypePlain.C_RESOURCE_TYPE_ID);
  assertResourceType(cms,resourcename2,CmsResourceTypePlain.C_RESOURCE_TYPE_ID);
  assertResourceType(cms,siblingname,CmsResourceTypePlain.C_RESOURCE_TYPE_ID);
  assertState(cms,resourcename1,I_CmsConstants.C_STATE_NEW);
  assertState(cms,resourcename2,I_CmsConstants.C_STATE_NEW);
  assertState(cms,siblingname,I_CmsConstants.C_STATE_CHANGED);
  assertDateLastModified(cms,resourcename1,timestamp);
  assertDateLastModified(cms,resourcename2,timestamp);
  assertDateLastModified(cms,siblingname,timestamp);
  assertUserLastModified(cms,resourcename1,cms.getRequestContext().currentUser());
  assertUserLastModified(cms,resourcename2,cms.getRequestContext().currentUser());
  assertUserLastModified(cms,siblingname,cms.getRequestContext().currentUser());
  assertContent(cms,resourcename1,content);
  assertContent(cms,resourcename2,content);
  assertContent(cms,siblingname,content);
  assertSiblingCountIncremented(cms,siblingname,2);
  assertFilter(cms,siblingname,filter);
  cms.unlockProject(cms.getRequestContext().currentProject().getId());
  cms.publishProject();
  assertState(cms,resourcename1,I_CmsConstants.C_STATE_UNCHANGED);
  assertState(cms,resourcename2,I_CmsConstants.C_STATE_UNCHANGED);
}
