{
  CmsObject cms=getCmsObject();
  echo("Testing to import an existing resource again");
  String resourcename="/folder1/test1.html";
  storeResources(cms,resourcename);
  long timestamp=System.currentTimeMillis() - 12345678;
  CmsResource res=cms.readResource(resourcename);
  String contentStr="Hello this is my NEW AND CHANGED content";
  byte[] content=contentStr.getBytes();
  CmsResource resource=new CmsResource(res.getStructureId(),res.getResourceId(),resourcename,CmsResourceTypePlain.getStaticTypeId(),false,0,cms.getRequestContext().getCurrentProject().getUuid(),CmsResource.STATE_NEW,timestamp,cms.getRequestContext().getCurrentUser().getId(),timestamp,cms.getRequestContext().getCurrentUser().getId(),CmsResource.DATE_RELEASED_DEFAULT,CmsResource.DATE_EXPIRED_DEFAULT,1,content.length,0,0);
  cms.importResource(resourcename,resource,content,null);
  assertResourceType(cms,resourcename,CmsResourceTypePlain.getStaticTypeId());
  assertProject(cms,resourcename,cms.getRequestContext().getCurrentProject());
  assertState(cms,resourcename,CmsResource.STATE_CHANGED);
  assertDateLastModified(cms,resourcename,timestamp);
  assertUserLastModified(cms,resourcename,cms.getRequestContext().getCurrentUser());
  assertFilter(cms,resourcename,OpenCmsTestResourceFilter.FILTER_CREATE_RESOURCE);
  cms.unlockProject(cms.getRequestContext().getCurrentProject().getUuid());
  OpenCms.getPublishManager().publishProject(cms);
  OpenCms.getPublishManager().waitWhileRunning();
  assertState(cms,resourcename,CmsResource.STATE_UNCHANGED);
}
