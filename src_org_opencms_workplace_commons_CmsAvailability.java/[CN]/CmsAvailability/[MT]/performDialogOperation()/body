{
  boolean isFolder=isOperationOnFolder();
  if ((isMultiOperation() || isFolder) && !DIALOG_WAIT.equals(getParamAction())) {
    return false;
  }
  long releaseDate=CmsResource.DATE_RELEASED_DEFAULT;
  boolean resetReleaseDate=Boolean.valueOf(getParamResetrelease()).booleanValue();
  boolean leaveReleaseDate=false;
  if (!resetReleaseDate) {
    try {
      if ((CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParamReleasedate())) && (!getParamReleasedate().startsWith(CmsTouch.DEFAULT_DATE_STRING))) {
        releaseDate=CmsCalendarWidget.getCalendarDate(getMessages(),getParamReleasedate(),true);
      }
 else {
        leaveReleaseDate=true;
      }
    }
 catch (    ParseException e) {
      throw new CmsException(Messages.get().container(Messages.ERR_PARSE_RELEASEDATE_1,getParamReleasedate()),e);
    }
  }
  long expireDate=CmsResource.DATE_EXPIRED_DEFAULT;
  boolean resetExpireDate=Boolean.valueOf(getParamResetexpire()).booleanValue();
  boolean leaveExpireDate=false;
  if (!resetExpireDate) {
    try {
      if ((CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParamExpiredate())) && (!getParamExpiredate().startsWith(CmsTouch.DEFAULT_DATE_STRING))) {
        expireDate=CmsCalendarWidget.getCalendarDate(getMessages(),getParamExpiredate(),true);
      }
 else {
        leaveExpireDate=true;
      }
    }
 catch (    ParseException e) {
      throw new CmsException(Messages.get().container(Messages.ERR_PARSE_EXPIREDATE_1,getParamExpiredate()),e);
    }
  }
  boolean modifyRecursive=Boolean.valueOf(getParamRecursive()).booleanValue();
  Iterator i=getResourceList().iterator();
  while (i.hasNext()) {
    String resName=(String)i.next();
    try {
      performSingleResourceAvailability(resName,releaseDate,expireDate,leaveReleaseDate,leaveExpireDate,modifyRecursive);
    }
 catch (    CmsException e) {
      addMultiOperationException(e);
    }
  }
  boolean notificationEnabled=Boolean.parseBoolean(getParamEnablenotification());
  int notificationInterval=0;
  try {
    notificationInterval=Integer.parseInt(getParamNotificationinterval());
  }
 catch (  Throwable e) {
  }
  boolean modifySiblings=Boolean.valueOf(getParamModifysiblings()).booleanValue();
  i=getResourceList().iterator();
  while (i.hasNext()) {
    String resName=(String)i.next();
    try {
      performSingleResourceNotification(resName,notificationEnabled,notificationInterval,modifySiblings);
    }
 catch (    CmsException e) {
      addMultiOperationException(e);
    }
  }
  checkMultiOperationException(Messages.get(),Messages.ERR_AVAILABILITY_MULTI_0);
  return true;
}
