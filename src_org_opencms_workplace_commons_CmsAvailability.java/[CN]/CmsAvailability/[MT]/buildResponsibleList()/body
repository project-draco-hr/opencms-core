{
  if (isMultiOperation()) {
    return "";
  }
 else {
    StringBuffer result=new StringBuffer(512);
    result.append("<tr><td colspan=\"3\">");
    List parentResources=new ArrayList();
    Map responsibles=new HashMap();
    CmsObject cms=getCms();
    String resourceSitePath=cms.getRequestContext().removeSiteRoot(getParamResource());
    try {
      parentResources=cms.readPath(getParamResource(),CmsResourceFilter.IGNORE_EXPIRATION);
    }
 catch (    CmsException e) {
      if (LOG.isInfoEnabled()) {
        LOG.info(e.getLocalizedMessage());
      }
    }
    Iterator i=parentResources.iterator();
    while (i.hasNext()) {
      CmsResource resource=(CmsResource)i.next();
      try {
        String sitePath=cms.getRequestContext().removeSiteRoot(resource.getRootPath());
        Iterator entries=cms.getAccessControlEntries(sitePath,false).iterator();
        while (entries.hasNext()) {
          CmsAccessControlEntry ace=(CmsAccessControlEntry)entries.next();
          if (ace.isResponsible()) {
            I_CmsPrincipal principal=cms.lookupPrincipal(ace.getPrincipal());
            responsibles.put(principal,resourceSitePath.equals(sitePath) ? null : sitePath);
          }
        }
      }
 catch (      CmsException e) {
        if (LOG.isInfoEnabled()) {
          LOG.info(e.getLocalizedMessage());
        }
      }
    }
    if (responsibles.size() == 0) {
      result.append(key(Messages.GUI_AVAILABILITY_NO_RESPONSIBLES_0));
    }
 else {
      result.append(dialogToggleStart(key(Messages.GUI_AVAILABILITY_RESPONSIBLES_0),"responsibles",false));
      Collection parentFolders=new ArrayList(responsibles.values());
      parentFolders.remove(null);
      if (parentFolders.size() > 0) {
        result.append("<table border=\"0\">\n<tr>\n\t<td>");
        result.append(key(Messages.GUI_PERMISSION_SELECT_VIEW_0));
        result.append("</td>\n<td><input type=\"button\" onclick=\"toggleInheritInfo();\" value=\"");
        result.append(key(Messages.GUI_LABEL_DETAILS_0));
        result.append("\" id=\"button\"/></td></tr></table>");
      }
      result.append(dialogWhiteBoxStart());
      i=responsibles.keySet().iterator();
      for (int j=0; i.hasNext(); j++) {
        I_CmsPrincipal principal=(I_CmsPrincipal)i.next();
        String image="user.png";
        String localizedType=getLocalizedType(CmsAccessControlEntry.ACCESS_FLAGS_USER);
        if (principal instanceof CmsGroup) {
          image="group.png";
          localizedType=getLocalizedType(CmsAccessControlEntry.ACCESS_FLAGS_GROUP);
        }
        result.append("<div class=\"dialogrow\"><img src=\"");
        result.append(getSkinUri());
        result.append("commons/");
        result.append(image);
        result.append("\" class=\"noborder\" width=\"16\" height=\"16\" alt=\"");
        result.append(localizedType);
        result.append("\" title=\"");
        result.append(localizedType);
        result.append("\">&nbsp;<span class=\"textbold\">");
        result.append(principal.getName());
        result.append("</span><div class=\"hide\" id=\"inheritinfo");
        result.append(j);
        result.append("\"><div class=\"dialogpermissioninherit\">");
        String resourceName=((String)responsibles.get(principal));
        if (CmsStringUtil.isNotEmpty(resourceName)) {
          result.append(key(Messages.GUI_PERMISSION_INHERITED_FROM_1,new Object[]{resourceName}));
        }
        result.append("</div></div></div>\n");
      }
      result.append(dialogWhiteBoxEnd());
      result.append("</div>\n");
      result.append("</td></tr>");
    }
    return result.toString();
  }
}
