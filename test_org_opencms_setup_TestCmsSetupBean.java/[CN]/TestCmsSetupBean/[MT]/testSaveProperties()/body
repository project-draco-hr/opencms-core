{
  CmsSetupBean bean=new CmsSetupBean();
  bean.init("",null,null);
  String testPropPath="org/opencms/configuration/";
  File input=new File(TestParameterConfiguration.class.getClassLoader().getResource(testPropPath + "opencms-test.properties").getPath());
  String inputFile=input.getAbsolutePath();
  String outputFile=input.getParent() + "/output.properties";
  System.out.println("Reading properties from " + inputFile);
  CmsParameterConfiguration oldProperties=new CmsParameterConfiguration(inputFile);
  System.out.println("Writing properties to " + outputFile);
  bean.copyFile(inputFile,outputFile);
  bean.saveProperties(oldProperties,outputFile,false);
  System.out.println("Checking properties from " + outputFile);
  CmsParameterConfiguration newProperties=new CmsParameterConfiguration(outputFile);
  for (  String key : oldProperties.keySet()) {
    Object obj=oldProperties.getObject(key);
    String oldValue="", newValue="";
    if (obj instanceof List) {
      StringBuffer buf;
      buf=new StringBuffer();
      for (Iterator j=((List)obj).iterator(); j.hasNext(); ) {
        buf.append("[" + (String)j.next() + "]");
      }
      oldValue=buf.toString();
      buf=new StringBuffer();
      for (Iterator j=((List)newProperties.getObject(key)).iterator(); j.hasNext(); ) {
        buf.append("[" + (String)j.next() + "]");
      }
      newValue=buf.toString();
    }
 else {
      oldValue=(String)obj;
      newValue=newProperties.get(key);
    }
    System.out.println("key  : " + key);
    System.out.println("read : " + oldValue);
    System.out.println("wrote: " + newValue);
    System.out.println("---");
    assertEquals(oldValue,newValue);
  }
  File output=new File(outputFile);
}
