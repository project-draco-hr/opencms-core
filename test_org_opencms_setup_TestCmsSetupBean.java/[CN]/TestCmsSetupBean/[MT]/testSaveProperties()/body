{
  CmsSetupBean bean=new CmsSetupBean();
  bean.init("",null,null);
  String testPropPath="org/opencms/configuration/opencms-test.properties";
  URL url=this.getClass().getClassLoader().getResource(testPropPath);
  String decodedPath=URLDecoder.decode(url.getPath(),"UTF-8");
  File input=new File(decodedPath);
  System.out.println("URL: '" + url + "'");
  System.out.println("URL path decoded: '" + decodedPath + "'");
  System.out.println("File: '" + input + "'");
  assertTrue("Test property file '" + input.getAbsolutePath() + "' not found",input.exists());
  String inputFile=input.getAbsolutePath();
  String outputFile=input.getParent() + "/output.properties";
  System.out.println("Reading properties from " + inputFile);
  CmsParameterConfiguration oldProperties=new CmsParameterConfiguration(inputFile);
  System.out.println("Writing properties to " + outputFile);
  bean.copyFile(inputFile,outputFile);
  if (!bean.getErrors().isEmpty()) {
    for (    String message : bean.getErrors()) {
      System.out.println(message);
    }
    assertTrue("There shouldn't be any errors copying the properties files",!bean.getErrors().isEmpty());
  }
  bean.saveProperties(oldProperties,outputFile,false);
  if (!bean.getErrors().isEmpty()) {
    for (    String message : bean.getErrors()) {
      System.out.println(message);
    }
    assertTrue("There shouldn't be any errors saving the properties files",!bean.getErrors().isEmpty());
  }
  System.out.println("Checking properties from " + outputFile);
  CmsParameterConfiguration newProperties=new CmsParameterConfiguration(outputFile);
  for (  String key : oldProperties.keySet()) {
    Object obj=oldProperties.getObject(key);
    String oldValue="", newValue="";
    if (obj instanceof List) {
      StringBuffer buf;
      List<?> l1=(List<?>)obj;
      buf=new StringBuffer();
      for (      Object o1 : l1) {
        buf.append("[" + o1 + "]");
      }
      oldValue=buf.toString();
      buf=new StringBuffer();
      List<?> l2=(List<?>)newProperties.getObject(key);
      for (      Object o2 : l2) {
        buf.append("[" + o2 + "]");
      }
      newValue=buf.toString();
    }
 else {
      oldValue=(String)obj;
      newValue=newProperties.get(key);
    }
    System.out.println("key  : " + key);
    System.out.println("read : " + oldValue);
    System.out.println("wrote: " + newValue);
    System.out.println("---");
    assertEquals(oldValue,newValue);
  }
}
