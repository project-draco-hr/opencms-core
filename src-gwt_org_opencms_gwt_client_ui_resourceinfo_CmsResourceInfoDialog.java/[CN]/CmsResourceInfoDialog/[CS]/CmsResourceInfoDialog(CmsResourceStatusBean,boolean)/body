{
  super();
  setModal(true);
  setGlassEnabled(true);
  addDialogClose(null);
  setWidth(610);
  removePadding();
  final CmsTabbedPanel<CmsTabContentWrapper> tabPanel=new CmsTabbedPanel<CmsTabContentWrapper>();
  m_tabPanel=tabPanel;
  tabPanel.setAutoResize(true);
  tabPanel.setAutoResizeHeightDelta(45);
  final List<CmsResourceRelationView> relationViews=new ArrayList<CmsResourceRelationView>();
  for (  Map.Entry<CmsResourceStatusTabId,String> tabEntry : statusBean.getTabs().entrySet()) {
switch (tabEntry.getKey()) {
case tabRelationsFrom:
      CmsResourceRelationView targets=new CmsResourceRelationView(statusBean,Mode.targets);
    setTabMinHeight(targets);
  targets.setPopup(this);
tabPanel.add(new CmsTabContentWrapper(targets),tabEntry.getValue());
relationViews.add(targets);
break;
case tabRelationsTo:
CmsResourceRelationView usage=new CmsResourceRelationView(statusBean,Mode.sources);
setTabMinHeight(usage);
usage.setPopup(this);
tabPanel.add(new CmsTabContentWrapper(usage),tabEntry.getValue());
relationViews.add(usage);
break;
case tabStatus:
CmsResourceInfoView infoView=new CmsResourceInfoView(statusBean);
setTabMinHeight(infoView);
tabPanel.add(new CmsTabContentWrapper(infoView),tabEntry.getValue());
relationViews.add(null);
break;
case tabSiblings:
if (statusBean.getSiblings().size() > 0) {
CmsResourceRelationView siblings=new CmsResourceRelationView(statusBean,Mode.siblings);
setTabMinHeight(siblings);
tabPanel.add(new CmsTabContentWrapper(siblings),tabEntry.getValue());
relationViews.add(siblings);
}
break;
default :
break;
}
}
if (relationViews.get(0) != null) {
relationViews.get(0).onResizeDescendant();
}
tabPanel.addSelectionHandler(new SelectionHandler<Integer>(){
public void onSelection(SelectionEvent<Integer> event){
Widget tabContent=tabPanel.getWidget(event.getSelectedItem().intValue()).getWidget();
if (tabContent instanceof I_CmsDescendantResizeHandler) {
((I_CmsDescendantResizeHandler)tabContent).onResizeDescendant();
}
delayedResize();
}
}
);
setMainContent(tabPanel);
List<CmsResourceStatusTabId> tabKeyList=Lists.newArrayList(statusBean.getTabs().keySet());
int startTab=tabKeyList.indexOf(statusBean.getStartTab());
tabPanel.selectTab(startTab);
}
