{
  super();
  setModal(true);
  setGlassEnabled(true);
  addDialogClose(null);
  setWidth(520);
  int height=400;
  setHeight(height);
  removePadding();
  CmsTabbedPanel<Widget> tabPanel=new CmsTabbedPanel<Widget>();
  final List<CmsResourceRelationView> relationViews=new ArrayList<CmsResourceRelationView>();
  for (  Map.Entry<CmsResourceStatusTabId,String> tabEntry : statusBean.getTabs().entrySet()) {
switch (tabEntry.getKey()) {
case tabRelationsFrom:
      CmsResourceRelationView targets=new CmsResourceRelationView(statusBean,Mode.targets);
    targets.setPopup(this);
  tabPanel.add(targets,tabEntry.getValue());
relationViews.add(targets);
break;
case tabRelationsTo:
CmsResourceRelationView usage=new CmsResourceRelationView(statusBean,Mode.sources);
usage.setPopup(this);
tabPanel.add(usage,tabEntry.getValue());
relationViews.add(usage);
break;
case tabStatus:
CmsResourceInfoView infoView=new CmsResourceInfoView(statusBean);
tabPanel.add(infoView,tabEntry.getValue());
relationViews.add(null);
break;
default :
break;
}
}
if (relationViews.get(0) != null) {
relationViews.get(0).onSelect();
}
tabPanel.addSelectionHandler(new SelectionHandler<Integer>(){
public void onSelection(SelectionEvent<Integer> event){
int tab=event.getSelectedItem().intValue();
if (relationViews.get(tab) != null) {
relationViews.get(tab).onSelect();
}
}
}
);
setMainContent(tabPanel);
}
