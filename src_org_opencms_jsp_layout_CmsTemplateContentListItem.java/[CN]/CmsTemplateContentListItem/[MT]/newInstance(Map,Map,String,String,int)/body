{
  CmsMacroResolver resolver=CmsMacroResolver.newInstance();
  resolver.addMacro(MACRO_LISTINDEX,Integer.toString(index));
  resolver.addMacro(MACRO_MICROSITEFOLDER,microSiteFolder);
  String type=(String)properties.get(resolver.resolveMacros(PROPERTY_LAYOUT_TYPE));
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(type) && !PROPERTY_VALUE_NONE.equals(type)) {
    CmsTemplateContentListItem listItem=new CmsTemplateContentListItem();
    listItem.setType(type);
    StringBuffer keyPrefix=new StringBuffer(8);
    keyPrefix.append("layout.").append(type).append('.').append(displayArea).append('.');
    String collector=(String)properties.get(resolver.resolveMacros(PROPERTY_LAYOUT_COLLECTOR));
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(collector)) {
      collector=(String)defaultValues.get(keyPrefix + PARAM_COLLECTOR);
    }
    listItem.setCollector(collector);
    String count=(String)properties.get(resolver.resolveMacros(PROPERTY_LAYOUT_COUNT));
    String defaultCount=(String)defaultValues.get(keyPrefix + PARAM_COUNT);
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(count)) {
      count=defaultCount;
    }
    try {
      listItem.setCount(Integer.parseInt(count));
    }
 catch (    NumberFormatException e) {
      listItem.setCount(Integer.parseInt(defaultCount));
    }
    String folder=(String)properties.get(resolver.resolveMacros(PROPERTY_LAYOUT_FOLDER));
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(folder)) {
      folder=(String)defaultValues.get(keyPrefix + PARAM_FOLDER);
    }
    listItem.setFolder(resolver.resolveMacros(folder));
    String variation=(String)properties.get(resolver.resolveMacros(PROPERTY_LAYOUT_VARIATION));
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(variation)) {
      variation="";
    }
 else {
      variation='.' + variation;
    }
    String listElement=(String)defaultValues.get(keyPrefix + PARAM_LISTELEMENT + variation);
    listItem.setListElement(listElement);
    listItem.setDisplayArea(displayArea);
    return listItem;
  }
 else {
    return null;
  }
}
