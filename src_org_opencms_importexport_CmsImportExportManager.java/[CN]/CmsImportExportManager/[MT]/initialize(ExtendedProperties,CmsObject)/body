{
  String[] immuResources=configuration.getStringArray("import.immutable.resources");
  if (immuResources == null) {
    immuResources=new String[0];
  }
  List immutableResourcesOri=java.util.Arrays.asList(immuResources);
  ArrayList immutableResources=new ArrayList();
  for (int i=0; i < immutableResourcesOri.size(); i++) {
    String path=((String)immutableResourcesOri.get(i)).trim();
    if (path != null && !"".equals(path)) {
      immutableResources.add(path);
      if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Immutable resource   : " + (i + 1) + " - "+ path);
      }
    }
  }
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Immutable resources  : " + ((immutableResources.size() > 0) ? "enabled" : "disabled"));
  }
  String convertToXmlPageValue=configuration.getString("import.convert.xmlpage");
  boolean convertToXmlPage=(convertToXmlPageValue != null) ? "true".equalsIgnoreCase(convertToXmlPageValue.trim()) : false;
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Convert to XML page  : " + (convertToXmlPage ? "enabled" : "disabled"));
  }
  String webappUrl=configuration.getString("compatibility.support.import.old.webappurl",null);
  webappUrl=(webappUrl != null) ? webappUrl.trim() : null;
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Old webapp URL       : " + ((webappUrl == null) ? "not set!" : webappUrl));
  }
  String[] propNames=configuration.getStringArray("compatibility.support.import.remove.propertytags");
  if (propNames == null) {
    propNames=new String[0];
  }
  List propertyNamesOri=java.util.Arrays.asList(propNames);
  ArrayList propertyNames=new ArrayList();
  for (int i=0; i < propertyNamesOri.size(); i++) {
    String name=((String)propertyNamesOri.get(i)).trim();
    if (name != null && !"".equals(name)) {
      propertyNames.add(name);
      if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Clear import property: " + (i + 1) + " - "+ name);
      }
    }
  }
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Remove properties    : " + ((propertyNames.size() > 0) ? "enabled" : "disabled"));
  }
  String overwriteCollidingResourcesValue=configuration.getString("import.overwrite.colliding.resources");
  boolean overwriteCollidingResources=(overwriteCollidingResourcesValue != null) ? "true".equalsIgnoreCase(overwriteCollidingResourcesValue.trim()) : false;
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Overwrite collisions : " + (overwriteCollidingResources ? "enabled" : "disabled"));
  }
  Map importExportHandlerClassNames=(Map)new HashMap();
  CmsRegistry registry=cms.getRegistry();
  Element systemElement=registry.getDom4jSystemElement();
  Element handlerElement=null;
  Attribute handlerAttribute=null;
  List handlerClasses=systemElement.selectNodes("./importexport/handler");
  for (int i=0; i < handlerClasses.size(); i++) {
    handlerElement=(Element)handlerClasses.get(i);
    handlerAttribute=handlerElement.attribute("name");
    importExportHandlerClassNames.put(handlerAttribute.getValue(),handlerElement.getTextTrim());
  }
  return new CmsImportExportManager(immutableResources,convertToXmlPage,overwriteCollidingResources,webappUrl,propertyNames,importExportHandlerClassNames);
}
