{
  String id=param.getId();
  StringBuffer result=new StringBuffer(16);
  result.append("<td class=\"xmlTd\"><select class=\"xmlInput");
  if (param.hasError()) {
    result.append(" xmlInputError");
  }
  result.append("\" name=\"");
  result.append(id);
  result.append("\" id=\"");
  result.append(id);
  result.append("\">");
  String defaultValue=param.getDefault(cms);
  if (CmsStringUtil.isEmpty(defaultValue)) {
    defaultValue="";
  }
  StringTokenizer T=new StringTokenizer(defaultValue,C_DELIM_OPTIONS);
  boolean isPreselected;
  String val;
  String label;
  String selected;
  int delimPos;
  while (T.hasMoreTokens()) {
    String part=T.nextToken();
    isPreselected=part.indexOf(C_PRESELECTED) != -1;
    selected="";
    delimPos=part.indexOf(C_DELIM_ATTRS);
    if (delimPos != -1) {
      val=part.substring(0,delimPos);
      label=part.substring(delimPos + 1);
    }
 else {
      val=part;
      label=val;
    }
    if (isPreselected) {
      String preSelected="" + C_PRESELECTED;
      val=CmsStringUtil.substitute(val,preSelected,"");
      label=CmsStringUtil.substitute(label,preSelected,"");
    }
    String fieldValue=param.getStringValue(cms);
    if (((CmsStringUtil.isEmpty(fieldValue) || defaultValue.equals(fieldValue)) && isPreselected) || val.equals(fieldValue)) {
      selected=" selected=\"selected\"";
    }
    result.append("<option value=\"");
    result.append(val);
    result.append("\"");
    result.append(selected);
    result.append(">");
    result.append(label);
    result.append("</option>");
  }
  result.append("</select>");
  result.append("</td>");
  return result.toString();
}
