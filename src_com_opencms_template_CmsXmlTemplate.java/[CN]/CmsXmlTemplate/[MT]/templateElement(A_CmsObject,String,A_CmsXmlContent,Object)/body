{
  Object t2Key=null;
  Hashtable parameterHashtable=(Hashtable)((Hashtable)userObject).clone();
  String templateClass=getTemplateClassName(tagcontent,doc,parameterHashtable);
  String templateFilename=getTemplateFileName(tagcontent,doc,parameterHashtable);
  byte[] result=null;
  Object tmpl=null;
  try {
    tmpl=CmsTemplateClassManager.getClassInstance(cms,templateClass);
  }
 catch (  Exception e) {
    doc.clearFileCache(doc);
    A_CmsRequestContext reqContext=cms.getRequestContext();
    if (cms.anonymousUser().equals(reqContext.currentUser())) {
      String ss="Error while generating output!";
      return ss;
    }
 else {
      if (e instanceof ClassNotFoundException) {
        System.err.println("Class " + templateClass + " could not be loaded!");
        throw new CmsException("Could not load template class " + templateClass);
      }
 else {
        System.err.println("Class " + templateClass + " could not be instantiated!");
        throw new CmsException("Could not instantiate class " + templateClass + ". Original Exception: "+ e);
      }
    }
  }
  if (!(tmpl instanceof I_CmsTemplate)) {
    System.err.println(templateClass + " is not a OpenCms template class. Sorry.");
    System.err.println("removing cache");
    throw new CmsException("Error in " + templateClass + " is not a XML template class. Sorry.");
  }
  I_CmsTemplate t2=(I_CmsTemplate)tmpl;
  Element elementDefinitionTag=doc.getData("ELEMENTDEF." + tagcontent);
  NodeList parameterTags=elementDefinitionTag.getElementsByTagName("PARAMETER");
  int numParameters=parameterTags.getLength();
  for (int i=0; i < numParameters; i++) {
    Element param=(Element)parameterTags.item(i);
    String paramName=param.getAttribute("name");
    String paramValue=doc.getTagValue(param);
    if (!parameterHashtable.containsKey(paramName)) {
      parameterHashtable.put(tagcontent + "." + paramName,paramValue);
    }
  }
  t2Key=t2.getKey(cms,templateFilename,parameterHashtable);
  if (t2.isCacheable(cms,templateFilename,parameterHashtable) && m_cache.has(t2Key) && (!t2.shouldReload(cms,templateFilename,parameterHashtable))) {
    result=m_cache.get(t2Key);
  }
  if (result == null) {
    try {
      result=t2.getContent(cms,templateFilename,tagcontent,parameterHashtable);
    }
 catch (    CmsException e) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,"[CmsXmlTemplate] Could not generate output for element " + tagcontent + " in template file "+ templateFilename+ ". ");
      }
      A_CmsRequestContext reqContext=cms.getRequestContext();
      if (cms.anonymousUser().equals(reqContext.currentUser())) {
        result="ERROR!".getBytes();
      }
 else {
        throw e;
      }
    }
  }
  if (t2.isCacheable(cms,templateFilename,parameterHashtable)) {
    m_cache.put(t2Key,result);
  }
  return result;
}
