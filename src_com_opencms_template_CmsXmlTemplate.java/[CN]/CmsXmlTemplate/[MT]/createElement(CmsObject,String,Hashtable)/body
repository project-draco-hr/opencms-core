{
  CmsElementDefinitionCollection subtemplateDefinitions=new CmsElementDefinitionCollection();
  String readAccessGroup=cms.C_GROUP_ADMIN;
  int variantCachesize=100;
  try {
    readAccessGroup=cms.getReadingpermittedGroup(cms.getRequestContext().currentProject().getId(),templateFile);
    CmsXmlTemplateFile xmlTemplateDocument=getOwnTemplateFile(cms,templateFile,null,parameters,null);
    CmsElementCache elementCache=cms.getRequestContext().getElementCache();
    variantCachesize=elementCache.getVariantCachesize();
    Vector subtemplates=xmlTemplateDocument.getAllSubElements();
    int numSubtemplates=subtemplates.size();
    for (int i=0; i < numSubtemplates; i++) {
      String elName=(String)subtemplates.elementAt(i);
      String className=null;
      String templateName=null;
      String templateSelector=null;
      if (xmlTemplateDocument.hasSubtemplateClass(elName)) {
        className=xmlTemplateDocument.getSubtemplateClass(elName);
      }
      if (xmlTemplateDocument.hasSubtemplateFilename(elName)) {
        templateName=xmlTemplateDocument.getSubtemplateFilename(elName);
      }
      if (xmlTemplateDocument.hasSubtemplateSelector(elName)) {
        templateSelector=xmlTemplateDocument.getSubtemplateSelector(elName);
      }
      Hashtable templateParameters=xmlTemplateDocument.getParameters(elName);
      if (className != null || templateName != null || templateSelector != null || templateParameters.size() > 0) {
        CmsElementDefinition elDef=new CmsElementDefinition(elName,className,templateName,templateSelector,templateParameters);
        subtemplateDefinitions.add(elDef);
      }
    }
  }
 catch (  Exception e) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_ELEMENTCACHE,getClassName() + "Could not generate my template cache element.");
      A_OpenCms.log(C_OPENCMS_ELEMENTCACHE,getClassName() + e);
    }
  }
  CmsElementXml result=new CmsElementXml(getClass().getName(),templateFile,readAccessGroup,getCacheDirectives(cms,templateFile,null,parameters,null),subtemplateDefinitions,variantCachesize);
  return result;
}
