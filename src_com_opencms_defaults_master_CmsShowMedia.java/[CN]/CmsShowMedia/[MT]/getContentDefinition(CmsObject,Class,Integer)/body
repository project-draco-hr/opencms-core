{
  Object o=null;
  try {
    Constructor c=cdClass.getConstructor(new Class[]{CmsObject.class,Integer.class});
    o=c.newInstance(new Object[]{cms,id});
  }
 catch (  InvocationTargetException ite) {
    if (OpenCms.getLog(this).isWarnEnabled()) {
      OpenCms.getLog(this).warn("Invocation target exception",ite);
    }
  }
catch (  NoSuchMethodException nsm) {
    if (OpenCms.getLog(this).isWarnEnabled()) {
      OpenCms.getLog(this).warn("Requested method was not found",nsm);
    }
  }
catch (  InstantiationException e) {
    if (OpenCms.getLog(this).isWarnEnabled()) {
      OpenCms.getLog(this).warn("The reflected class is abstract",e);
    }
  }
catch (  Exception e) {
    if (OpenCms.getLog(this).isWarnEnabled()) {
      OpenCms.getLog(this).warn("Other exception",e);
    }
  }
  return o;
}
