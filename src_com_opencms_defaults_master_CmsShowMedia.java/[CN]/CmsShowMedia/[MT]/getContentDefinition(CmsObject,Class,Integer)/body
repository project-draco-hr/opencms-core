{
  Object o=null;
  try {
    Constructor c=cdClass.getConstructor(new Class[]{CmsObject.class,Integer.class});
    o=c.newInstance(new Object[]{cms,id});
  }
 catch (  InvocationTargetException ite) {
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INFO)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,getClassName() + ": content definitionConstructor: Invocation target exception!");
    }
  }
catch (  NoSuchMethodException nsm) {
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INFO)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,getClassName() + ":  content definitionConstructor: Requested method was not found!");
    }
  }
catch (  InstantiationException e) {
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INFO)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,getClassName() + ": content definition constructor: the reflected class is abstract!");
    }
  }
catch (  Exception e) {
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INFO)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,getClassName() + ": content definitionConstructor: Other exception! " + e);
    }
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INFO)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,e.getMessage());
    }
  }
  return o;
}
