{
  HSSFWorkbook excelWb=new HSSFWorkbook(in);
  StringBuffer result=new StringBuffer(4096);
  int numberOfSheets=excelWb.getNumberOfSheets();
  for (int i=0; i < numberOfSheets; i++) {
    HSSFSheet sheet=excelWb.getSheetAt(i);
    int numberOfRows=sheet.getPhysicalNumberOfRows();
    if (numberOfRows > 0) {
      if (CmsStringUtil.isNotEmpty(excelWb.getSheetName(i))) {
        if (i > 0) {
          result.append("\n\n");
        }
        result.append(excelWb.getSheetName(i).trim());
        result.append(":\n\n");
      }
      Iterator rowIt=sheet.rowIterator();
      while (rowIt.hasNext()) {
        HSSFRow row=(HSSFRow)rowIt.next();
        if (row != null) {
          boolean hasContent=false;
          Iterator it=row.cellIterator();
          while (it.hasNext()) {
            HSSFCell cell=(HSSFCell)it.next();
            String text=null;
            try {
switch (cell.getCellType()) {
case HSSFCell.CELL_TYPE_BLANK:
case HSSFCell.CELL_TYPE_ERROR:
                break;
case HSSFCell.CELL_TYPE_NUMERIC:
              text=Double.toString(cell.getNumericCellValue());
            break;
case HSSFCell.CELL_TYPE_BOOLEAN:
          text=Boolean.toString(cell.getBooleanCellValue());
        break;
case HSSFCell.CELL_TYPE_STRING:
default :
      text=cell.getStringCellValue();
    break;
}
}
 catch (Exception e) {
}
if ((text != null) && (text.length() != 0)) {
result.append(text.trim());
result.append(' ');
hasContent=true;
}
}
if (hasContent) {
result.append('\n');
}
}
}
}
}
return result.toString();
}
