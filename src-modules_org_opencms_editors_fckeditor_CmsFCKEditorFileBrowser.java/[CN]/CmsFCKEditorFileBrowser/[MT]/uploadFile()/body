{
  String errorCode=ERROR_UPLOAD_OK;
  try {
    Iterator<FileItem> i=m_multiPartFileItems.iterator();
    FileItem fi=null;
    while (i.hasNext()) {
      fi=i.next();
      if (fi.getName() != null) {
        break;
      }
 else {
        continue;
      }
    }
    if (fi != null) {
      String fileName=fi.getName();
      long size=fi.getSize();
      long maxFileSizeBytes=OpenCms.getWorkplaceManager().getFileBytesMaxUploadSize(getCms());
      if ((maxFileSizeBytes > 0) && (size > maxFileSizeBytes)) {
        throw new Exception();
      }
      byte[] content=fi.get();
      fi.delete();
      String newResname=CmsResource.getName(fileName.replace('\\','/'));
      String title=newResname;
      if (title.lastIndexOf('.') != -1) {
        title=title.substring(0,title.lastIndexOf('.'));
      }
      List<CmsProperty> properties=new ArrayList<CmsProperty>(1);
      CmsProperty titleProp=new CmsProperty();
      titleProp.setName(CmsPropertyDefinition.PROPERTY_TITLE);
      if (OpenCms.getWorkplaceManager().isDefaultPropertiesOnStructure()) {
        titleProp.setStructureValue(title);
      }
 else {
        titleProp.setResourceValue(title);
      }
      properties.add(titleProp);
      int resTypeId=OpenCms.getResourceManager().getDefaultTypeForName(newResname).getTypeId();
      newResname=getParamCurrentFolder() + newResname;
      if (!getCms().existsResource(newResname,CmsResourceFilter.IGNORE_EXPIRATION)) {
        try {
          getCms().createResource(newResname,resTypeId,content,properties);
        }
 catch (        CmsDbSqlException sqlExc) {
          getCms().lockResource(newResname);
          getCms().deleteResource(newResname,CmsResource.DELETE_PRESERVE_SIBLINGS);
          throw sqlExc;
        }
      }
 else {
        checkLock(newResname);
        CmsFile file=getCms().readFile(newResname,CmsResourceFilter.IGNORE_EXPIRATION);
        byte[] contents=file.getContents();
        try {
          getCms().replaceResource(newResname,resTypeId,content,null);
        }
 catch (        CmsDbSqlException sqlExc) {
          file.setContents(contents);
          getCms().writeFile(file);
          throw sqlExc;
        }
      }
    }
 else {
      throw new Exception();
    }
  }
 catch (  Throwable e) {
    errorCode=ERROR_UPLOAD_INVALID;
  }
  StringBuffer result=new StringBuffer(256);
  result.append("<html><head><script type=\"text/javascript\">\n");
  result.append("window.parent.frames[\"frmUpload\"].OnUploadCompleted(");
  result.append(errorCode);
  result.append(");\n");
  result.append("</script></head></html>");
  return result.toString();
}
