{
  createXMLHead();
  Element folders=getDocument().getRootElement().addElement(NODE_FOLDERS);
  Element files=null;
  CmsResourceFilter filter;
  if (includeFiles) {
    filter=CmsResourceFilter.DEFAULT;
    files=getDocument().getRootElement().addElement(NODE_FILES);
  }
 else {
    filter=CmsResourceFilter.DEFAULT_FOLDERS;
  }
  try {
    List resources=getCms().readResources(getParamCurrentFolder(),filter,false);
    Iterator i=resources.iterator();
    while (i.hasNext()) {
      CmsResource res=(CmsResource)i.next();
      if (res.isFolder()) {
        Element folder=folders.addElement(NODE_FOLDER);
        String folderName=CmsResource.getName(res.getRootPath());
        folderName=CmsStringUtil.substitute(folderName,"/","");
        folder.addAttribute(ATTR_NAME,folderName);
      }
 else {
        boolean showFile=true;
        if (TYPE_IMAGE.equals(getParamType())) {
          showFile=(res.getTypeId() == CmsResourceTypeImage.getStaticTypeId());
        }
        if (showFile) {
          Element file=files.addElement(NODE_FILE);
          file.addAttribute(ATTR_NAME,CmsResource.getName(res.getRootPath()));
          file.addAttribute(ATTR_SIZE,"" + (res.getLength() / 1024));
        }
      }
    }
    return CmsXmlUtils.marshal(getDocument(),CmsEncoder.ENCODING_UTF_8);
  }
 catch (  CmsException e) {
    return "";
  }
}
