{
  if (OpenCms.getLog(CmsLog.CHANNEL_WORKPLACE_XML).isDebugEnabled() && C_DEBUG) {
    OpenCms.getLog(CmsLog.CHANNEL_WORKPLACE_XML).debug("Getting content of element " + ((elementName == null) ? "<root>" : elementName));
    OpenCms.getLog(CmsLog.CHANNEL_WORKPLACE_XML).debug("Template file is: " + templateFile);
    OpenCms.getLog(CmsLog.CHANNEL_WORKPLACE_XML).debug("Selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  I_CmsSession session=cms.getRequestContext().getSession(true);
  CmsRequestContext reqCont=cms.getRequestContext();
  String action=new String();
  action=(String)parameters.get("action");
  CmsXmlTemplateFile xmlTemplateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  String initial=(String)parameters.get(C_PARA_INITIAL);
  if (initial != null) {
    session.removeValue("lasturl");
    action="start";
  }
  Vector synchronizeResources=parseResources(cms.getRegistry().getSystemValues(C_SYNCHRONISATION_RESOURCE));
  if ((action != null) && ("working".equals(action))) {
    A_CmsReportThread doProjectNew=(A_CmsReportThread)session.getValue(C_SYNCFOLDER_THREAD);
    if (doProjectNew.isAlive()) {
      String time=(String)parameters.get("time");
      int wert=Integer.parseInt(time);
      wert+=5;
      xmlTemplateDocument.setData("time","" + wert);
      return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"wait");
    }
 else {
      Throwable error=doProjectNew.getError();
      if (error == null) {
        return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"done");
      }
 else {
        xmlTemplateDocument.setData("details",Utils.getStackTrace(error));
        return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"error");
      }
    }
  }
  if ("start".equals(action)) {
    try {
      int numRes=synchronizeResources.size();
      checkRedundancies(synchronizeResources);
      numRes=synchronizeResources.size();
      Vector notWriteable=new Vector();
      for (int i=numRes - 1; i >= 0; i--) {
        String theFolder=(String)synchronizeResources.elementAt(i);
        if (!checkWriteable(cms,theFolder)) {
          notWriteable.addElement(theFolder);
          templateSelector="error";
        }
      }
      if (!"error".equals(templateSelector)) {
        Vector allProjects=cms.getAllAccessibleProjects();
        int count=0;
        CmsProject cmsProject=null;
        int projectId=cms.getRequestContext().currentProject().getId();
        String projectName=cms.getRegistry().getSystemValue(C_SYNCHRONISATION_PROJECT);
        for (int i=0; i < allProjects.size(); i++) {
          cmsProject=(CmsProject)allProjects.elementAt(i);
          if (cmsProject.getName().equals(projectName)) {
            projectId=cmsProject.getId();
            count++;
          }
        }
        if (count == 1) {
          reqCont.setCurrentProject(projectId);
        }
 else         if (count == 0) {
          reqCont.setCurrentProject(cms.createProject(projectName,"Project for synchronisation",OpenCms.getDefaultUsers().getGroupUsers(),OpenCms.getDefaultUsers().getGroupProjectmanagers(),C_PROJECT_TYPE_NORMAL).getId());
        }
 else {
          xmlTemplateDocument.setData("details","Too many projects for synchronisation.");
          return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"error");
        }
        A_CmsReportThread doSyncFolder=new CmsSynchronizeThread(cms,synchronizeResources);
        session.putValue(C_SYNCFOLDER_THREAD,doSyncFolder);
        xmlTemplateDocument.setData("time","5");
        templateSelector="wait";
      }
 else {
        xmlTemplateDocument.setData("details","The following folders were not writeable:" + notWriteable.toString());
      }
    }
 catch (    Exception exc) {
      xmlTemplateDocument.setData("details",Utils.getStackTrace(exc));
      templateSelector="error";
    }
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
