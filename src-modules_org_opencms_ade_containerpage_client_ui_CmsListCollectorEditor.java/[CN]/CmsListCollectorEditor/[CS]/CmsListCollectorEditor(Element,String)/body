{
  try {
    setStyleName(I_CmsLayoutBundle.INSTANCE.containerpageCss().listCollectorEditor());
    m_markerTag=editable;
    m_parentResourceId=parentId;
    FormElement form=m_markerTag.getFirstChild().cast();
    NodeCollection<Element> elements=form.getElements();
    m_resource=elements.getNamedItem("resource").getPropertyString("value");
    m_newLink=elements.getNamedItem("newlink").getPropertyString("value");
    m_resourceId=editable.getAttribute("rel");
    Element button=form.getNextSiblingElement().getFirstChildElement();
    ButtonHandler handler=new ButtonHandler();
    while (button != null) {
      if (CmsDomUtil.hasClass("cms-edit-enabled",button)) {
        m_edit=new CmsPushButton();
        m_edit.setImageClass(I_CmsImageBundle.INSTANCE.style().editorIcon());
        m_edit.setShowBorder(false);
        add(m_edit);
        m_edit.addClickHandler(handler);
        m_edit.addMouseOverHandler(handler);
        m_edit.addMouseOutHandler(handler);
        button=button.getNextSiblingElement();
        continue;
      }
      if (CmsDomUtil.hasClass("cms-delete",button)) {
        m_delete=new CmsPushButton();
        m_delete.setImageClass(I_CmsImageBundle.INSTANCE.style().deleteIcon());
        m_delete.setShowBorder(false);
        add(m_delete);
        m_delete.addClickHandler(handler);
        m_delete.addMouseOverHandler(handler);
        m_delete.addMouseOutHandler(handler);
        button=button.getNextSiblingElement();
        continue;
      }
      if (CmsDomUtil.hasClass("cms-new",button)) {
        m_new=new CmsPushButton();
        m_new.setImageClass(I_CmsImageBundle.INSTANCE.style().newIcon());
        m_new.setShowBorder(false);
        add(m_new);
        m_new.addClickHandler(handler);
        m_new.addMouseOverHandler(handler);
        m_new.addMouseOutHandler(handler);
        button=button.getNextSiblingElement();
      }
    }
  }
 catch (  Exception e) {
    throw new UnsupportedOperationException("Error while parsing editable tag information: " + e.getMessage());
  }
}
