{
  CmsXmlEntityResolver resolver=new CmsXmlEntityResolver(null);
  String content;
  content=CmsFileUtil.readFile("org/opencms/xml/content/xmlcontent-definition-1b.xsd",CmsEncoder.C_UTF8_ENCODING);
  CmsXmlContentDefinition cd1=CmsXmlContentDefinition.unmarshal(content,C_SCHEMA_SYSTEM_ID_1B,resolver);
  Document schema;
  StringWriter out;
  out=new StringWriter();
  schema=cd1.getSchema();
  XMLWriter writer;
  writer=new XMLWriter(out,OutputFormat.createPrettyPrint());
  writer.write(schema);
  writer.flush();
  System.out.println(out.toString());
  CmsXmlContentDefinition cd2=new CmsXmlContentDefinition("Outer","Inner",C_SCHEMA_SYSTEM_ID_1B);
  cd2.addType(new CmsXmlStringValue("E1","1","1"));
  cd2.addType(new CmsXmlStringValue("E2","1","1"));
  out=new StringWriter();
  schema=cd2.getSchema();
  writer=new XMLWriter(out,OutputFormat.createPrettyPrint());
  writer.write(schema);
  writer.flush();
  System.out.println(out.toString());
  assertEquals(cd1,cd2);
  CmsXmlContentDefinition cd3=CmsXmlContentDefinition.unmarshal(out.toString().getBytes(),null,null);
  out=new StringWriter();
  schema=cd3.getSchema();
  writer=new XMLWriter(out,OutputFormat.createPrettyPrint());
  writer.write(schema);
  writer.flush();
  System.out.println(out.toString());
  assertEquals(cd1,cd3);
  cd2.addType(new CmsXmlStringValue("AddedLater","1","1"));
  assertEquals(cd1,cd3);
  assertFalse(cd2.equals(cd1));
  assertFalse(cd2.equals(cd3));
}
