{
  validateAttributesExists(element,new String[]{XSD_ATTRIBUTE_NAME},new String[0]);
  String name=validateAttribute(element,XSD_ATTRIBUTE_NAME,null);
  List mainElements=element.elements();
  if ((mainElements.size() != 1) && (mainElements.size() != 2)) {
    throw new CmsXmlException(Messages.get().container(Messages.ERR_TS_SUBELEMENT_COUNT_2,element.getUniquePath(),new Integer(mainElements.size())));
  }
  boolean hasLanguageAttribute=false;
  if (mainElements.size() == 2) {
    Element typeAttribute=(Element)mainElements.get(1);
    if (!XSD_NODE_ATTRIBUTE.equals(typeAttribute.getQName())) {
      throw new CmsXmlException(Messages.get().container(Messages.ERR_CD_ELEMENT_NAME_3,typeAttribute.getUniquePath(),XSD_NODE_ATTRIBUTE.getQualifiedName(),typeAttribute.getQName().getQualifiedName()));
    }
    validateAttribute(typeAttribute,XSD_ATTRIBUTE_NAME,XSD_ATTRIBUTE_VALUE_LANGUAGE);
    validateAttribute(typeAttribute,XSD_ATTRIBUTE_TYPE,CmsXmlLocaleValue.TYPE_NAME);
    try {
      validateAttribute(typeAttribute,XSD_ATTRIBUTE_USE,XSD_ATTRIBUTE_VALUE_REQUIRED);
    }
 catch (    CmsXmlException e) {
      validateAttribute(typeAttribute,XSD_ATTRIBUTE_USE,XSD_ATTRIBUTE_VALUE_OPTIONAL);
    }
    hasLanguageAttribute=true;
  }
  Element typeSequence=(Element)mainElements.get(0);
  if (!XSD_NODE_SEQUENCE.equals(typeSequence.getQName())) {
    throw new CmsXmlException(Messages.get().container(Messages.ERR_CD_ELEMENT_NAME_3,typeSequence.getUniquePath(),XSD_NODE_SEQUENCE.getQualifiedName(),typeSequence.getQName().getQualifiedName()));
  }
  List typeSequenceElements=typeSequence.elements();
  if (typeSequenceElements.size() < 1) {
    throw new CmsXmlException(Messages.get().container(Messages.ERR_TS_SUBELEMENT_TOOFEW_3,typeSequence.getUniquePath(),new Integer(1),new Integer(typeSequenceElements.size())));
  }
  List sequence=new ArrayList();
  if (hasLanguageAttribute) {
    CmsXmlContentTypeManager typeManager=OpenCms.getXmlContentTypeManager();
    Iterator i=typeSequenceElements.iterator();
    while (i.hasNext()) {
      sequence.add(typeManager.getContentType((Element)i.next(),includes));
    }
  }
 else {
    Element e=(Element)typeSequenceElements.get(0);
    String typeName=validateAttribute(e,XSD_ATTRIBUTE_NAME,null);
    String minOccurs=validateAttribute(e,XSD_ATTRIBUTE_MIN_OCCURS,XSD_ATTRIBUTE_VALUE_ZERO);
    String maxOccurs=validateAttribute(e,XSD_ATTRIBUTE_MAX_OCCURS,XSD_ATTRIBUTE_VALUE_UNBOUNDED);
    validateAttribute(e,XSD_ATTRIBUTE_TYPE,createTypeName(typeName));
    CmsXmlNestedContentDefinition cd=new CmsXmlNestedContentDefinition(null,typeName,minOccurs,maxOccurs);
    sequence.add(cd);
  }
  return definition.new CmsXmlComplexTypeSequence(name,sequence,hasLanguageAttribute);
}
