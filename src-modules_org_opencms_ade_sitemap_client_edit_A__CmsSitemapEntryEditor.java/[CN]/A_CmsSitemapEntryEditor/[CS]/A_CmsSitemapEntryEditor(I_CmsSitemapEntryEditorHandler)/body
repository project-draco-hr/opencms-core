{
  CmsForm form=new CmsForm(null);
  m_form=form;
  m_dialog=new CmsFormDialog(handler.getDialogTitle(),form);
  m_controller=handler.getController();
  m_propertyConfig=removeHiddenProperties(m_controller.getData().getProperties());
  m_handler=handler;
  m_dialog.setFormHandler(new I_CmsFormHandler(){
    /** 
 * @see org.opencms.gwt.client.ui.input.form.I_CmsFormHandler#onSubmitForm(java.util.Map,java.util.Set)
 */
    public void onSubmitForm(    Map<String,String> fieldValues,    Set<String> editedFields){
      ReloadMode reloadMode=getReloadMode(fieldValues,editedFields);
      Map<String,String> changedPropValues=removeTabSuffixes(fieldValues);
      Set<String> editedModels=removeTabSuffixes(editedFields);
      changedPropValues.keySet().retainAll(editedModels);
      List<CmsPropertyModification> propChanges=getPropertyChanges(changedPropValues);
      if (!m_handler.hasEditableName()) {
        m_dialog.hide();
        m_handler.handleSubmit("",null,propChanges,editedFields.contains(FIELD_URLNAME),reloadMode);
        return;
      }
      final String urlNameValue=getAndRemoveValue(fieldValues,FIELD_URLNAME);
      fieldValues.remove(FIELD_LINK);
      m_handler.handleSubmit(urlNameValue,null,propChanges,editedFields.contains(FIELD_URLNAME),reloadMode);
    }
    /** 
 * Check if a field name belongs to one of a given list of properties.<p>
 * @param fieldName the field name 
 * @param propNames the property names 
 * @return true if the field name matches one of the property names 
 */
    private boolean checkContains(    String fieldName,    String... propNames){
      for (      String propName : propNames) {
        if (fieldName.contains("/" + propName + "/")) {
          return true;
        }
      }
      return false;
    }
    /** 
 * Returns the reload mode to use for the given changes.<p>
 * @param fieldValues the field values 
 * @param editedFields the set of edited fields
 * @return the reload mode 
 */
    private CmsSitemapController.ReloadMode getReloadMode(    Map<String,String> fieldValues,    Set<String> editedFields){
      if (CmsSitemapView.getInstance().isNavigationMode()) {
        return ReloadMode.none;
      }
      for (      String fieldName : editedFields) {
        if (checkContains(fieldName,CmsClientProperty.PROPERTY_DEFAULTFILE,CmsClientProperty.PROPERTY_NAVPOS)) {
          return ReloadMode.reloadParent;
        }
        if (checkContains(fieldName,CmsClientProperty.PROPERTY_NAVTEXT)) {
          return ReloadMode.reloadEntry;
        }
      }
      return ReloadMode.none;
    }
  }
);
}
