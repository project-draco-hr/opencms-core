{
  String link=handler.getLink();
  if (link.indexOf("?") > 0) {
    link=link.substring(0,link.indexOf("?"));
  }
  if (!cms.existsResource(link)) {
    return;
  }
  if (!validatePath(toolRoot.getKey(),handler.getPath(),false)) {
    if (CmsLog.INIT.isWarnEnabled()) {
      CmsLog.INIT.warn(Messages.get().getBundle().key(Messages.INIT_TOOLMANAGER_INCONSISTENT_PATH_2,handler.getPath(),handler.getLink()));
    }
    return;
  }
  String id="tool" + m_tools.elementList().size();
  CmsTool tool=new CmsTool(id,handler);
  try {
    handler.isEnabled(cms);
    handler.isVisible(cms);
  }
 catch (  Throwable ex) {
    String message=Messages.get().getBundle().key(Messages.INIT_TOOLMANAGER_INSTALL_ERROR_2,handler.getPath(),handler.getLink());
    if (CmsLog.INIT.isWarnEnabled()) {
      CmsLog.INIT.warn(message);
    }
 else     if (CmsLog.INIT.isDebugEnabled()) {
      CmsLog.INIT.debug(message,ex);
    }
    return;
  }
  try {
    m_tools.addIdentifiableObject(toolRoot.getKey() + ROOT_SEPARATOR + handler.getPath(),tool);
    m_urls.addIdentifiableObject(link,handler.getPath());
  }
 catch (  Throwable ex) {
    CmsLog.INIT.warn(Messages.get().getBundle().key(Messages.INIT_TOOLMANAGER_DUPLICATED_ERROR_3,handler.getPath(),handler.getLink(),resolveAdminTool(toolRoot.getKey(),handler.getPath()).getHandler().getLink()));
  }
}
