{
  logContentExtraction(resource,index);
  try {
    CmsFile file=readFile(cms,resource);
    A_CmsXmlDocument xmlContent=CmsXmlContentFactory.unmarshal(cms,file);
    Map<String,String> items=new HashMap<String,String>();
    StringBuffer locales=new StringBuffer();
    for (    Locale locale : xmlContent.getLocales()) {
      locales.append(locale.toString());
      locales.append(' ');
      StringBuffer content=new StringBuffer();
      boolean hasTitleMapping=false;
      String galleryNameTemplate=null;
      for (      String xpath : xmlContent.getNames(locale)) {
        I_CmsXmlContentValue value=xmlContent.getValue(xpath,locale);
        if (value.getContentDefinition().getContentHandler().isSearchable(value)) {
          String extracted=value.getPlainText(cms);
          if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
            content.append(extracted);
            content.append('\n');
          }
        }
        List<String> mappings=xmlContent.getHandler().getMappings(value.getPath());
        if (mappings.size() > 0) {
          for (          String mapping : mappings) {
            if (mapping.startsWith(I_CmsXmlContentHandler.MAPTO_PROPERTY)) {
              String propertyName=mapping.substring(mapping.lastIndexOf(':') + 1);
              if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propertyName) || CmsPropertyDefinition.PROPERTY_DESCRIPTION.equals(propertyName)) {
                String extracted=value.getPlainText(cms);
                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
                  String fieldName=null;
                  if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propertyName)) {
                    hasTitleMapping=true;
                    fieldName=CmsSearchField.FIELD_TITLE_UNSTORED;
                  }
 else {
                    fieldName=CmsSearchField.FIELD_DESCRIPTION;
                  }
                  putMappingValue(xmlContent,fieldName,locale,items,extracted);
                }
              }
            }
 else             if (mapping.equals(MAPPING_GALLERY_NAME)) {
              galleryNameTemplate=value.getPlainText(cms);
              LOG.info("Found gallery name template for " + resource.getRootPath() + ":"+ galleryNameTemplate);
            }
          }
        }
      }
      if (galleryNameTemplate == null) {
        Set<String> xpaths=Sets.newHashSet();
        collectSchemaXpathsForSimpleValues(cms,xmlContent.getContentDefinition(),"",xpaths);
        for (        String xpath : xpaths) {
          List<String> mappings=xmlContent.getHandler().getMappings(CmsXmlUtils.createXpath(xpath,1));
          for (          String mapping : mappings) {
            if (mapping.equals(MAPPING_GALLERY_NAME)) {
              galleryNameTemplate=xmlContent.getHandler().getDefault(cms,xmlContent.getFile(),null,xpath,locale);
              LOG.info("Using default value for gallery name template in " + resource.getRootPath() + ": "+ galleryNameTemplate);
              break;
            }
          }
        }
      }
      if (!hasTitleMapping) {
        String title=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue();
        putMappingValue(xmlContent,CmsSearchField.FIELD_TITLE_UNSTORED,locale,items,title);
      }
      if (galleryNameTemplate != null) {
        CmsGalleryNameMacroResolver macroResolver=new CmsGalleryNameMacroResolver(cms,xmlContent,locale);
        String galleryName=macroResolver.resolveMacros(galleryNameTemplate);
        LOG.info("Using gallery name mapping '" + galleryNameTemplate + "' for '"+ resource.getRootPath()+ "' in locale "+ locale+ ", resulting in gallery name '"+ galleryName+ "'");
        putMappingValue(xmlContent,CmsSearchField.FIELD_TITLE_UNSTORED,locale,items,galleryName);
      }
      if (content.length() > 0) {
        items.put(CmsSearchFieldConfiguration.getLocaleExtendedName(CmsSearchField.FIELD_CONTENT,locale),content.toString());
      }
      items.put(CmsSearchField.FIELD_RESOURCE_LOCALES,CmsStringUtil.listAsString(getLocalesToStore(xmlContent)," "));
    }
    return new CmsExtractionResult(null,items);
  }
 catch (  Exception e) {
    throw new CmsIndexException(Messages.get().container(Messages.ERR_TEXT_EXTRACTION_1,resource.getRootPath()),e);
  }
}
