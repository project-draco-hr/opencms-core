{
  CmsSetupTestResult testResult=new CmsSetupTestResult(this);
  boolean ok=true;
  Throwable ex=null;
  try {
    RenderSettings settings=new RenderSettings(Simapi.RENDER_QUALITY);
    settings.setCompressionQuality(0.85f);
    Simapi simapi=new Simapi(settings);
    ImageIO.scanForPlugins();
    Iterator<ImageReader> pngReaders=ImageIO.getImageReadersByFormatName(Simapi.TYPE_PNG);
    if (!pngReaders.hasNext()) {
      throw (new Exception("No Java ImageIO readers for the PNG format are available."));
    }
    Iterator<ImageWriter> pngWriters=ImageIO.getImageWritersByFormatName(Simapi.TYPE_PNG);
    if (!pngWriters.hasNext()) {
      throw (new Exception("No Java ImageIO writers for the PNG format are available."));
    }
    String basePath=setupBean.getWebAppRfsPath();
    if (!basePath.endsWith(File.separator)) {
      basePath+=File.separator;
    }
    basePath+="setup" + File.separator + "resources"+ File.separator;
    BufferedImage img1=Simapi.read(basePath + "test1.png");
    BufferedImage img3=simapi.applyFilter(img1,new RotateFilter(ImageMath.PI));
    simapi.write(img3,basePath + "test3.png",Simapi.TYPE_PNG);
    BufferedImage img2=Simapi.read(basePath + "test2.png");
    ok=Arrays.equals(simapi.getBytes(img2,Simapi.TYPE_PNG),simapi.getBytes(img3,Simapi.TYPE_PNG));
  }
 catch (  Throwable e) {
    ok=false;
    ex=e;
  }
  if (ok) {
    testResult.setResult(RESULT_PASSED);
    testResult.setGreen();
  }
 else {
    testResult.setYellow();
    if (ex != null) {
      testResult.setResult(RESULT_FAILED);
      testResult.setHelp(ex.toString());
      testResult.setInfo("<p><code>-Djava.awt.headless=true</code> JVM parameter or X-Server may be missing.<br>" + "<b>You can continue the setup, but image processing will be disabled.</b></p>");
    }
 else {
      testResult.setResult(RESULT_WARNING);
      testResult.setHelp("Image processing works but result does not exactly match.");
      StringBuffer info=new StringBuffer();
      info.append("<p>Please check the following images for visible differences:</p>");
      info.append("<table width='100%'>");
      info.append("<tr><th>Expected</th><th>Result</th></tr>");
      info.append("<tr><td align='center' width='50%'><img src='resources/test2.png'></td>");
      info.append("<td align='center' width='50%'><img src='resources/test3.png'></td></table>");
      info.append("<p><b>You can continue the setup, but image processing may not always work as expected.</b></p>");
      testResult.setInfo(info.toString());
    }
  }
  return testResult;
}
