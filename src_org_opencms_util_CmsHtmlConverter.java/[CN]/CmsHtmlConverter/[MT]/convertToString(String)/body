{
  Map<String,List<String>> converters=new HashMap<String,List<String>>();
  for (Iterator<String> i=getModes().iterator(); i.hasNext(); ) {
    String mode=i.next();
    String converterClass=OpenCms.getResourceManager().getHtmlConverter(mode);
    List<String> modes=new ArrayList<String>();
    if (converters.containsKey(converterClass)) {
      modes=converters.get(converterClass);
    }
    modes.add(mode);
    converters.put(converterClass,modes);
  }
  for (Iterator<Entry<String,List<String>>> i=converters.entrySet().iterator(); i.hasNext(); ) {
    Entry<String,List<String>> entry=i.next();
    String className=entry.getKey();
    List<String> modes=entry.getValue();
    try {
      I_CmsHtmlConverter converter=(I_CmsHtmlConverter)Class.forName(className).newInstance();
      converter.init(getEncoding(),modes);
      htmlInput=converter.convertToString(htmlInput);
    }
 catch (    ClassNotFoundException e) {
      LOG.error(org.opencms.loader.Messages.get().getBundle().key(org.opencms.loader.Messages.LOG_HTML_CONVERTER_CLASS_NOT_FOUND_1,className),e);
    }
catch (    IllegalAccessException e) {
      LOG.error(org.opencms.loader.Messages.get().getBundle().key(org.opencms.loader.Messages.LOG_HTML_CONVERTER_CLASS_NOT_FOUND_1,className),e);
    }
catch (    InstantiationException e) {
      LOG.error(org.opencms.loader.Messages.get().getBundle().key(org.opencms.loader.Messages.LOG_HTML_CONVERTER_CLASS_NOT_FOUND_1,className),e);
    }
  }
  return htmlInput;
}
