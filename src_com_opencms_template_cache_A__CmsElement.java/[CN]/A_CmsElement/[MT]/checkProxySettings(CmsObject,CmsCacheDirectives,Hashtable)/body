{
  if (!(m_cacheDirectives.userSetProxyPrivate() && m_cacheDirectives.userSetProxyPublic())) {
    boolean proxyPublic=false;
    boolean proxyPrivate=false;
    boolean export=false;
    if (m_templateName == null) {
      proxyPublic=true;
      proxyPrivate=true;
      export=true;
    }
 else {
      try {
        if (m_cacheDirectives.isInternalCacheable() && (!m_cacheDirectives.isUserPartOfKey())) {
          CmsResource templ=cms.readFileHeader(m_templateName);
          int accessflags=templ.getAccessFlags();
          if (!((accessflags & I_CmsConstants.C_ACCESS_INTERNAL_READ) > 0)) {
            proxyPrivate=true;
            if (m_readAccessGroup == null || "".equals(m_readAccessGroup) || (I_CmsConstants.C_GROUP_GUEST).equals(m_readAccessGroup)) {
              proxyPublic=true;
              if ((!m_cacheDirectives.isParameterPartOfKey()) && (!m_cacheDirectives.isTimeCritical())) {
                export=true;
              }
            }
          }
        }
      }
 catch (      Exception e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_ELEMENTCACHE,toString() + " could not find out if the element is proxy cacheable. " + e.getMessage());
        }
      }
    }
    if (!m_cacheDirectives.userSetProxyPrivate()) {
      ((CmsCacheDirectives)m_cacheDirectives).setProxyPrivateCacheable(proxyPrivate);
    }
    if (!m_cacheDirectives.userSetProxyPublic()) {
      ((CmsCacheDirectives)m_cacheDirectives).setProxyPublicCacheable(proxyPublic);
    }
    if (!m_cacheDirectives.userSetExport()) {
      ((CmsCacheDirectives)m_cacheDirectives).setExport(export);
    }
  }
  if (cms.getMode() == I_CmsConstants.C_MODUS_EXPORT && m_templateName != null) {
    cms.getRequestContext().addDependency(cms.getRequestContext().addSiteRoot(m_templateName));
  }
  proxySettings.merge(m_cacheDirectives);
  Enumeration elementNames=m_elementDefinitions.getAllElementNames();
  while (elementNames.hasMoreElements()) {
    String name=(String)elementNames.nextElement();
    CmsElementDefinition currentDef=m_elementDefinitions.get(name);
    A_CmsElement currentEle=CmsXmlTemplateLoader.getElementCache(cms).getElementLocator().get(cms,new CmsElementDescriptor(currentDef.getClassName(),currentDef.getTemplateName()),parameters);
    currentEle.checkProxySettings(cms,proxySettings,parameters);
  }
}
