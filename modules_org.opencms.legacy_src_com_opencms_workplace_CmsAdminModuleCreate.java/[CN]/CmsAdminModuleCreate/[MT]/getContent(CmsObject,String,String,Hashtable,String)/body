{
  if (OpenCms.getLog(this).isDebugEnabled() && C_DEBUG) {
    OpenCms.getLog(this).debug("Getting content of element " + ((elementName == null) ? "<root>" : elementName));
    OpenCms.getLog(this).debug("Template file is: " + templateFile);
    OpenCms.getLog(this).debug("Selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlTemplateFile templateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  I_CmsSession session=CmsXmlTemplateLoader.getSession(cms.getRequestContext(),true);
  String step=(String)parameters.get(C_STEP);
  SimpleDateFormat dateFormat=new java.text.SimpleDateFormat("dd.MM.yyyy");
  if ((step == null) || "".equals(step)) {
    templateDocument.setData(C_PACKETNAME,"");
    templateDocument.setData(C_VERSION,"1");
    templateDocument.setData(C_MODULENAME,"");
    templateDocument.setData(C_DESCRIPTION,"");
    templateDocument.setData(C_VIEW,"");
    templateDocument.setData(C_ADMINPOINT,"");
    templateDocument.setData(C_MAINTENANCE,"");
    templateDocument.setData(C_PUBLISHCLASS,"");
    templateDocument.setData(C_AUTHOR,"");
    templateDocument.setData(C_EMAIL,"");
    templateDocument.setData(C_MODULE_TYPE,"checked");
    templateDocument.setData(C_EXPORTCLASSES,"checked");
    templateDocument.setData(C_EXPORTLIB,"checked");
    templateDocument.setData(C_DATE,dateFormat.format(new Date()));
  }
 else {
    if ("OK".equals(step) || "Ok".equals(step)) {
      String modulename=(String)parameters.get(C_PACKETNAME);
      String nicename=(String)parameters.get(C_MODULENAME);
      String version=(String)parameters.get(C_VERSION);
      String description=(String)parameters.get(C_DESCRIPTION);
      String maintenance=(String)parameters.get(C_MAINTENANCE);
      String publishclass=(String)parameters.get(C_PUBLISHCLASS);
      String author=(String)parameters.get(C_AUTHOR);
      String email=(String)parameters.get(C_EMAIL);
      String createDate=(String)parameters.get(C_DATE);
      String moduleType=(String)parameters.get(C_MODULE_TYPE);
      String exportClasses=(String)parameters.get(C_EXPORTCLASSES);
      String exportLib=(String)parameters.get(C_EXPORTLIB);
      boolean mustExportClasses=((exportClasses != null) && exportClasses.equals("checked"));
      boolean mustExportLib=((exportLib != null) && exportLib.equals("checked"));
      boolean moduleExists=OpenCms.getModuleManager().hasModule(modulename);
      CmsModuleVersion moduleVersion;
      try {
        moduleVersion=new CmsModuleVersion(version);
      }
 catch (      IllegalArgumentException e) {
        moduleVersion=null;
      }
      if ((!CmsStringUtil.isValidJavaClassName(modulename)) || moduleExists || (moduleVersion == null)) {
        Hashtable sessionData=new Hashtable();
        sessionData.put(C_MODULENAME,getStringValue(nicename));
        sessionData.put(C_VERSION,getStringValue(version));
        sessionData.put(C_DESCRIPTION,getStringValue(description));
        sessionData.put(C_VIEW,"");
        sessionData.put(C_ADMINPOINT,"");
        sessionData.put(C_MAINTENANCE,getStringValue(maintenance));
        sessionData.put(C_PUBLISHCLASS,getStringValue(publishclass));
        sessionData.put(C_AUTHOR,getStringValue(author));
        sessionData.put(C_EMAIL,getStringValue(email));
        sessionData.put(C_DATE,getStringValue(createDate));
        sessionData.put(C_MODULE_TYPE,getStringValue(moduleType));
        session.putValue(C_MODULE_SESSION_DATA,sessionData);
        if (moduleExists) {
          templateSelector="errorexists";
        }
 else {
          templateSelector="errornoname";
        }
      }
 else {
        tryToCreateFolder(cms,C_VFS_PATH_SYSTEM,"modules");
        try {
          cms.createResource(C_VFS_PATH_MODULES + modulename,CmsResourceTypeFolder.C_RESOURCE_TYPE_ID);
        }
 catch (        CmsException e) {
          if (!(e instanceof CmsVfsResourceAlreadyExistsException)) {
            templateDocument.setData("details",CmsException.getStackTraceAsString(e));
            return startProcessing(cms,templateDocument,elementName,parameters,"errorProject");
          }
 else {
            try {
              cms.readFolder(C_VFS_PATH_MODULES + modulename + "/");
            }
 catch (            CmsException ex) {
              templateDocument.setData("details","Sorry, you have to publish this Project and create a new one.\n" + CmsException.getStackTraceAsString(e));
              return startProcessing(cms,templateDocument,elementName,parameters,"errorProject");
            }
          }
        }
        long createDateLong=0;
        try {
          createDateLong=dateFormat.parse(createDate).getTime();
        }
 catch (        Exception exc) {
          createDateLong=(new Date()).getTime();
        }
        String modulePath=C_VFS_PATH_MODULES + modulename + "/";
        List moduleResources=new ArrayList();
        moduleResources.add(modulePath);
        List moduleExportPoints=new ArrayList();
        if (mustExportClasses) {
          CmsExportPoint exportPoint=new CmsExportPoint(I_CmsWpConstants.C_VFS_PATH_MODULES + modulename + "/classes/","WEB-INF/classes/");
          moduleExportPoints.add(exportPoint);
          tryToCreateFolder(cms,modulePath,"classes");
          Vector cFolders=new Vector();
          String workString=modulename;
          while (workString.lastIndexOf('.') > -1) {
            cFolders.addElement(workString.substring(workString.lastIndexOf('.') + 1));
            workString=workString.substring(0,workString.lastIndexOf('.'));
          }
          tryToCreateFolder(cms,modulePath + "classes/",workString);
          workString=modulePath + "classes/" + workString+ "/";
          for (int i=cFolders.size() - 1; i >= 0; i--) {
            tryToCreateFolder(cms,workString,(String)cFolders.elementAt(i));
            workString=workString + (String)cFolders.elementAt(i) + "/";
          }
        }
        if (mustExportLib) {
          CmsExportPoint exportPoint=new CmsExportPoint(I_CmsWpConstants.C_VFS_PATH_MODULES + modulename + "/lib/","WEB-INF/lib/");
          moduleExportPoints.add(exportPoint);
          tryToCreateFolder(cms,modulePath,"lib");
        }
        List moduleDepedencies=new ArrayList();
        Map moduleParameters=new HashMap();
        cms.writeProperty(modulePath,C_PROPERTY_EXPORT,"false");
        tryToCreateFolder(cms,modulePath,I_CmsWpConstants.C_VFS_DIR_TEMPLATES);
        tryToCreateFolder(cms,modulePath,I_CmsWpConstants.C_VFS_DIR_DEFAULTBODIES);
        CmsModule updatedModule=new CmsModule(modulename,nicename,publishclass,description,moduleVersion,author,email,createDateLong,null,0L,moduleDepedencies,moduleExportPoints,moduleResources,moduleParameters);
        OpenCms.getModuleManager().addModule(cms,updatedModule);
        try {
          CmsXmlTemplateLoader.getResponse(cms.getRequestContext()).sendCmsRedirect(getConfigFile(cms).getWorkplaceAdministrationPath() + "module/index.html");
        }
 catch (        Exception e) {
          throw new CmsException("Redirect fails :system/workplace/administration/module/index.html",CmsException.C_UNKNOWN_EXCEPTION,e);
        }
        return null;
      }
    }
 else {
      if ("fromerrorpage".equals(step)) {
        Hashtable sessionData=(Hashtable)session.getValue(C_MODULE_SESSION_DATA);
        session.removeValue(C_MODULE_SESSION_DATA);
        templateDocument.setData(C_PACKETNAME,"");
        templateDocument.setData(C_VERSION,(String)sessionData.get(C_VERSION));
        templateDocument.setData(C_MODULENAME,(String)sessionData.get(C_MODULENAME));
        templateDocument.setData(C_DESCRIPTION,(String)sessionData.get(C_DESCRIPTION));
        templateDocument.setData(C_VIEW,"");
        templateDocument.setData(C_ADMINPOINT,"");
        templateDocument.setData(C_MAINTENANCE,(String)sessionData.get(C_MAINTENANCE));
        templateDocument.setData(C_PUBLISHCLASS,(String)sessionData.get(C_PUBLISHCLASS));
        templateDocument.setData(C_AUTHOR,(String)sessionData.get(C_AUTHOR));
        templateDocument.setData(C_EMAIL,(String)sessionData.get(C_EMAIL));
        templateDocument.setData(C_DATE,(String)sessionData.get(C_DATE));
        templateDocument.setData(C_MODULE_TYPE,(String)sessionData.get(C_MODULE_TYPE));
        templateSelector="";
      }
    }
  }
  return startProcessing(cms,templateDocument,elementName,parameters,templateSelector);
}
