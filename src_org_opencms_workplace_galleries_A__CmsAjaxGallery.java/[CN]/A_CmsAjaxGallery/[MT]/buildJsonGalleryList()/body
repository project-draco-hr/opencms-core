{
  String lastUsed=getSettings().getLastUsedGallery(getGalleryTypeId());
  if (CmsStringUtil.isEmpty(lastUsed)) {
    String startGallerySetting=getSettings().getUserSettings().getStartGallery(getGalleryTypeName(),getCms());
    if (startGallerySetting != null) {
      if (startGallerySetting.equals(CmsPreferences.INPUT_DEFAULT)) {
        String preselectedValue=OpenCms.getWorkplaceManager().getDefaultUserSettings().getStartGallery(getGalleryTypeName());
        if (preselectedValue != null) {
          startGallerySetting=preselectedValue;
        }
      }
      String sitePath=getCms().getRequestContext().removeSiteRoot(startGallerySetting);
      if (getCms().existsResource(sitePath)) {
        lastUsed=sitePath;
      }
    }
  }
  List galleries=new ArrayList();
  Iterator i=getGalleries().iterator();
  boolean isFirst=true;
  while (i.hasNext()) {
    CmsResource res=(CmsResource)i.next();
    String path=getCms().getSitePath(res);
    JSONObject jsonObj=new JSONObject();
    String title="";
    try {
      title=getCms().readPropertyObject(path,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue("");
    }
 catch (    CmsException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
    try {
      jsonObj.put("title",title);
      jsonObj.put("path",path);
      boolean active=false;
      if ((CmsStringUtil.isEmpty(lastUsed) && isFirst) || path.equals(lastUsed)) {
        active=true;
      }
      jsonObj.put("active",active);
      galleries.add(jsonObj);
    }
 catch (    JSONException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
    isFirst=false;
  }
  JSONArray jsonArr=new JSONArray(galleries);
  JspWriter out=getJsp().getJspContext().getOut();
  try {
    out.print(jsonArr.toString());
  }
 catch (  IOException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
}
