{
  Document document=new Document();
  CmsResource res=(CmsResource)resource.getData();
  String path=cms.getRequestContext().removeSiteRoot(resource.getRootPath());
  String text=null;
  try {
    I_CmsExtractionResult content=extractContent(cms,resource,language);
    text=mergeMetaInfo(content);
    content.release();
  }
 catch (  Exception e) {
    LOG.error(Messages.get().getBundle().key(Messages.ERR_TEXT_EXTRACTION_1,resource.getRootPath()),e);
  }
  if (text != null) {
    document.add(new Field(I_CmsDocumentFactory.DOC_CONTENT,text,Field.Store.YES,Field.Index.TOKENIZED));
  }
  StringBuffer meta=new StringBuffer(512);
  String value;
  Field field;
  value=cms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue();
  if (CmsStringUtil.isNotEmpty(value)) {
    value=value.trim();
    if (value.length() > 0) {
      field=new Field(I_CmsDocumentFactory.DOC_TITLE_KEY,value,Field.Store.YES,Field.Index.UN_TOKENIZED);
      field.setBoost(0);
      document.add(field);
      document.add(new Field(I_CmsDocumentFactory.DOC_TITLE_INDEXED,value,Field.Store.NO,Field.Index.TOKENIZED));
      meta.append(value);
      meta.append(" ");
    }
  }
  value=cms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_KEYWORDS,false).getValue();
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(value)) {
    document.add(new Field(I_CmsDocumentFactory.DOC_KEYWORDS,value,Field.Store.YES,Field.Index.TOKENIZED));
    meta.append(value);
    meta.append(" ");
  }
  value=cms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue();
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(value)) {
    document.add(new Field(I_CmsDocumentFactory.DOC_DESCRIPTION,value,Field.Store.YES,Field.Index.TOKENIZED));
    meta.append(value);
    meta.append(" ");
  }
  String metaInf=meta.toString();
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(metaInf)) {
    document.add(new Field(I_CmsDocumentFactory.DOC_META,metaInf,Field.Store.NO,Field.Index.TOKENIZED));
  }
  value=cms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_SEARCH_CATEGORY,true).getValue();
  if (CmsStringUtil.isNotEmpty(value)) {
    value=value.trim().toLowerCase();
    if (value.length() > 0) {
      field=new Field(I_CmsDocumentFactory.DOC_CATEGORY,value,Field.Store.YES,Field.Index.UN_TOKENIZED);
      field.setBoost(0);
      document.add(field);
    }
  }
 else {
    field=new Field(I_CmsDocumentFactory.DOC_CATEGORY,CmsSearchCategoryCollector.UNKNOWN_CATEGORY,Field.Store.YES,Field.Index.UN_TOKENIZED);
    document.add(field);
  }
  String rootPath=CmsSearchIndex.rootPathRewrite(resource.getRootPath());
  field=new Field(I_CmsDocumentFactory.DOC_ROOT,rootPath,Field.Store.YES,Field.Index.TOKENIZED);
  field.setBoost(0);
  document.add(field);
  document.add(new Field(I_CmsDocumentFactory.DOC_PATH,resource.getRootPath(),Field.Store.YES,Field.Index.UN_TOKENIZED));
  field=new Field(I_CmsDocumentFactory.DOC_DATE_CREATED,DateTools.dateToString(new Date(res.getDateCreated()),DateTools.Resolution.MILLISECOND),Field.Store.YES,Field.Index.UN_TOKENIZED);
  field.setBoost(0);
  document.add(field);
  field=new Field(I_CmsDocumentFactory.DOC_DATE_LASTMODIFIED,DateTools.dateToString(new Date(res.getDateLastModified()),DateTools.Resolution.MILLISECOND),Field.Store.YES,Field.Index.UN_TOKENIZED);
  field.setBoost(0);
  document.add(field);
  document.add(new Field(I_CmsDocumentFactory.DOC_TYPE,VFS_DOCUMENT_KEY_PREFIX,Field.Store.YES,Field.Index.NO));
  float boost=1.0f;
  value=cms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_SEARCH_PRIORITY,true).getValue();
  if (value != null) {
    value=value.trim().toLowerCase();
    if (value.equals(I_CmsDocumentFactory.SEARCH_PRIORITY_MAX_VALUE)) {
      boost=2.0f;
    }
 else     if (value.equals(I_CmsDocumentFactory.SEARCH_PRIORITY_HIGH_VALUE)) {
      boost=1.5f;
    }
 else     if (value.equals(I_CmsDocumentFactory.SEARCH_PRIORITY_LOW_VALUE)) {
      boost=0.5f;
    }
  }
  document.setBoost(boost);
  return document;
}
