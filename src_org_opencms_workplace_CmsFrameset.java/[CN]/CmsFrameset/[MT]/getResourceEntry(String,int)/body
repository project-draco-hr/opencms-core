{
  StringBuffer result;
  int index=0;
  String myToken;
  int foundAt;
  result=new StringBuffer(1024);
  result.append("\nresource_id = ");
  result.append(id);
  result.append("\n");
  myToken="language_key(";
  index=0;
  foundAt=data.indexOf(myToken,index);
  while (foundAt != -1) {
    int endIndex=data.indexOf(")",foundAt);
    String langKey=data.substring(foundAt + 13,endIndex);
    langKey=key(langKey);
    result.append(data.substring(index,foundAt));
    result.append(langKey);
    index=endIndex + 1;
    foundAt=data.indexOf(myToken,index);
  }
  result.append(data.substring(index));
  data=result.toString();
  result=new StringBuffer(1024);
  myToken="rules_key(";
  index=0;
  foundAt=data.indexOf(myToken,index);
  while (foundAt != -1) {
    int endIndex=data.indexOf(")",foundAt);
    String rulesKey=data.substring(foundAt + 10,endIndex);
    result.append(data.substring(index,foundAt));
    int length=rulesKey.length();
    char c;
    for (int i=0; i < length; i++) {
      if ((c=rulesKey.charAt(i)) != ' ') {
        result.append(c);
      }
    }
    index=endIndex + 1;
    foundAt=data.indexOf(myToken,index);
  }
  result.append(data.substring(index));
  String str=result.toString();
  String jspWorkplaceUri=LinkSubstitution.getLinkSubstitution(getCms(),C_PATH_WORKPLACE);
  String xmlWorkplaceUri=LinkSubstitution.getLinkSubstitution(getCms(),CmsWorkplaceAction.C_PATH_XML_WORKPLACE);
  str=str.replaceAll("/JSPWORKPLACE/",jspWorkplaceUri);
  str=str.replaceAll("/XMLWORKPLACE/",xmlWorkplaceUri);
  return str;
}
