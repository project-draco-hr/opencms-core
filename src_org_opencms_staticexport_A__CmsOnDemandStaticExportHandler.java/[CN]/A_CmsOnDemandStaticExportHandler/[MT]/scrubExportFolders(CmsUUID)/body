{
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().key(Messages.LOG_SCRUBBING_EXPORT_FOLDERS_1,publishHistoryId));
  }
  Set scrubedFolders=new HashSet();
  Set scrubedFiles=new HashSet();
  CmsObject cms;
  try {
    cms=OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().key(Messages.LOG_INIT_FAILED_0),e);
    return;
  }
  List publishedResources;
  try {
    publishedResources=cms.readPublishedResources(publishHistoryId);
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().key(Messages.LOG_READING_CHANGED_RESOURCES_FAILED_1,publishHistoryId),e);
    return;
  }
  Iterator itPubRes=publishedResources.iterator();
  while (itPubRes.hasNext()) {
    CmsPublishedResource res=(CmsPublishedResource)itPubRes.next();
    if (res.isUnChanged() || !res.isVfsResource()) {
      continue;
    }
    String resPath=cms.getRequestContext().removeSiteRoot(res.getRootPath());
    List siblings=getSiblingsList(cms,resPath);
    Iterator itSibs=siblings.iterator();
    while (itSibs.hasNext()) {
      String vfsName=(String)itSibs.next();
      String rfsName=OpenCms.getStaticExportManager().getRfsName(cms,vfsName);
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().key(Messages.LOG_CHECKING_STATIC_EXPORT_2,vfsName,rfsName));
      }
      if (rfsName.startsWith(OpenCms.getStaticExportManager().getRfsPrefix()) && (!scrubedFiles.contains(rfsName)) && (!scrubedFolders.contains(CmsResource.getFolderPath(rfsName)))) {
        if (res.isFolder()) {
          if (res.isDeleted()) {
            String exportFolderName=CmsFileUtil.normalizePath(OpenCms.getStaticExportManager().getExportPath() + rfsName.substring(OpenCms.getStaticExportManager().getRfsPrefix().length()));
            try {
              File exportFolder=new File(exportFolderName);
              if (exportFolder.exists() && exportFolder.canWrite()) {
                CmsFileUtil.purgeDirectory(exportFolder);
                if (LOG.isInfoEnabled()) {
                  LOG.info(Messages.get().key(Messages.LOG_FOLDER_DELETED_1,exportFolderName));
                }
                scrubedFolders.add(rfsName);
                continue;
              }
            }
 catch (            Throwable t) {
              if (LOG.isWarnEnabled()) {
                LOG.warn(Messages.get().key(Messages.LOG_FOLDER_DELETION_FAILED_2,vfsName,exportFolderName));
              }
            }
          }
          rfsName+=CmsStaticExportManager.C_EXPORT_DEFAULT_FILE;
          if (LOG.isDebugEnabled()) {
            LOG.debug(Messages.get().key(Messages.LOG_FOLDER_1,rfsName));
          }
        }
        String rfsExportFileName=CmsFileUtil.normalizePath(OpenCms.getStaticExportManager().getExportPath() + rfsName.substring(OpenCms.getStaticExportManager().getRfsPrefix().length()));
        purgeFile(rfsExportFileName);
        scrubedFiles.add(rfsName);
        if (!res.isFolder()) {
          List fileList=getRelatedFilesToPurge(rfsExportFileName);
          Iterator iter=fileList.iterator();
          while (iter.hasNext()) {
            File file=(File)iter.next();
            purgeFile(file.getAbsolutePath());
            rfsName=CmsFileUtil.normalizePath(OpenCms.getStaticExportManager().getRfsPrefix() + "/" + file.getAbsolutePath().substring(OpenCms.getStaticExportManager().getExportPath().length()));
            rfsName=CmsStringUtil.substitute(rfsName,new String(new char[]{File.separatorChar}),"/");
            scrubedFiles.add(rfsName);
          }
        }
      }
    }
  }
}
