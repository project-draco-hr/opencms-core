{
  super.init(config);
  String base=config.getInitParameter("opencms.home");
  System.err.println("BASE: " + config.getServletContext().getRealPath("/"));
  System.err.println("BASE2: " + System.getProperty("user.dir"));
  if (base == null || "".equals(base)) {
    System.err.println("No OpenCms home folder given. Trying to guess...");
    base=CmsMain.searchBaseFolder(config.getServletContext().getRealPath("/"));
    if (base == null || "".equals(base)) {
      throw new ServletException("OpenCms base folder could not be guessed. Please define init parameter \"opencms.home\" in servlet engine configuration.");
    }
  }
  base=CmsBase.setBasePath(base);
  try {
    ExtendedProperties p=new ExtendedProperties(CmsBase.getPropertiesPath(true));
    String logFile=(String)p.get("log.file");
    if (logFile != null) {
      p.put("log.file",CmsBase.getAbsolutePath(logFile));
    }
    m_configurations=new Configurations(p);
  }
 catch (  Exception e) {
    throw new ServletException(e.getMessage() + ".  Properties file is: " + CmsBase.getBasePath()+ "opencms.properties");
  }
  A_OpenCms.initializeServletLogging(m_configurations);
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] Server Info: " + config.getServletContext().getServerInfo());
  }
  int count=0;
  String redirect;
  String redirectlocation;
  while ((redirect=(String)m_configurations.getString(C_PROPERTY_REDIRECT + "." + count)) != null) {
    redirectlocation=(String)m_configurations.getString(C_PROPERTY_REDIRECTLOCATION + "." + count);
    redirectlocation=Utils.replace(redirectlocation,C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
    m_redirect.addElement(redirect);
    m_redirectlocation.addElement(redirectlocation);
    count++;
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] redirect-rule: " + redirect + " -> "+ redirectlocation);
    }
  }
  m_clusterurl=(String)m_configurations.getString(C_CLUSTERURL,"");
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] Clusterurl: " + m_clusterurl);
  }
  try {
    m_opencms=new OpenCms(m_configurations);
  }
 catch (  Exception exc) {
    throw new ServletException(Utils.getStackTrace(exc));
  }
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing session storage");
  }
  m_sessionStorage=new CmsCoreSession();
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing... DONE");
  }
  source.org.apache.java.util.Configurations openCmsConfig=m_opencms.getConfiguration();
  this.m_UseBasicAuthentication=openCmsConfig.getBoolean("auth.basic",true);
  this.m_AuthenticationFormURI=openCmsConfig.getString("auth.form_uri","/system/workplace/action/authenticate.html");
}
