{
  super.init(config);
  A_OpenCms.initVersion(this);
  String base=config.getInitParameter("opencms.home");
  if (DEBUG)   System.err.println("BASE: " + config.getServletContext().getRealPath("/"));
  if (DEBUG)   System.err.println("BASE2: " + System.getProperty("user.dir"));
  if (base == null || "".equals(base)) {
    if (DEBUG)     System.err.println("No OpenCms home folder given. Trying to guess...");
    base=CmsMain.searchBaseFolder(config.getServletContext().getRealPath("/"));
    if (base == null || "".equals(base)) {
      throwInitException(new ServletException(C_ERRORMSG + "OpenCms base folder could not be guessed. Please define init parameter \"opencms.home\" in servlet engine configuration.\n\n"));
    }
  }
  base=CmsBase.setBasePath(base);
  String logFile;
  ExtendedProperties extendedProperties=null;
  try {
    extendedProperties=new ExtendedProperties(CmsBase.getPropertiesPath(true));
  }
 catch (  Exception e) {
    throwInitException(new ServletException(C_ERRORMSG + "Trouble reading property file " + CmsBase.getPropertiesPath(true)+ ".\n\n",e));
  }
  logFile=(String)extendedProperties.get("log.file");
  if (logFile != null) {
    extendedProperties.put("log.file",CmsBase.getAbsolutePath(logFile));
  }
  m_configurations=new Configurations(extendedProperties);
  A_OpenCms.initializeServletLogging(m_configurations);
  if (C_LOGGING && A_OpenCms.isLogging(C_OPENCMS_INIT)) {
    A_OpenCms.log(C_OPENCMS_INIT,".");
    A_OpenCms.log(C_OPENCMS_INIT,".");
    A_OpenCms.log(C_OPENCMS_INIT,".");
    A_OpenCms.log(C_OPENCMS_INIT,".");
    printCopyrightInformation();
    A_OpenCms.log(C_OPENCMS_INIT,".                      ...............................................................");
    A_OpenCms.log(C_OPENCMS_INIT,". Startup time         : " + (new Date(System.currentTimeMillis())));
    A_OpenCms.log(C_OPENCMS_INIT,". Servlet container    : " + config.getServletContext().getServerInfo());
    A_OpenCms.log(C_OPENCMS_INIT,". OpenCms version      : " + A_OpenCms.getVersionName());
    A_OpenCms.log(C_OPENCMS_INIT,". OpenCms base path    : " + CmsBase.getBasePath());
    A_OpenCms.log(C_OPENCMS_INIT,". OpenCms property file: " + CmsBase.getPropertiesPath(true));
    A_OpenCms.log(C_OPENCMS_INIT,". OpenCms logfile      : " + CmsBase.getAbsolutePath(logFile));
  }
  try {
    m_opencms=new OpenCms(m_configurations);
  }
 catch (  CmsException cmsex) {
    if (cmsex.getType() == CmsException.C_RB_INIT_ERROR) {
      throwInitException(new ServletException(C_ERRORMSG + "Could not connect to the database. Is the database up and running?\n\n",cmsex));
    }
  }
catch (  Exception exc) {
    throwInitException(new ServletException(C_ERRORMSG + "Trouble creating the com.opencms.core.CmsObject. Please check the root cause for more information.\n\n",exc));
  }
  m_sessionStorage=new CmsCoreSession();
  if (C_LOGGING && A_OpenCms.isLogging(C_OPENCMS_INIT))   A_OpenCms.log(C_OPENCMS_INIT,". Session storage      : initialized");
  m_useBasicAuthentication=m_configurations.getBoolean("auth.basic",true);
  m_authenticationFormURI=m_configurations.getString("auth.form_uri","/system/workplace/action/authenticate.html");
}
