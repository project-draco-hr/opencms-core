{
  super.init(config);
  try {
    ExtendedProperties p=new ExtendedProperties(CmsBase.getPropertiesPath(true));
    String logFile=(String)p.get("log.file");
    if (logFile != null) {
      p.put("log.file",CmsBase.getAbsolutePath(logFile));
    }
    m_configurations=new Configurations(p);
  }
 catch (  Exception e) {
    throw new ServletException(e.getMessage() + ".  Properties file is: " + CmsBase.getBasePath()+ "opencms.properties");
  }
  A_OpenCms.initializeServletLogging(m_configurations);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] logging started");
  }
  int count=0;
  String redirect;
  String redirectlocation;
  while ((redirect=(String)m_configurations.getString(C_PROPERTY_REDIRECT + "." + count)) != null) {
    redirectlocation=(String)m_configurations.getString(C_PROPERTY_REDIRECTLOCATION + "." + count);
    m_redirect.addElement(redirect);
    m_redirectlocation.addElement(redirectlocation);
    count++;
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] redirect-rule: " + redirect + " -> "+ redirectlocation);
    }
  }
  m_clusterurl=(String)m_configurations.getString(C_CLUSTERURL,"");
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] Clusterurl: " + m_clusterurl);
  }
  try {
    m_opencms=new OpenCms(m_configurations);
  }
 catch (  Exception exc) {
    throw new ServletException(exc.getMessage());
  }
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing session storage");
  }
  m_sessionStorage=new CmsCoreSession();
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing... DONE");
  }
  CmsObject cms=new CmsObject();
  try {
    m_opencms.initUser(cms,null,null,C_USER_GUEST,C_GROUP_GUEST,C_PROJECT_ONLINE_ID);
  }
 catch (  CmsException exc) {
    throw new ServletException("Error while initializing the cms-object for the classloader",exc);
  }
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing CmsClassLoader ");
  }
  Vector repositories=new Vector();
  String[] repositoriesFromConfigFile=null;
  String[] repositoriesFromRegistry=null;
  repositoriesFromConfigFile=cms.getConfigurations().getStringArray("repositories");
  for (int i=0; i < repositoriesFromConfigFile.length; i++) {
    repositories.addElement(repositoriesFromConfigFile[i]);
  }
  I_CmsRegistry reg=null;
  try {
    reg=cms.getRegistry();
  }
 catch (  CmsException e) {
    throw new ServletException(e.getMessage());
  }
  CmsClassLoader loader=(CmsClassLoader)(getClass().getClassLoader());
  if (reg != null) {
    repositoriesFromRegistry=reg.getRepositories();
    for (int i=0; i < repositoriesFromRegistry.length; i++) {
      try {
        cms.readFileHeader(repositoriesFromRegistry[i]);
        loader.addRepository(repositoriesFromRegistry[i],CmsClassLoader.C_REPOSITORY_VIRTUAL_FS);
      }
 catch (      CmsException e) {
      }
    }
  }
  loader.init(cms);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing CmsClassLoader... DONE");
  }
}
