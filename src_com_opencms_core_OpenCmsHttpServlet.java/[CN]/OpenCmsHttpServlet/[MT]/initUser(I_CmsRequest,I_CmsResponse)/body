{
  HttpSession session=null;
  String user=null;
  String group=null;
  Integer project=null;
  String loginParameter=null;
  HttpServletRequest req=(HttpServletRequest)cmsReq.getOriginalRequest();
  HttpServletResponse res=(HttpServletResponse)cmsRes.getOriginalResponse();
  CmsObject cms=new CmsObject();
  try {
    m_opencms.initUser(cms,cmsReq,cmsRes,C_USER_GUEST,C_GROUP_GUEST,C_PROJECT_ONLINE_ID,m_sessionStorage);
    loginParameter=cmsReq.getParameter("opencms");
    if (loginParameter != null) {
      if (req.getHeader("Authorization") == null) {
        if (loginParameter.equals("login")) {
          requestAuthorization(req,res);
        }
      }
    }
    loginParameter=cmsReq.getParameter("_clearcache");
    if (loginParameter != null) {
      cms.clearcache();
    }
    session=req.getSession(false);
    if ((session == null)) {
      String oldSessionId=req.getRequestedSessionId();
      if (oldSessionId != null) {
        Hashtable sessionData=null;
        try {
          sessionData=m_opencms.restoreSession(oldSessionId);
        }
 catch (        CmsException exc) {
          if (C_LOGGING && A_OpenCms.isLogging(C_OPENCMS_INFO)) {
            A_OpenCms.log(C_OPENCMS_INFO,"[OpenCmsServlet] cannot restore session: " + com.opencms.util.Utils.getStackTrace(exc));
          }
        }
        if (sessionData != null) {
          session=req.getSession(true);
          m_sessionStorage.putUser(session.getId(),sessionData);
          session.setAttribute(C_SESSION_DATA,sessionData.get(C_SESSION_DATA));
        }
      }
    }
    if (session != null) {
      user=m_sessionStorage.getUserName(session.getId());
      if (user != null) {
        group=m_sessionStorage.getCurrentGroup(session.getId());
        project=m_sessionStorage.getCurrentProject(session.getId());
        m_opencms.initUser(cms,cmsReq,cmsRes,user,group,project.intValue(),m_sessionStorage);
      }
    }
 else {
      String auth=req.getHeader("Authorization");
      if (auth != null) {
        if (auth.toUpperCase().startsWith("BASIC ")) {
          String userpassEncoded=auth.substring(6);
          sun.misc.BASE64Decoder dec=new sun.misc.BASE64Decoder();
          String userstr=new String(dec.decodeBuffer(userpassEncoded));
          String username=null;
          String password=null;
          StringTokenizer st=new StringTokenizer(userstr,":");
          if (st.hasMoreTokens()) {
            username=st.nextToken();
          }
          if (st.hasMoreTokens()) {
            password=st.nextToken();
          }
          try {
            try {
              user=cms.loginUser(username,password);
            }
 catch (            CmsException exc) {
              user=cms.loginWebUser(username,password);
            }
            session=req.getSession(true);
            OpenCmsServletNotify notify=new OpenCmsServletNotify(session.getId(),m_sessionStorage);
            session.setAttribute("NOTIFY",notify);
          }
 catch (          CmsException e) {
            if (e.getType() == CmsException.C_NO_ACCESS) {
              requestAuthorization(req,res);
            }
 else {
              throw e;
            }
          }
        }
      }
    }
  }
 catch (  CmsException e) {
    errorHandling(cms,cmsReq,cmsRes,e);
  }
  return cms;
}
