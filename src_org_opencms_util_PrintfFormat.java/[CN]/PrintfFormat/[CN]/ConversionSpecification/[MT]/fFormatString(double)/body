{
  char[] ca6, ca7;
  if (Double.isInfinite(x)) {
    if (x == Double.POSITIVE_INFINITY) {
      if (m_leadingSign) {
        ca6="+Inf".toCharArray();
      }
 else       if (m_leadingSpace) {
        ca6=" Inf".toCharArray();
      }
 else {
        ca6="Inf".toCharArray();
      }
    }
 else {
      ca6="-Inf".toCharArray();
    }
  }
 else   if (Double.isNaN(x)) {
    if (m_leadingSign) {
      ca6="+NaN".toCharArray();
    }
 else     if (m_leadingSpace) {
      ca6=" NaN".toCharArray();
    }
 else {
      ca6="NaN".toCharArray();
    }
  }
 else {
    ca6=fFormatDigits(x);
  }
  ca7=applyFloatPadding(ca6,false);
  return new String(ca7);
}
