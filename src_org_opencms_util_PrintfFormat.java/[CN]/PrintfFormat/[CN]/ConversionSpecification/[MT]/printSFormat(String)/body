{
  int nPrint=x.length();
  int width=m_fieldWidth;
  if (m_precisionSet && (nPrint > m_precision)) {
    nPrint=m_precision;
  }
  if (!m_fieldWidthSet) {
    width=nPrint;
  }
  int n=0;
  if (width > nPrint) {
    n+=width - nPrint;
  }
  if (nPrint >= x.length()) {
    n+=x.length();
  }
 else {
    n+=nPrint;
  }
  char[] ca=new char[n];
  int i=0;
  if (m_leftJustify) {
    if (nPrint >= x.length()) {
      char[] csx=x.toCharArray();
      for (i=0; i < x.length(); i++) {
        ca[i]=csx[i];
      }
    }
 else {
      char[] csx=x.substring(0,nPrint).toCharArray();
      for (i=0; i < nPrint; i++) {
        ca[i]=csx[i];
      }
    }
    for (int j=0; j < (width - nPrint); j++, i++) {
      ca[i]=' ';
    }
  }
 else {
    for (i=0; i < (width - nPrint); i++) {
      ca[i]=' ';
    }
    if (nPrint >= x.length()) {
      char[] csx=x.toCharArray();
      for (int j=0; j < x.length(); i++, j++) {
        ca[i]=csx[j];
      }
    }
 else {
      char[] csx=x.substring(0,nPrint).toCharArray();
      for (int j=0; j < nPrint; i++, j++) {
        ca[i]=csx[j];
      }
    }
  }
  return new String(ca);
}
