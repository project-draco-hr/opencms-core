{
  int nLeadingZeros=0;
  int nBlanks=0;
  if (sx.equals("0") && m_precisionSet && m_precision == 0) {
    sx="";
  }
  if (m_precisionSet) {
    nLeadingZeros=m_precision - sx.length();
  }
  if (m_alternateForm) {
    nLeadingZeros++;
  }
  if (nLeadingZeros < 0) {
    nLeadingZeros=0;
  }
  if (m_fieldWidthSet) {
    nBlanks=m_fieldWidth - nLeadingZeros - sx.length();
  }
  if (nBlanks < 0) {
    nBlanks=0;
  }
  int n=nLeadingZeros + sx.length() + nBlanks;
  char[] ca=new char[n];
  int i;
  if (m_leftJustify) {
    for (i=0; i < nLeadingZeros; i++) {
      ca[i]='0';
    }
    char[] csx=sx.toCharArray();
    for (int j=0; j < csx.length; j++, i++) {
      ca[i]=csx[j];
    }
    for (int j=0; j < nBlanks; j++, i++) {
      ca[i]=' ';
    }
  }
 else {
    if (m_leadingZeros) {
      for (i=0; i < nBlanks; i++) {
        ca[i]='0';
      }
    }
 else {
      for (i=0; i < nBlanks; i++) {
        ca[i]=' ';
      }
    }
    for (int j=0; j < nLeadingZeros; j++, i++) {
      ca[i]='0';
    }
    char[] csx=sx.toCharArray();
    for (int j=0; j < csx.length; j++, i++) {
      ca[i]=csx[j];
    }
  }
  return new String(ca);
}
