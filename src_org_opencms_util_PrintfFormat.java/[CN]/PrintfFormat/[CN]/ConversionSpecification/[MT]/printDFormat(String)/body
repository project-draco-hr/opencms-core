{
  int nLeadingZeros=0;
  int nBlanks=0, n=0;
  int i=0, jFirst=0;
  boolean neg=sx.charAt(0) == '-';
  if (sx.equals("0") && m_precisionSet && (m_precision == 0)) {
    sx="";
  }
  if (!neg) {
    if (m_precisionSet && (sx.length() < m_precision)) {
      nLeadingZeros=m_precision - sx.length();
    }
  }
 else {
    if (m_precisionSet && ((sx.length() - 1) < m_precision)) {
      nLeadingZeros=(m_precision - sx.length()) + 1;
    }
  }
  if (nLeadingZeros < 0) {
    nLeadingZeros=0;
  }
  if (m_fieldWidthSet) {
    nBlanks=m_fieldWidth - nLeadingZeros - sx.length();
    if (!neg && (m_leadingSign || m_leadingSpace)) {
      nBlanks--;
    }
  }
  if (nBlanks < 0) {
    nBlanks=0;
  }
  if (m_leadingSign) {
    n++;
  }
 else   if (m_leadingSpace) {
    n++;
  }
  n+=nBlanks;
  n+=nLeadingZeros;
  n+=sx.length();
  char[] ca=new char[n];
  if (m_leftJustify) {
    if (neg) {
      ca[i++]='-';
    }
 else     if (m_leadingSign) {
      ca[i++]='+';
    }
 else     if (m_leadingSpace) {
      ca[i++]=' ';
    }
    char[] csx=sx.toCharArray();
    jFirst=neg ? 1 : 0;
    for (int j=0; j < nLeadingZeros; i++, j++) {
      ca[i]='0';
    }
    for (int j=jFirst; j < csx.length; j++, i++) {
      ca[i]=csx[j];
    }
    for (int j=0; j < nBlanks; i++, j++) {
      ca[i]=' ';
    }
  }
 else {
    if (!m_leadingZeros) {
      for (i=0; i < nBlanks; i++) {
        ca[i]=' ';
      }
      if (neg) {
        ca[i++]='-';
      }
 else       if (m_leadingSign) {
        ca[i++]='+';
      }
 else       if (m_leadingSpace) {
        ca[i++]=' ';
      }
    }
 else {
      if (neg) {
        ca[i++]='-';
      }
 else       if (m_leadingSign) {
        ca[i++]='+';
      }
 else       if (m_leadingSpace) {
        ca[i++]=' ';
      }
      for (int j=0; j < nBlanks; j++, i++) {
        ca[i]='0';
      }
    }
    for (int j=0; j < nLeadingZeros; j++, i++) {
      ca[i]='0';
    }
    char[] csx=sx.toCharArray();
    jFirst=neg ? 1 : 0;
    for (int j=jFirst; j < csx.length; j++, i++) {
      ca[i]=csx[j];
    }
  }
  return new String(ca);
}
