{
  System.out.println(new Exception().getStackTrace()[0].toString());
  String query=readQuery(QUERY_GET_PROJECT_IDS);
  CmsSetupDBWrapper db=null;
  try {
    db=dbCon.executeSqlStatement(query,null);
    ResultSetMetaData metaData=db.getResultSet().getMetaData();
    int columnType=metaData.getColumnType(1);
    if (checkColumnTypeProjectId(columnType)) {
      if (!dbCon.hasTableOrColumn(TEMPORARY_TABLE_NAME,null)) {
        createTempTable(dbCon);
        String updateQuery=readQuery(QUERY_INSERT_UUIDS);
        List<Object> params=new ArrayList<Object>();
        boolean hasNullId=false;
        while (db.getResultSet().next()) {
          int id=db.getResultSet().getInt("PROJECT_ID");
          params.add(new Integer(id));
          CmsUUID uuid=new CmsUUID();
          if (id == 0) {
            hasNullId=true;
            uuid=CmsUUID.getNullUUID();
          }
          if (id == 1) {
            uuid=CmsProject.ONLINE_PROJECT_ID;
          }
          params.add(uuid.toString());
          dbCon.updateSqlStatement(updateQuery,null,params);
          params.clear();
        }
        if (!hasNullId) {
          params.add(new Integer(0));
          params.add(CmsUUID.getNullUUID().toString());
          dbCon.updateSqlStatement(updateQuery,null,params);
        }
      }
 else {
        System.out.println("table " + TEMPORARY_TABLE_NAME + " already exists");
      }
    }
  }
  finally {
    if (db != null) {
      db.close();
    }
  }
}
