{
  List resourceList=CmsStringUtil.splitAsList(getParamResourcelist(),"|");
  CmsResourceUtil[] resUtil=new CmsResourceUtil[resourceList.size()];
  for (int i=0; i < resourceList.size(); i++) {
    try {
      resUtil[i]=new CmsResourceUtil(getCms(),getCms().readResource((String)resourceList.get(i),CmsResourceFilter.ALL));
    }
 catch (    CmsException e) {
      return "";
    }
  }
  CmsExplorerTypeSettings settings=null;
  CmsExplorerContextMenu contextMenu;
  boolean isSingleSelection=(resourceList.size() == 1);
  if (isSingleSelection) {
    try {
      settings=OpenCms.getWorkplaceManager().getExplorerTypeSetting(resUtil[0].getResourceTypeName());
    }
 catch (    Throwable e) {
      return "";
    }
    if ((settings == null) || !settings.isEditable(getCms(),resUtil[0].getResource())) {
      return "";
    }
    contextMenu=settings.getContextMenu();
  }
 else {
    if (OpenCms.getWorkplaceManager().getMultiContextMenu() == null) {
      return "";
    }
 else {
      contextMenu=OpenCms.getWorkplaceManager().getMultiContextMenu();
    }
  }
  CmsMenuRuleTranslator menuRuleTranslator=new CmsMenuRuleTranslator();
  Map storedModes=new HashMap();
  StringBuffer menu=new StringBuffer(4096);
  menu.append("<div id=\"menu\">");
  buildHtmlContextMenu(contextMenu.getAllEntries(),null,menu,resUtil,menuRuleTranslator,isSingleSelection,storedModes);
  menu.append("</div>");
  return menu.toString();
}
