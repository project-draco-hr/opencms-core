{
  CmsInternalSitemapEntry entry=cache.getEntryByUri(cms,entryUri);
  if ((entry != null)) {
    if (!entry.isRedirect()) {
      cms.readResource(entry.getStructureId());
    }
    return entry;
  }
  String path=entryUri;
  if (path.endsWith("/") && (path.length() > 1)) {
    path=path.substring(0,path.length() - 1);
  }
  String detailName=CmsResource.getName(path);
  CmsUUID detailId=cms.readIdForUrlName(detailName);
  if (detailId == null) {
    return new CmsInternalSitemapEntry(cms,entryUri);
  }
  entry=cache.getEntryByUri(cms,CmsResource.getParentFolder(entryUri));
  if (entry == null) {
    return new CmsInternalSitemapEntry(cms,entryUri);
  }
  CmsResource contentRes=cms.readResource(detailId);
  String title=cms.readPropertyObject(contentRes,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue(detailId.toString());
  HashMap<String,CmsSimplePropertyValue> entryProps=new HashMap<String,CmsSimplePropertyValue>(entry.getNewProperties());
  CmsSimplePropertyValue navValue=new CmsSimplePropertyValue("false","false");
  entryProps.put(Property.navigation.getName(),navValue);
  CmsInternalSitemapEntry contentEntry=new CmsInternalSitemapEntry(entry.getId(),entry.getOriginalUri(),entry.getStructureId(),detailId.toString(),title,entry.isRootEntry(),new HashMap<String,CmsSimplePropertyValue>(),null,detailId,detailName);
  Map<String,CmsXmlContentProperty> propDefs=entry.getPropertyDefinitions();
  CmsPropertyInheritanceState propState=new CmsPropertyInheritanceState(entry.getComputedProperties(),propDefs);
  CmsPropertyInheritanceState newPropState=propState.update(Collections.<String,CmsSimplePropertyValue>emptyMap(),detailId.toString());
  contentEntry.setRuntimeInfo(entry.getEntryPoint(),0,newPropState.getInheritedProperties());
  contentEntry.setSitemapInfo(entry.getSitemapInfo());
  return contentEntry;
}
