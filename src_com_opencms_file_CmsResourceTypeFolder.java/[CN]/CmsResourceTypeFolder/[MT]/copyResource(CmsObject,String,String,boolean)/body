{
  Vector allSubFolders=new Vector();
  Vector allSubFiles=new Vector();
  validResourcename(destination);
  getAllResources(cms,source,allSubFiles,allSubFolders);
  if (!destination.endsWith("/")) {
    destination=destination + "/";
  }
  if (!destination.startsWith("/")) {
    destination="/" + destination;
  }
  cms.doCopyFolder(source,destination);
  for (int i=0; i < allSubFolders.size(); i++) {
    CmsFolder curFolder=(CmsFolder)allSubFolders.elementAt(i);
    if (curFolder.getState() != I_CmsConstants.C_STATE_DELETED) {
      String curDestination=destination + cms.readAbsolutePath(curFolder).substring(source.length());
      cms.doCopyFolder(cms.readAbsolutePath(curFolder),curDestination);
    }
  }
  for (int i=0; i < allSubFiles.size(); i++) {
    CmsFile curFile=(CmsFile)allSubFiles.elementAt(i);
    if (curFile.getState() != I_CmsConstants.C_STATE_DELETED) {
      String curDest=destination + cms.readAbsolutePath(curFile).substring(source.length());
      cms.copyResource(cms.readAbsolutePath(curFile),curDest,keepFlags);
    }
  }
  if (C_BODY_MIRROR) {
    try {
      copyResource(cms,I_CmsWpConstants.C_VFS_PATH_BODIES + source.substring(1),I_CmsWpConstants.C_VFS_PATH_BODIES + destination.substring(1),keepFlags);
      cms.lockResource(I_CmsWpConstants.C_VFS_PATH_BODIES + destination.substring(1));
    }
 catch (    CmsException e) {
    }
  }
}
