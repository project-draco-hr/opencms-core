{
  setCms(cms);
  setReport(report);
  setExportFileName(exportFile);
  cms.checkRole(CmsRole.EXPORT_DATABASE);
  m_includeSystem=includeSystem;
  m_includeUnchanged=includeUnchanged;
  m_exportUserdata=exportUserdata;
  m_contentAge=contentAge;
  m_exportCount=0;
  report.println(Messages.get().container(Messages.RPT_CLEARCACHE_0),I_CmsReport.C_FORMAT_NOTE);
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_CLEAR_CACHES,Collections.EMPTY_MAP));
  try {
    Element exportNode=openExportFile();
    if (moduleElement != null) {
      exportNode.add(moduleElement);
      digestElement(exportNode,moduleElement);
    }
    exportAllResources(exportNode,resourcesToExport);
    if (m_exportUserdata) {
      Element userGroupData=exportNode.addElement(CmsImportExportManager.N_USERGROUPDATA);
      getSaxWriter().writeOpen(userGroupData);
      exportGroups(userGroupData);
      exportUsers(userGroupData);
      getSaxWriter().writeClose(userGroupData);
      exportNode.remove(userGroupData);
    }
    closeExportFile(exportNode);
  }
 catch (  SAXException se) {
    getReport().println(se);
    CmsMessageContainer message=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_EXPORTING_TO_FILE_1,getExportFileName());
    if (LOG.isDebugEnabled()) {
      LOG.debug(message.key(),se);
    }
    throw new CmsImportExportException(message,se);
  }
catch (  IOException ioe) {
    getReport().println(ioe);
    CmsMessageContainer message=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_EXPORTING_TO_FILE_1,getExportFileName());
    if (LOG.isDebugEnabled()) {
      LOG.debug(message.key(),ioe);
    }
    throw new CmsImportExportException(message,ioe);
  }
}
