{
  m_exportFileName=exportFile;
  m_cms=cms;
  m_excludeSystem=excludeSystem;
  m_excludeUnchanged=excludeUnchanged;
  m_exportUserdata=exportUserdata;
  m_isOnlineProject=cms.getRequestContext().currentProject().isOnlineProject();
  m_contentAge=contentAge;
  m_exportedChannelIds=new HashSet();
  m_report=report;
  m_exportingModuleData=false;
  try {
    Element exportNode=openExportFile();
    if (moduleElement != null) {
      exportNode.add(moduleElement);
      m_saxWriter.write(moduleElement);
      exportNode.remove(moduleElement);
    }
    exportAllResources(exportNode,resourcesToExport);
    if (m_exportUserdata) {
      Element userGroupData=exportNode.addElement(I_CmsConstants.C_EXPORT_TAG_USERGROUPDATA);
      m_saxWriter.writeOpen(userGroupData);
      exportGroups(userGroupData);
      exportUsers(userGroupData);
      m_saxWriter.writeClose(userGroupData);
      exportNode.remove(userGroupData);
    }
    closeExportFile(exportNode);
  }
 catch (  SAXException se) {
    m_report.println(se);
    if (OpenCms.getLog(this).isErrorEnabled()) {
      OpenCms.getLog(this).error("Error exporting to file " + m_exportFileName,se);
    }
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,se);
  }
catch (  IOException ioe) {
    m_report.println(ioe);
    if (OpenCms.getLog(this).isErrorEnabled()) {
      OpenCms.getLog(this).error("Error exporting to file " + m_exportFileName,ioe);
    }
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,ioe);
  }
}
