{
  TimestampMode timeMode=TimestampMode.VFSTIME;
  String typeName=OpenCms.getResourceManager().getResourceType(resource).getTypeName();
  TimestampMode defaultModeForResourceType=OpenCms.getImportExportManager().getDefaultTimestampMode(typeName);
  if (null == defaultModeForResourceType) {
    try {
      CmsProperty exporttimeProp=m_cms.readPropertyObject(resource,CmsImportExportManager.PROP_EXPORT_TIMESTAMP,true);
      if (TimestampMode.FILETIME.equals(TimestampMode.getEnum(exporttimeProp.getValue()))) {
        timeMode=TimestampMode.FILETIME;
      }
 else       if (TimestampMode.IMPORTTIME.equals(TimestampMode.getEnum(exporttimeProp.getValue()))) {
        timeMode=TimestampMode.IMPORTTIME;
      }
    }
 catch (    @SuppressWarnings("unused") CmsException e) {
    }
  }
 else {
    timeMode=defaultModeForResourceType;
  }
switch (timeMode) {
case FILETIME:
    return CmsMacroResolver.formatMacro(CmsImportExportManager.TimestampMode.FILETIME.toString());
case IMPORTTIME:
  return CmsMacroResolver.formatMacro(CmsImportExportManager.TimestampMode.IMPORTTIME.toString());
case VFSTIME:
default :
return CmsDateUtil.getHeaderDate(resource.getDateLastModified());
}
}
