{
  try {
    Element e=parent.addElement(I_CmsConstants.C_EXPORT_TAG_USERDATA);
    e.addElement(I_CmsConstants.C_EXPORT_TAG_NAME).addText(user.getName());
    String passwd=new String(Base64.encodeBase64(user.getPassword().getBytes()));
    e.addElement(I_CmsConstants.C_EXPORT_TAG_PASSWORD).addCDATA(passwd);
    e.addElement(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION).addCDATA(user.getDescription());
    e.addElement(I_CmsConstants.C_EXPORT_TAG_FIRSTNAME).addText(user.getFirstname());
    e.addElement(I_CmsConstants.C_EXPORT_TAG_LASTNAME).addText(user.getLastname());
    e.addElement(I_CmsConstants.C_EXPORT_TAG_EMAIL).addText(user.getEmail());
    e.addElement(I_CmsConstants.C_EXPORT_TAG_FLAGS).addText(Integer.toString(user.getFlags()));
    e.addElement(I_CmsConstants.C_EXPORT_TAG_ADDRESS).addCDATA(user.getAddress());
    e.addElement(I_CmsConstants.C_EXPORT_TAG_TYPE).addText(Integer.toString(user.getType()));
    try {
      String datfileName="/~" + I_CmsConstants.C_EXPORT_TAG_USERINFO + "/"+ user.getName()+ ".dat";
      e.addElement(I_CmsConstants.C_EXPORT_TAG_USERINFO).addText(datfileName);
      ByteArrayOutputStream bout=new ByteArrayOutputStream();
      ObjectOutputStream oout=new ObjectOutputStream(bout);
      oout.writeObject(user.getAdditionalInfo());
      oout.close();
      byte[] serializedInfo=bout.toByteArray();
      ZipEntry entry=new ZipEntry(datfileName);
      getExportZipStream().putNextEntry(entry);
      getExportZipStream().write(serializedInfo);
      getExportZipStream().closeEntry();
    }
 catch (    IOException ioe) {
      getReport().println(ioe);
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().key(Messages.ERR_IMPORTEXPORT_ERROR_EXPORTING_USER_1,user.getName()),ioe);
      }
    }
    List userGroups=getCms().getDirectGroupsOfUser(user.getName());
    Element g=e.addElement(I_CmsConstants.C_EXPORT_TAG_USERGROUPS);
    for (int i=0; i < userGroups.size(); i++) {
      String groupName=((CmsGroup)userGroups.get(i)).getName();
      g.addElement(I_CmsConstants.C_EXPORT_TAG_GROUPNAME).addElement(I_CmsConstants.C_EXPORT_TAG_NAME).addText(groupName);
    }
    digestElement(parent,e);
  }
 catch (  CmsException e) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_READING_GROUPS_OF_USER_1,user.getName());
    if (LOG.isDebugEnabled()) {
      LOG.debug(message,e);
    }
    throw new CmsImportExportException(message,e);
  }
}
