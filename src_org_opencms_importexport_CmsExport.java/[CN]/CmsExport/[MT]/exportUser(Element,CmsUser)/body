{
  Element e=parent.addElement(I_CmsConstants.C_EXPORT_TAG_USERDATA);
  e.addElement(I_CmsConstants.C_EXPORT_TAG_NAME).addText(user.getName());
  sun.misc.BASE64Encoder enc=new sun.misc.BASE64Encoder();
  String passwd=new String(enc.encodeBuffer(user.getPassword().getBytes()));
  e.addElement(I_CmsConstants.C_EXPORT_TAG_PASSWORD).addCDATA(passwd);
  e.addElement(I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD).addCDATA(user.getRecoveryPassword());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_DESCRIPTION).addCDATA(user.getDescription());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_FIRSTNAME).addText(user.getFirstname());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_LASTNAME).addText(user.getLastname());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_EMAIL).addText(user.getEmail());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_FLAGS).addText(Integer.toString(user.getFlags()));
  e.addElement(I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP).addText(user.getDefaultGroup().getName());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_ADDRESS).addCDATA(user.getAddress());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_SECTION).addText(user.getSection());
  e.addElement(I_CmsConstants.C_EXPORT_TAG_TYPE).addText(Integer.toString(user.getType()));
  try {
    String datfileName="/~" + I_CmsConstants.C_EXPORT_TAG_USERINFO + "/"+ user.getName()+ ".dat";
    e.addElement(I_CmsConstants.C_EXPORT_TAG_USERINFO).addText(datfileName);
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    ObjectOutputStream oout=new ObjectOutputStream(bout);
    oout.writeObject(user.getAdditionalInfo());
    oout.close();
    byte[] serializedInfo=bout.toByteArray();
    ZipEntry entry=new ZipEntry(datfileName);
    getExportZipStream().putNextEntry(entry);
    getExportZipStream().write(serializedInfo);
    getExportZipStream().closeEntry();
  }
 catch (  IOException ioe) {
    getReport().println(ioe);
    if (OpenCms.getLog(this).isErrorEnabled()) {
      OpenCms.getLog(this).error("Error writing user data to zip for user " + user.getName(),ioe);
    }
  }
  Vector userGroups=getCms().getDirectGroupsOfUser(user.getName());
  Element g=e.addElement(I_CmsConstants.C_EXPORT_TAG_USERGROUPS);
  for (int i=0; i < userGroups.size(); i++) {
    String groupName=((CmsGroup)userGroups.elementAt(i)).getName();
    g.addElement(I_CmsConstants.C_EXPORT_TAG_GROUPNAME).addElement(I_CmsConstants.C_EXPORT_TAG_NAME).addText(groupName);
  }
  digestElement(parent,e);
}
