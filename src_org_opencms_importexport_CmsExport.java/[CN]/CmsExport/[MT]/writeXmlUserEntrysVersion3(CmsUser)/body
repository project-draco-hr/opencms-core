{
  String id, name, password, recoveryPassword, description, firstname;
  String lastname, email, flags, defaultGroup, address, section, type;
  String datfileName=new String();
  Hashtable info=new Hashtable();
  Vector userGroups=new Vector();
  sun.misc.BASE64Encoder enc;
  ObjectOutputStream oout;
  id=user.getId().toString();
  name=user.getName();
  password=user.getPassword();
  recoveryPassword=user.getRecoveryPassword();
  description=user.getDescription();
  firstname=user.getFirstname();
  lastname=user.getLastname();
  email=user.getEmail();
  flags=Integer.toString(user.getFlags());
  info=user.getAdditionalInfo();
  defaultGroup=user.getDefaultGroup().getName();
  address=user.getAddress();
  section=user.getSection();
  type=Integer.toString(user.getType());
  userGroups=m_cms.getDirectGroupsOfUser(user.getName());
  Element userdata=m_docXml.createElement(I_CmsConstants.C_EXPORT_TAG_USERDATA);
  m_userdataElement.appendChild(userdata);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_ID,id);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_NAME,name);
  enc=new sun.misc.BASE64Encoder();
  String passwd=new String(enc.encodeBuffer(password.getBytes()));
  addCdataElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_PASSWORD,passwd);
  enc=new sun.misc.BASE64Encoder();
  String recPasswd=new String(enc.encodeBuffer(recoveryPassword.getBytes()));
  addCdataElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_RECOVERYPASSWORD,recPasswd);
  addCdataElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_DESCRIPTION,description);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_FIRSTNAME,firstname);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_LASTNAME,lastname);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_EMAIL,email);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_FLAGS,flags);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_DEFAULTGROUP,defaultGroup);
  addCdataElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_ADDRESS,address);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_SECTION,section);
  addElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_TYPE,type);
  try {
    datfileName="/~" + I_CmsConstants.C_EXPORT_TAG_USERINFO + "/"+ name+ ".dat";
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    oout=new ObjectOutputStream(bout);
    oout.writeObject(info);
    oout.close();
    byte[] serializedInfo=bout.toByteArray();
    ZipEntry entry=new ZipEntry(datfileName);
    m_exportZipStream.putNextEntry(entry);
    m_exportZipStream.write(serializedInfo);
    m_exportZipStream.closeEntry();
  }
 catch (  IOException ioex) {
    m_report.println(ioex);
  }
  addCdataElement(m_docXml,userdata,I_CmsConstants.C_EXPORT_TAG_USERINFO,datfileName);
  Element usergroup=m_docXml.createElement(I_CmsConstants.C_EXPORT_TAG_USERGROUPS);
  userdata.appendChild(usergroup);
  for (int i=0; i < userGroups.size(); i++) {
    String groupName=((CmsGroup)userGroups.elementAt(i)).getName();
    Element group=m_docXml.createElement(I_CmsConstants.C_EXPORT_TAG_GROUPNAME);
    usergroup.appendChild(group);
    addElement(m_docXml,group,I_CmsConstants.C_EXPORT_TAG_NAME,groupName);
  }
}
