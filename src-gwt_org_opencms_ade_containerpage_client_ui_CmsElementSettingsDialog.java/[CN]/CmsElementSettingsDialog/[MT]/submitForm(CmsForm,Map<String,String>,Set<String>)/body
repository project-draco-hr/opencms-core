{
  if (CmsInheritanceContainerEditor.getInstance() != null) {
    CmsInheritanceContainerEditor.getInstance().onSettingsEdited();
  }
  if (m_contextsWidget != null) {
    String newTemplateContexts=m_contextsWidget.getFormValueAsString();
    if ((newTemplateContexts == null) || "".equals(newTemplateContexts)) {
      newTemplateContexts=CmsTemplateContextInfo.EMPTY_VALUE;
    }
    fieldValues.put(CmsTemplateContextInfo.SETTING,newTemplateContexts);
  }
  final boolean hasFormatterChanges;
  if (m_formatterSelect != null) {
    fieldValues.put(CmsFormatterConfig.getSettingsKeyForContainer(m_containerId),m_formatterSelect.getFormValueAsString());
    hasFormatterChanges=true;
  }
 else {
    hasFormatterChanges=false;
  }
  if (m_createNewCheckBox != null) {
    m_elementWidget.setCreateNew(m_createNewCheckBox.isChecked());
    fieldValues.put(CmsContainerElement.CREATE_AS_NEW,Boolean.toString(m_createNewCheckBox.isChecked()));
  }
  if (m_modelGroupCheckBox != null) {
    boolean modelGroup=m_modelGroupCheckBox.isChecked();
    fieldValues.put(CmsContainerElement.MODEL_GROUP_STATE,(modelGroup ? ModelGroupState.isModelGroup : ModelGroupState.noGroup).name());
    if (modelGroup) {
      fieldValues.put(CmsContainerElement.MODEL_GROUP_TITLE,m_modelGroupTitle.getFormValueAsString());
      fieldValues.put(CmsContainerElement.MODEL_GROUP_DESCRIPTION,m_modelGroupDescription.getFormValueAsString());
    }
  }
  if (m_useAsCopyModel != null) {
    fieldValues.put(CmsContainerElement.USE_AS_COPY_MODEL,Boolean.toString(m_useAsCopyModel.isChecked()));
  }
  final Map<String,String> filteredFieldValues=new HashMap<String,String>();
  for (  Map.Entry<String,String> entry : fieldValues.entrySet()) {
    String key=entry.getKey();
    String value=entry.getValue();
    if ((value != null) && (value.length() > 0)) {
      filteredFieldValues.put(key,value);
    }
  }
  m_controller.reloadElementWithSettings(m_elementWidget,m_elementBean.getClientId(),filteredFieldValues,new I_CmsSimpleCallback<CmsContainerPageElementPanel>(){
    public void execute(    CmsContainerPageElementPanel result){
      if (isTemplateContextChanged()) {
        CmsContainerpageController.get().handleChangeTemplateContext(result,filteredFieldValues.get(CmsTemplateContextInfo.SETTING));
      }
      if (hasFormatterChanges) {
        updateCss();
      }
      if (result.getElement().getInnerHTML().contains(CmsGwtConstants.FORMATTER_RELOAD_MARKER) && !CmsContainerpageController.get().isGroupcontainerEditing()) {
        CmsContainerpageController.get().reloadPage();
      }
    }
  }
);
}
