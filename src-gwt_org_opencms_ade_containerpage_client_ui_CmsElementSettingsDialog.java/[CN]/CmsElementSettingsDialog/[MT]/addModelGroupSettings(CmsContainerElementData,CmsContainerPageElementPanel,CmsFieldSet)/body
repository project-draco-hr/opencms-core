{
  Map<String,String> groupOptions=new LinkedHashMap<String,String>();
  groupOptions.put(GroupOption.disabled.name(),GroupOption.disabled.getLabel());
  groupOptions.put(GroupOption.copy.name(),GroupOption.copy.getLabel());
  groupOptions.put(GroupOption.reuse.name(),GroupOption.reuse.getLabel());
  m_modelGroupSelect=new CmsSelectBox(groupOptions);
  if (elementWidget.isModelGroup()) {
    if (Boolean.valueOf(elementBean.getSettings().get(CmsContainerElement.USE_AS_COPY_MODEL)).booleanValue()) {
      m_modelGroupSelect.selectValue(GroupOption.copy.name());
    }
 else {
      m_modelGroupSelect.selectValue(GroupOption.reuse.name());
    }
  }
  CmsFormRow selectRow=new CmsFormRow();
  selectRow.getLabel().setText(Messages.get().key(Messages.GUI_USE_AS_MODEL_GROUP_LABEL_0));
  selectRow.getWidgetContainer().add(m_modelGroupSelect);
  fieldSet.add(selectRow);
  m_modelGroupSelect.addValueChangeHandler(new ValueChangeHandler<String>(){
    public void onValueChange(    ValueChangeEvent<String> event){
      GroupOption option=GroupOption.valueOf(event.getValue());
      setModelGroupEnabled(option != GroupOption.disabled);
    }
  }
);
  CmsFormRow titleRow=new CmsFormRow();
  titleRow.getLabel().setText(Messages.get().key(Messages.GUI_MODEL_GROUP_TITLE_0));
  m_modelGroupTitle=new CmsTextBox();
  titleRow.getWidgetContainer().add(m_modelGroupTitle);
  fieldSet.add(titleRow);
  CmsFormRow descriptionRow=new CmsFormRow();
  descriptionRow.getLabel().setText(Messages.get().key(Messages.GUI_MODEL_GROUP_DESCRIPTION_0));
  m_modelGroupDescription=new CmsTextBox();
  descriptionRow.getWidgetContainer().add(m_modelGroupDescription);
  fieldSet.add(descriptionRow);
  if (elementWidget.isModelGroup()) {
    m_modelGroupTitle.setFormValueAsString(elementBean.getSettings().get(CmsContainerElement.MODEL_GROUP_TITLE));
    m_modelGroupDescription.setFormValueAsString(elementBean.getSettings().get(CmsContainerElement.MODEL_GROUP_DESCRIPTION));
  }
  setModelGroupEnabled(elementWidget.isModelGroup());
}
