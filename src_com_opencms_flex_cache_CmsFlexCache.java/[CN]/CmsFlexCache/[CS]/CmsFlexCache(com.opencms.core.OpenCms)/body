{
  source.org.apache.java.util.Configurations opencmsProperties=openCms.getConfiguration();
  m_enabled=opencmsProperties.getBoolean("flex.cache.enabled",true);
  m_cacheOffline=opencmsProperties.getBoolean("flex.cache.offline",true);
  boolean forceFinalization=opencmsProperties.getBoolean("flex.cache.entries.forceGC",true);
  int maxCacheCosts=opencmsProperties.getInteger("flex.cache.entries.maxCacheBytes",1000000);
  int avgCacheCosts=opencmsProperties.getInteger("flex.cache.entries.avgCacheBytes",750000);
  int maxObjectCosts=opencmsProperties.getInteger("flex.cache.entries.maxObjectBytes",250000);
  this.m_EntryLruCache=new CmsFlexLruCache(maxCacheCosts,avgCacheCosts,maxObjectCosts,forceFinalization);
  forceFinalization=opencmsProperties.getBoolean("flex.cache.keys.forceGC",false);
  maxCacheCosts=opencmsProperties.getInteger("flex.cache.keys.maxKeyCount",200);
  avgCacheCosts=opencmsProperties.getInteger("flex.cache.keys.avgKeyCount",150);
  maxObjectCosts=opencmsProperties.getInteger("flex.cache.keys.maxKeyEntries",CmsFlexCache.C_INITIAL_CAPACITY_VARIATIONS);
  this.m_ResourceLruCache=new CmsFlexLruCache(maxCacheCosts,avgCacheCosts,maxObjectCosts,forceFinalization);
  if (m_enabled) {
    this.m_resourceMap=java.util.Collections.synchronizedMap(new HashMap(CmsFlexCache.C_INITIAL_CAPACITY_CACHE));
    com.opencms.core.A_OpenCms.addCmsEventListener(this);
  }
  openCms.setRuntimeProperty(com.opencms.flex.I_CmsResourceLoader.C_LOADER_CACHENAME,this);
  if (DEBUG > 0)   System.err.println("FlexCache: Initializing with parameters enabled=" + m_enabled + " cacheOffline="+ m_cacheOffline);
}
