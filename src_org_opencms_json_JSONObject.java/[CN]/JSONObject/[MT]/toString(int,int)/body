{
  int j;
  int n=length();
  if (n == 0) {
    return "{}";
  }
  Iterator<String> keys=sortedKeys();
  StringBuffer sb=new StringBuffer("{");
  int newindent=indent + indentFactor;
  String key;
  if (n == 1) {
    key=keys.next();
    sb.append(quote(key));
    sb.append(": ");
    sb.append(valueToString(m_map.get(key),indentFactor,indent));
  }
 else {
    while (keys.hasNext()) {
      key=keys.next();
      if (sb.length() > 1) {
        sb.append(",\n");
      }
 else {
        sb.append('\n');
      }
      for (j=0; j < newindent; j+=1) {
        sb.append(' ');
      }
      sb.append(quote(key));
      sb.append(": ");
      sb.append(valueToString(m_map.get(key),indentFactor,newindent));
    }
    if (sb.length() > 1) {
      sb.append('\n');
      for (j=0; j < indent; j+=1) {
        sb.append(' ');
      }
    }
  }
  sb.append('}');
  return sb.toString();
}
