{
  registerRpc(I_CmsGwtDialogClientRpc.class,new I_CmsGwtDialogClientRpc(){
    /** 
 * Serial version id. 
 */
    private static final long serialVersionUID=1L;
    public void editProperties(    String editStructureId){
      CmsEditProperties.editProperties(new CmsUUID(editStructureId),new I_CmsContextMenuHandler(){
        public boolean ensureLockOnResource(        CmsUUID structureId){
          notImplemented();
          return false;
        }
        public Map<String,I_CmsContextMenuCommand> getContextMenuCommands(){
          notImplemented();
          return null;
        }
        public I_CmsContentEditorHandler getEditorHandler(){
          notImplemented();
          return null;
        }
        public void leavePage(        String targetUri){
          notImplemented();
        }
        public void refreshResource(        CmsUUID structureId){
          List<String> changed=Lists.newArrayList();
          changed.add("" + structureId);
          m_changed=changed;
          close(0);
        }
        public void unlockResource(        CmsUUID structureId){
          notImplemented();
        }
        private void notImplemented(){
          throw new IllegalStateException("Not implemented");
        }
      }
,new Runnable(){
        public void run(){
          close(0);
        }
      }
);
    }
    public void openPublishDialog(    String serializedPublishData){
      try {
        I_CmsPublishServiceAsync publishService=GWT.create(I_CmsPublishService.class);
        CmsPublishData initData=(CmsPublishData)CmsRpcPrefetcher.getSerializedObjectFromString(publishService,serializedPublishData);
        Runnable menuRefreshAction=new Runnable(){
          public void run(){
            Window.Location.reload();
          }
        }
;
        CloseHandler<PopupPanel> closeHandler=new CloseHandler<PopupPanel>(){
          public void onClose(          CloseEvent<PopupPanel> event){
            CmsPublishDialog dialog=(CmsPublishDialog)(event.getTarget());
            if (dialog.hasFailed() || dialog.hasSucceeded()) {
              m_changed=Arrays.asList("" + CmsUUID.getNullUUID());
            }
 else {
              m_changed=Lists.newArrayList();
            }
            close(700);
          }
        }
;
        CmsPublishDialog.showPublishDialog(initData,closeHandler,menuRefreshAction,null);
      }
 catch (      SerializationException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
}
