{
  if (m_pageContext != null && key.startsWith(I_CmsStringMapper.C_KEY_REQUEST_PARAM)) {
    key=key.substring(I_CmsStringMapper.C_KEY_REQUEST_PARAM.length());
    return m_pageContext.getRequest().getParameter(key);
  }
  if (m_cms != null && key.startsWith(I_CmsStringMapper.C_KEY_PROPERTY)) {
    key=key.substring(I_CmsStringMapper.C_KEY_PROPERTY.length());
    try {
      CmsProperty property=m_cms.readPropertyObject(m_cms.getRequestContext().getUri(),key,true);
      if (property != CmsProperty.getNullProperty()) {
        return property.getValue();
      }
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error("Error reading property " + key + " of resource "+ m_cms.getRequestContext().getUri(),e);
      }
    }
  }
  if (m_cms != null && key.startsWith(I_CmsStringMapper.C_KEY_PROPERTY_ELEMENT)) {
    key=key.substring(I_CmsStringMapper.C_KEY_PROPERTY_ELEMENT.length());
    CmsFlexController controller=(CmsFlexController)m_pageContext.getRequest().getAttribute(CmsFlexController.ATTRIBUTE_NAME);
    try {
      CmsProperty property=m_cms.readPropertyObject(controller.getCurrentRequest().getElementUri(),key,false);
      if (property != CmsProperty.getNullProperty()) {
        return property.getValue();
      }
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error("Error reading property " + key + " of resource "+ controller.getCurrentRequest().getElementUri(),e);
      }
    }
  }
  if (m_pageContext != null && key.startsWith(I_CmsStringMapper.C_KEY_PAGE_CONTEXT)) {
    key=key.substring(I_CmsStringMapper.C_KEY_PAGE_CONTEXT.length());
    int scope=m_pageContext.getAttributesScope(key);
    return m_pageContext.getAttribute(key,scope).toString();
  }
  if (m_resourceName != null && m_cms != null && key.startsWith(I_CmsStringMapper.C_KEY_OPENCMS)) {
    String originalKey=key;
    key=key.substring(I_CmsStringMapper.C_KEY_OPENCMS.length());
    int index=I_CmsStringMapper.C_VALUE_NAMES_OPENCMS.indexOf(key);
    String value=null;
switch (index) {
case 0:
      value=m_cms.getRequestContext().getUri();
    break;
case 1:
  value=m_resourceName;
break;
case 2:
value=m_cms.getRequestContext().getFolderUri();
break;
default :
value=originalKey;
break;
}
return value;
}
if (I_CmsStringMapper.KEY_CURRENT_TIME.equals(key)) {
return String.valueOf(System.currentTimeMillis());
}
if (I_CmsStringMapper.KEY_CURRENT_USER_NAME.equals(key) && m_cms != null) {
return m_cms.getRequestContext().currentUser().getName();
}
if (I_CmsStringMapper.KEY_CURRENT_USER_FIRSTNAME.equals(key) && m_cms != null) {
return m_cms.getRequestContext().currentUser().getFirstname();
}
if (I_CmsStringMapper.KEY_CURRENT_USER_LASTNAME.equals(key) && m_cms != null) {
return m_cms.getRequestContext().currentUser().getLastname();
}
if (I_CmsStringMapper.KEY_CURRENT_USER_FULLNAME.equals(key) && m_cms != null) {
return m_cms.getRequestContext().currentUser().getFullName();
}
if (I_CmsStringMapper.KEY_CURRENT_USER_EMAIL.equals(key) && m_cms != null) {
return m_cms.getRequestContext().currentUser().getEmail();
}
if (I_CmsStringMapper.KEY_CURRENT_USER_STREET.equals(key) && m_cms != null) {
return m_cms.getRequestContext().currentUser().getAddress();
}
if (I_CmsStringMapper.KEY_CURRENT_USER_ZIP.equals(key) && m_cms != null) {
return (String)m_cms.getRequestContext().currentUser().getAdditionalInfo(I_CmsConstants.C_ADDITIONAL_INFO_ZIPCODE);
}
if (I_CmsStringMapper.KEY_CURRENT_USER_CITY.equals(key) && m_cms != null) {
return (String)m_cms.getRequestContext().currentUser().getAdditionalInfo(I_CmsConstants.C_ADDITIONAL_INFO_TOWN);
}
if (I_CmsStringMapper.KEY_REQUEST_URI.equals(key) && m_cms != null) {
return m_cms.getRequestContext().getUri();
}
if (I_CmsStringMapper.KEY_REQUEST_FOLDER.equals(key) && m_cms != null) {
return CmsResource.getParentFolder(m_cms.getRequestContext().getUri());
}
if (I_CmsStringMapper.KEY_REQUEST_ENCODING.equals(key) && m_cms != null) {
return m_cms.getRequestContext().getEncoding();
}
if (I_CmsStringMapper.KEY_REQUEST_LOCALE.equals(key) && m_cms != null) {
return m_cms.getRequestContext().getLocale().toString();
}
if (key.startsWith(I_CmsStringMapper.KEY_LOCALIZED_PREFIX) && m_locale != null) {
return key(key.substring(I_CmsStringMapper.KEY_LOCALIZED_PREFIX.length()),m_locale);
}
if (key.startsWith(I_CmsStringMapper.KEY_LOCALIZED_PREFIX) && m_locale == null) {
StringBuffer result=new StringBuffer(32);
result.append(CmsStringUtil.C_MACRO_DELIMITER);
result.append(CmsStringUtil.C_MACRO_START);
result.append(key);
result.append(CmsStringUtil.C_MACRO_END);
return result.toString();
}
if (m_values != null) {
return (String)m_values.get(key);
}
return null;
}
