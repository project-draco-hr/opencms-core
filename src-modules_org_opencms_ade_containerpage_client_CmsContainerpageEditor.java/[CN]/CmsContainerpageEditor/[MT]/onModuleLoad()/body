{
  super.onModuleLoad();
  I_CmsLayoutBundle.INSTANCE.containerpageCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.contentEditorCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.dragdropCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.subcontainerCss().ensureInjected();
  CmsContainerpageController controller=new CmsContainerpageController();
  final CmsContainerpageHandler containerpageHandler=new CmsContainerpageHandler(controller,this);
  CmsContentEditorDialog.init(containerpageHandler,controller.getData());
  CmsContainerpageDNDController dndController=new CmsContainerpageDNDController(controller);
  CmsDNDHandler dndHandler=new CmsDNDHandler(dndController);
  ClickHandler clickHandler=new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent event){
      I_CmsToolbarButton source=(I_CmsToolbarButton)event.getSource();
      source.onToolbarClick();
    }
  }
;
  m_toolbar=new CmsToolbar();
  CmsPushButton toggleToolbarButton=new CmsPushButton();
  toggleToolbarButton.setImageClass(I_CmsImageBundle.INSTANCE.style().opencmsLogo());
  RootPanel.get().add(toggleToolbarButton);
  toggleToolbarButton.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent event){
      containerpageHandler.toggleToolbar();
    }
  }
);
  toggleToolbarButton.getElement().getStyle().setPosition(Position.FIXED);
  toggleToolbarButton.getElement().getStyle().setTop(-3,Unit.PX);
  toggleToolbarButton.getElement().getStyle().setLeft(97,Unit.PCT);
  toggleToolbarButton.getElement().getStyle().setZIndex(10010);
  m_publish=new CmsToolbarPublishButton(containerpageHandler);
  m_publish.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_publish);
  m_save=new CmsToolbarSaveButton(containerpageHandler);
  m_save.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_save);
  m_selection=new CmsToolbarSelectionButton(containerpageHandler);
  m_selection.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_selection);
  m_move=new CmsToolbarMoveButton(containerpageHandler,dndHandler);
  m_move.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_move);
  m_edit=new CmsToolbarEditButton(containerpageHandler);
  m_edit.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_edit);
  m_addToFavorites=new CmsAddToFavoritesButton(containerpageHandler);
  m_remove=new CmsToolbarRemoveButton(containerpageHandler);
  m_remove.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_remove);
  m_properties=new CmsToolbarPropertiesButton(containerpageHandler);
  m_properties.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_properties);
  m_add=new CmsToolbarGalleryMenu(containerpageHandler,dndHandler);
  m_add.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_add);
  m_clipboard=new CmsToolbarClipboardMenu(containerpageHandler);
  m_clipboard.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_clipboard);
  m_sitemap=new CmsToolbarSitemapButton(containerpageHandler);
  m_sitemap.addClickHandler(clickHandler);
  m_toolbar.addRight(m_sitemap);
  if (controller.getData().getSitemapUri().equals("")) {
    m_sitemap.setEnabled(false);
  }
  m_context=new CmsToolbarContextButton(containerpageHandler);
  m_context.addClickHandler(clickHandler);
  m_toolbar.addRight(m_context);
  m_reset=new CmsToolbarResetButton(containerpageHandler);
  m_reset.addClickHandler(clickHandler);
  m_toolbar.addRight(m_reset);
  containerpageHandler.enableSaveReset(false);
  RootPanel.get().add(m_toolbar);
  if (controller.getData().isToolbarVisible()) {
    showToolbar(true);
    containerpageHandler.activateSelection();
  }
 else {
    showToolbar(false);
  }
  CmsContainerpageUtil containerpageUtil=new CmsContainerpageUtil(controller,m_selection,m_move,m_edit,m_remove,m_addToFavorites,m_properties);
  controller.init(containerpageHandler,dndHandler,containerpageUtil);
}
