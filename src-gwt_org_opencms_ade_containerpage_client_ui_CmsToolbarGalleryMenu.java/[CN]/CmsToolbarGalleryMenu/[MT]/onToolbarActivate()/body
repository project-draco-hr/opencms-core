{
  Document.get().getBody().addClassName(I_CmsButton.ButtonData.ADD.getIconClass());
  if (!m_initialized) {
    SimplePanel tabsContainer=new SimplePanel();
    tabsContainer.addStyleName(I_CmsLayoutBundle.INSTANCE.containerpageCss().menuTabContainer());
    Predicate<CmsResultItemBean> resultDndFilter=Predicates.alwaysTrue();
    if (CmsContainerpageController.get().getData().getTemplateContextInfo().getCurrentContext() != null) {
      resultDndFilter=new CmsTemplateContextResultDndFilter();
    }
    final Predicate<CmsResultItemBean> finalDndFilter=resultDndFilter;
    tabsContainer.add(CmsGalleryFactory.createDialog(new I_CmsGalleryHandler(){
      public boolean filterDnd(      CmsResultItemBean resultBean){
        if (finalDndFilter != null) {
          return finalDndFilter.apply(resultBean);
        }
 else {
          return true;
        }
      }
      public I_CmsAutoHider getAutoHideParent(){
        return getPopup();
      }
      public CmsDNDHandler getDndHandler(){
        return getDragHandler();
      }
      public void processResultItem(      CmsResultListItem item){
        if (item.getResult().isCopyModel()) {
          item.getListItemWidget().setBackground(Background.YELLOW);
          CmsLabel titleWidget=item.getListItemWidget().getTitleWidget();
          titleWidget.getElement().getStyle().setFontStyle(FontStyle.OBLIQUE);
          String newText=Messages.get().key(Messages.GUI_COPY_MODEL_TITLE_WRAPPER_1,titleWidget.getText());
          titleWidget.setText(newText);
          item.getListItemWidget().setStateIcon(StateIcon.copy);
        }
      }
    }
));
    m_contentPanel.add(tabsContainer);
    m_initialized=true;
  }
}
