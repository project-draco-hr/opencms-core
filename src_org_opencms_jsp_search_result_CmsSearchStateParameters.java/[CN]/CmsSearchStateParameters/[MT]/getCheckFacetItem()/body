{
  if (m_uncheckFacetMap == null) {
    m_uncheckFacetMap=CmsCollectionsGenericWrapper.createLazyMap(new Transformer(){
      @Override public Object transform(      final Object facet){
        Map<String,I_CmsSearchStateParameters> m_uncheckEntries=CmsCollectionsGenericWrapper.createLazyMap(new Transformer(){
          @Override public Object transform(          final Object facetItem){
            final Map<String,String[]> parameters=new HashMap<String,String[]>(m_params);
            String facetParamKey=null;
            try {
              facetParamKey=getFacetParamKey((String)facet);
            }
 catch (            Exception e) {
              LOG.warn(Messages.get().getBundle().key(Messages.LOG_FACET_NOT_CONFIGURED_1,facet),e);
            }
            if (facetParamKey != null) {
              if (parameters.containsKey(facetParamKey)) {
                String[] values=parameters.get(facetParamKey);
                Arrays.asList(values).contains(facetItem);
                if (Arrays.asList(values).contains(facetItem)) {
                  String[] newValues=new String[Arrays.asList(values).size() - 1];
                  int j=0;
                  for (int i=0; i < (Arrays.asList(values).size() - 1); i++) {
                    if (!values[i].equals(facetItem)) {
                      newValues[j]=values[i];
                      j++;
                    }
                  }
                  parameters.put(facetParamKey,newValues);
                }
              }
 else {
                parameters.put(facetParamKey,new String[]{(String)facetItem});
              }
            }
            return new CmsSearchStateParameters(m_result,parameters);
          }
        }
);
        return m_uncheckEntries;
      }
    }
);
  }
  return m_uncheckFacetMap;
}
