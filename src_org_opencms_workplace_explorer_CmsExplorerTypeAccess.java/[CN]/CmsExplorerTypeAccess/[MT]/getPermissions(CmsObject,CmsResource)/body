{
  Object cacheKey=getPermissionsCacheKey(cms,resource);
  CmsPermissionSetCustom permissions;
  if (cacheKey != null) {
    permissions=(CmsPermissionSetCustom)m_permissionsCache.get(cacheKey);
    if (permissions != null) {
      return permissions;
    }
  }
  CmsAccessControlList acl=(CmsAccessControlList)m_accessControlList.clone();
  CmsUser user=cms.getRequestContext().currentUser();
  List groups=null;
  try {
    groups=cms.getGroupsOfUser(user.getName(),false);
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().getBundle().key(Messages.LOG_READ_GROUPS_OF_USER_FAILED_1,user.getName()),e);
  }
  List roles=null;
  try {
    roles=OpenCms.getRoleManager().getRolesForResource(cms,user.getName(),cms.getSitePath(resource));
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().getBundle().key(Messages.LOG_READ_GROUPS_OF_USER_FAILED_1,user.getName()),e);
  }
  String defaultPermissions=(String)m_accessControl.get(PRINCIPAL_DEFAULT);
  if ((defaultPermissions != null) && !user.isGuestUser()) {
    boolean found=false;
    if (acl.getPermissions(user.getId()) != null) {
      found=true;
    }
    if (!found && (groups != null)) {
      Iterator itGroups=groups.iterator();
      while (itGroups.hasNext()) {
        CmsGroup group=(CmsGroup)itGroups.next();
        if (acl.getPermissions(group.getId()) != null) {
          found=true;
          break;
        }
      }
    }
    if (!found && (roles != null)) {
      Iterator itRoles=roles.iterator();
      while (itRoles.hasNext()) {
        CmsRole role=(CmsRole)itRoles.next();
        if (acl.getPermissions(role.getId()) != null) {
          found=true;
          break;
        }
      }
    }
    if (!found) {
      CmsAccessControlEntry entry=new CmsAccessControlEntry(null,user.getId(),defaultPermissions);
      acl.add(entry);
    }
  }
  permissions=acl.getPermissions(user,groups,roles);
  if (cacheKey != null) {
    m_permissionsCache.put(cacheKey,permissions);
  }
  return permissions;
}
