{
  int widgetCount=getWidgetCount();
  for (int index=0; index < widgetCount; index++) {
    CmsTreeItem item=getItem(index);
    Element itemElement=item.getElement();
    boolean over=false;
switch (orientation) {
case HORIZONTAL:
      over=CmsDomUtil.checkPositionInside(itemElement,x,-1);
    break;
case VERTICAL:
  over=CmsDomUtil.checkPositionInside(itemElement,-1,y);
break;
case ALL:
default :
over=CmsDomUtil.checkPositionInside(itemElement,x,y);
}
if (over) {
m_placeholderIndex=item.repositionPlaceholder(x,y,m_placeholder,orientation);
return;
}
if (isDNDTakeAll() && (index == widgetCount - 1)) {
int relativeTop=CmsDomUtil.getRelativeY(y,getElement());
int elementHeight=getElement().getOffsetHeight();
if (relativeTop <= 0) {
if (isRootDropEnabled()) {
getElement().insertBefore(m_placeholder,getItem(0).getElement());
setPlaceholderPath("/");
m_placeholderIndex=0;
}
}
 else {
if (relativeTop > elementHeight) {
if (item.isOpen() && (item.getChildCount() > 0)) {
  int originalPathLevel=-1;
  if ((getDnDHandler() != null) && (getDnDHandler().getDraggable() instanceof CmsTreeItem)) {
    originalPathLevel=CmsTreeItem.getPathLevel(((CmsTreeItem)getDnDHandler().getDraggable()).getPath()) - 1;
  }
  CmsTreeItem lastOpened=CmsTreeItem.getLastOpenedItem(item,originalPathLevel);
  m_placeholderIndex=lastOpened.insertPlaceholderAsLastChild(m_placeholder);
}
 else if (isRootDropEnabled()) {
  getElement().insertAfter(m_placeholder,itemElement);
  setPlaceholderPath("/");
  m_placeholderIndex=widgetCount;
}
}
}
}
}
}
