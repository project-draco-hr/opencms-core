{
  List<CmsResource> editorFolders;
  try {
    editorFolders=cms.getSubFolders(CmsEditor.PATH_EDITORS);
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().getBundle().key(Messages.LOG_READ_EDITIR_FOLDER_FAILED_1,CmsEditor.PATH_EDITORS));
    editorFolders=new ArrayList<CmsResource>();
  }
  m_editorConfigurations=new ArrayList<CmsWorkplaceEditorConfiguration>(editorFolders.size());
  Iterator<CmsResource> i=editorFolders.iterator();
  while (i.hasNext()) {
    CmsResource currentFolder=i.next();
    String folderName=CmsEditor.PATH_EDITORS + currentFolder.getName();
    if (!folderName.endsWith("/")) {
      folderName+="/";
    }
    CmsFile configFile=null;
    try {
      configFile=cms.readFile(folderName + EDITOR_CONFIGURATION_FILENAME,CmsResourceFilter.IGNORE_EXPIRATION);
    }
 catch (    CmsException e) {
      if (LOG.isInfoEnabled()) {
        LOG.info(e);
      }
      continue;
    }
    byte[] xmlData=configFile.getContents();
    CmsWorkplaceEditorConfiguration editorConfig=new CmsWorkplaceEditorConfiguration(xmlData,folderName + EDITOR_FILENAME);
    if (editorConfig.isValidConfiguration()) {
      m_editorConfigurations.add(editorConfig);
    }
  }
  m_preferredEditors=new HashMap<String,CmsWorkplaceEditorConfiguration>(m_editorConfigurations.size());
}
