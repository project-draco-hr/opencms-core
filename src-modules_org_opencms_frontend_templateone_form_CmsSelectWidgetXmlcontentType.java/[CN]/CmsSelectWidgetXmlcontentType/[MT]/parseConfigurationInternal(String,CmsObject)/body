{
  List mappings=CmsStringUtil.splitAsList(configuration,'|');
  Iterator itMappings=mappings.iterator();
  String mapping;
  String[] keyValue;
  String key;
  String value;
  boolean displayMacroFound=false, sortMacroFound=false, folderFound=false, typeFound=false;
  while (itMappings.hasNext()) {
    mapping=(String)itMappings.next();
    keyValue=CmsStringUtil.splitAsArray(mapping,'=');
    if (keyValue.length != 2) {
      throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEYVALUE_LENGTH_1,mapping));
    }
    key=keyValue[0].trim();
    value=keyValue[1].trim();
    if (CONFIGURATION_OPTION_DISPLAY_MACRO.equals(key)) {
      if (displayMacroFound) {
        throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_DUPLICATE_2,key,configuration));
      }
      m_displayOptionMacro=value;
      displayMacroFound=true;
    }
 else     if (CONFIGURATION_OPTION_SORT_MACRO.equals(key)) {
      if (sortMacroFound) {
        throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_DUPLICATE_2,key,configuration));
      }
      m_sortMacro=value;
      sortMacroFound=true;
    }
 else     if (CONFIGURATION_RESOURCETYPENAME.equals(key)) {
      if (typeFound) {
        throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_DUPLICATE_2,key,configuration));
      }
      try {
        m_resourceTypeID=OpenCms.getResourceManager().getResourceType(value).getTypeId();
      }
 catch (      CmsLoaderException e) {
        throw new CmsIllegalArgumentException(org.opencms.file.Messages.get().container(org.opencms.file.Messages.ERR_UNKNOWN_RESOURCE_TYPE_1,value),e);
      }
      typeFound=true;
    }
 else     if (CONFIGURATION_TOPFOLDER.equals(key)) {
      if (folderFound) {
        throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_DUPLICATE_2,key,configuration));
      }
      try {
        CmsRequestContext context=cms.getRequestContext();
        context.saveSiteRoot();
        context.setSiteRoot("/");
        CmsResource resource=cms.readResource(value);
        context.restoreSiteRoot();
        if (resource.isFile()) {
          throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_RESOURCE_NOFOLDER_2,value,configuration));
        }
        m_resourceFolder=resource;
      }
 catch (      CmsException e) {
        throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_RESOURCE_INVALID_2,value,configuration),e);
      }
      folderFound=true;
    }
 else {
      throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_UNKNOWN_2,key,getClass().getName()));
    }
  }
  if (!displayMacroFound) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_MISSING_3,CONFIGURATION_OPTION_DISPLAY_MACRO,configuration,getClass().getName()));
  }
  if (!folderFound) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_MISSING_3,CONFIGURATION_TOPFOLDER,configuration,getClass().getName()));
  }
  if (!typeFound) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_SELECTWIDGET_CONFIGURATION_KEY_MISSING_3,CONFIGURATION_RESOURCETYPENAME,configuration,getClass().getName()));
  }
}
