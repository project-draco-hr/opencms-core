{
  if (m_macroCmsObject == null) {
    try {
      m_macroCmsObject=OpenCms.initCmsObject(cms);
      m_macroCmsObject.getRequestContext().setSiteRoot("/");
    }
 catch (    CmsException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.ERR_SELECTWIDGET_INTERNAL_CONFIGURATION_2,new Object[]{getClass().getName(),getConfiguration()}));
      }
      return Collections.EMPTY_LIST;
    }
  }
  if (m_macroResolver == null) {
    m_macroResolver=new CmsMacroResolver();
    m_macroResolver.setCmsObject(m_macroCmsObject);
    m_macroResolver.setKeepEmptyMacros(true);
  }
  List selectOptions=getSelectOptions();
  if (selectOptions == null) {
    String configuration=getConfiguration();
    if (configuration == null) {
      configuration=param.getDefault(cms);
    }
    try {
      parseConfigurationInternal(configuration,cms,param);
      SortedSet sortOptions=new TreeSet(new CmsResourceSelectWidgetOptionComparator(m_macroCmsObject,m_sortMacro));
      CmsSelectWidgetOption option;
      List resources;
      CmsResourceFilter filter=CmsResourceFilter.ALL.addRequireType(getResourceTypeID());
      CmsRequestContext context=cms.getRequestContext();
      String oldSiteroot=context.getSiteRoot();
      context.setSiteRoot("/");
      resources=cms.readResources(m_resourceFolder.getRootPath(),filter,true);
      context.setSiteRoot(oldSiteroot);
      if (resources.size() == 0) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().getBundle().key(Messages.LOG_ERR_SELECTWIDGET_NO_RESOURCES_FOUND_3,configuration,m_resourceFolder.getRootPath(),OpenCms.getResourceManager().getResourceType(getResourceTypeID()).getTypeName()));
        }
      }
      Iterator itResources=resources.iterator();
      CmsResource resource;
      String displayName;
      while (itResources.hasNext()) {
        resource=(CmsResource)itResources.next();
        if (hasFilterProperty(resource,cms)) {
          m_macroCmsObject.getRequestContext().setUri(resource.getRootPath());
          m_macroResolver.setResourceName(resource.getName());
          m_macroResolver.setMessages(widgetDialog.getMessages());
          displayName=m_macroResolver.resolveMacros(getDisplayOptionMacro());
          if (CmsStringUtil.isEmptyOrWhitespaceOnly(displayName)) {
            displayName=resolveXpathMacros(cms,resource,getDisplayOptionMacro());
          }
 else {
            displayName=resolveXpathMacros(cms,resource,displayName);
          }
          if (CmsStringUtil.isEmpty(displayName)) {
            displayName=resource.getName();
          }
          displayName=resolveXpathMacros(cms,resource,displayName);
          if (!CmsStringUtil.isEmpty(displayName)) {
            option=new CmsResourceSelectWidgetOption(resource,false,displayName);
            sortOptions.add(option);
          }
        }
      }
      selectOptions=new LinkedList(sortOptions);
    }
 catch (    Exception e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.ERR_SELECTWIDGET_CONFIGURATION_2,getClass(),configuration),e);
      }
    }
    if (selectOptions == Collections.EMPTY_LIST) {
      selectOptions=new ArrayList();
    }
    List pOptions=getSelectOptions();
    if (pOptions != null) {
      pOptions.clear();
    }
    Iterator it=selectOptions.iterator();
    while (it.hasNext()) {
      addSelectOption((CmsSelectWidgetOption)it.next());
    }
  }
  return selectOptions;
}
