{
  String work=value;
  StringBuffer result=new StringBuffer();
  String startMacro=new StringBuffer(I_CmsMacroResolver.MACRO_DELIMITER + "").append(I_CmsMacroResolver.MACRO_START).append("xpath.").toString();
  int startmacroIndex=work.indexOf(startMacro);
  int stopmacro=0;
  String xpath;
  if (startmacroIndex != -1) {
    CmsXmlContent xmlcontent=CmsXmlContentFactory.unmarshal(cms,cms.readFile(resource));
    Locale locale=CmsLocaleManager.getLocale(cms.readPropertyObject(xmlcontent.getFile(),CmsPropertyDefinition.PROPERTY_LOCALE,true).getValue());
    while (startmacroIndex != -1) {
      stopmacro=work.indexOf(I_CmsMacroResolver.MACRO_END);
      if (stopmacro == 0) {
      }
      result.append(work.substring(0,startmacroIndex));
      xpath=work.substring(startmacroIndex + 8,stopmacro);
      try {
        result.append(xmlcontent.getValue(xpath,locale).getPlainText(cms));
      }
 catch (      Exception ex) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().getBundle().key(Messages.LOG_ERR_SELECTWIDGET_XPATH_INVALID_4,new Object[]{xpath,locale.toString(),xmlcontent.getFile().getRootPath(),ex.getLocalizedMessage()}));
        }
      }
      work=work.substring(stopmacro + 1);
      startmacroIndex=work.indexOf(startMacro);
    }
  }
  result.append(work);
  return result.toString();
}
