{
  super();
  m_container=new IndexedContainer();
  for (  CmsResourceTableColumn columnId : CmsResourceTableColumn.defaultColumns()) {
    m_container.addContainerProperty(columnId,columnId.getColumnType(),columnId.getDefaultValue());
  }
  m_container.setItemSorter(new FileSorter());
  m_fileTable=new Table();
  setCompositionRoot(m_fileTable);
  m_fileTable.addStyleName(ValoTheme.TABLE_BORDERLESS);
  m_fileTable.setSizeFull();
  m_fileTable.setColumnCollapsingAllowed(true);
  m_fileTable.setSelectable(true);
  m_fileTable.setMultiSelect(true);
  m_fileTable.setTableFieldFactory(new FileFieldFactory());
  m_fileTable.setContainerDataSource(m_container);
  m_fileTable.setVisibleColumns(CmsResourceTableColumn.PROPERTY_TYPE_ICON,CmsResourceTableColumn.PROPERTY_RESOURCE_NAME,CmsResourceTableColumn.PROPERTY_TITLE,CmsResourceTableColumn.PROPERTY_NAVIGATION_TEXT,CmsResourceTableColumn.PROPERTY_RESOURCE_TYPE,CmsResourceTableColumn.PROPERTY_SIZE,CmsResourceTableColumn.PROPERTY_PERMISSIONS,CmsResourceTableColumn.PROPERTY_DATE_MODIFIED,CmsResourceTableColumn.PROPERTY_USER_MODIFIED,CmsResourceTableColumn.PROPERTY_DATE_CREATED,CmsResourceTableColumn.PROPERTY_USER_CREATED,CmsResourceTableColumn.PROPERTY_DATE_RELEASED,CmsResourceTableColumn.PROPERTY_DATE_EXPIRED,CmsResourceTableColumn.PROPERTY_STATE_NAME,CmsResourceTableColumn.PROPERTY_USER_LOCKED);
  messages=org.opencms.workplace.explorer.Messages.get().getBundle(CmsAppWorkplaceUi.get().getLocale());
  for (  Object visibleColumn : m_fileTable.getVisibleColumns()) {
    CmsResourceTableColumn columnId=(CmsResourceTableColumn)visibleColumn;
    String headerKey=columnId.getHeaderKey();
    if (!CmsStringUtil.isEmptyOrWhitespaceOnly(headerKey)) {
      m_fileTable.setColumnHeader(columnId,messages.key(headerKey));
    }
 else {
      m_fileTable.setColumnHeader(columnId,"");
    }
  }
  m_fileTable.setRowHeaderMode(RowHeaderMode.HIDDEN);
  m_fileTable.setColumnWidth(CmsResourceTableColumn.PROPERTY_TYPE_ICON,40);
  m_fileTable.setSortContainerPropertyId(CmsResourceTableColumn.PROPERTY_RESOURCE_NAME);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_NAVIGATION_TEXT,true);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_PERMISSIONS,true);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_USER_MODIFIED,true);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_DATE_CREATED,true);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_USER_CREATED,true);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_STATE_NAME,true);
  m_fileTable.setColumnCollapsed(CmsResourceTableColumn.PROPERTY_USER_LOCKED,true);
  m_menu=new CmsContextMenu();
  m_fileTable.addValueChangeListener(new ValueChangeListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void valueChange(    ValueChangeEvent event){
      @SuppressWarnings("unchecked") Set<CmsUUID> selectedIds=(Set<CmsUUID>)event.getProperty().getValue();
      List<CmsResource> selectedResources=Lists.newArrayList();
      for (      CmsUUID id : selectedIds) {
        try {
          A_CmsUI.get();
          CmsResource resource=A_CmsUI.getCmsObject().readResource(id,CmsResourceFilter.ALL);
          selectedResources.add(resource);
        }
 catch (        CmsException e) {
          LOG.error(e.getLocalizedMessage(),e);
        }
      }
      m_currentResources=selectedResources;
      if (!selectedIds.isEmpty() && (m_menuBuilder != null)) {
        m_menu.removeAllItems();
        m_menuBuilder.buildContextMenu(selectedResources,m_menu);
      }
    }
  }
);
  m_fileTable.setCellStyleGenerator(new Table.CellStyleGenerator(){
    private static final long serialVersionUID=1L;
    public String getStyle(    Table source,    Object itemId,    Object propertyId){
      return getStateStyle(m_container.getItem(itemId));
    }
  }
);
  m_menu.setAsTableContextMenu(m_fileTable);
}
