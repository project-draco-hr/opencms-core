{
  super();
  m_container=new IndexedContainer();
  m_container.addContainerProperty(PROPERTY_TYPE_ICON,Resource.class,null);
  m_container.addContainerProperty(PROPERTY_RESOURCE_NAME,String.class,null);
  m_container.addContainerProperty(PROPERTY_TITLE,String.class,null);
  m_container.addContainerProperty(PROPERTY_NAVIGATION_TEXT,String.class,null);
  m_container.addContainerProperty(PROPERTY_RESOURCE_TYPE,String.class,null);
  m_container.addContainerProperty(PROPERTY_IS_FOLDER,Boolean.class,null);
  m_container.addContainerProperty(PROPERTY_LOCK,Embedded.class,null);
  m_container.addContainerProperty(PROPERTY_SIZE,Integer.class,null);
  m_container.addContainerProperty(PROPERTY_PERMISSIONS,String.class,null);
  m_container.addContainerProperty(PROPERTY_DATE_MODIFIED,String.class,null);
  m_container.addContainerProperty(PROPERTY_USER_MODIFIED,String.class,null);
  m_container.addContainerProperty(PROPERTY_DATE_CREATED,String.class,null);
  m_container.addContainerProperty(PROPERTY_USER_CREATED,String.class,null);
  m_container.addContainerProperty(PROPERTY_DATE_RELEASED,String.class,"-");
  m_container.addContainerProperty(PROPERTY_DATE_EXPIRED,String.class,"-");
  m_container.addContainerProperty(PROPERTY_STATE_NAME,String.class,null);
  m_container.addContainerProperty(PROPERTY_STATE,CmsResourceState.class,null);
  m_container.addContainerProperty(PROPERTY_USER_LOCKED,String.class,null);
  m_container.setItemSorter(new FileSorter());
  m_fileTable=new Table();
  setCompositionRoot(m_fileTable);
  m_fileTable.addStyleName(ValoTheme.TABLE_BORDERLESS);
  m_fileTable.setSizeFull();
  m_fileTable.setColumnCollapsingAllowed(true);
  m_fileTable.setSelectable(true);
  m_fileTable.setMultiSelect(true);
  m_fileTable.setTableFieldFactory(new FileFieldFactory());
  m_fileTable.setContainerDataSource(m_container);
  m_fileTable.setVisibleColumns(PROPERTY_LOCK,PROPERTY_RESOURCE_NAME,PROPERTY_TITLE,PROPERTY_NAVIGATION_TEXT,PROPERTY_RESOURCE_TYPE,PROPERTY_SIZE,PROPERTY_PERMISSIONS,PROPERTY_DATE_MODIFIED,PROPERTY_USER_MODIFIED,PROPERTY_DATE_CREATED,PROPERTY_USER_CREATED,PROPERTY_DATE_RELEASED,PROPERTY_DATE_EXPIRED,PROPERTY_STATE_NAME,PROPERTY_USER_LOCKED);
  messages=org.opencms.workplace.explorer.Messages.get().getBundle(CmsAppWorkplaceUi.get().getLocale());
  m_fileTable.setColumnHeaders("",messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_NAME_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_TITLE_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_NAVTEXT_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_TYPE_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_SIZE_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_PERMISSIONS_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_DATELASTMODIFIED_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_USERLASTMODIFIED_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_DATECREATED_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_USERCREATED_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_DATERELEASED_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_DATEEXPIRED_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_STATE_0),messages.key(org.opencms.workplace.explorer.Messages.GUI_INPUT_LOCKEDBY_0));
  m_fileTable.setRowHeaderMode(RowHeaderMode.ICON_ONLY);
  m_fileTable.setItemIconPropertyId(PROPERTY_TYPE_ICON);
  m_fileTable.setSortContainerPropertyId(PROPERTY_RESOURCE_NAME);
  m_fileTable.setColumnCollapsed(PROPERTY_NAVIGATION_TEXT,true);
  m_fileTable.setColumnCollapsed(PROPERTY_PERMISSIONS,true);
  m_fileTable.setColumnCollapsed(PROPERTY_USER_MODIFIED,true);
  m_fileTable.setColumnCollapsed(PROPERTY_DATE_CREATED,true);
  m_fileTable.setColumnCollapsed(PROPERTY_USER_CREATED,true);
  m_fileTable.setColumnCollapsed(PROPERTY_STATE_NAME,true);
  m_fileTable.setColumnCollapsed(PROPERTY_USER_LOCKED,true);
  m_menu=new CmsContextMenu();
  m_fileTable.addValueChangeListener(new ValueChangeListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void valueChange(    ValueChangeEvent event){
      @SuppressWarnings("unchecked") Set<CmsUUID> selectedIds=(Set<CmsUUID>)event.getProperty().getValue();
      List<CmsResource> selectedResources=Lists.newArrayList();
      for (      CmsUUID id : selectedIds) {
        try {
          A_CmsUI.get();
          CmsResource resource=A_CmsUI.getCmsObject().readResource(id,CmsResourceFilter.ALL);
          selectedResources.add(resource);
        }
 catch (        CmsException e) {
          LOG.error(e.getLocalizedMessage(),e);
        }
      }
      m_currentResources=selectedResources;
      if (!selectedIds.isEmpty()) {
        m_menu.removeAllItems();
        m_menuBuilder.buildContextMenu(selectedResources,m_menu);
      }
    }
  }
);
  m_fileTable.setCellStyleGenerator(new Table.CellStyleGenerator(){
    private static final long serialVersionUID=1L;
    public String getStyle(    Table source,    Object itemId,    Object propertyId){
      return getStateStyle(m_container.getItem(itemId));
    }
  }
);
  m_menu.setAsTableContextMenu(m_fileTable);
}
