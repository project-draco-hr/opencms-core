{
  List navList=new ArrayList();
  List options=new ArrayList();
  List values=new ArrayList();
  CmsJspNavElement curNav=CmsJspNavBuilder.getNavigationForResource(cms,filename);
  filename=CmsResource.getParentFolder(filename);
  navList=CmsJspNavBuilder.getNavigationForFolder(cms,filename);
  float maxValue=0;
  float nextPos=0;
  float firstValue=1;
  try {
    CmsJspNavElement ne=(CmsJspNavElement)navList.get(0);
    maxValue=ne.getNavPosition();
  }
 catch (  Exception e) {
    if (OpenCms.getLog(CmsChnav.class).isInfoEnabled()) {
      OpenCms.getLog(CmsChnav.class).info(e);
    }
  }
  if (maxValue != 0) {
    firstValue=maxValue / 2;
  }
  options.add(messages.key("input.firstelement"));
  values.add(firstValue + "");
  for (int i=0; i < navList.size(); i++) {
    CmsJspNavElement ne=(CmsJspNavElement)navList.get(i);
    String navText=ne.getNavText();
    float navPos=ne.getNavPosition();
    nextPos=navPos + 2;
    if ((i + 1) < navList.size()) {
      nextPos=((CmsJspNavElement)navList.get(i + 1)).getNavPosition();
    }
    float newPos=(navPos + nextPos) / 2;
    if (navPos > maxValue) {
      maxValue=navPos;
    }
    if (curNav.getNavText().equals(navText) && curNav.getNavPosition() == navPos) {
      options.add(CmsEncoder.escapeHtml(messages.key("input.currentposition") + " [" + ne.getFileName()+ "]"));
      values.add("-1");
    }
 else {
      options.add(CmsEncoder.escapeHtml(navText + " [" + ne.getFileName()+ "]"));
      values.add(newPos + "");
    }
  }
  options.add(messages.key("input.lastelement"));
  values.add((maxValue + 1) + "");
  options.add(messages.key("input.nochange"));
  if (curNav.getNavPosition() == Float.MAX_VALUE) {
    values.add((maxValue + 1) + "");
  }
 else {
    values.add("-1");
  }
  if (attributes != null && !"".equals(attributes.trim())) {
    attributes=" " + attributes;
  }
 else {
    attributes="";
  }
  return CmsWorkplace.buildSelect("name=\"" + PARAM_NAVPOS + "\""+ attributes,options,values,values.size() - 1,true);
}
