{
  Locale en=Locale.ENGLISH;
  I_CmsXmlContentValue niceName=content.getValue(N_NICE_NAME,en);
  m_niceName=niceName != null ? niceName.getStringValue(m_cms) : null;
  CmsXmlContentRootLocation root=new CmsXmlContentRootLocation(content,en);
  I_CmsXmlContentValueLocation rankLoc=root.getSubValue(N_RANK);
  String rankStr=rankLoc.getValue().getStringValue(m_cms);
  int rank;
  try {
    rank=Integer.parseInt(rankStr);
  }
 catch (  NumberFormatException e) {
    rank=CmsFormatterBean.DEFAULT_CONFIGURATION_RANK;
  }
  m_rank=rank;
  String resType=getString(root,N_TYPE,null);
  m_resourceType=resType;
  String autoEnabled=getString(root,N_AUTO_ENABLED,"false");
  m_autoEnabled=Boolean.parseBoolean(autoEnabled);
  I_CmsXmlContentValueLocation jspLoc=root.getSubValue(N_JSP);
  CmsXmlVfsFileValue jspValue=(CmsXmlVfsFileValue)(jspLoc.getValue());
  CmsUUID jspID=jspValue.getLink(m_cms).getStructureId();
  CmsResource formatterRes=m_cms.readResource(jspID);
  m_formatterResource=formatterRes;
  String previewStr=getString(root,N_PREVIEW,"false");
  m_preview=Boolean.parseBoolean(previewStr);
  String searchableStr=getString(root,N_SEARCH_CONTENT,"true");
  m_extractContent=Boolean.parseBoolean(searchableStr);
  String isDetailStr=getString(root,N_DETAIL,"true");
  boolean isDetail=Boolean.parseBoolean(isDetailStr);
  parseMatch(root);
  parseHeadIncludes(root);
  parseSettings(root);
  CmsFormatterBean formatterBean=new CmsFormatterBean(m_containerTypes,m_formatterResource.getRootPath(),m_formatterResource.getStructureId(),m_width,m_maxWidth,m_preview,m_extractContent,location,m_cssPaths,m_inlineCss.toString(),m_jsPaths,m_inlineJs.toString(),m_niceName,m_resourceType,m_rank,id,m_settings,true,m_autoEnabled,isDetail);
  return formatterBean;
}
