{
  boolean entryExists=false;
  CmsVisitEntryFilter filter=CmsVisitEntryFilter.ALL.filterResource(resource.getStructureId()).filterUser(user.getId());
  if (readVisits(dbc,OpenCms.getSubscriptionManager().getPoolName(),filter).size() > 0) {
    entryExists=true;
    deleteVisits(dbc,OpenCms.getSubscriptionManager().getPoolName(),filter);
  }
  CmsVisitEntry entry=new CmsVisitEntry(user.getId(),System.currentTimeMillis(),resource.getStructureId());
  addVisit(dbc,poolName,entry);
  if (!entryExists) {
    PreparedStatement stmt=null;
    Connection conn=null;
    ResultSet res=null;
    int count=0;
    try {
      conn=m_sqlManager.getConnection(poolName);
      stmt=m_sqlManager.getPreparedStatement(conn,dbc.currentProject(),"C_VISITED_USER_COUNT_1");
      stmt.setString(1,user.getId().toString());
      res=stmt.executeQuery();
      if (res.next()) {
        count=res.getInt(1);
        while (res.next()) {
        }
      }
 else {
        throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_COUNTING_VISITED_RESOURCES_1,user.getName()));
      }
      int maxCount=OpenCms.getSubscriptionManager().getMaxVisitedCount();
      if (count > maxCount) {
        m_sqlManager.closeAll(dbc,null,stmt,res);
        stmt=m_sqlManager.getPreparedStatement(conn,dbc.currentProject(),"C_MYSQL_VISITED_USER_DELETE_2");
        stmt.setString(1,user.getId().toString());
        stmt.setInt(2,count - maxCount);
        stmt.executeUpdate();
      }
    }
 catch (    SQLException e) {
      throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
    }
 finally {
      m_sqlManager.closeAll(dbc,conn,stmt,res);
    }
  }
}
