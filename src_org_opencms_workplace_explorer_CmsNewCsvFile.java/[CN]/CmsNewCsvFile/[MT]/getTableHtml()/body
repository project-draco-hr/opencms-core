{
  String csvData=getParamCsvContent();
  String lineSeparator=System.getProperty("line.separator");
  String formatString=csvData.substring(0,csvData.indexOf(lineSeparator));
  String delimiter=getParamDelimiter();
  StringBuffer xml=new StringBuffer("<table>");
  if (isFormattingInformation(formatString,delimiter)) {
    xml.append(getColGroup(formatString,delimiter));
    csvData=csvData.substring(formatString.length() + lineSeparator.length());
  }
  String line;
  BufferedReader br=new BufferedReader(new StringReader(csvData));
  while ((line=br.readLine()) != null) {
    xml.append("<tr>\n");
    StringTokenizer t=new StringTokenizer(line,delimiter,true);
    boolean hasValue=false;
    while (t.hasMoreElements()) {
      String item=(String)t.nextElement();
      if (!hasValue) {
        xml.append("\t<td>");
        hasValue=true;
      }
      if (!item.equals(delimiter)) {
        if (item.startsWith(TAG_START_DELIMITER) && item.endsWith(TAG_END_DELIMITER)) {
          xml.append(removeStringDelimiters(item));
        }
 else {
          xml.append(CmsStringUtil.escapeHtml(removeStringDelimiters(item)));
        }
      }
 else {
        xml.append("</td>\n");
        hasValue=false;
      }
    }
    if (hasValue) {
      xml.append("</td>\n");
    }
 else {
      xml.append("<td></td>\n");
    }
    xml.append("</tr>\n");
  }
  return xml.append("</table>").toString();
}
