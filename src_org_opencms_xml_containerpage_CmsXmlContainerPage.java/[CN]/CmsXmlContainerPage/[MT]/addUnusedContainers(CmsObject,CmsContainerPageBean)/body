{
  Map<String,CmsContainerBean> currentContainers=cntPage.getContainers();
  List<CmsContainerBean> containers=new ArrayList<CmsContainerBean>();
  for (  String cntName : cntPage.getNames()) {
    containers.add(currentContainers.get(cntName));
  }
  CmsContainerPageBean currentContainerPage=getContainerPage(cms);
  if (currentContainerPage != null) {
    for (    String cntName : currentContainerPage.getNames()) {
      if (!currentContainers.containsKey(cntName)) {
        containers.add(currentContainerPage.getContainers().get(cntName));
      }
    }
  }
  Map<String,CmsContainerElementBean> pageElements=new HashMap<String,CmsContainerElementBean>();
  for (  CmsContainerBean container : containers) {
    for (    CmsContainerElementBean element : container.getElements()) {
      try {
        element.initResource(cms);
        if (!CmsModelGroupHelper.isModelGroupResource(element.getResource())) {
          pageElements.put(element.getInstanceId(),element);
        }
      }
 catch (      CmsException e) {
        LOG.warn(e.getLocalizedMessage(),e);
      }
    }
  }
  Iterator<CmsContainerBean> cntIt=containers.iterator();
  while (cntIt.hasNext()) {
    CmsContainerBean container=cntIt.next();
    if (!currentContainers.containsKey(container.getName()) && container.isNestedContainer() && !pageElements.containsKey(container.getParentInstanceId())) {
      for (      CmsContainerElementBean element : container.getElements()) {
        pageElements.remove(element.getInstanceId());
      }
      cntIt.remove();
    }
  }
  return new CmsContainerPageBean(containers);
}
