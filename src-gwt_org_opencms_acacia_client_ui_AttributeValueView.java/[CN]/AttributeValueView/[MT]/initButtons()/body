{
  m_addButton.addChoice(m_handler.getWidgetService(),new ChoiceMenuEntryBean(m_handler.getAttributeName()),new AsyncCallback<ChoiceMenuEntryBean>(){
    public void onFailure(    Throwable caught){
    }
    public void onSuccess(    ChoiceMenuEntryBean selectedEntry){
    }
  }
);
  m_addButton.addDomHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      m_addButton.hide();
      addNewAttributeValue();
      event.preventDefault();
      event.stopPropagation();
    }
  }
,ClickEvent.getType());
  m_removeButton.setImageClass(I_CmsImageBundle.INSTANCE.style().removeIcon());
  m_removeButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  m_upButton.setImageClass(I_CmsImageBundle.INSTANCE.style().arrowUpIcon());
  m_upButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  m_downButton.setImageClass(I_CmsImageBundle.INSTANCE.style().arrowDownIcon());
  m_downButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  m_helpBubbleClose.setImageClass(I_CmsImageBundle.INSTANCE.style().closeIcon());
  m_helpBubbleClose.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  if (EditorBase.hasDictionary()) {
    m_addButton.setTitle(EditorBase.getMessageForKey(EditorBase.GUI_VIEW_ADD_1,m_label));
    m_attributeChoice.setTitle(EditorBase.getMessageForKey(EditorBase.GUI_CHOICE_ADD_CHOICE_1,m_label));
    m_removeButton.setTitle(EditorBase.getMessageForKey(EditorBase.GUI_VIEW_DELETE_1,m_label));
    m_helpBubbleClose.setTitle(EditorBase.getMessageForKey(EditorBase.GUI_VIEW_CLOSE_0));
    m_upButton.setTitle(EditorBase.getMessageForKey(EditorBase.GUI_VIEW_MOVE_UP_0,m_label));
    m_downButton.setTitle(EditorBase.getMessageForKey(EditorBase.GUI_VIEW_MOVE_DOWN_0,m_label));
  }
}
