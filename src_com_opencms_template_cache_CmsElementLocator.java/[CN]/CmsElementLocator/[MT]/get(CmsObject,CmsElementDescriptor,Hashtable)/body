{
  A_CmsElement result;
  result=(A_CmsElement)m_elements.get(desc);
  if (result == null) {
    I_CmsTemplate cmsTemplate=null;
    if ("METHOD".equals(desc.getTemplateName())) {
      String orgClassName=desc.getClassName();
      String className=orgClassName.substring(0,orgClassName.lastIndexOf("."));
      String methodName=orgClassName.substring(orgClassName.lastIndexOf(".") + 1);
      try {
        cmsTemplate=(I_CmsTemplate)com.opencms.template.CmsTemplateClassManager.getClassInstance(className);
        CmsMethodCacheDirectives mcd=(CmsMethodCacheDirectives)cmsTemplate.getClass().getMethod("getMethodCacheDirectives",new Class[]{CmsObject.class,String.class}).invoke(cmsTemplate,new Object[]{cms,methodName});
        result=new CmsMethodElement(className,methodName,mcd,CmsXmlTemplateLoader.getElementCache().getVariantCachesize());
        put(desc,result);
      }
 catch (      Throwable e) {
        if (OpenCms.getLog(this).isErrorEnabled()) {
          OpenCms.getLog(this).error("Could not initialize method element for class \"" + className + "\"",e);
          return null;
        }
      }
    }
 else {
      try {
        cmsTemplate=(I_CmsTemplate)com.opencms.template.CmsTemplateClassManager.getClassInstance(desc.getClassName());
        result=cmsTemplate.createElement(cms,desc.getTemplateName(),parameters);
        put(desc,result);
      }
 catch (      Throwable e) {
        if (OpenCms.getLog(this).isErrorEnabled()) {
          OpenCms.getLog(this).error("Could not initialize (sub-)element for class \"" + desc.getClassName() + "\"",e);
          throw new CmsException("Could not initialize (sub-)element for class \"" + desc.getClassName() + "\". "+ e.toString(),CmsException.C_XML_WRONG_TEMPLATE_CLASS);
        }
      }
    }
  }
  return result;
}
