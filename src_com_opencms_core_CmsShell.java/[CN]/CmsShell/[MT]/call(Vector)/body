{
  if ((command == null) || (command.size() == 0)) {
    return;
  }
  String splittet[]=new String[command.size()];
  String toCall;
  command.copyInto(splittet);
  toCall=splittet[0];
  if (toCall.startsWith(COMMENT_CHAR))   return;
  Class paramClasses[]=new Class[splittet.length - 1];
  String params[]=new String[splittet.length - 1];
  for (int z=0; z < splittet.length - 1; z++) {
    params[z]=splittet[z + 1];
    paramClasses[z]=String.class;
  }
  try {
    shellCommands.getClass().getMethod(toCall,paramClasses).invoke(shellCommands,params);
  }
 catch (  InvocationTargetException ite) {
    System.err.println("Got Exception while using reflection:");
    ite.getTargetException().printStackTrace();
  }
catch (  NoSuchMethodException nsm) {
    System.out.println("The requested command was not found.\n-----------------------------------------------");
    shellCommands.printHelpText();
  }
catch (  Exception exc) {
    System.err.println("Got Nullpointer Exception while using reflection:");
    printException(exc);
  }
}
