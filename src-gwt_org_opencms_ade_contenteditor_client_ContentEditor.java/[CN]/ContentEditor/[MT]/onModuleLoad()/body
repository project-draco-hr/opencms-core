{
  super.onModuleLoad();
  I_LayoutBundle.INSTANCE.style().ensureInjected();
  m_saveButton=new CmsPushButton();
  m_saveButton.setText("Save");
  m_saveButton.disable("Nothing to save yet");
  m_saveButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      saveEntity();
    }
  }
);
  I_Vie vie=Vie.getInstance();
  ContentDefinition definition=null;
  try {
    definition=(ContentDefinition)CmsRpcPrefetcher.getSerializedObjectFromDictionary(getService(),I_CmsContentService.DICT_CONTENT_DEFINITION);
  }
 catch (  SerializationException e) {
    RootPanel.get().add(new Label(e.getMessage()));
    return;
  }
  m_entityId=definition.getEntity().getId();
  m_locale=definition.getLocale();
  FlowPanel panel=new FlowPanel();
  RootPanel.get().add(panel);
  panel.add(m_saveButton);
  HTML html=new HTML();
  panel.add(html);
  I_Type baseType=definition.getTypes().get(definition.getEntity().getTypeName());
  vie.registerTypes(baseType,definition.getTypes());
  I_Entity entity=vie.registerEntity(definition.getEntity());
  WidgetService service=new WidgetService();
  service.init(definition);
  service.registerWidgetFactory("string",new I_WidgetFactory(){
    public I_EditWidget createWidget(    String configuration){
      return new StringWidget();
    }
  }
);
  service.registerWidgetFactory("org.opencms.widgets.CmsHtmlWidget",new I_WidgetFactory(){
    public I_EditWidget createWidget(    String configuration){
      return new TinyMCEWidget(null);
    }
  }
);
  I_EntityRenderer inlineRenderer=new ComplexTypeRenderer(service,vie);
  service.setDefaultComplexRenderer(inlineRenderer);
  service.setDefaultSimpleRenderer(inlineRenderer);
  I_EntityRenderer renderer=service.getRendererForType(vie.getType(entity.getTypeName()));
  renderer.render(entity,html.getElement());
  ((Entity)entity).addValueChangeHandler(new ValueChangeHandler<I_Entity>(){
    public void onValueChange(    ValueChangeEvent<I_Entity> event){
      m_saveButton.enable();
    }
  }
);
}
