{
  int counter=0;
  int resCount=resources.size();
  for (  CmsResource resource : resources) {
    try {
      CmsFile file=getCms().readFile(resource);
      byte[] contents=file.getContents();
      ++counter;
      report(report,counter,resCount,resource);
      byte[] result=null;
      try {
        boolean xpath=false;
        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_settings.getXpath()) && CmsResourceTypeXmlContent.isXmlContent(resource)) {
          xpath=true;
        }
        if (!xpath) {
          result=replaceInContent(cmsObject,report,file,contents,replace);
        }
 else {
          result=replaceInXml(cmsObject,file,replace,report);
        }
      }
 catch (      Exception e) {
        report.println(Messages.get().container(Messages.RPT_SOURCESEARCH_APPLY_PATTERN_ERROR_1,e),I_CmsReport.FORMAT_ERROR);
        m_errorSearch+=1;
        continue;
      }
      if ((result != null) && (contents != null) && !contents.equals(result)) {
        if (!writeContent(cmsObject,report,file,result)) {
          continue;
        }
      }
    }
 catch (    Exception e) {
      report.print(org.opencms.report.Messages.get().container(Messages.RPT_SOURCESEARCH_COULD_NOT_READ_FILE_0),I_CmsReport.FORMAT_ERROR);
      report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_FAILED_0),I_CmsReport.FORMAT_ERROR);
      m_errorSearch+=1;
      continue;
    }
  }
  reportResults(replace,report,resources.size());
}
