{
  CmsObject cms=getCmsObject();
  echo("Testing coping a folder with a (from other user) locked sibling");
  cms.loginUser("test1","test1");
  cms.getRequestContext().setCurrentProject(cms.readProject("testproject"));
  String sourceFolder="/folder1";
  String file="/index.html";
  cms.lockResource(sourceFolder + file);
  CmsUser user=cms.getRequestContext().currentUser();
  cms=getCmsObject();
  assertLock(cms,sourceFolder + file,CmsLockType.EXCLUSIVE,user);
  String destinationFolder="/folder1_copy";
  cms.copyResource(sourceFolder,destinationFolder,CmsResource.COPY_AS_SIBLING);
  assertLock(cms,sourceFolder + file,CmsLockType.EXCLUSIVE,user);
  assertLock(cms,destinationFolder + file,CmsLockType.SHARED_INHERITED,user);
  String destinationFolder2="/folder1_copy2";
  cms.copyResource(sourceFolder,destinationFolder2,CmsResource.COPY_PRESERVE_SIBLING);
  assertLock(cms,sourceFolder + file,CmsLockType.EXCLUSIVE,user);
  assertLock(cms,destinationFolder + file,CmsLockType.SHARED_INHERITED,user);
  assertLock(cms,destinationFolder2 + file,CmsLockType.SHARED_INHERITED,user);
  cms.unlockResource(destinationFolder);
  assertLock(cms,sourceFolder + file,CmsLockType.EXCLUSIVE,user);
  assertLock(cms,destinationFolder + file,CmsLockType.SHARED_EXCLUSIVE,user);
  assertLock(cms,destinationFolder2 + file,CmsLockType.SHARED_INHERITED,user);
  cms.unlockResource(destinationFolder2);
  assertLock(cms,sourceFolder + file,CmsLockType.EXCLUSIVE,user);
  assertLock(cms,destinationFolder + file,CmsLockType.SHARED_EXCLUSIVE,user);
  assertLock(cms,destinationFolder2 + file,CmsLockType.SHARED_EXCLUSIVE,user);
}
