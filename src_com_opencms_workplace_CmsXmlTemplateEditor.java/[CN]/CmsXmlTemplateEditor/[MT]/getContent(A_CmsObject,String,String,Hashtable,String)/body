{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  A_CmsRequestContext reqCont=cms.getRequestContext();
  HttpServletRequest orgReq=(HttpServletRequest)reqCont.getRequest().getOriginalRequest();
  HttpSession session=orgReq.getSession(true);
  CmsFile editFile=null;
  Encoder encoder=new Encoder();
  String content=(String)parameters.get("CONTENT");
  String file=(String)parameters.get("file");
  String body=(String)parameters.get("body");
  String editor=(String)parameters.get("editor");
  String title=(String)parameters.get("title");
  String bodytitle=(String)parameters.get("bodytitle");
  String layoutTemplateFilename=(String)parameters.get("template");
  String bodyElementClassName=(String)parameters.get("bodyclass");
  String bodyElementFilename=(String)parameters.get("bodyfile");
  String action=(String)parameters.get("action");
  String oldEdit=(String)session.getValue("te_oldedit");
  String bodytag=(String)session.getValue("bodytag");
  String oldLayoutFilename=(String)session.getValue("te_oldlayout");
  String oldTitle=(String)session.getValue("te_title");
  String oldBody=(String)session.getValue("te_oldbody");
  String oldBodytitle=(String)session.getValue("te_oldbodytitle");
  String layoutTemplateClassName=(String)session.getValue("te_templateclass");
  String tempPageFilename=(String)session.getValue("te_temppagefile");
  String tempBodyFilename=(String)session.getValue("te_tempbodyfile");
  String style=(String)session.getValue("te_stylesheet");
  boolean existsContentParam=(content != null && (!"".equals(content)));
  boolean existsFileParam=(file != null && (!"".equals(file)));
  boolean saveRequested=((action != null) && ("save".equals(action) || "saveexit".equals(action)));
  boolean exitRequested=((action != null) && ("exit".equals(action) || "saveexit".equals(action)));
  boolean bodychangeRequested=((oldBody != null) && (body != null) && (!(oldBody.equals(body))));
  boolean templatechangeRequested=(oldLayoutFilename != null && layoutTemplateFilename != null && (!(oldLayoutFilename.equals(layoutTemplateFilename))));
  boolean titlechangeRequested=(oldTitle != null && title != null && (!(oldTitle.equals(title))));
  boolean newbodyRequested=((action != null) && "newbody".equals(action));
  boolean previewRequested=((action != null) && "preview".equals(action));
  boolean bodytitlechangeRequested=(oldBodytitle != null && bodytitle != null && (!(oldBodytitle.equals(bodytitle))));
  if (!existsFileParam) {
    throwException("No \"file\" parameter given. Don't know which file should be edited.");
  }
  if (!existsContentParam) {
    CmsXmlControlFile originalControlFile=new CmsXmlControlFile(cms,file);
    if (originalControlFile.isElementClassDefined("body")) {
      bodyElementClassName=originalControlFile.getElementClass("body");
    }
    if (originalControlFile.isElementTemplateDefined("body")) {
      bodyElementFilename=originalControlFile.getElementTemplate("body");
    }
    if ((bodyElementClassName == null) || (bodyElementFilename == null)) {
    }
    A_CmsResource pageFileResource=cms.readFileHeader(file);
    if (!pageFileResource.isLocked()) {
      cms.lockResource(file);
    }
    A_CmsResource contentFileResource=cms.readFileHeader(bodyElementFilename);
    if (!contentFileResource.isLocked()) {
      cms.lockResource(bodyElementFilename);
    }
    layoutTemplateFilename=originalControlFile.getMasterTemplate();
    layoutTemplateClassName=originalControlFile.getTemplateClass();
    if (editor == null || "".equals(editor)) {
      editor=this.C_SELECTBOX_EDITORVIEWS[C_SELECTBOX_EDITORVIEWS_DEFAULT];
      parameters.put("editor",editor);
    }
    title=cms.readMetainformation(file,C_METAINFO_TITLE);
    if (title == null) {
      title="";
    }
    tempPageFilename=createTemporaryFile(cms,pageFileResource);
    tempBodyFilename=createTemporaryFile(cms,contentFileResource);
    session.putValue("te_temppagefile",tempPageFilename);
    session.putValue("te_tempbodyfile",tempBodyFilename);
  }
  if (titlechangeRequested) {
    try {
      cms.writeMetainformation(tempPageFilename,C_METAINFO_TITLE,title);
    }
 catch (    CmsException e) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + "Could not write metainformation " + C_METAINFO_TITLE+ " for file "+ file+ ".");
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + e);
      }
    }
  }
  Object tempObj=CmsTemplateClassManager.getClassInstance(cms,layoutTemplateClassName);
  CmsXmlTemplate layoutTemplateClassObject=(CmsXmlTemplate)tempObj;
  CmsXmlTemplateFile layoutTemplateFile=layoutTemplateClassObject.getOwnTemplateFile(cms,layoutTemplateFilename,null,parameters,null);
  tempObj=CmsTemplateClassManager.getClassInstance(cms,bodyElementClassName);
  CmsXmlTemplate bodyElementClassObject=(CmsXmlTemplate)tempObj;
  CmsXmlTemplateFile bodyTemplateFile=bodyElementClassObject.getOwnTemplateFile(cms,tempBodyFilename,"body",parameters,null);
  Element bodyTag=layoutTemplateFile.getBodyTag();
  bodyTemplateFile.setBodyTag(bodyTag);
  if (templatechangeRequested) {
    CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
    temporaryControlFile.setMasterTemplate(layoutTemplateFilename);
    temporaryControlFile.write();
    String browser=orgReq.getHeader("user-agent");
    String hostName=orgReq.getScheme() + "://" + orgReq.getHeader("HOST")+ orgReq.getServletPath()+ "/";
    String styleName=null;
    if (browser.indexOf("MSIE") > -1) {
      styleName="stylesheet-ie";
    }
 else {
      styleName="stylesheet-ns";
    }
    try {
      style=hostName + temporaryControlFile.getParameter("root",styleName);
    }
 catch (    Exception e) {
      try {
        style=hostName + layoutTemplateFile.getParameter("root",styleName);
      }
 catch (      Exception e2) {
        style="";
      }
    }
    session.putValue("te_stylesheet",style);
  }
  if (!existsContentParam) {
    Vector allBodys=bodyTemplateFile.getAllSections();
    if (allBodys == null || allBodys.size() == 0) {
      body="";
    }
 else {
      body=(String)allBodys.elementAt(0);
    }
    bodytitle=bodyTemplateFile.getSectionTitle(body);
    CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
    temporaryControlFile.setElementTemplSelector("body",body);
    temporaryControlFile.setElementTemplate("body",tempBodyFilename);
    temporaryControlFile.write();
    String browser=orgReq.getHeader("user-agent");
    String hostName=orgReq.getScheme() + "://" + orgReq.getHeader("HOST")+ orgReq.getServletPath()+ "/";
    String styleName=null;
    if (browser.indexOf("MSIE") > -1) {
      styleName="stylesheet-ie";
    }
 else {
      styleName="stylesheet-ns";
    }
    try {
      style=hostName + temporaryControlFile.getParameter("root",styleName);
    }
 catch (    Exception e) {
      try {
        style=hostName + layoutTemplateFile.getParameter("root",styleName);
      }
 catch (      Exception e2) {
        style="";
      }
    }
    session.putValue("te_stylesheet",style);
  }
  if (bodytitlechangeRequested) {
    bodyTemplateFile.setSectionTitle(oldBody,bodytitle);
  }
  if (bodychangeRequested) {
    CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
    temporaryControlFile.setElementTemplSelector("body",body);
    temporaryControlFile.write();
    bodytitle=bodyTemplateFile.getSectionTitle(body);
  }
  if (newbodyRequested) {
    int bodyNum=bodyTemplateFile.createNewSection("body");
    body="body" + bodyNum;
    CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
    temporaryControlFile.setElementTemplSelector("body",body);
    temporaryControlFile.setElementTemplate("body",tempBodyFilename);
    temporaryControlFile.write();
  }
  if (existsContentParam) {
    content=encoder.unescape(content);
    bodyTemplateFile.setEditedTemplateContent(content,oldBody,oldEdit.equals(C_SELECTBOX_EDITORVIEWS[0]));
    bodyTemplateFile.write();
  }
  if (previewRequested) {
    preview(tempPageFilename,reqCont);
    return "".getBytes();
  }
  if (saveRequested) {
    commitTemporaryFile(cms,bodyElementFilename,tempBodyFilename);
    cms.writeMetainformation(file,C_METAINFO_TITLE,cms.readMetainformation(tempPageFilename,C_METAINFO_TITLE));
    CmsXmlControlFile originalControlFile=new CmsXmlControlFile(cms,file);
    CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
    originalControlFile.setMasterTemplate(temporaryControlFile.getMasterTemplate());
    originalControlFile.write();
  }
  if (exitRequested) {
    CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
    temporaryControlFile.removeFromFileCache();
    bodyTemplateFile.removeFromFileCache();
    cms.deleteFile(tempBodyFilename);
    cms.deleteFile(tempPageFilename);
    try {
      cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceMainPath());
    }
 catch (    IOException e) {
      throwException("Could not send redirect to workplace main screen.",e);
    }
    return "".getBytes();
  }
  content=bodyTemplateFile.getEditableTemplateContent(this,parameters,body,editor.equals(C_SELECTBOX_EDITORVIEWS[0]),style);
  content=encoder.escape(content);
  parameters.put("CONTENT",content);
  parameters.put("body",body);
  parameters.put("bodyfile",bodyElementFilename);
  parameters.put("bodyclass",bodyElementClassName);
  parameters.put("template",layoutTemplateFilename);
  parameters.remove("file");
  parameters.remove("EXIT");
  parameters.remove("save");
  int numEditors=C_SELECTBOX_EDITORVIEWS.length;
  for (int i=0; i < numEditors; i++) {
    if (editor.equals(C_SELECTBOX_EDITORVIEWS[i])) {
      parameters.put("editor._CLASS_",C_SELECTBOX_EDITORVIEWS_CLASSES[i]);
      parameters.put("editor._TEMPLATE_",getConfigFile(cms).getWorkplaceTemplatePath() + C_SELECTBOX_EDITORVIEWS_TEMPLATES[i]);
    }
  }
  session.putValue("te_oldedit",editor);
  session.putValue("te_oldbody",body);
  session.putValue("te_oldbodytitle",bodytitle);
  session.putValue("te_oldlayout",layoutTemplateFilename);
  session.putValue("te_title",title);
  session.putValue("te_templateclass",layoutTemplateClassName);
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  xmlTemplateDocument.setXmlData("editor",editor);
  xmlTemplateDocument.setXmlData("bodyfile",bodyElementFilename);
  xmlTemplateDocument.setXmlData("bodyclass",bodyElementClassName);
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
