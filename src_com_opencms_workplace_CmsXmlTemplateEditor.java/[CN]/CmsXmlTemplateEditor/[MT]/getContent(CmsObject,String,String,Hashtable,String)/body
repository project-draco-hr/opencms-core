{
  CmsRequestContext reqCont=cms.getRequestContext();
  HttpServletRequest orgReq=(HttpServletRequest)reqCont.getRequest().getOriginalRequest();
  I_CmsSession session=cms.getRequestContext().getSession(true);
  int tempProject=0;
  try {
    tempProject=Integer.parseInt((String)cms.getRegistry().getSystemValue("tempfileproject"));
  }
 catch (  Exception e) {
    throw new CmsException("Can not read projectId of tempfileproject for creating temporary file for editing! " + e.toString());
  }
  if (tempProject == 0) {
    throw new CmsException("Can not create temporary file for editing!");
  }
  int curProject=cms.getRequestContext().currentProject().getId();
  String browser=orgReq.getHeader("user-agent");
  String hostName=orgReq.getScheme() + "://" + orgReq.getServerName()+ ":"+ orgReq.getServerPort();
  Encoder encoder=new Encoder();
  String content=(String)parameters.get(C_PARA_CONTENT);
  if (content == null) {
    content=(String)session.getValue(C_PARA_CONTENT);
    session.removeValue(C_PARA_CONTENT);
  }
  String body=(String)parameters.get("body");
  if (body == null) {
    body=(String)session.getValue("body");
    session.removeValue("body");
  }
  String file=(String)parameters.get(C_PARA_FILE);
  if (file == null) {
    file=(String)session.getValue(C_PARA_FILE);
    session.removeValue(C_PARA_FILE);
  }
  String editor=(String)parameters.get("editor");
  if ((editor == null) || "".equals(editor)) {
    editor=(String)session.getValue("editor");
    if (editor != null) {
      parameters.put("editor",editor);
    }
    session.removeValue("editor");
  }
  String title=(String)parameters.get(C_PARA_TITLE);
  if (title == null) {
    title=(String)session.getValue(C_PARA_TITLE);
    session.removeValue(C_PARA_TITLE);
  }
  String bodytitle=(String)parameters.get("bodytitle");
  if (bodytitle == null) {
    bodytitle=(String)session.getValue("bodytitle");
    session.removeValue("bodytitle");
  }
  String layoutTemplateFilename=(String)parameters.get("template");
  if (layoutTemplateFilename == null) {
    layoutTemplateFilename=(String)session.getValue("template");
    session.removeValue("template");
  }
  String layoutTemplatFilenameRelative=layoutTemplateFilename;
  layoutTemplateFilename=Utils.mergeAbsolutePath(file,layoutTemplateFilename);
  String bodyElementClassName=(String)parameters.get("bodyclass");
  if (bodyElementClassName == null) {
    bodyElementClassName=(String)session.getValue("bodyclass");
    session.removeValue("bodyclass");
  }
  String bodyElementFilename=(String)parameters.get("bodyfile");
  if (bodyElementFilename == null) {
    bodyElementFilename=(String)session.getValue("bodyfile");
    session.removeValue("bodyfile");
  }
  String action=(String)parameters.get(C_PARA_ACTION);
  String startView=(String)parameters.get("startview");
  if ((startView == null) || ("".equals(startView))) {
    startView=(String)session.getValue("startview");
    session.removeValue("startview");
  }
  String oldEdit=(String)session.getValue("te_oldedit");
  String oldLayoutFilename=(String)session.getValue("te_oldlayout");
  String oldTitle=(String)session.getValue("te_title");
  String oldBody=(String)session.getValue("te_oldbody");
  String oldBodytitle=(String)session.getValue("te_oldbodytitle");
  String layoutTemplateClassName=(String)session.getValue("te_templateclass");
  String tempPageFilename=(String)session.getValue("te_temppagefile");
  String tempBodyFilename=(String)session.getValue("te_tempbodyfile");
  String style=(String)session.getValue("te_stylesheet");
  boolean existsContentParam=content != null;
  boolean existsFileParam=(file != null && (!"".equals(file)));
  boolean saveRequested=((action != null) && (C_EDIT_ACTION_SAVE.equals(action) || C_EDIT_ACTION_SAVEEXIT.equals(action)));
  boolean exitRequested=((action != null) && (C_EDIT_ACTION_EXIT.equals(action) || C_EDIT_ACTION_SAVEEXIT.equals(action)));
  boolean bodychangeRequested=((oldBody != null) && (body != null) && (!(oldBody.equals(body))));
  boolean templatechangeRequested=(oldLayoutFilename != null && layoutTemplateFilename != null && (!(oldLayoutFilename.equals(layoutTemplateFilename))));
  boolean titlechangeRequested=(oldTitle != null && title != null && (!(oldTitle.equals(title))));
  boolean newbodyRequested=((action != null) && "newbody".equals(action));
  boolean previewRequested=((action != null) && "preview".equals(action));
  boolean bodytitlechangeRequested=(oldBodytitle != null && bodytitle != null && (!(oldBodytitle.equals(bodytitle))));
  String saveerror="";
  if (!existsFileParam) {
    throwException("No \"file\" parameter given. Don't know which file should be edited.");
  }
  parameters.put("root.pagetype",cms.getResourceType(cms.readFileHeader(file).getType()).getResourceTypeName());
  parameters.put("filename_for_relative_template",file);
  if (!existsContentParam) {
    CmsXmlControlFile originalControlFile=new CmsXmlControlFile(cms,file);
    if (originalControlFile.isElementClassDefined(C_BODY_ELEMENT)) {
      bodyElementClassName=originalControlFile.getElementClass(C_BODY_ELEMENT);
    }
    if (originalControlFile.isElementTemplateDefined(C_BODY_ELEMENT)) {
      bodyElementFilename=originalControlFile.getElementTemplate(C_BODY_ELEMENT);
    }
    if ((bodyElementClassName == null) || (bodyElementFilename == null)) {
    }
    CmsResource pageFileResource=cms.readFileHeader(file);
    if (!pageFileResource.isLocked()) {
      cms.lockResource(file);
    }
    CmsResource contentFileResource=cms.readFileHeader(bodyElementFilename);
    if (!contentFileResource.isLocked()) {
      cms.lockResource(bodyElementFilename);
    }
    layoutTemplateFilename=originalControlFile.getMasterTemplate();
    layoutTemplatFilenameRelative=layoutTemplateFilename;
    layoutTemplateFilename=Utils.mergeAbsolutePath(originalControlFile.getAbsoluteFilename(),layoutTemplateFilename);
    layoutTemplateClassName=originalControlFile.getTemplateClass();
    int browserId;
    if (browser.indexOf("MSIE") > -1) {
      browserId=0;
    }
 else {
      browserId=1;
    }
    if (editor == null || "".equals(editor)) {
      if (startView == null || "".equals(startView)) {
        editor=this.C_SELECTBOX_EDITORVIEWS[C_SELECTBOX_EDITORVIEWS_DEFAULT[browserId]];
      }
 else {
        editor=startView;
      }
      session.putValue("te_pageeditor",editor);
      parameters.put("editor",editor);
    }
    title=cms.readProperty(file,C_PROPERTY_TITLE);
    if (title == null) {
      title="";
    }
    if (!cms.accessWrite(file)) {
      throw new CmsException(getClassName() + "Insufficient rights for editing the file " + file,CmsException.C_NO_ACCESS);
    }
    if (!cms.accessWrite(bodyElementFilename)) {
      throw new CmsException(getClassName() + "Insufficient rights for editing the file " + bodyElementFilename,CmsException.C_NO_ACCESS);
    }
    String noactivex=(String)parameters.get("noactivex");
    if (noactivex == null || "".equals(noactivex.trim())) {
      tempPageFilename=createTemporaryFile(cms,pageFileResource,tempProject,curProject);
    }
 else {
      tempPageFilename=(String)session.getValue("te_temppagefile");
    }
    cms.getRequestContext().setCurrentProject(curProject);
    tempBodyFilename="/content/bodys" + tempPageFilename;
    session.putValue("te_temppagefile",tempPageFilename);
    session.putValue("te_tempbodyfile",tempBodyFilename);
  }
  Object tempObj=CmsTemplateClassManager.getClassInstance(cms,layoutTemplateClassName);
  CmsXmlTemplate layoutTemplateClassObject=(CmsXmlTemplate)tempObj;
  CmsXmlTemplateFile layoutTemplateFile=layoutTemplateClassObject.getOwnTemplateFile(cms,layoutTemplateFilename,null,parameters,null);
  tempObj=CmsTemplateClassManager.getClassInstance(cms,bodyElementClassName);
  CmsXmlTemplate bodyElementClassObject=(CmsXmlTemplate)tempObj;
  CmsXmlTemplateFile bodyTemplateFile=bodyElementClassObject.getOwnTemplateFile(cms,tempBodyFilename,C_BODY_ELEMENT,parameters,null);
  CmsXmlControlFile temporaryControlFile=new CmsXmlControlFile(cms,tempPageFilename);
  if (!existsContentParam) {
    Vector allBodys=bodyTemplateFile.getAllSections();
    if (allBodys == null || allBodys.size() == 0) {
      body="";
    }
 else {
      body=(String)allBodys.elementAt(0);
    }
    bodytitle=body.equals("(default)") ? "" : body;
    temporaryControlFile.setElementTemplSelector(C_BODY_ELEMENT,body);
    temporaryControlFile.setElementTemplate(C_BODY_ELEMENT,tempBodyFilename);
    cms.getRequestContext().setCurrentProject(tempProject);
    temporaryControlFile.write();
    cms.getRequestContext().setCurrentProject(curProject);
    try {
      style=getStylesheet(cms,null,layoutTemplateFile,null);
      if (style != null && !"".equals(style)) {
        style=hostName + style;
      }
    }
 catch (    Exception e) {
      style="";
    }
    session.putValue("te_stylesheet",style);
  }
 else {
    if (titlechangeRequested) {
      try {
        cms.getRequestContext().setCurrentProject(tempProject);
        cms.writeProperty(tempPageFilename,C_PROPERTY_TITLE,title);
        cms.getRequestContext().setCurrentProject(curProject);
      }
 catch (      CmsException e) {
        cms.getRequestContext().setCurrentProject(curProject);
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,getClassName() + "Could not write property " + C_PROPERTY_TITLE+ " for file "+ file+ ".");
          A_OpenCms.log(C_OPENCMS_INFO,getClassName() + e);
        }
      }
    }
    if (templatechangeRequested) {
      temporaryControlFile.setMasterTemplate(layoutTemplatFilenameRelative);
      try {
        style=getStylesheet(cms,null,layoutTemplateFile,null);
        if (style != null && !"".equals(style)) {
          style=hostName + style;
        }
      }
 catch (      Exception e) {
        style="";
      }
      session.putValue("te_stylesheet",style);
    }
    if (bodytitlechangeRequested) {
      if ((!oldBody.equals("(default)")) && (!oldBody.equals("script"))) {
        if (bodytitle.toLowerCase().equals("script")) {
          bodytitle="script";
        }
        try {
          bodyTemplateFile.renameSection(oldBody,bodytitle);
          oldBody=bodytitle;
          if (!bodychangeRequested) {
            body=bodytitle;
          }
        }
 catch (        Exception e) {
          bodytitle=oldBodytitle;
        }
        if (bodytitle.equals("script")) {
          session.putValue("te_pageeditor",editor);
          editor=C_SELECTBOX_EDITORVIEWS[1];
          parameters.put("editor",editor);
        }
      }
 else {
        bodytitle=oldBodytitle;
      }
    }
    if (bodychangeRequested) {
      temporaryControlFile.setElementTemplSelector(C_BODY_ELEMENT,body);
      bodytitle=body.equals("(default)") ? "" : body;
      if (body.equals("script")) {
        session.putValue("te_pageeditor",editor);
        editor=C_SELECTBOX_EDITORVIEWS[1];
        parameters.put("editor",editor);
      }
 else {
        if (oldBody.equals("script")) {
          editor=(String)session.getValue("te_pageeditor");
          parameters.put("editor",editor);
        }
      }
    }
    if (newbodyRequested) {
      body=C_BODY_ELEMENT + bodyTemplateFile.createNewSection(C_BODY_ELEMENT);
      bodytitle=body;
      temporaryControlFile.setElementTemplSelector(C_BODY_ELEMENT,body);
      temporaryControlFile.setElementTemplate(C_BODY_ELEMENT,tempBodyFilename);
    }
    content=encoder.unescape(content);
    if ((!exitRequested) || saveRequested) {
      bodyTemplateFile.setEditedTemplateContent(cms,content,oldBody,oldEdit.equals(C_SELECTBOX_EDITORVIEWS[0]),file);
    }
    cms.getRequestContext().setCurrentProject(tempProject);
    bodyTemplateFile.write();
    temporaryControlFile.write();
    cms.getRequestContext().setCurrentProject(curProject);
  }
  if (previewRequested) {
    preview(tempPageFilename,reqCont);
    return "".getBytes();
  }
  if (saveRequested) {
    try {
      commitTemporaryFile(cms,bodyElementFilename,tempBodyFilename,tempProject,curProject);
      cms.getRequestContext().setCurrentProject(tempProject);
      title=cms.readProperty(tempPageFilename,C_PROPERTY_TITLE);
      cms.getRequestContext().setCurrentProject(curProject);
      if (title != null && !"".equals(title)) {
        cms.writeProperty(file,C_PROPERTY_TITLE,title);
      }
      CmsXmlControlFile originalControlFile=new CmsXmlControlFile(cms,file);
      originalControlFile.setMasterTemplate(temporaryControlFile.getMasterTemplate());
      originalControlFile.write();
      CmsPageLinks linkObject=cms.getPageLinks(file);
      cms.createLinkEntrys(linkObject.getResourceId(),linkObject.getLinkTargets());
    }
 catch (    CmsException e) {
      saveerror=e.getShortException();
      if (content != null) {
        session.putValue(C_PARA_CONTENT,content);
      }
      if (body != null) {
        session.putValue("body",body);
      }
      if (file != null) {
        session.putValue(C_PARA_FILE,file);
      }
      if (editor != null) {
        session.putValue("editor",editor);
      }
      if (title != null) {
        session.putValue(C_PARA_TITLE,title);
      }
      if (bodytitle != null) {
        session.putValue("bodytitle",bodytitle);
      }
      if (layoutTemplatFilenameRelative != null) {
        session.putValue("template",layoutTemplatFilenameRelative);
      }
      if (bodyElementClassName != null) {
        session.putValue("bodyclass",bodyElementClassName);
      }
      if (bodyElementFilename != null) {
        session.putValue("bodyfile",bodyElementFilename);
      }
      if (startView != null) {
        session.putValue("startview",startView);
      }
    }
  }
  if (exitRequested && ((saveerror == null) || "".equals(saveerror))) {
    temporaryControlFile.removeFromFileCache();
    bodyTemplateFile.removeFromFileCache();
    cms.getRequestContext().setCurrentProject(tempProject);
    cms.deleteFile(tempPageFilename);
    cms.getRequestContext().setCurrentProject(curProject);
    try {
      cms.getRequestContext().getResponse().sendCmsRedirect("/system/workplace/action/index.html");
    }
 catch (    IOException e) {
      throwException("Could not send redirect to workplace main screen.",e);
    }
    return null;
  }
  Element bodyTag=layoutTemplateFile.getBodyTag();
  bodyTemplateFile.setBodyTag(bodyTag);
  content=bodyTemplateFile.getEditableTemplateContent(this,parameters,body,editor.equals(C_SELECTBOX_EDITORVIEWS[0]),style);
  content=encoder.escapeWBlanks(content);
  parameters.put(C_PARA_CONTENT,content);
  parameters.put("body",body);
  parameters.put("bodyfile",bodyElementFilename);
  parameters.put("bodyclass",bodyElementClassName);
  parameters.put("template",layoutTemplateFilename);
  parameters.remove(C_PARA_FILE);
  parameters.remove(C_PARA_ACTION);
  int numEditors=C_SELECTBOX_EDITORVIEWS.length;
  for (int i=0; i < numEditors; i++) {
    if (editor.equals(C_SELECTBOX_EDITORVIEWS[i])) {
      parameters.put("editor._CLASS_",C_SELECTBOX_EDITORVIEWS_CLASSES[i]);
      parameters.put("editor._TEMPLATE_","/system/workplace/templates/" + C_SELECTBOX_EDITORVIEWS_TEMPLATES[i]);
    }
  }
  session.putValue("te_file",file);
  session.putValue("te_oldedit",editor);
  session.putValue("te_oldbody",body);
  session.putValue("te_oldbodytitle",bodytitle);
  session.putValue("te_oldlayout",layoutTemplateFilename);
  if (title != null) {
    session.putValue("te_title",title);
  }
 else {
    session.putValue("te_title","");
  }
  session.putValue("te_templateclass",layoutTemplateClassName);
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  xmlTemplateDocument.setData("editor",editor);
  xmlTemplateDocument.setData("bodyfile",bodyElementFilename);
  xmlTemplateDocument.setData("bodyclass",bodyElementClassName);
  xmlTemplateDocument.setData("editorframe",(String)parameters.get("root.editorframe"));
  xmlTemplateDocument.setData(C_PARA_FILE,file);
  if (!"".equals(saveerror)) {
    templateSelector="errorsave";
    xmlTemplateDocument.setData("errordetail",saveerror);
    xmlTemplateDocument.setData("errorlasturl",xmlTemplateDocument.getFilename() + ".html");
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
