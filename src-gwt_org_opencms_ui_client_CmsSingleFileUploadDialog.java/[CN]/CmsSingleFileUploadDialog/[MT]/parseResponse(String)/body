{
  cancelUpdateProgress();
  stopLoadingAnimation();
  if ((!m_canceled) && CmsStringUtil.isNotEmptyOrWhitespaceOnly(results)) {
    JSONObject jsonObject=JSONParser.parseStrict(results).isObject();
    boolean success=jsonObject.get(I_CmsUploadConstants.KEY_SUCCESS).isBoolean().booleanValue();
    double size=jsonObject.get(I_CmsUploadConstants.KEY_REQUEST_SIZE).isNumber().doubleValue();
    long requestSize=new Double(size).longValue();
    if (m_contentLength == 0) {
      m_contentLength=requestSize;
    }
    if (success) {
      m_mainPanel.displayDialogInfo(Messages.get().key(Messages.GUI_UPLOAD_INFO_FINISHING_0),false);
      m_progressInfo.finish();
      JSONValue uploadedFilesVal=jsonObject.get(I_CmsUploadConstants.KEY_UPLOADED_FILE_NAMES);
      if (uploadedFilesVal != null) {
        JSONArray uploadedFilesArray=uploadedFilesVal.isArray();
        if (uploadedFilesArray != null) {
          List<String> uploadedFiles=new ArrayList<String>();
          if (uploadedFilesArray != null) {
            for (int i=0; i < uploadedFilesArray.size(); i++) {
              JSONString entry=uploadedFilesArray.get(i).isString();
              if (entry != null) {
                uploadedFiles.add(entry.stringValue());
              }
            }
          }
          if (m_context != null) {
            m_context.onUploadFinished(uploadedFiles);
          }
        }
      }
      closeOnSuccess();
    }
 else {
      String message=jsonObject.get(I_CmsUploadConstants.KEY_MESSAGE).isString().stringValue();
      String stacktrace=jsonObject.get(I_CmsUploadConstants.KEY_STACKTRACE).isString().stringValue();
      showErrorReport(message,stacktrace);
    }
  }
}
