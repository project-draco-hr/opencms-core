{
  CmsUUID id=new CmsUUID();
  PreparedStatement stmt=null;
  Connection conn=null;
  if (existsUser(dbc,name,type,null)) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_USER_WITH_NAME_ALREADY_EXISTS_1,name);
    if (LOG.isErrorEnabled()) {
      LOG.error(message.key());
    }
    throw new CmsDbEntryAlreadyExistsException(message);
  }
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_USERS_ADD");
    stmt.setString(1,id.toString());
    stmt.setString(2,name);
    stmt.setString(3,OpenCms.getPasswordHandler().digest(password));
    stmt.setString(4,description);
    stmt.setString(5,firstname);
    stmt.setString(6,lastname);
    stmt.setString(7,email);
    stmt.setLong(8,lastlogin);
    stmt.setInt(9,flags);
    stmt.setBytes(10,internalSerializeAdditionalUserInfo(additionalInfos));
    stmt.setString(11,address);
    stmt.setInt(12,type);
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(org.opencms.db.generic.Messages.get().container(org.opencms.db.generic.Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
catch (  IOException e) {
    throw new CmsDbIoException(Messages.get().container(Messages.ERR_SERIALIZING_USER_DATA_1,name),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
  return readUser(dbc,id);
}
