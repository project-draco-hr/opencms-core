{
  Element entryElement=parent.addElement(XmlNode.SiteEntry.name());
  entryElement.addElement(XmlNode.Id.name()).addCDATA(entry.getId().toString());
  entryElement.addElement(XmlNode.Name.name()).addCDATA(entry.getName());
  entryElement.addElement(XmlNode.Title.name()).addCDATA(entry.getTitle());
  Element vfsFile=entryElement.addElement(XmlNode.VfsFile.name());
  fillResource(cms,vfsFile,entry.getResourceId());
  Element propElement=null;
  for (  Map.Entry<String,String> property : entry.getProperties().entrySet()) {
    String propName=property.getKey();
    boolean isSitemapProperty=CmsSitemapManager.Property.sitemap.name().equals(propName);
    if (!propertiesConf.containsKey(propName) && !isSitemapProperty) {
      continue;
    }
    if (propElement == null) {
      propElement=entryElement.addElement(CmsXmlContentProperty.XmlNode.Properties.name());
    }
    propElement.addElement(CmsXmlContentProperty.XmlNode.Name.name()).addCDATA(propName);
    Element valueElement=propElement.addElement(CmsXmlContentProperty.XmlNode.Value.name());
    String value=property.getValue();
    if (isSitemapProperty || CmsXmlContentProperty.PropType.isVfsList(propertiesConf.get(propName).getPropertyType())) {
      Element filelistElem=valueElement.addElement(CmsXmlContentProperty.XmlNode.FileList.name());
      for (      String strId : CmsStringUtil.splitAsList(value,CmsXmlContentProperty.PROP_SEPARATOR)) {
        try {
          Element fileValueElem=filelistElem.addElement(CmsXmlContentProperty.XmlNode.Uri.name());
          fillResource(cms,fileValueElem,new CmsUUID(strId));
        }
 catch (        CmsException e) {
          LOG.error(e.getLocalizedMessage(),e);
        }
      }
    }
 else {
      valueElement.addElement(CmsXmlContentProperty.XmlNode.String.name()).addCDATA(value);
    }
  }
  int subentryCount=0;
  for (  CmsSiteEntryBean subentry : entry.getSubEntries()) {
    saveEntry(cms,entryElement,subentry,propertiesConf);
    subentryCount++;
  }
}
