{
  char[] chars=content.toCharArray();
  StringBuffer result=new StringBuffer(chars.length);
  boolean wasUnwanted=false;
  for (int i=0; i < chars.length; i++) {
    char ch=chars[i];
    int type=Character.getType(ch);
switch (type) {
case Character.CURRENCY_SYMBOL:
case Character.CONNECTOR_PUNCTUATION:
case Character.FINAL_QUOTE_PUNCTUATION:
case Character.INITIAL_QUOTE_PUNCTUATION:
case Character.DASH_PUNCTUATION:
case Character.START_PUNCTUATION:
case Character.END_PUNCTUATION:
case Character.OTHER_PUNCTUATION:
case Character.OTHER_LETTER:
case Character.MODIFIER_LETTER:
case Character.UPPERCASE_LETTER:
case Character.TITLECASE_LETTER:
case Character.LOWERCASE_LETTER:
case Character.DECIMAL_DIGIT_NUMBER:
case Character.SPACE_SEPARATOR:
      result.append(ch);
    wasUnwanted=false;
  break;
case Character.LINE_SEPARATOR:
result.append('\n');
wasUnwanted=true;
break;
case Character.MATH_SYMBOL:
case Character.OTHER_SYMBOL:
case Character.CONTROL:
case Character.COMBINING_SPACING_MARK:
case Character.ENCLOSING_MARK:
case Character.FORMAT:
case Character.LETTER_NUMBER:
case Character.MODIFIER_SYMBOL:
case Character.NON_SPACING_MARK:
case Character.PARAGRAPH_SEPARATOR:
case Character.PRIVATE_USE:
case Character.SURROGATE:
case Character.UNASSIGNED:
case Character.OTHER_NUMBER:
default :
if (!wasUnwanted) {
result.append('\n');
wasUnwanted=true;
}
}
}
return result.toString();
}
