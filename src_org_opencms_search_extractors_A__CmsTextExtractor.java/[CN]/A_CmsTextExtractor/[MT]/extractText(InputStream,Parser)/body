{
  Map<String,String> contentItems=new HashMap<String,String>();
  StringWriter writer=new StringWriter();
  BodyContentHandler handler=new BodyContentHandler(writer);
  Metadata meta=new Metadata();
  ParseContext context=new ParseContext();
  parser.parse(in,handler,meta,context);
  in.close();
  String result=writer.toString();
  StringBuffer content=new StringBuffer(result);
  if (CmsStringUtil.isNotEmpty(result)) {
    contentItems.put(I_CmsExtractionResult.ITEM_RAW,result);
  }
  combineContentItem(meta.get(DublinCore.TITLE),I_CmsExtractionResult.ITEM_TITLE,content,contentItems);
  combineContentItem(meta.get(MSOffice.KEYWORDS),I_CmsExtractionResult.ITEM_KEYWORDS,content,contentItems);
  combineContentItem(meta.get(DublinCore.SUBJECT),I_CmsExtractionResult.ITEM_SUBJECT,content,contentItems);
  combineContentItem(meta.get(MSOffice.AUTHOR),I_CmsExtractionResult.ITEM_AUTHOR,content,contentItems);
  combineContentItem(meta.get(DublinCore.CREATOR),I_CmsExtractionResult.ITEM_CREATOR,content,contentItems);
  combineContentItem(meta.get(MSOffice.CATEGORY),I_CmsExtractionResult.ITEM_CATEGORY,content,contentItems);
  combineContentItem(meta.get(MSOffice.COMMENTS),I_CmsExtractionResult.ITEM_COMMENTS,content,contentItems);
  combineContentItem(meta.get(MSOffice.COMPANY),I_CmsExtractionResult.ITEM_COMPANY,content,contentItems);
  combineContentItem(meta.get(MSOffice.MANAGER),I_CmsExtractionResult.ITEM_MANAGER,content,contentItems);
  combineContentItem(meta.get(I_CmsExtractionResult.ITEM_PRODUCER),I_CmsExtractionResult.ITEM_PRODUCER,content,contentItems);
  return new CmsExtractionResult(content.toString(),contentItems);
}
