{
  Hashtable h=cms.getRegistry().getSystemValues("unlockextension");
  if (h != null) {
    if ("true".equals(h.get("enabled"))) {
      String extensionClass=(String)h.get("class");
      if (extensionClass != null) {
        try {
          parameters.put("__source","A_CmsBackoffice");
          parameters.put("__cdclass",getContentDefinitionClass());
          parameters.put("__isExtendedList","" + isExtendedList());
          parameters.put("__template",template);
          I_CmsXmlTemplate extension=(I_CmsXmlTemplate)Class.forName(extensionClass).newInstance();
          byte[] bytes=extension.getContent(cms,template.getAbsoluteFilename(),elementName,parameters,templateSelector);
          if (bytes != null) {
            template=(CmsXmlWpTemplateFile)parameters.get("__template");
            elementName=(String)parameters.get("__elementName");
            templateSelector=(String)parameters.get("__templateSelector");
            return startProcessing(cms,template,elementName,parameters,templateSelector);
          }
        }
 catch (        Exception ex) {
          ex.printStackTrace(System.err);
          return "[Unlock extension caused exception]".getBytes();
        }
      }
    }
  }
  byte[] processResult=null;
  Hashtable startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(I_CmsConstants.C_ADDITIONAL_INFO_STARTSETTINGS);
  String showLockDialog="off";
  if (startSettings != null) {
    showLockDialog=(String)startSettings.get(I_CmsConstants.C_START_LOCKDIALOG);
  }
  if (!showLockDialog.equalsIgnoreCase("on")) {
    parameters.put("action","go");
  }
  cms.getRequestContext().getSession(true);
  Class cdClass=getContentDefinitionClass();
  CmsUUID actUserId=cms.getRequestContext().currentUser().getId();
  String id=(String)parameters.get("id");
  if (id == null)   id="";
  parameters.put("idlock",id);
  String action=(String)parameters.get("action");
  if (action == null || action.equals("")) {
    templateSelector="lock";
    CmsUUID contentId=new CmsUUID(id);
    CmsUUID lockedByUserId=CmsUUID.getNullUUID();
    Object o=null;
    if (contentId != null) {
      o=getContentDefinition(cms,cdClass,contentId);
      try {
        lockedByUserId=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception e) {
        if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
          OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(e.getMessage());
        }
      }
    }
 else {
      o=getContentDefinition(cms,cdClass,id);
      try {
        lockedByUserId=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception e) {
        if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
          OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(e.getMessage());
        }
      }
    }
    String moduleName="";
    moduleName=getClass().toString();
    moduleName=moduleName.substring(5);
    moduleName=moduleName.trim();
    moduleName=moduleName.replace('.','_');
    CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
    if (!lockedByUserId.isNullUUID() && !lockedByUserId.equals(actUserId)) {
      template.setData("locktitle",lang.getLanguageValue("messagebox.title.lockchange"));
      template.setData("lockstate",lang.getLanguageValue("messagebox.message1.lockchange"));
    }
    if (lockedByUserId.isNullUUID()) {
      template.setData("locktitle",lang.getLanguageValue("messagebox.title.lock"));
      template.setData("lockstate",lang.getLanguageValue("messagebox.message1.lock"));
    }
    if (lockedByUserId.equals(actUserId)) {
      template.setData("locktitle",lang.getLanguageValue("messagebox.title.unlock"));
      template.setData("lockstate",lang.getLanguageValue("messagebox.message1.unlock"));
    }
    template.setData("newsentry",id);
    template.setData("setaction","default");
    parameters.put("action","done");
  }
 else {
    templateSelector="done";
    CmsUUID contentId=new CmsUUID(id);
    CmsUUID lockedByUserId=CmsUUID.getNullUUID();
    Object o=null;
    o=getContentDefinition(cms,cdClass,contentId);
    try {
      lockedByUserId=((A_CmsContentDefinition)o).getLockstate();
    }
 catch (    Exception e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(e.getMessage());
      }
    }
    try {
      lockedByUserId=((A_CmsContentDefinition)o).getLockstate();
    }
 catch (    Exception e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + " Backoffice getContentLock: Method getLockstate throwed an exception!");
      }
    }
    if (lockedByUserId.equals(actUserId)) {
      if (isExtendedList()) {
        int curProjectId=cms.getRequestContext().currentProject().getId();
        int lockedInProject=-1;
        try {
          lockedInProject=((I_CmsExtendedContentDefinition)o).getLockedInProject();
        }
 catch (        Exception e) {
          if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
            OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + " Backoffice getContentLock: Method getLockstate throwed an exception!");
          }
        }
        if (curProjectId == lockedInProject) {
          try {
            ((A_CmsContentDefinition)o).setLockstate(CmsUUID.getNullUUID());
          }
 catch (          Exception e) {
            if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
              OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + " Backoffice getContentLock: Method setLockstate throwed an exception!");
            }
          }
        }
 else {
          try {
            ((A_CmsContentDefinition)o).setLockstate(actUserId);
          }
 catch (          Exception e) {
            if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
              OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + " Backoffice getContentLock: Method setLockstate throwed an exception!");
            }
          }
        }
      }
 else {
        try {
          ((A_CmsContentDefinition)o).setLockstate(CmsUUID.getNullUUID());
        }
 catch (        Exception e) {
          if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
            OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + " Backoffice getContentLock: Method setLockstate throwed an exception!");
          }
        }
      }
      try {
        ((A_CmsContentDefinition)o).write(cms);
      }
 catch (      Exception e) {
        if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
          OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + " Backoffice getContentLock: Method write throwed an exception!");
        }
      }
      templateSelector="done";
    }
 else {
      if ((!lockedByUserId.isNullUUID()) && (!lockedByUserId.equals(actUserId))) {
        try {
          ((A_CmsContentDefinition)o).setLockstate(actUserId);
        }
 catch (        Exception e) {
          if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
            OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + ": Backoffice getContentLock: Could not set lockstate!");
          }
        }
        try {
          ((A_CmsContentDefinition)o).write(cms);
        }
 catch (        Exception e) {
          if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
            OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + ": Backoffice getContentLock: Could not set lockstate!");
          }
        }
        templateSelector="done";
      }
 else {
        try {
          ((A_CmsContentDefinition)o).setLockstate(actUserId);
        }
 catch (        Exception e) {
          if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
            OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + ": Backoffice getContentLock: Could not set lockstate!");
          }
        }
        try {
          ((A_CmsContentDefinition)o).write(cms);
        }
 catch (        Exception e) {
          if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
            OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(getClassName() + ": Backoffice getContentLock: Could not write to content definition!");
          }
        }
      }
    }
  }
  processResult=startProcessing(cms,template,elementName,parameters,templateSelector);
  return processResult;
}
