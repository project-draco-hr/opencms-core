{
  byte[] processResult=null;
  Hashtable startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
  String showLockDialog="on";
  if (startSettings != null) {
    showLockDialog=(String)startSettings.get(C_START_LOCKDIALOG);
  }
  if (!showLockDialog.equalsIgnoreCase("on")) {
    parameters.put("action","go");
  }
  I_CmsSession session=(CmsSession)cms.getRequestContext().getSession(true);
  Class cdClass=getContentDefinitionClass();
  int actUserId=cms.getRequestContext().currentUser().getId();
  String id=(String)parameters.get("id");
  if (id == null)   id="";
  parameters.put("idlock",id);
  String action=(String)parameters.get("action");
  if (action == null || action.equals("")) {
    templateSelector="lock";
    Integer idInteger=null;
    int ls=-1;
    try {
      idInteger=Integer.valueOf(id);
    }
 catch (    Exception e) {
      ls=-1;
      String title="no title";
      Object o=null;
      o=getContentDefinition(cms,cdClass,id);
      try {
        ls=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception exc) {
        exc.printStackTrace();
      }
    }
    String title="no title";
    Object o=null;
    if (idInteger != null) {
      o=getContentDefinition(cms,cdClass,idInteger);
      try {
        ls=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,e.getMessage());
        }
      }
    }
 else {
      o=getContentDefinition(cms,cdClass,id);
      try {
        ls=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,e.getMessage());
        }
      }
    }
    String moduleName="";
    moduleName=(String)getClass().toString();
    moduleName=moduleName.substring(5);
    moduleName=moduleName.trim();
    moduleName=moduleName.replace('.','_');
    CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
    if (ls != C_NOT_LOCKED && ls != actUserId) {
      template.setData("locktitle",lang.getLanguageValue("messagebox.title.lockchange"));
      template.setData("lockstate",lang.getLanguageValue("messagebox.message1.lockchange"));
    }
    if (ls == C_NOT_LOCKED) {
      template.setData("locktitle",lang.getLanguageValue("messagebox.title.lock"));
      template.setData("lockstate",lang.getLanguageValue("messagebox.message1.lock"));
    }
    if (ls == actUserId) {
      template.setData("locktitle",lang.getLanguageValue("messagebox.title.unlock"));
      template.setData("lockstate",lang.getLanguageValue("messagebox.message1.unlock"));
    }
    template.setData("newsentry",id);
    template.setData("setaction","default");
    parameters.put("action","done");
  }
 else {
    templateSelector="done";
    Integer idInteger=null;
    int ls=C_NOT_LOCKED;
    try {
      idInteger=Integer.valueOf(id);
    }
 catch (    Exception e) {
      ls=C_NOT_LOCKED;
      String title="no title";
      Object o=null;
      o=getContentDefinition(cms,cdClass,id);
      try {
        ls=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception ex) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,ex.getMessage());
        }
      }
    }
    Object o=null;
    if (idInteger != null) {
      o=getContentDefinition(cms,cdClass,idInteger);
      try {
        ls=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,e.getMessage());
        }
      }
    }
 else {
      o=getContentDefinition(cms,cdClass,id);
      try {
        ls=((A_CmsContentDefinition)o).getLockstate();
      }
 catch (      Exception e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,e.getMessage());
        }
      }
    }
    try {
      ls=((A_CmsContentDefinition)o).getLockstate();
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + " Backoffice getContentLock: Method getLockstate throwed an exception!");
      }
    }
    if (ls == actUserId) {
      if (isExtendedList()) {
        int curProjectId=cms.getRequestContext().currentProject().getId();
        int lockedInProject=-1;
        try {
          lockedInProject=((I_CmsExtendedContentDefinition)o).getLockedInProject();
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + " Backoffice getContentLock: Method getLockstate throwed an exception!");
          }
        }
        if (curProjectId == lockedInProject) {
          try {
            ((A_CmsContentDefinition)o).setLockstate(C_NOT_LOCKED);
          }
 catch (          Exception e) {
            if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
              A_OpenCms.log(C_OPENCMS_INFO,getClassName() + " Backoffice getContentLock: Method setLockstate throwed an exception!");
            }
          }
        }
 else {
          try {
            ((A_CmsContentDefinition)o).setLockstate(actUserId);
          }
 catch (          Exception e) {
            if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
              A_OpenCms.log(C_OPENCMS_INFO,getClassName() + " Backoffice getContentLock: Method setLockstate throwed an exception!");
            }
          }
        }
      }
 else {
        try {
          ((A_CmsContentDefinition)o).setLockstate(C_NOT_LOCKED);
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + " Backoffice getContentLock: Method setLockstate throwed an exception!");
          }
        }
      }
      try {
        ((A_CmsContentDefinition)o).write(cms);
      }
 catch (      Exception e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,getClassName() + " Backoffice getContentLock: Method write throwed an exception!");
        }
      }
      templateSelector="done";
    }
 else {
      if ((ls != C_NOT_LOCKED) && (ls != actUserId)) {
        try {
          ((A_CmsContentDefinition)o).setLockstate(actUserId);
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentLock: Could not set lockstate!");
          }
        }
        try {
          ((A_CmsContentDefinition)o).write(cms);
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentLock: Could not set lockstate!");
          }
        }
        templateSelector="done";
      }
 else {
        try {
          ((A_CmsContentDefinition)o).setLockstate(actUserId);
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentLock: Could not set lockstate!");
          }
        }
        try {
          ((A_CmsContentDefinition)o).write(cms);
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentLock: Could not write to content definition!");
          }
        }
      }
    }
  }
  processResult=startProcessing(cms,template,elementName,parameters,templateSelector);
  return processResult;
}
