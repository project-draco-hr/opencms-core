{
  cms.getRequestContext().getSession(true);
  String id=(String)parameters.get("id");
  if (id != null && !"".equals(id)) {
    Vector cdHistory=new Vector();
    Class cdClass=getContentDefinitionClass();
    Object o=null;
    o=getContentDefinition(cms,cdClass,new CmsUUID(id));
    try {
      cdHistory=((I_CmsExtendedContentDefinition)o).getHistory(cms);
    }
 catch (    Exception e) {
      if (OpenCms.isLogging(CmsLog.CHANNEL_MAIN,CmsLog.LEVEL_INFO)) {
        OpenCms.log(CmsLog.CHANNEL_MAIN,CmsLog.LEVEL_INFO,getClassName() + ": Backoffice: history method throwed an exception!");
      }
    }
    for (int i=0; i < cdHistory.size(); i++) {
      try {
        I_CmsExtendedContentDefinition curCd=((I_CmsExtendedContentDefinition)cdHistory.elementAt(i));
        long updated=curCd.getDateCreated();
        String userName=readSaveUserName(cms,curCd.getLastModifiedBy());
        long lastModified=curCd.getDateLastModified();
        String output=Utils.getNiceDate(lastModified) + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + Utils.getNiceDate(updated)+ "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+ userName;
        names.addElement(output);
        values.addElement(curCd.getVersionId() + "");
      }
 catch (      Exception e) {
        if (OpenCms.isLogging(CmsLog.CHANNEL_MAIN,CmsLog.LEVEL_INFO)) {
          OpenCms.log(CmsLog.CHANNEL_MAIN,CmsLog.LEVEL_INFO,getClassName() + ": Backoffice: history method throwed an exception!");
        }
      }
    }
  }
  return new Integer(-1);
}
