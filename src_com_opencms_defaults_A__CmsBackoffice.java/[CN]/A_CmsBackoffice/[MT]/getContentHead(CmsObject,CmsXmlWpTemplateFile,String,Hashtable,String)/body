{
  byte[] processResult=null;
  Class cdClass=getContentDefinitionClass();
  String singleSelection="";
  String allSelections="";
  CmsSession session=(CmsSession)cms.getRequestContext().getSession(true);
  String uri=cms.getRequestContext().getUri();
  String sessionSelectBoxValue=uri + "selectBoxValue";
  String selectBoxValue=(String)parameters.get("selectbox");
  if (selectBoxValue == null) {
    if ((String)session.getValue(sessionSelectBoxValue) != null) {
      selectBoxValue=(String)session.getValue(sessionSelectBoxValue);
    }
 else {
      selectBoxValue="0";
    }
  }
  boolean filterChanged=true;
  if (selectBoxValue.equals((String)session.getValue(sessionSelectBoxValue))) {
    filterChanged=false;
  }
 else {
    filterChanged=true;
  }
  Vector filterMethods=getFilterMethods(cms);
  if (Integer.parseInt(selectBoxValue) >= filterMethods.size()) {
    selectBoxValue="0";
  }
  session.putValue(sessionSelectBoxValue,selectBoxValue);
  session.putValue("filter",selectBoxValue);
  String filterParam=(String)parameters.get("filterparameter");
  String action=(String)parameters.get("action");
  String setaction=(String)parameters.get("setaction");
  String sessionFilterParam=uri + selectBoxValue + "filterparameter";
  if (filterParam != null) {
    session.putValue(sessionFilterParam,filterParam);
  }
  String moduleName="";
  moduleName=(String)getClass().toString();
  moduleName=moduleName.substring(5);
  moduleName=moduleName.trim();
  moduleName=moduleName.replace('.','_');
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  template.setData("filterlabel",lang.getLanguageValue(moduleName + ".label.filter"));
  template.setData("filterparameterlabel",lang.getLanguageValue(moduleName + ".label.filterparameter"));
  CmsFilterMethod filterMethod=null;
  if (selectBoxValue == null) {
    CmsFilterMethod defaultFilter=(CmsFilterMethod)filterMethods.firstElement();
    session.putValue("selectbox",defaultFilter.getFilterName());
  }
  CmsFilterMethod currentFilter=(CmsFilterMethod)filterMethods.elementAt(Integer.parseInt(selectBoxValue));
  if (currentFilter.hasUserParameter()) {
    if (filterChanged) {
      template.setData("filterparameter",currentFilter.getDefaultFilterParam());
      session.putValue(sessionFilterParam,currentFilter.getDefaultFilterParam());
    }
 else     if (filterParam != null) {
      template.setData("filterparameter",filterParam);
    }
 else {
      template.setData("filterparameter",(String)session.getValue(sessionFilterParam));
    }
    if (filterMethods.size() < 2) {
      CmsFilterMethod defaultFilter=(CmsFilterMethod)filterMethods.firstElement();
      template.setData("filtername",defaultFilter.getFilterName());
      template.setData("insertFilter",template.getProcessedDataValue("noSelectboxWithParam",this,parameters));
    }
 else {
      template.setData("insertFilter",template.getProcessedDataValue("selectboxWithParam",this,parameters));
    }
    template.setData("setfocus",template.getDataValue("focus"));
  }
 else {
    if (filterMethods.size() < 2) {
      CmsFilterMethod defaultFilter=(CmsFilterMethod)filterMethods.firstElement();
      template.setData("filtername",defaultFilter.getFilterName());
      template.setData("insertFilter",template.getProcessedDataValue("noSelectbox",this,parameters));
    }
 else {
      template.setData("insertFilter",template.getProcessedDataValue("singleSelectbox",this,parameters));
    }
  }
  String createButton=null;
  try {
    createButton=(String)getCreateUrl(cms,null,null,null);
  }
 catch (  Exception e) {
  }
  if (createButton == null) {
    String cb=template.getDataValue("nowand");
    template.setData("createbutton",cb);
  }
 else {
    boolean buttonActiv=true;
    Boolean isProjectDependend=new Boolean(true);
    if (isExtendedList() && (cms.getRequestContext().currentProject().getId() == cms.onlineProject().getId())) {
      buttonActiv=false;
    }
    if (buttonActiv) {
      String cb=template.getProcessedDataValue("wand",this,parameters);
      template.setData("createbutton",cb);
    }
 else {
      String cb=template.getProcessedDataValue("deactivwand",this,parameters);
      template.setData("createbutton",cb);
    }
  }
  String setupButton=null;
  try {
    setupButton=(String)getSetupUrl(cms,null,null,null);
  }
 catch (  Exception e) {
  }
  if ((setupButton == null) || (setupButton.equals(""))) {
    String sb=template.getDataValue("nosetup");
    template.setData("setupbutton",sb);
  }
 else {
    String sb=template.getProcessedDataValue("setup",this,parameters);
    template.setData("setupbutton",sb);
  }
  processResult=startProcessing(cms,template,elementName,parameters,templateSelector);
  return processResult;
}
