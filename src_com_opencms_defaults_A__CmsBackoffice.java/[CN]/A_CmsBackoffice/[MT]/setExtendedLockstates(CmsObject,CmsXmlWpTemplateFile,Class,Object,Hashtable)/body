{
  String la="false";
  Object laObject=new Object();
  CmsUUID lockedByUserId=CmsUUID.getNullUUID();
  String lockString=null;
  CmsUUID actUserId=cms.getRequestContext().currentUser().getId();
  String isLockedBy=null;
  int lockedInProject=-1;
  int curProjectId=cms.getRequestContext().currentProject().getId();
  boolean hasWriteAccess=false;
  try {
    Method laMethod=cdClass.getMethod("isLockable",new Class[]{});
    laObject=laMethod.invoke(null,null);
  }
 catch (  InvocationTargetException ite) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates: Method isLockable throwed an Invocation target exception!");
    }
  }
catch (  NoSuchMethodException nsm) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates: Requested method isLockable was not found!");
    }
  }
catch (  Exception e) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates: Method isLockable throwed an exception: " + e.toString());
    }
  }
  la=(String)laObject.toString();
  if (la.equals("false")) {
    try {
      template.setData("backofficecontextmenue","backofficeedit");
      template.setData("lockedby",template.getDataValue("nolock"));
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates:'not lockable' section hrowed an exception!");
      }
    }
  }
 else {
    try {
      lockedByUserId=((A_CmsContentDefinition)entryObject).getLockstate();
      hasWriteAccess=((A_CmsContentDefinition)entryObject).hasWriteAccess(cms);
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates: Method getLockstate throwed an exception: " + e.toString());
      }
    }
    try {
      if (lockedByUserId.equals(actUserId)) {
        isLockedBy=cms.getRequestContext().currentUser().getName();
        template.setData("isLockedBy",isLockedBy);
        try {
          lockedInProject=((I_CmsExtendedContentDefinition)entryObject).getLockedInProject();
        }
 catch (        Exception e) {
          if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
            A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates: Method getLockedInProject throwed an exception: " + e.toString());
          }
        }
        if (lockedInProject == curProjectId) {
          lockString=template.getProcessedDataValue("lockuser",this,parameters);
        }
 else {
          lockString=template.getProcessedDataValue("lock",this,parameters);
        }
        template.setData("lockedby",lockString);
      }
 else {
        if (!lockedByUserId.isNullUUID()) {
          if (!hasWriteAccess) {
            lockString=template.getProcessedDataValue("noaccess",this,parameters);
            template.setData("lockedby",lockString);
          }
 else {
            isLockedBy=readSaveUserName(cms,lockedByUserId);
            template.setData("isLockedBy",isLockedBy);
            lockString=template.getProcessedDataValue("lock",this,parameters);
            template.setData("lockedby",lockString);
          }
        }
 else {
          lockString=template.getProcessedDataValue("nolock",this,parameters);
          template.setData("lockedby",lockString);
        }
      }
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice setLockstates throwed an exception: " + e.toString());
      }
    }
  }
}
