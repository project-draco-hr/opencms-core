{
  MessageDigest md;
  byte[] result;
  try {
    if (I_CmsPasswordHandler.DIGEST_TYPE_PLAIN.equals(digestType.toLowerCase())) {
      result=password.getBytes(inputEncoding);
    }
 else {
      md=MessageDigest.getInstance(digestType);
      md.reset();
      md.update(password.getBytes(inputEncoding));
      result=md.digest();
    }
  }
 catch (  NoSuchAlgorithmException e) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_UNSUPPORTED_ALGORITHM_1,digestType);
    throw new CmsPasswordEncryptionException(message,e);
  }
catch (  UnsupportedEncodingException e) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_UNSUPPORTED_PASSWORD_ENCODING_1,inputEncoding);
    throw new CmsPasswordEncryptionException(message,e);
  }
  StringBuffer buf=new StringBuffer();
  String addZerro;
  for (int i=0; i < result.length; i++) {
    addZerro=Integer.toHexString(128 + result[i]);
    if (addZerro.length() < 2) {
      addZerro='0' + addZerro;
    }
    buf.append(addZerro);
  }
  return buf.toString();
}
