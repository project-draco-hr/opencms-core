{
  StringBuffer result=new StringBuffer();
  if (m_targetHeight > -1) {
    result.append(SCALE_PARAM_TARGETHEIGHT).append(SCALE_PARAM_COLON).append(m_targetHeight).append(SCALE_PARAM_DELIMITER);
  }
  if (m_targetWidth > -1) {
    result.append(SCALE_PARAM_TARGETWIDTH).append(SCALE_PARAM_COLON).append(m_targetWidth).append(SCALE_PARAM_DELIMITER);
  }
  if (m_cropX > -1) {
    result.append(SCALE_PARAM_CROP_X).append(SCALE_PARAM_COLON).append(m_cropX).append(SCALE_PARAM_DELIMITER);
  }
  if (m_cropY > -1) {
    result.append(SCALE_PARAM_CROP_Y).append(SCALE_PARAM_COLON).append(m_cropY).append(SCALE_PARAM_DELIMITER);
  }
  if (m_cropHeight > -1) {
    result.append(SCALE_PARAM_CROP_HEIGHT).append(SCALE_PARAM_COLON).append(m_cropHeight).append(SCALE_PARAM_DELIMITER);
  }
  if (m_cropWidth > -1) {
    result.append(SCALE_PARAM_CROP_WIDTH).append(SCALE_PARAM_COLON).append(m_cropWidth).append(SCALE_PARAM_DELIMITER);
  }
  if (result.length() > 0) {
    result.insert(0,SCALE_PARAM_EQ).insert(0,SCALE_PARAM_NAME);
    result.deleteCharAt(result.length() - 1);
  }
  return result.toString();
}
