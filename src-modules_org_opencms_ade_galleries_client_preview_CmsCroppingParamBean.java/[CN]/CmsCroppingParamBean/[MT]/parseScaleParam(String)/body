{
  CmsCroppingParamBean result=new CmsCroppingParamBean();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(param)) {
    return result;
  }
  String[] parameters=param.split(SCALE_PARAM_DELIMITER);
  for (int i=0; i < parameters.length; i++) {
    String scaleParam=parameters[i].trim();
    if (scaleParam.startsWith(SCALE_PARAM_TARGETHEIGHT + SCALE_PARAM_COLON)) {
      result.setTargetHeight(parseValue(SCALE_PARAM_TARGETHEIGHT,scaleParam));
      continue;
    }
    if (scaleParam.startsWith(SCALE_PARAM_TARGETWIDTH + SCALE_PARAM_COLON)) {
      result.setTargetWidth(parseValue(SCALE_PARAM_TARGETWIDTH,scaleParam));
      continue;
    }
    if (scaleParam.startsWith(SCALE_PARAM_CROP_X + SCALE_PARAM_COLON)) {
      result.setCropX(parseValue(SCALE_PARAM_CROP_X,scaleParam));
      continue;
    }
    if (scaleParam.startsWith(SCALE_PARAM_CROP_Y + SCALE_PARAM_COLON)) {
      result.setCropY(parseValue(SCALE_PARAM_CROP_Y,scaleParam));
      continue;
    }
    if (scaleParam.startsWith(SCALE_PARAM_CROP_HEIGHT + SCALE_PARAM_COLON)) {
      result.setCropHeight(parseValue(SCALE_PARAM_CROP_HEIGHT,scaleParam));
      continue;
    }
    if (scaleParam.startsWith(SCALE_PARAM_CROP_WIDTH + SCALE_PARAM_COLON)) {
      result.setCropWidth(parseValue(SCALE_PARAM_CROP_WIDTH,scaleParam));
      continue;
    }
  }
  return result;
}
