{
  folder=CmsResource.getFolderPath(folder);
  List<CmsJspNavElement> result=new ArrayList<CmsJspNavElement>();
  CmsSitemapEntry folderEntry=null;
  try {
    folderEntry=m_manager.getEntryForUri(m_cms,folder);
  }
 catch (  CmsException e) {
    LOG.error(e.getLocalizedMessage(),e);
  }
  if (folderEntry == null) {
    return result;
  }
  if (folderEntry.isVfs()) {
    return super.getNavigationForFolder(folder);
  }
  List<CmsSitemapEntry> entries=folderEntry.getSubEntries();
  if (entries.isEmpty()) {
    String subsitemap=folderEntry.getProperties().get(CmsSitemapProperty.sitemap.getName());
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(subsitemap)) {
      try {
        entries=CmsXmlSitemapFactory.unmarshal(m_cms,m_cms.readResource(new CmsUUID(subsitemap))).getSitemap(m_cms,m_cms.getRequestContext().getLocale()).getSiteEntries();
      }
 catch (      CmsException e) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
  }
  for (  CmsSitemapEntry entry : entries) {
    try {
      m_cms.readResource(entry.getResourceId());
      String entryName=folderEntry.getSitePath(m_cms) + entry.getName() + "/";
      CmsJspNavElement element=getNavigationForResource(entryName);
      if ((element != null) && element.isInNavigation()) {
        result.add(element);
      }
    }
 catch (    Exception e) {
      LOG.debug(e.getLocalizedMessage(),e);
    }
  }
  Collections.sort(result);
  return result;
}
