{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,"[CmsClassLoader] Class " + name + " requested.");
  }
  Class c=null;
  CmsFile classFile=null;
  if (m_parent != null) {
    try {
      c=m_parent.loadClass(name);
    }
 catch (    Exception e) {
      c=null;
    }
  }
  if (c != null) {
    return c;
  }
  c=(Class)cache.get(name);
  if (c != null) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_DEBUG,"BINGO! Class " + name + "was found in cache.");
    }
    if (resolve) {
      resolveClass(c);
    }
    return c;
  }
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,"Class " + name + "was NOT found in cache.");
  }
  String secondNamePart=name.replace('.','/') + ".class";
  Enumeration allRepositories=repository.elements();
  String filename=null;
  while (allRepositories.hasMoreElements()) {
    filename=allRepositories.nextElement() + secondNamePart;
    try {
      classFile=m_cms.readFile(filename);
    }
 catch (    Exception e) {
      classFile=null;
    }
  }
  if (classFile == null) {
    throw new ClassNotFoundException(name);
  }
  byte[] myClassData=classFile.getContents();
  if (myClassData != null) {
    try {
      c=defineClass(null,myClassData,0,myClassData.length);
    }
 catch (    ClassFormatError e) {
      throw new ClassNotFoundException(filename + " seems to be no class file. Sorry.");
    }
catch (    Exception e) {
      throw new ClassNotFoundException(e.toString());
    }
catch (    Error e) {
      throw new ClassNotFoundException("Something really bad happened while loading class " + filename);
    }
    cache.put(name,c);
    return c;
  }
  throw new ClassNotFoundException(name);
}
