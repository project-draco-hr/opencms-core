{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,"[CmsClassLoader] Class " + name + " requested.");
  }
  Class c=null;
  try {
    ClassLoader sysClassLoader=this.getSystemClassLoader();
    c=sysClassLoader.loadClass(name);
  }
 catch (  ClassNotFoundException exc) {
    c=null;
  }
  if (c != null) {
    return c;
  }
  String heyItsMe="com.opencms.core.CmsClassLoader";
  if (heyItsMe.equals(name)) {
    c=Class.forName(name);
    if (c != null) {
      return c;
    }
  }
  try {
    ClassLoader apClassLoader=this.getClass().getClassLoader();
    InputStream fromAp=apClassLoader.getResourceAsStream(name.replace('.','/') + ".class");
    byte[] myClassData=null;
    ByteArrayOutputStream outStream=new ByteArrayOutputStream();
    if (fromAp != null) {
      copyStream(fromAp,outStream);
      myClassData=outStream.toByteArray();
    }
    if (myClassData != null) {
      try {
        c=defineClass(null,myClassData,0,myClassData.length);
      }
 catch (      Exception e) {
        throw new ClassNotFoundException(e.toString());
      }
catch (      Error e) {
        throw new ClassNotFoundException("Something really bad happened while loading class " + name);
      }
      cache.put(name,c);
      if (resolve) {
        resolveClass(c);
      }
      if (C_DEBUG && A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_DEBUG,"Classloader returned class " + name + " successfully!");
      }
      return c;
    }
  }
 catch (  ClassNotFoundException e) {
    c=null;
  }
catch (  IOException e) {
    c=null;
  }
  if (c != null) {
    return c;
  }
  c=(Class)cache.get(name);
  if (c != null) {
    if (C_DEBUG && A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_DEBUG,"BINGO! Class " + name + "was found in cache.");
    }
    if (resolve) {
      resolveClass(c);
    }
    return c;
  }
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,"Class " + name + "was NOT found in cache.");
  }
  Enumeration allRepositories=repository.elements();
  String filename=null;
  byte[] myClassData=null;
  while ((allRepositories.hasMoreElements()) && (myClassData == null)) {
    filename=(String)allRepositories.nextElement();
{
      if (filename.endsWith("/")) {
        String classname=name.replace('.','/');
        filename=filename + classname + ".class";
      }
      try {
        myClassData=readFileContent(filename);
      }
 catch (      Exception e) {
        myClassData=null;
      }
    }
  }
  if (myClassData == null) {
    throw new ClassNotFoundException(name);
  }
  if (myClassData != null) {
    try {
      c=defineClass(null,myClassData,0,myClassData.length);
    }
 catch (    ClassFormatError e) {
      throw new ClassNotFoundException(filename + " seems to be no class file. Sorry.");
    }
catch (    Exception e) {
      throw new ClassNotFoundException(e.toString());
    }
catch (    Error e) {
      throw new ClassNotFoundException("Something really bad happened while loading class " + filename);
    }
    cache.put(name,c);
    if (resolve) {
      resolveClass(c);
    }
    if (C_DEBUG && A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_DEBUG,"Classloader returned class " + name + " successfully!");
    }
    return c;
  }
  throw new ClassNotFoundException(name);
}
