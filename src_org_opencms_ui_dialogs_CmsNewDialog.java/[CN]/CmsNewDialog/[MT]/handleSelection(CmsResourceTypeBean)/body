{
  CmsObject cms=A_CmsUI.getCmsObject();
  m_selectedType=selectedType;
  try {
    CmsNewResourceBuilder builder=new CmsNewResourceBuilder(cms);
    builder.addCallback(new I_Callback(){
      public void onError(      Exception e){
        m_dialogContext.error(e);
      }
      public void onResourceCreated(      CmsNewResourceBuilder builderParam){
        finish(Lists.newArrayList(builderParam.getCreatedResource().getStructureId()));
      }
    }
);
    m_selectedType=selectedType;
    Boolean useDefaultLocation=m_defaultLocationCheckbox.getValue();
    if (useDefaultLocation.booleanValue() && (m_selectedType.getCreatePath() != null)) {
      try {
        CmsADEConfigData configData=OpenCms.getADEManager().lookupConfiguration(cms,m_folderResource.getRootPath());
        CmsResourceTypeConfig typeConfig=configData.getResourceType(m_selectedType.getType());
        if (typeConfig != null) {
          typeConfig.configureCreateNewElement(cms,m_folderResource.getRootPath(),builder);
        }
      }
 catch (      Exception e) {
        m_dialogContext.error(e);
      }
    }
 else {
      boolean explorerNameGenerationMode=false;
      String sitePath=cms.getRequestContext().removeSiteRoot(m_folderResource.getRootPath());
      String namePattern=m_selectedType.getNamePattern();
      if (CmsStringUtil.isEmptyOrWhitespaceOnly(namePattern)) {
        namePattern=OpenCms.getWorkplaceManager().getDefaultNamePattern(m_selectedType.getType());
        explorerNameGenerationMode=true;
      }
      String fileName=CmsStringUtil.joinPaths(sitePath,namePattern);
      builder.setPatternPath(fileName);
      builder.setType(m_selectedType.getType());
      builder.setExplorerNameGeneration(explorerNameGenerationMode);
    }
    CmsPropertyDialogExtension ext=new CmsPropertyDialogExtension(A_CmsUI.get(),null);
    CmsAppWorkplaceUi.get().disableGlobalShortcuts();
    ext.editPropertiesForNewResource(builder);
    finish(new ArrayList<CmsUUID>());
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
