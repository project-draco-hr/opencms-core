{
  CmsObject cms=A_CmsUI.getCmsObject();
  m_selectedType=typeFinal;
  Boolean useDefaultLocation=m_defaultLocationCheckbox.getValue();
  if (useDefaultLocation.booleanValue() && (m_selectedType.getCreatePath() != null)) {
    try {
      CmsADEConfigData configData=OpenCms.getADEManager().lookupConfiguration(cms,m_folderResource.getRootPath());
      CmsResourceTypeConfig typeConfig=configData.getResourceType(m_selectedType.getType());
      CmsResource createdResource=null;
      if (typeConfig != null) {
        createdResource=typeConfig.createNewElement(cms,m_folderResource.getRootPath());
      }
      m_createdResource=createdResource;
      CmsGwtDialogExtension gwtDialogExt=new CmsGwtDialogExtension(UI.getCurrent(),new I_CmsUpdateListener<String>(){
        @SuppressWarnings("synthetic-access") public void onUpdate(        List<String> updatedItems){
          List<CmsUUID> ids=Lists.newArrayList();
          if (updatedItems.isEmpty()) {
            removeResource();
          }
 else {
            for (            String item : updatedItems) {
              CmsUUID id=new CmsUUID(item);
              ids.add(id);
            }
          }
          finish(ids);
        }
      }
);
      m_dialogContext.finish(new ArrayList<CmsUUID>());
      if (createdResource != null) {
        gwtDialogExt.editProperties(createdResource.getStructureId(),true);
      }
    }
 catch (    Exception e) {
      m_dialogContext.error(e);
    }
  }
 else {
    boolean explorerNameGenerationMode=false;
    String sitePath=cms.getRequestContext().removeSiteRoot(m_folderResource.getRootPath());
    String namePattern=m_selectedType.getNamePattern();
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(namePattern)) {
      namePattern=OpenCms.getWorkplaceManager().getDefaultNamePattern(m_selectedType.getType());
      explorerNameGenerationMode=true;
    }
    String fileName=CmsStringUtil.joinPaths(sitePath,namePattern);
    String realCreatePath;
    try {
      realCreatePath=OpenCms.getResourceManager().getNameGenerator().getNewFileName(cms,fileName,6,explorerNameGenerationMode);
    }
 catch (    CmsException e1) {
      realCreatePath=CmsStringUtil.joinPaths(sitePath,RandomStringUtils.randomAlphabetic(8));
    }
    try {
      CmsResource createdResource=cms.createResource(realCreatePath,OpenCms.getResourceManager().getResourceType(m_selectedType.getType()),null,Lists.<CmsProperty>newArrayList());
      if (!cms.getLock(createdResource).isInherited()) {
        cms.unlockResource(createdResource);
      }
      m_createdResource=createdResource;
      CmsGwtDialogExtension gwtDialogExt=new CmsGwtDialogExtension(UI.getCurrent(),new I_CmsUpdateListener<String>(){
        @SuppressWarnings("synthetic-access") public void onUpdate(        List<String> updatedItems){
          List<CmsUUID> ids=Lists.newArrayList();
          if (updatedItems.isEmpty()) {
            removeResource();
          }
 else {
            for (            String item : updatedItems) {
              CmsUUID id=new CmsUUID(item);
              ids.add(id);
            }
          }
          finish(ids);
        }
      }
);
      m_dialogContext.finish(new ArrayList<CmsUUID>());
      gwtDialogExt.editProperties(createdResource.getStructureId(),true);
    }
 catch (    Exception e) {
      m_dialogContext.error(e);
    }
  }
}
