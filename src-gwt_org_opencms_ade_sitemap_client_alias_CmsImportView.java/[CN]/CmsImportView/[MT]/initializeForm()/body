{
  String target=CmsSitemapView.getInstance().getController().getData().getAliasImportUrl();
  m_formPanel.setAction(target);
  m_formPanel.setMethod(FormPanel.METHOD_POST);
  m_formPanel.setEncoding(FormPanel.ENCODING_MULTIPART);
  Hidden siteRootField=new Hidden(I_CmsAliasConstants.PARAM_SITEROOT);
  siteRootField.setValue(CmsCoreProvider.get().getSiteRoot());
  m_formPanelContents.add(siteRootField);
  m_formPanelContents.add(m_separatorField);
  m_formPanel.addSubmitCompleteHandler(new SubmitCompleteHandler(){
    public void onSubmitComplete(    SubmitCompleteEvent event){
      final String formPostResults=event.getResults();
      final I_CmsSitemapServiceAsync service=CmsSitemapView.getInstance().getController().getService();
      CmsRpcAction<List<CmsAliasImportResult>> action=new CmsRpcAction<List<CmsAliasImportResult>>(){
        @Override public void execute(){
          start(200,false);
          service.getAliasImportResult(formPostResults.trim(),this);
        }
        @Override public void onResponse(        List<CmsAliasImportResult> result){
          stop(false);
          handleImportResults(result);
          Timer resizeTimer=new Timer(){
            @Override public void run(){
              m_scrollPanel.onResize();
            }
          }
;
          resizeTimer.schedule(100);
        }
      }
;
      action.execute();
    }
  }
);
}
