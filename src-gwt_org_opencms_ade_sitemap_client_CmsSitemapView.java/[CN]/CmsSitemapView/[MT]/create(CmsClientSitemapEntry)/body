{
  CmsListInfoBean infoBean=new CmsListInfoBean();
  infoBean.setTitle(entry.getTitle());
  infoBean.setSubTitle(entry.getSitePath());
  infoBean.addAdditionalInfo(Messages.get().key(Messages.GUI_NAME_0),entry.getName());
  CmsClientProperty titleProperty=entry.getOwnProperties().get(CmsClientProperty.PROPERTY_TITLE);
  if ((titleProperty != null) && !titleProperty.isEmpty()) {
    infoBean.addAdditionalInfo(Messages.get().key(Messages.GUI_TITLE_PROPERTY_0),titleProperty.getEffectiveValue());
  }
  String shownPath=entry.getVfsPath();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(shownPath)) {
    shownPath="-";
  }
  infoBean.addAdditionalInfo(Messages.get().key(Messages.GUI_VFS_PATH_0),shownPath);
  infoBean.setResourceType(CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDefaultFileType()) ? entry.getDefaultFileType() : entry.getResourceTypeName());
  CmsInfoLoadingListItemWidget itemWidget=new CmsInfoLoadingListItemWidget(infoBean);
  itemWidget.setIcon(getIconForEntry(entry));
  itemWidget.setIconTitle(entry.isSubSitemapType() ? Messages.get().key(Messages.GUI_HOVERBAR_GOTO_SUB_0) : Messages.get().key(Messages.GUI_HOVERBAR_GOTO_0));
  final CmsUUID entryId=entry.getId();
  itemWidget.addIconClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      CmsClientSitemapEntry sitemapEntry=getController().getEntryById(entryId);
      if (sitemapEntry != null) {
        if (sitemapEntry.isSubSitemapType()) {
          getController().openSiteMap(sitemapEntry.getSitePath());
        }
 else {
          getController().leaveEditor(sitemapEntry.getSitePath());
        }
      }
    }
  }
);
  final CmsSitemapTreeItem treeItem=new CmsSitemapTreeItem(itemWidget,entry);
  itemWidget.setAdditionalInfoLoader(new I_CmsAdditionalInfoLoader(){
    public void load(    final AsyncCallback<List<AdditionalInfoItem>> callback){
      CmsClientSitemapEntry sitemapEntry=getController().getEntryById(entryId);
      if (sitemapEntry != null) {
        if (sitemapEntry.getVfsPath() == null) {
          List<AdditionalInfoItem> infoItems=new ArrayList<AdditionalInfoItem>();
          AdditionalInfoItem item=createResourceStateInfo(CmsResourceState.STATE_NEW);
          infoItems.add(item);
          callback.onSuccess(infoItems);
        }
 else {
          getController().getService().getAdditionalEntryInfo(sitemapEntry.getId(),new AsyncCallback<CmsAdditionalEntryInfo>(){
            /** 
 * @see com.google.gwt.user.client.rpc.AsyncCallback#onFailure(java.lang.Throwable)
 */
            public void onFailure(            Throwable caught){
            }
            /** 
 * @see com.google.gwt.user.client.rpc.AsyncCallback#onSuccess(Object o)
 */
            public void onSuccess(            CmsAdditionalEntryInfo result){
              List<AdditionalInfoItem> items=new ArrayList<AdditionalInfoItem>();
              items.add(createResourceStateInfo(result.getResourceState()));
              if ((result.getAdditional() != null) && !result.getAdditional().isEmpty()) {
                for (                Entry<String,String> infoEntry : result.getAdditional().entrySet()) {
                  items.add(new AdditionalInfoItem(infoEntry.getKey(),infoEntry.getValue(),null));
                }
              }
              callback.onSuccess(items);
            }
          }
);
        }
      }
    }
    /** 
 * Helper method for creating an additional info item from a resource state.<p>
 * @param state the resource state for creating the additional info item 
 * @return the additional info item 
 */
    protected AdditionalInfoItem createResourceStateInfo(    CmsResourceState state){
      final String label=org.opencms.gwt.client.Messages.get().key(org.opencms.gwt.client.Messages.GUI_RESOURCE_STATE_0);
      AdditionalInfoItem item=new AdditionalInfoItem(label,CmsResourceStateUtil.getStateName(state),CmsResourceStateUtil.getStateStyle(state));
      return item;
    }
  }
);
  CmsSitemapHoverbar.installOn(m_controller,treeItem);
  if (isLastPage(entry)) {
    treeItem.setBackgroundColor(Background.YELLOW);
  }
  m_treeItems.put(entryId,treeItem);
  return treeItem;
}
