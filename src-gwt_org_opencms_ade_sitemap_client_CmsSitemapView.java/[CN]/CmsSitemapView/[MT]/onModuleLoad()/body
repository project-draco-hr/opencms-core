{
  super.onModuleLoad();
  checkBuildId("org.opencms.ade.sitemap");
  CmsPingTimer.start();
  m_instance=this;
  RootPanel rootPanel=RootPanel.get();
  m_editorMode=EditorMode.navigation;
  I_CmsSitemapLayoutBundle.INSTANCE.sitemapCss().ensureInjected();
  I_CmsSitemapLayoutBundle.INSTANCE.clipboardCss().ensureInjected();
  I_CmsSitemapLayoutBundle.INSTANCE.sitemapItemCss().ensureInjected();
  I_CmsSitemapLayoutBundle.INSTANCE.propertiesCss().ensureInjected();
  I_CmsImageBundle.INSTANCE.buttonCss().ensureInjected();
  rootPanel.addStyleName(I_CmsSitemapLayoutBundle.INSTANCE.sitemapCss().root());
  m_treeItems=new HashMap<CmsUUID,CmsSitemapTreeItem>();
  m_controller=new CmsSitemapController();
  m_controller.addChangeHandler(this);
  m_controller.addLoadHandler(this);
  m_toolbar=new CmsSitemapToolbar(m_controller);
  rootPanel.add(m_toolbar);
  CmsSitemapInfo info=m_controller.getData().getSitemapInfo();
  CmsInfoHeader header=new CmsInfoHeader(info.getTitle(),info.getDescription(),info.getSiteHost(),info.getSiteLocale(),getIconForEntry(m_controller.getData().getRoot()));
  header.addStyleName(I_CmsSitemapLayoutBundle.INSTANCE.sitemapCss().pageCenter());
  rootPanel.add(header);
  SimplePanel page=new SimplePanel();
  page.setStyleName(I_CmsSitemapLayoutBundle.INSTANCE.sitemapCss().page());
  page.addStyleName(I_CmsSitemapLayoutBundle.INSTANCE.generalCss().cornerAll());
  rootPanel.add(page);
  CmsClientSitemapEntry root=m_controller.getData().getRoot();
  CmsSitemapTreeItem rootItem=createSitemapItem(root);
  rootItem.onFinishLoading();
  rootItem.setOpen(true);
  m_tree=new CmsLazyTree<CmsSitemapTreeItem>(new I_CmsLazyOpenHandler<CmsSitemapTreeItem>(){
    private boolean m_setOpen;
    /** 
 * @see org.opencms.gwt.client.ui.tree.I_CmsLazyOpenHandler#load(org.opencms.gwt.client.ui.tree.CmsLazyTreeItem)
 */
    public void load(    final CmsSitemapTreeItem target){
      getController().getChildren(target.getEntryId(),m_setOpen,null);
    }
    /** 
 * @see org.opencms.gwt.client.ui.tree.I_CmsLazyOpenHandler#onOpen(com.google.gwt.event.logical.shared.OpenEvent)
 */
    public void onOpen(    OpenEvent<CmsSitemapTreeItem> event){
      CmsSitemapTreeItem target=event.getTarget();
      if ((target.getLoadState() == CmsLazyTreeItem.LoadState.UNLOADED)) {
        target.onStartLoading();
        target.setOpen(false);
        m_setOpen=true;
        load(target);
      }
 else       if ((target.getChildren().getWidgetCount() > 0) && (((CmsSitemapTreeItem)target.getChild(0)).getLoadState() == CmsLazyTreeItem.LoadState.UNLOADED)) {
        m_setOpen=false;
        load(target);
      }
    }
  }
);
  m_inNavigationStyle=new CmsStyleVariable(m_tree);
  if (m_controller.isEditable()) {
    CmsDNDHandler dndHandler=new CmsDNDHandler(new CmsSitemapDNDController(m_controller,m_toolbar));
    dndHandler.addTarget(m_tree);
    m_tree.setDNDHandler(dndHandler);
    m_tree.setDropEnabled(true);
    m_tree.setDNDTakeAll(true);
  }
  m_tree.truncate(TM_SITEMAP,920);
  m_tree.setAnimationEnabled(true);
  m_tree.addItem(rootItem);
  setEditorMode(EditorMode.navigation);
  page.setWidget(m_tree);
  m_controller.addPropertyUpdateHandler(new CmsStatusIconUpdateHandler());
  m_controller.recomputeProperties();
  rootItem.updateSitePath();
  if (!m_controller.isEditable()) {
    CmsNotification.get().sendSticky(CmsNotification.Type.WARNING,Messages.get().key(Messages.GUI_NO_EDIT_NOTIFICATION_1,m_controller.getData().getNoEditReason()));
    return;
  }
  String openPath=m_controller.getData().getOpenPath();
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(openPath)) {
    openItemsOnPath(openPath);
  }
}
