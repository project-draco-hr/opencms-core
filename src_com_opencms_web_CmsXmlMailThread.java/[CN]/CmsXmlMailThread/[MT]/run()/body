{
  Properties props=new Properties();
  props.put("mail.smtp.host",c_HOST);
  Session session=Session.getDefaultInstance(props,null);
  try {
    MimeMessage msg=new MimeMessage(session);
    InternetAddress[] to={new InternetAddress(c_AN)};
    msg.setFrom(new InternetAddress(c_FROM));
    msg.setRecipients(Message.RecipientType.TO,to);
    if (c_CC != null) {
      msg.setRecipients(Message.RecipientType.CC,InternetAddress.parse(c_CC,false));
    }
    if (c_BCC != null) {
      msg.setRecipients(Message.RecipientType.BCC,InternetAddress.parse(c_BCC,false));
    }
    msg.setSubject(c_SUBJECT,"ISO-8859-1");
    if (!c_CERTIFICATES.equals("")) {
      MimeBodyPart mbp1=new MimeBodyPart();
      mbp1.setText(c_CONTENT,"ISO-8859-1");
      MimeBodyPart mbp2=new MimeBodyPart();
      FileDataSource fds=new FileDataSource(C_PATH + c_CERTIFICATES);
      mbp2.setDataHandler(new DataHandler(fds));
      mbp2.setFileName(c_CERTIFICATES);
      Multipart mp=new MimeMultipart();
      mp.addBodyPart(mbp1);
      mp.addBodyPart(mbp2);
      msg.setContent(mp);
    }
 else {
      msg.setContent(c_CONTENT,"text/plain");
    }
    msg.setSentDate(new Date());
    Transport.send(msg);
  }
 catch (  Exception e) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(A_OpenCms.C_OPENCMS_CRITICAL,e.getMessage());
    }
  }
}
