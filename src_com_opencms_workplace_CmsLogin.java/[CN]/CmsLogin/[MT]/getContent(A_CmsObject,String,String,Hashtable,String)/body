{
  String username=null;
  HttpSession session=null;
  A_CmsUser user;
  CmsXmlWpConfigFile configFile=new CmsXmlWpConfigFile(cms);
  String actionPath=configFile.getWorkplaceActionPath();
  String startTaskId=(String)parameters.get(C_PARA_STARTTASKID);
  String startProjectId=(String)parameters.get(C_PARA_STARTPROJECTID);
  if (startTaskId == null) {
    startTaskId="";
  }
  if (startProjectId == null) {
    startProjectId="";
  }
  if (!startProjectId.equals("")) {
    session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
    session.putValue(C_PARA_STARTPROJECTID,startProjectId);
  }
  if (!startTaskId.equals("")) {
    session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
    session.putValue(C_PARA_STARTTASKID,startTaskId);
    Vector viewNames=new Vector();
    Vector viewLinks=new Vector();
    configFile.getWorkplaceIniData(viewNames,viewLinks,"WORKPLACEVIEWS","VIEW");
    String link="";
    for (int i=0; i < viewNames.size(); i++) {
      if (((String)viewNames.elementAt(i)).equals("tasks")) {
        link=(String)viewLinks.elementAt(i);
        break;
      }
    }
    session.putValue(C_PARA_VIEW,link);
  }
  if (!cms.anonymousUser().equals(cms.getRequestContext().currentUser()) && (!startTaskId.equals(""))) {
    Integer currentProject=null;
    session.removeValue(C_PARA_STARTPROJECTID);
    if (!startProjectId.equals("")) {
      currentProject=new Integer(startProjectId);
      boolean access=true;
      try {
        access=cms.accessProject(currentProject.intValue());
      }
 catch (      Exception e) {
        access=false;
      }
      if (!access) {
        Hashtable startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
        if (startSettings != null) {
          currentProject=(Integer)startSettings.get(C_START_PROJECT);
        }
      }
    }
 else {
      Hashtable startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
      if (startSettings != null) {
        currentProject=(Integer)startSettings.get(C_START_PROJECT);
      }
    }
    try {
      if (cms.accessProject(currentProject.intValue())) {
        cms.getRequestContext().setCurrentProject(currentProject.intValue());
      }
    }
 catch (    Exception e) {
    }
    try {
      cms.getRequestContext().getResponse().sendCmsRedirect(actionPath + "index.html");
      return "".getBytes();
    }
 catch (    Exception e) {
      throw new CmsException(e.getMessage());
    }
  }
  String template=templateSelector;
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  Hashtable preferences=new Hashtable();
  String name=(String)parameters.get("NAME");
  String password=(String)parameters.get("PASSWORD");
  if ((name != null) && (password != null)) {
    try {
      username=cms.loginUser(name,password);
    }
 catch (    CmsException e) {
      if (e.getType() == CmsException.C_NO_ACCESS) {
        username=null;
        xmlTemplateDocument.setData("details",Utils.getStackTrace(e));
        template="error";
      }
 else {
        throw e;
      }
    }
    if (username != null) {
      session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,"[CmsLogin] Login user " + username);
      }
      user=cms.readUser(username);
      Integer currentProject=null;
      startProjectId=(String)session.getValue(C_PARA_STARTPROJECTID);
      if (startProjectId != null && (!startProjectId.equals(""))) {
        currentProject=new Integer(startProjectId);
        session.removeValue(C_PARA_STARTPROJECTID);
        boolean access=true;
        try {
          access=cms.accessProject(currentProject.intValue());
        }
 catch (        Exception e) {
          access=false;
        }
        if (!access) {
          Hashtable startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
          if (startSettings != null) {
            currentProject=(Integer)startSettings.get(C_START_PROJECT);
          }
        }
      }
 else {
        Hashtable startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
        if (startSettings != null) {
          currentProject=(Integer)startSettings.get(C_START_PROJECT);
        }
      }
      try {
        if (cms.accessProject(currentProject.intValue())) {
          cms.getRequestContext().setCurrentProject(currentProject.intValue());
        }
      }
 catch (      Exception e) {
      }
      preferences=(Hashtable)user.getAdditionalInfo(C_ADDITIONAL_INFO_PREFERENCES);
      if (preferences == null) {
        preferences=getDefaultPreferences();
      }
      session.putValue(C_ADDITIONAL_INFO_PREFERENCES,preferences);
    }
  }
 else {
    session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(false);
    if (session != null) {
      String projectid=(String)session.getValue(C_PARA_STARTPROJECTID);
      String taskid=(String)session.getValue(C_PARA_STARTTASKID);
      String view=(String)session.getValue(C_PARA_VIEW);
      if (projectid == null) {
        projectid="";
      }
      if (taskid == null) {
        taskid="";
        view="";
      }
      session.invalidate();
      session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
      if (!projectid.equals("")) {
        session.putValue(C_PARA_STARTPROJECTID,projectid);
      }
      if (!taskid.equals("")) {
        session.putValue(C_PARA_STARTTASKID,taskid);
        session.putValue(C_PARA_VIEW,view);
      }
    }
  }
  if (username == null) {
    xmlTemplateDocument.clearStartup();
  }
 else {
    xmlTemplateDocument.setData("ID",session.getId().replace('.','_'));
  }
  return startProcessing(cms,xmlTemplateDocument,"",parameters,template);
}
