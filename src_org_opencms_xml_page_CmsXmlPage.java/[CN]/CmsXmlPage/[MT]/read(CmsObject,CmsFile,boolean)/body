{
  CmsXmlPage newPage=null;
  byte[] content=file.getContents();
  String allowRelative;
  try {
    allowRelative=cms.readPropertyObject(cms.readAbsolutePath(file),C_PROPERTY_ALLOW_RELATIVE,false).getValue("false");
  }
 catch (  CmsException e) {
    allowRelative=Boolean.toString(false);
  }
  String encoding;
  try {
    encoding=cms.readPropertyObject(cms.readAbsolutePath(file),I_CmsConstants.C_PROPERTY_CONTENT_ENCODING,true).getValue(OpenCms.getSystemInfo().getDefaultEncoding());
  }
 catch (  CmsException e) {
    encoding=OpenCms.getSystemInfo().getDefaultEncoding();
  }
  if (content.length > 0) {
    if (keepEncoding) {
      newPage=read(content,encoding);
    }
 else {
      try {
        String contentStr=new String(content,encoding);
        newPage=read(contentStr,encoding);
      }
 catch (      UnsupportedEncodingException e) {
        throw new CmsXmlException("Invalid encoding selected for xmlPage: " + encoding,e);
      }
    }
  }
 else {
    newPage=new CmsXmlPage(encoding);
  }
  newPage.m_file=file;
  newPage.m_allowRelativeLinks=Boolean.valueOf(allowRelative).booleanValue();
  return newPage;
}
