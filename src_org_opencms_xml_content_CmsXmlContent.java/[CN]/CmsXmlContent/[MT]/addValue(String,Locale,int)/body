{
  I_CmsXmlSchemaType type=m_contentDefinition.getSchemaType(path);
  Element parentElement;
  String elementName;
  CmsXmlContentDefinition contentDefinition;
  if (CmsXmlUtils.isDeepXpath(path)) {
    String parentPath=CmsXmlUtils.removeLastXpathElement(path);
    Object o=getBookmark(parentPath,locale);
    if (o == null) {
      throw new IllegalArgumentException("Unknown XML content element path " + path);
    }
    CmsXmlNestedContentDefinition parentValue=(CmsXmlNestedContentDefinition)o;
    parentElement=parentValue.getElement();
    elementName=CmsXmlUtils.getLastXpathElement(path);
    contentDefinition=parentValue.getContentDefinition();
  }
 else {
    parentElement=getLocaleNode(locale);
    elementName=CmsXmlUtils.removeXpathIndex(path);
    contentDefinition=m_contentDefinition;
  }
  List values=getValues(path,locale);
  int insertIndex;
  if (values.size() > 0) {
    if (values.size() >= type.getMaxOccurs()) {
      throw new RuntimeException("Element '" + elementName + "' can occur at maximum "+ type.getMaxOccurs()+ " times");
    }
    Iterator i=parentElement.content().iterator();
    int pos=0;
    int foundCount=0;
    while (i.hasNext()) {
      pos++;
      Node node=(Node)i.next();
      if (node instanceof Element) {
        if (node.getName().equals(elementName)) {
          foundCount++;
          if (foundCount >= index) {
            if (index == 0) {
              pos--;
            }
            break;
          }
        }
      }
    }
    insertIndex=pos;
  }
 else {
    int typeIndex=contentDefinition.getTypeSequence().indexOf(type);
    if (typeIndex == 0) {
      insertIndex=0;
    }
 else {
      List previousTypeNames=new ArrayList();
      for (int i=0; i < typeIndex; i++) {
        I_CmsXmlSchemaType t=(I_CmsXmlSchemaType)contentDefinition.getTypeSequence().get(i);
        previousTypeNames.add(t.getElementName());
      }
      Iterator i=parentElement.content().iterator();
      int pos=0;
      while (i.hasNext()) {
        Node node=(Node)i.next();
        if (node instanceof Element) {
          if (!previousTypeNames.contains(node.getName())) {
            break;
          }
        }
        pos++;
      }
      insertIndex=pos;
    }
  }
  I_CmsXmlContentValue newValue=addValue(contentDefinition,parentElement,type,locale,insertIndex);
  initDocument(m_document,m_encoding,m_contentDefinition);
  return newValue;
}
