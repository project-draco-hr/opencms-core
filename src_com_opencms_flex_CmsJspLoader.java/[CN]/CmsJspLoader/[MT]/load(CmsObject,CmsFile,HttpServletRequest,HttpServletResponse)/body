{
  long timer1=0;
  if (DEBUG > 0) {
    timer1=System.currentTimeMillis();
    System.err.println("========== JspLoader loading: " + file.getAbsolutePath());
  }
  boolean streaming=false;
  boolean bypass=false;
  boolean exportmode=(cms.getMode() == CmsObject.C_MODUS_EXPORT);
  try {
    String stream=cms.readProperty(file.getAbsolutePath(),I_CmsResourceLoader.C_LOADER_STREAMPROPERTY);
    if (stream != null) {
      if ("yes".equalsIgnoreCase(stream) || "true".equalsIgnoreCase(stream)) {
        streaming=!exportmode;
      }
 else       if ("bypass".equalsIgnoreCase(stream) || "bypasscache".equalsIgnoreCase(stream)) {
        bypass=!exportmode;
      }
    }
  }
 catch (  CmsException e) {
    throw new ServletException("FlexJspLoader: Error while loading stream properties for " + file.getAbsolutePath() + "\n"+ e,e);
  }
  if (DEBUG > 1)   System.err.println("========== JspLoader stream=" + streaming + " bypass="+ bypass);
  CmsFlexRequest w_req;
  CmsFlexResponse w_res;
  if (req instanceof CmsFlexRequest) {
    w_req=(CmsFlexRequest)req;
  }
 else {
    w_req=new CmsFlexRequest(req,file,m_cache,cms);
  }
  if (res instanceof CmsFlexResponse) {
    w_res=(CmsFlexResponse)res;
  }
 else {
    w_res=new CmsFlexResponse(res,streaming,cms.getRequestContext().getEncoding());
  }
  if (bypass) {
    if (DEBUG > 1)     System.err.println("JspLoader.load() bypassing cache for file " + file.getAbsolutePath());
    String target=updateJsp(cms,file,w_req,new HashSet(11));
    req.getRequestDispatcher(target).forward(w_req,res);
    if (DEBUG > 1)     System.err.println("JspLoader.load() cache was bypassed!");
  }
 else {
    try {
      w_req.getCmsRequestDispatcher(file.getAbsolutePath()).include(w_req,w_res);
    }
 catch (    java.net.SocketException e) {
      if (DEBUG > 1)       System.err.println("JspLoader.load() ignoring SocketException " + e);
    }
    if (!streaming && !w_res.isSuspended()) {
      try {
        if (!res.isCommitted()) {
          byte[] result=w_res.getWriterBytes();
          String dnc=A_OpenCms.getDefaultEncoding().trim().toLowerCase();
          String enc=cms.getRequestContext().getEncoding().trim().toLowerCase();
          if (!dnc.equals(enc)) {
            if (DEBUG > 1)             System.err.println("CmsJspLoader.load(): Encoding result from " + dnc + " to "+ enc);
            result=(new String(result,dnc)).getBytes(enc);
          }
          if (exportmode) {
            exportSetLinkHeader(cms,w_res);
          }
          res.setContentLength(result.length);
          CmsFlexResponse.processHeaders(w_res.getHeaders(),res);
          res.getOutputStream().write(result);
          res.getOutputStream().flush();
        }
      }
 catch (      IllegalStateException e) {
        if (DEBUG > 1)         System.err.println("JspLoader.load() ignoring IllegalStateException " + e);
      }
catch (      java.net.SocketException e) {
        if (DEBUG > 1)         System.err.println("JspLoader.load() ignoring SocketException " + e);
      }
    }
  }
  if (DEBUG > 0) {
    long timer2=System.currentTimeMillis() - timer1;
    System.err.println("========== JspLoader time delivering JSP for " + file.getAbsolutePath() + ": "+ timer2+ "ms");
  }
}
