{
  CmsListItemWidget itemWidget=createListItemWidget(resourceBean);
  final CmsStyleVariable styleVar=new CmsStyleVariable(itemWidget);
  styleVar.setValue(CSS.itemToKeep());
  final CmsCheckBox checkbox=new CmsCheckBox();
  final boolean hasProblem=(resourceBean.getInfo() != null);
  if (hasProblem) {
    checkbox.setChecked(false);
    checkbox.setEnabled(false);
  }
  CmsTreeItem row=new CmsTreeItem(false,checkbox,itemWidget);
  final CmsCheckBox remover=new CmsCheckBox();
  final CmsPublishItemSelectionController controller=new CmsPublishItemSelectionController(resourceBean.getId(),checkbox,remover,hasProblem);
  m_selectionControllers.add(controller);
  remover.setTitle(Messages.get().key(Messages.GUI_PUBLISH_REMOVE_BUTTON_0));
  remover.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      boolean remove=remover.isChecked();
      controller.onClickRemove(remove);
      I_CmsListItemWidgetCss itemWidgetCss=I_CmsLayoutBundle.INSTANCE.listItemWidgetCss();
      styleVar.setValue(remove ? itemWidgetCss.disabledItem() : CSS.itemToKeep());
      remover.setTitle(remove ? Messages.get().key(Messages.GUI_PUBLISH_UNREMOVE_BUTTON_0) : Messages.get().key(Messages.GUI_PUBLISH_REMOVE_BUTTON_0));
    }
  }
);
  itemWidget.addButtonToFront(remover);
  row.addStyleName(CSS.publishRow());
  return row;
}
