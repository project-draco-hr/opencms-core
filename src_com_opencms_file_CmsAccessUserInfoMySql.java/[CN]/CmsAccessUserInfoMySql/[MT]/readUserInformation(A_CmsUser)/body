{
  Hashtable info=null;
  byte[] value;
  ResultSet res=null;
  try {
    PreparedStatement statementUserinfoRead=m_Con.prepareStatement(C_USERINFO_READ);
    statementUserinfoRead.setInt(1,user.getId());
    res=statementUserinfoRead.executeQuery();
    if (res.next()) {
      value=res.getBytes(C_USER_INFO);
      ByteArrayInputStream bin=new ByteArrayInputStream(value);
      ObjectInputStream oin=new ObjectInputStream(bin);
      info=(Hashtable)oin.readObject();
      user.setAdditionalInfo(info);
      user.setFirstname(res.getString(C_USER_FIRSTNAME));
      user.setLastname(res.getString(C_USER_LASTNAME));
      user.setEmail(res.getString(C_USER_EMAIL));
      user.setLastlogin(SqlHelper.getTimestamp(res,C_USER_LASTLOGIN).getTime());
      user.setLastUsed(SqlHelper.getTimestamp(res,C_USER_LASTUSED).getTime());
      user.setFlags(res.getInt(C_USER_FLAGS));
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "]"+ user.getId(),CmsException.C_NO_USER);
    }
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "]"+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
catch (  Exception e) {
    throw new CmsException("[" + this.getClass().getName() + "]",e);
  }
  return user;
}
