{
  String[] rules=m_cms.getLinkRules(C_MODUS_EXTERN);
  String startRule=OpenCms.getLinkRuleStart();
  if (startRule != null && !"".equals(startRule)) {
    try {
      link=c_perlUtil.substitute(startRule,link);
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[" + this.getClass().getName() + "] problems with startrule:\""+ startRule+ "\" ("+ e+ "). ");
      }
    }
  }
  if (rules == null || rules.length == 0) {
    return link;
  }
  String retValue=link;
  for (int i=0; i < rules.length; i++) {
    try {
      if ("*dynamicRules*".equals(rules[i])) {
        retValue=handleDynamicRules(m_cms,link,C_MODUS_EXTERN);
      }
 else {
        retValue=c_perlUtil.substitute(rules[i],link);
      }
      if (!link.equals(retValue)) {
        return retValue;
      }
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[" + this.getClass().getName() + "] problems with rule:\""+ rules[i]+ "\" ("+ e+ "). ");
      }
    }
  }
  return retValue;
}
