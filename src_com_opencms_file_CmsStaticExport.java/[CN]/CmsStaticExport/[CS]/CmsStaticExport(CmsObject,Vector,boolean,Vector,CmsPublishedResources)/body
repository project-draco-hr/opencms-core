{
  m_cms=cms;
  m_startpoints=startpoints;
  m_changedLinks=changedLinks;
  m_exportPath=cms.getStaticExportPath();
  c_perlUtil=new Perl5Util();
  if (changedResources != null) {
    m_afterPublish=true;
  }
  if (!doTheExport) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_STATICEXPORT,"[CmsStaticExport] Generating the dynamic rulesets.");
    }
    createDynamicRules();
  }
 else {
    try {
      m_servletUrl=cms.getRequestContext().getRequest().getServletUrl();
      m_webAppUrl=cms.getRequestContext().getRequest().getWebAppUrl();
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_STATICEXPORT,"[CmsStaticExport] Starting the static export.");
      }
      createDynamicRules();
      checkExportPath();
      Vector exportLinks=null;
      if (m_afterPublish) {
        exportLinks=getChangedLinks(changedResources);
      }
 else {
        exportLinks=getStartLinks();
      }
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_STATICEXPORT,"[CmsStaticExport] got " + exportLinks.size() + " links to start with.");
      }
      for (int i=0; i < exportLinks.size(); i++) {
        String aktLink=(String)exportLinks.elementAt(i);
        exportLink(aktLink,exportLinks);
      }
      setChangedLinkVector(exportLinks);
    }
 catch (    NullPointerException e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_STATICEXPORT,"[CmsStaticExport] Nothing found to export.");
      }
    }
  }
}
