{
  CmsProject publishProject=readProject(currentUser,currentProject,id);
  Vector changedResources=null;
  if ((isAdmin(currentUser,currentProject) || isManagerOfProject(currentUser,publishProject)) && (publishProject.getFlags() == C_PROJECT_STATE_UNLOCKED) && (id != C_PROJECT_ONLINE_ID)) {
    ClassLoader loader=getClass().getClassLoader();
    boolean shouldReload=false;
    if (loader instanceof CmsClassLoader) {
      Vector classFiles=((CmsClassLoader)loader).getFilenames();
      shouldReload=shouldReloadClasses(id,classFiles);
    }
    try {
      changedResources=m_dbAccess.publishProject(currentUser,id,onlineProject(currentUser,currentProject),m_enableHistory);
    }
 catch (    CmsException e) {
      throw e;
    }
 finally {
      m_resourceCache.clear();
      m_subresCache.clear();
      fileSystemChanged(true);
      if (publishProject.getType() == C_PROJECT_TYPE_TEMPORARY) {
        m_dbAccess.deleteProject(publishProject);
        try {
          m_projectCache.remove(id);
        }
 catch (        Exception e) {
          A_OpenCms.log(A_OpenCms.C_OPENCMS_CACHE,"Could not remove project " + id + " from cache");
        }
      }
      if (m_refresh.length() > 0) {
        try {
          URL url=new URL(m_refresh);
          URLConnection con=url.openConnection();
          con.connect();
          InputStream in=con.getInputStream();
          in.close();
        }
 catch (        Exception ex) {
          throw new CmsException(0,ex);
        }
      }
      if (loader instanceof CmsClassLoader) {
        ((CmsClassLoader)loader).setShouldReload(shouldReload);
      }
    }
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] could not publish project "+ id,CmsException.C_NO_ACCESS);
  }
  return changedResources;
}
