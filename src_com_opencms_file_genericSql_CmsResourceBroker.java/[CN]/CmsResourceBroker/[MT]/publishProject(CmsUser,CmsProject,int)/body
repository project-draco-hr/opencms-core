{
  CmsProject publishProject=readProject(currentUser,currentProject,id);
  Vector changedResources=null;
  if ((isAdmin(currentUser,currentProject) || isManagerOfProject(currentUser,publishProject)) && (publishProject.getFlags() == C_PROJECT_STATE_UNLOCKED)) {
    ClassLoader loader=getClass().getClassLoader();
    boolean shouldReload=false;
    if (loader instanceof CmsClassLoader) {
      Vector classFiles=((CmsClassLoader)loader).getFilenames();
      shouldReload=shouldReloadClasses(id,classFiles);
    }
    changedResources=m_dbAccess.publishProject(currentUser,id,onlineProject(currentUser,currentProject),m_enableHistory);
    m_subresCache.clear();
    fileSystemChanged(true);
    CmsProject project=readProject(currentUser,currentProject,id);
    if (project.getType() == C_PROJECT_TYPE_TEMPORARY) {
      project.setFlags(C_PROJECT_STATE_ARCHIVE);
      project.setPublishingDate(new Date().getTime());
      project.setPublishedBy(currentUser.getId());
      m_dbAccess.writeProject(project);
      m_projectCache.put(project.getId(),project);
    }
 else {
      project.setPublishingDate(new Date().getTime());
      project.setPublishedBy(currentUser.getId());
      m_dbAccess.writeProject(project);
      m_projectCache.put(project.getId(),project);
    }
    if (m_refresh.length() > 0) {
      try {
        URL url=new URL(m_refresh);
        URLConnection con=url.openConnection();
        con.connect();
        InputStream in=con.getInputStream();
        in.close();
      }
 catch (      Exception ex) {
        throw new CmsException(0,ex);
      }
    }
    if (loader instanceof CmsClassLoader) {
      ((CmsClassLoader)loader).setShouldReload(shouldReload);
    }
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] could not publish project "+ id,CmsException.C_NO_ACCESS);
  }
  return changedResources;
}
