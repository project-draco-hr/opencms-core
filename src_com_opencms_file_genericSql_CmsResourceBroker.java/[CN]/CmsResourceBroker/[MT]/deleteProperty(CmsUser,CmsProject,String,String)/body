{
  CmsResource res=readFileHeader(currentUser,currentProject,resource);
  if (!accessWrite(currentUser,currentProject,res)) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ resource,CmsException.C_NO_ACCESS);
  }
  CmsResourceType resType=getResourceType(currentUser,currentProject,res.getType());
  CmsPropertydefinition metadef=readPropertydefinition(currentUser,currentProject,property,resType.getResourceName());
  if ((metadef != null) && (metadef.getPropertydefType() != C_PROPERTYDEF_TYPE_MANDATORY)) {
    m_dbAccess.deleteProperty(property,currentProject.getId(),res,res.getType());
    if (res.isFile()) {
      m_dbAccess.writeFileHeader(currentProject,(CmsFile)res,true);
      if (res.getState() == C_STATE_UNCHANGED) {
        res.setState(C_STATE_CHANGED);
      }
      m_resourceCache.put(C_FILE + currentProject.getId() + resource,res);
    }
 else {
      if (res.getState() == C_STATE_UNCHANGED) {
        res.setState(C_STATE_CHANGED);
      }
      m_dbAccess.writeFolder(currentProject,readFolder(currentUser,currentProject,resource),true);
      m_resourceCache.put(C_FOLDER + currentProject.getId() + resource,(CmsFolder)res);
    }
    m_subresCache.clear();
    m_propertyCache.clear();
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] "+ resource,CmsException.C_MANDATORY_PROPERTY);
  }
}
