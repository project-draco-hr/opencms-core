{
  CmsFolder offlineFolder=null;
  Vector resources=new Vector();
  Vector retValue=new Vector();
  try {
    offlineFolder=readFolder(currentUser,currentProject,folder);
    if (offlineFolder.getState() == C_STATE_DELETED) {
      offlineFolder=null;
    }
  }
 catch (  CmsException exc) {
  }
  if (offlineFolder == null) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ folder,CmsException.C_NOT_FOUND);
  }
 else {
    String cacheKey=getCacheKey(currentUser.getName() + "_resources",currentUser,currentProject,offlineFolder.getResourceName());
    retValue=(Vector)m_resourceListCache.get(cacheKey);
    if (retValue == null || retValue.size() == 0) {
      resources=m_VfsAccess.getResourcesInFolder(currentProject.getId(),offlineFolder);
      retValue=new Vector(resources.size());
      for (Enumeration e=resources.elements(); e.hasMoreElements(); ) {
        CmsResource res=(CmsResource)e.nextElement();
        if (accessOther(res,C_ACCESS_PUBLIC_READ + C_ACCESS_PUBLIC_VISIBLE) || accessOwner(currentUser,currentProject,res,C_ACCESS_OWNER_READ + C_ACCESS_OWNER_VISIBLE) || accessGroup(currentUser,currentProject,res,C_ACCESS_GROUP_READ + C_ACCESS_GROUP_VISIBLE)) {
          retValue.addElement(res);
        }
      }
      m_resourceListCache.put(cacheKey,retValue);
    }
  }
  return (retValue == null) ? null : (Vector)retValue.clone();
}
