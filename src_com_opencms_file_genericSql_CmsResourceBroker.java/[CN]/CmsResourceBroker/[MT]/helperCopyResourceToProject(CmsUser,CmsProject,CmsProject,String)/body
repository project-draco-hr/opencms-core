{
  try {
    CmsResource onlineRes=readFileHeader(currentUser,onlineProject,resource);
    m_dbAccess.copyResourceToProject(offlineProject,onlineProject,onlineRes);
    CmsResource offlineRes=readFileHeader(currentUser,offlineProject,resource);
    m_dbAccess.writeProperties(readAllProperties(currentUser,onlineProject,onlineRes.getAbsolutePath()),offlineRes.getResourceId(),offlineRes.getType());
    offlineRes.setState(C_STATE_UNCHANGED);
    if (offlineRes instanceof CmsFolder) {
      m_dbAccess.writeFolder(offlineProject,(CmsFolder)offlineRes,false);
      m_resourceCache.put(C_FOLDER + offlineProject.getId() + offlineRes.getName(),(CmsFolder)offlineRes);
    }
 else {
      m_dbAccess.writeFileHeader(offlineProject,(CmsFile)offlineRes,false);
      m_resourceCache.put(C_FILE + offlineProject.getId() + offlineRes.getName(),offlineRes);
    }
    m_subresCache.clear();
    fileSystemChanged(true);
    if (onlineRes.isFolder()) {
      Vector files=getFilesInFolder(currentUser,onlineProject,resource);
      Vector folders=getSubFolders(currentUser,onlineProject,resource);
      for (int i=0; i < folders.size(); i++) {
        helperCopyResourceToProject(currentUser,onlineProject,offlineProject,((CmsResource)folders.elementAt(i)).getAbsolutePath());
      }
      for (int i=0; i < files.size(); i++) {
        helperCopyResourceToProject(currentUser,onlineProject,offlineProject,((CmsResource)files.elementAt(i)).getAbsolutePath());
      }
    }
  }
 catch (  CmsException exc) {
    exc.printStackTrace();
  }
}
