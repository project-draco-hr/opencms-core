{
  Vector groups=getGroupsOfUser(currentUser,currentProject,currentUser.getName());
  Vector projects=m_dbAccess.getAllAccessibleProjectsByUser(currentUser);
  for (int i=0; i < groups.size(); i++) {
    Vector projectsByGroup;
    if (((CmsGroup)groups.elementAt(i)).getName().equals(C_GROUP_ADMIN)) {
      projectsByGroup=m_dbAccess.getAllProjects(C_PROJECT_STATE_UNLOCKED);
    }
 else {
      projectsByGroup=m_dbAccess.getAllAccessibleProjectsByManagerGroup((CmsGroup)groups.elementAt(i));
    }
    for (int j=0; j < projectsByGroup.size(); j++) {
      if (!projects.contains(projectsByGroup.elementAt(j))) {
        projects.addElement(projectsByGroup.elementAt(j));
      }
    }
  }
  projects.removeElement(onlineProject(currentUser,currentProject));
  Vector res=null;
  if (CmsConstants.USE_MULTISITE) {
    res=new Vector(projects.size());
    int onlineId=onlineProject(currentUser,currentProject).getId();
    for (Enumeration e=projects.elements(); e.hasMoreElements(); ) {
      CmsProject p=(CmsProject)e.nextElement();
      if (onlineId == onlineProject(currentUser,p).getId())       res.addElement(p);
    }
  }
 else   res=projects;
  return (res);
}
