{
  validFilename(newResourceName);
  String longResourcename=folder + newResourceName;
  boolean isFolder=false;
  if (resourceType == C_TYPE_FOLDER) {
    longResourcename=folder + newResourceName + C_FOLDER_SEPERATOR;
    isFolder=true;
  }
  CmsFolder parentFolder=readFolder(currentUser,currentProject,folder);
  if (accessCreate(currentUser,currentProject,(CmsResource)parentFolder)) {
    CmsUser owner=this.readUser(currentUser,currentProject,ownername);
    CmsGroup group=this.readGroup(currentUser,currentProject,groupname);
    if (filecontent == null) {
      filecontent=new byte[0];
    }
    CmsResource newResource=new CmsResource(C_UNKNOWN_ID,parentFolder.getResourceId(),C_UNKNOWN_ID,longResourcename,resourceType,0,owner.getId(),group.getId(),currentProject.getId(),accessFlags,C_STATE_NEW,currentUser.getId(),launcherType,launcherClassname,System.currentTimeMillis(),System.currentTimeMillis(),currentUser.getId(),filecontent.length,currentProject.getId());
    newResource=m_dbAccess.createResource(currentProject,onlineProject(currentUser,currentProject),newResource,filecontent,currentUser.getId(),isFolder);
    this.clearResourceCache(longResourcename);
    m_dbAccess.writeProperties(propertyinfos,currentProject.getId(),newResource,newResource.getType(),true);
    fileSystemChanged(true);
    return newResource;
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] "+ folder+ newResourceName,CmsException.C_NO_ACCESS);
  }
}
