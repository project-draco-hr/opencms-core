{
  m_configuration=config;
  if (config.getString("history.enabled","true").toLowerCase().equals("false")) {
    m_enableHistory=false;
  }
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsResourceBroker] init the dbaccess-module.");
  }
  m_dbAccess=createDbAccess(config);
  m_userCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".user",50));
  m_groupCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".group",50));
  m_usergroupsCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".usergroups",50));
  m_projectCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".project",50));
  m_resourceCache=new CmsResourceCache(config.getInteger(C_CONFIGURATION_CACHE + ".resource",1000));
  m_subresCache=new CmsResourceCache(config.getInteger(C_CONFIGURATION_CACHE + ".subres",100));
  m_propertyCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".property",1000));
  m_propertyDefCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".propertydef",100));
  m_propertyDefVectorCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".propertyvectordef",100));
  m_accessCache=new CmsCache(config.getInteger(C_CONFIGURATION_CACHE + ".access",1000));
  m_cachelimit=config.getInteger(C_CONFIGURATION_CACHE + ".maxsize",20000);
  m_refresh=config.getString(C_CONFIGURATION_CACHE + ".refresh","");
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsResourceBroker] init registry.");
  }
  try {
    m_registry=new CmsRegistry(CmsBase.getAbsolutePath(config.getString(C_CONFIGURATION_REGISTRY)));
  }
 catch (  CmsException ex) {
    throw ex;
  }
catch (  Exception ex) {
    throw new CmsException("Init of registry failed",CmsException.C_REGISTRY_ERROR,ex);
  }
}
