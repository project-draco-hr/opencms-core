{
  CmsObject cms=getCmsObject();
  echo("Testing organizational units persistence");
  CmsOrganizationalUnit rootOu=OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"");
  CmsOrganizationalUnit ou=OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"test");
  CmsOrganizationalUnit ou2=OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,ou.getName() + "test2");
  CmsFolder rootOuFolder=cms.readFolder("/system/orgunits/");
  assertEquals(rootOu.getId(),rootOuFolder.getStructureId());
  assertEquals(rootOu.getFlags(),rootOuFolder.getFlags() & ~CmsResource.FLAG_INTERNAL);
  assertTrue(rootOuFolder.getState().isUnchanged());
  assertTrue(rootOuFolder.isInternal());
  assertEquals(rootOu.getDescription(),cms.readPropertyObject(rootOuFolder,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  assertOrgUnitResources(cms,rootOu);
  CmsFolder ouFolder=cms.readFolder("/system/orgunits/test");
  assertEquals(ou.getId(),ouFolder.getStructureId());
  assertEquals(ou.getFlags(),ouFolder.getFlags() & ~CmsResource.FLAG_INTERNAL);
  assertTrue(ouFolder.getState().isUnchanged());
  assertTrue(ouFolder.isInternal());
  assertEquals(ou.getDescription(),cms.readPropertyObject(ouFolder,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  assertOrgUnitResources(cms,ou);
  CmsFolder ou2Folder=cms.readFolder("/system/orgunits/test/test2");
  assertEquals(ou2.getId(),ou2Folder.getStructureId());
  assertEquals(ou2.getFlags(),ou2Folder.getFlags() & ~CmsResource.FLAG_INTERNAL);
  assertTrue(ou2Folder.getState().isUnchanged());
  assertTrue(ou2Folder.isInternal());
  assertEquals(ou2.getDescription(),cms.readPropertyObject(ou2Folder,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  assertOrgUnitResources(cms,ou2);
  cms.getRequestContext().setCurrentProject(cms.readProject(CmsProject.ONLINE_PROJECT_ID));
  rootOuFolder=cms.readFolder("/system/orgunits/");
  assertEquals(rootOu.getId(),rootOuFolder.getStructureId());
  assertEquals(rootOu.getFlags(),rootOuFolder.getFlags() & ~CmsResource.FLAG_INTERNAL);
  assertTrue(rootOuFolder.getState().isUnchanged());
  assertTrue(rootOuFolder.isInternal());
  assertEquals(rootOu.getDescription(),cms.readPropertyObject(rootOuFolder,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  assertOrgUnitResources(cms,rootOu);
  ouFolder=cms.readFolder("/system/orgunits/test");
  assertEquals(ou.getId(),ouFolder.getStructureId());
  assertEquals(ou.getFlags(),ouFolder.getFlags() & ~CmsResource.FLAG_INTERNAL);
  assertTrue(ouFolder.getState().isUnchanged());
  assertTrue(ouFolder.isInternal());
  assertEquals(ou.getDescription(),cms.readPropertyObject(ouFolder,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  assertOrgUnitResources(cms,ou);
  ou2Folder=cms.readFolder("/system/orgunits/test/test2");
  assertEquals(ou2.getId(),ou2Folder.getStructureId());
  assertEquals(ou2.getFlags(),ou2Folder.getFlags() & ~CmsResource.FLAG_INTERNAL);
  assertTrue(ou2Folder.getState().isUnchanged());
  assertTrue(ou2Folder.isInternal());
  assertEquals(ou2.getDescription(),cms.readPropertyObject(ou2Folder,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  assertOrgUnitResources(cms,ou2);
}
