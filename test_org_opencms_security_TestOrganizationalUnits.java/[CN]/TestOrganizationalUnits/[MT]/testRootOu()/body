{
  CmsObject cms=getCmsObject();
  echo("Testing the automatic creation of the root organizational units");
  CmsOrganizationalUnit rootOu=OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"");
  assertTrue(OpenCms.getOrgUnitManager().getOrganizationalUnits(cms,rootOu.getName(),false).isEmpty());
  assertTrue(OpenCms.getOrgUnitManager().getOrganizationalUnits(cms,rootOu.getName(),true).isEmpty());
  assertEquals(0,rootOu.getFlags());
  assertNull(rootOu.getParentFqn());
  assertEquals("root organizational unit",rootOu.getDescription(Locale.ENGLISH));
  assertEquals("",rootOu.getName());
  assertEquals(CmsUUID.getNullUUID(),rootOu.getProjectId());
  assertEquals(cms.readFolder("/system/orgunits").getStructureId(),rootOu.getId());
  List rootResources=OpenCms.getOrgUnitManager().getResourcesForOrganizationalUnit(cms,rootOu.getName());
  assertEquals(1,rootResources.size());
  String site=cms.getRequestContext().getSiteRoot();
  cms.getRequestContext().setSiteRoot("/");
  assertTrue(rootResources.contains(cms.readResource("/")));
  cms.getRequestContext().setSiteRoot(site);
  List rootGroups=OpenCms.getOrgUnitManager().getGroups(cms,rootOu.getName(),false);
  assertEquals(7,rootGroups.size());
  assertTrue(rootGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupAdministrators())));
  assertTrue(rootGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupProjectmanagers())));
  assertTrue(rootGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupUsers())));
  assertTrue(rootGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupGuests())));
  assertTrue(rootGroups.contains(cms.readGroup("group1")));
  assertTrue(rootGroups.contains(cms.readGroup("group2")));
  assertTrue(rootGroups.contains(cms.readGroup("group3")));
  List rootSubGroups=OpenCms.getOrgUnitManager().getGroups(cms,rootOu.getName(),true);
  assertEquals(7,rootSubGroups.size());
  assertTrue(rootSubGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupAdministrators())));
  assertTrue(rootSubGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupProjectmanagers())));
  assertTrue(rootSubGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupUsers())));
  assertTrue(rootSubGroups.contains(cms.readGroup(OpenCms.getDefaultUsers().getGroupGuests())));
  assertTrue(rootSubGroups.contains(cms.readGroup("group1")));
  assertTrue(rootSubGroups.contains(cms.readGroup("group2")));
  assertTrue(rootSubGroups.contains(cms.readGroup("group3")));
  List rootUsers=OpenCms.getOrgUnitManager().getUsers(cms,rootOu.getName(),false);
  assertEquals(5,rootUsers.size());
  assertTrue(rootUsers.contains(cms.readUser(OpenCms.getDefaultUsers().getUserAdmin())));
  assertTrue(rootUsers.contains(cms.readUser(OpenCms.getDefaultUsers().getUserExport())));
  assertTrue(rootUsers.contains(cms.readUser(OpenCms.getDefaultUsers().getUserGuest())));
  assertTrue(rootUsers.contains(cms.readUser("test1")));
  assertTrue(rootUsers.contains(cms.readUser("test2")));
  List rootSubUsers=OpenCms.getOrgUnitManager().getUsers(cms,rootOu.getName(),true);
  assertEquals(5,rootSubUsers.size());
  assertTrue(rootSubUsers.contains(cms.readUser(OpenCms.getDefaultUsers().getUserAdmin())));
  assertTrue(rootSubUsers.contains(cms.readUser(OpenCms.getDefaultUsers().getUserExport())));
  assertTrue(rootSubUsers.contains(cms.readUser(OpenCms.getDefaultUsers().getUserGuest())));
  assertTrue(rootSubUsers.contains(cms.readUser("test1")));
  assertTrue(rootSubUsers.contains(cms.readUser("test2")));
  rootOu.setDescription("new description");
  OpenCms.getOrgUnitManager().writeOrganizationalUnit(cms,rootOu);
  try {
    OpenCms.getOrgUnitManager().deleteOrganizationalUnit(cms,rootOu.getName());
    fail("should not be able to delete the root ou");
  }
 catch (  CmsDataAccessException e) {
  }
}
