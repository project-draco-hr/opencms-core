{
  CmsObject cms=getCmsObject();
  echo("Testing user/group membership");
  assertEquals(3,OpenCms.getOrgUnitManager().getUsers(cms,"",false).size());
  assertEquals(5,OpenCms.getOrgUnitManager().getUsers(cms,"",true).size());
  cms.createUser("test1","test1","test user",null);
  assertEquals(4,OpenCms.getOrgUnitManager().getUsers(cms,"",false).size());
  assertEquals(6,OpenCms.getOrgUnitManager().getUsers(cms,"",true).size());
  assertEquals(1,OpenCms.getOrgUnitManager().getUsers(cms,"test",false).size());
  assertEquals(2,OpenCms.getOrgUnitManager().getUsers(cms,"test",true).size());
  try {
    cms.createUser("test/test1","test1","test user",null);
    fail("it could not be possible to create 2 users with the same name in an ou");
  }
 catch (  CmsVfsException e) {
  }
  assertEquals(1,OpenCms.getOrgUnitManager().getUsers(cms,"test/",false).size());
  assertEquals(2,OpenCms.getOrgUnitManager().getUsers(cms,"test/",true).size());
  assertEquals(1,OpenCms.getOrgUnitManager().getGroups(cms,"test/",false).size());
  assertEquals(2,OpenCms.getOrgUnitManager().getGroups(cms,"test/",true).size());
  cms.createGroup("test/group1","test group",0,null);
  assertEquals(7,OpenCms.getOrgUnitManager().getGroups(cms,"",false).size());
  assertEquals(11,OpenCms.getOrgUnitManager().getGroups(cms,"",true).size());
  assertEquals(2,OpenCms.getOrgUnitManager().getGroups(cms,"test",false).size());
  assertEquals(3,OpenCms.getOrgUnitManager().getGroups(cms,"test",true).size());
  try {
    cms.createGroup("test/group1","test group",0,null);
    fail("it could not be possible to create 2 groups with the same name in an ou");
  }
 catch (  CmsVfsException e) {
  }
  assertEquals(2,OpenCms.getOrgUnitManager().getGroups(cms,"test",false).size());
  assertEquals(3,OpenCms.getOrgUnitManager().getGroups(cms,"test",true).size());
  cms.addUserToGroup("test/test1","test/group1");
  assertEquals(1,cms.getUsersOfGroup("test/group1").size());
  assertTrue(cms.getUsersOfGroup("test/group1").contains(cms.readUser("test/test1")));
  assertTrue(cms.getGroupsOfUser("test1",false).isEmpty());
  cms.addUserToGroup("test1","test/group1");
  assertEquals(2,cms.getUsersOfGroup("test/group1").size());
  assertTrue(cms.getUsersOfGroup("test/group1").contains(cms.readUser("test/test1")));
  assertTrue(cms.getUsersOfGroup("test/group1").contains(cms.readUser("test1")));
  assertEquals(1,cms.getGroupsOfUser("test1",false).size());
  assertTrue(cms.getGroupsOfUser("test1",false).contains(cms.readGroup("test/group1")));
  assertTrue(cms.getUsersOfGroup("group1").isEmpty());
  assertEquals(3,cms.getGroupsOfUser("test/test1",true).size());
  assertTrue(cms.getGroupsOfUser("test/test1",true).contains(cms.readGroup("test/group1")));
  cms.addUserToGroup("test/test1","group1");
  assertEquals(1,cms.getUsersOfGroup("group1").size());
  assertTrue(cms.getUsersOfGroup("group1").contains(cms.readUser("test/test1")));
  assertEquals(4,cms.getGroupsOfUser("test/test1",true).size());
  assertTrue(cms.getGroupsOfUser("test/test1",true).contains(cms.readGroup("test/group1")));
  assertTrue(cms.getGroupsOfUser("test/test1",true).contains(cms.readGroup("group1")));
}
