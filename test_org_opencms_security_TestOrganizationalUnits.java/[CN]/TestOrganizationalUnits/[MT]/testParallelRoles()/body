{
  CmsObject cms=getCmsObject();
  echo("Testing roles on parallel ous");
  CmsUser user=cms.readUser("test/test1");
  assertEquals(3,OpenCms.getRoleManager().getOrgUnitsForRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit(""),true).size());
  cms.loginUser(user.getName(),"test1");
  List ous=OpenCms.getRoleManager().getOrgUnitsForRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit(""),true);
  assertTrue(ous.isEmpty());
  cms=getCmsObject();
  OpenCms.getRoleManager().addUserToRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit("test/"),user.getName());
  cms.loginUser(user.getName(),"test1");
  ous=OpenCms.getRoleManager().getOrgUnitsForRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit(""),true);
  assertEquals(2,ous.size());
  assertTrue(ous.contains(OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"test")));
  assertTrue(ous.contains(OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"test/test2")));
  cms=getCmsObject();
  cms.getRequestContext().setSiteRoot("");
  OpenCms.getOrgUnitManager().createOrganizationalUnit(cms,"test3","test3",0,"/system/");
  OpenCms.getRoleManager().addUserToRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit("test3/"),user.getName());
  assertEquals(4,OpenCms.getRoleManager().getOrgUnitsForRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit(""),true).size());
  cms.loginUser(user.getName(),"test1");
  ous=OpenCms.getRoleManager().getOrgUnitsForRole(cms,CmsRole.ADMINISTRATOR.forOrgUnit(""),true);
  assertEquals(3,ous.size());
  assertTrue(ous.contains(OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"test")));
  assertTrue(ous.contains(OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"test/test2")));
  assertTrue(ous.contains(OpenCms.getOrgUnitManager().readOrganizationalUnit(cms,"test3")));
}
