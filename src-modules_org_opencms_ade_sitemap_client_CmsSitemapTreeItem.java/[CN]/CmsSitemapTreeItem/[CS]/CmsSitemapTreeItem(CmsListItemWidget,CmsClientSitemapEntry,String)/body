{
  super(widget);
  m_decoratedPanel.addDecorationBoxStyle(CSS.sitemapEntryDecoration());
  m_listItemWidget=widget;
  m_detailPageLabelTitleGenerator=new DetailPageLabelTitleGenerator();
  m_listItemWidget.getSubTitleSuffix().setTitleGenerator(m_detailPageLabelTitleGenerator);
  m_originalPath=oriSitePath;
  m_entry=entry;
  m_itemsById.put(entry.getId(),this);
  setId(getName(entry.getSitePath()));
  updateSitePath(entry.getSitePath());
  updateSitemapReferenceStatus(entry);
  updateDetailPageStatus();
  setLockIcon(entry.getLock());
  setDropEnabled(m_entry.isFolderType() && !m_entry.hasForeignFolderLock());
  widget.setTitleEditable(true);
  widget.setTitleEditHandler(new I_CmsTitleEditHandler(){
    /** 
 * @see org.opencms.gwt.client.ui.CmsListItemWidget.I_CmsTitleEditHandler#handleEdit(org.opencms.gwt.client.ui.input.CmsLabel,com.google.gwt.user.client.ui.TextBox)
 */
    public void handleEdit(    CmsLabel titleLabel,    TextBox box){
      final String text=box.getText();
      box.removeFromParent();
      if (CmsStringUtil.isEmpty(text)) {
        titleLabel.setVisible(true);
        String dialogTitle=Messages.get().key(Messages.GUI_EDIT_TITLE_ERROR_DIALOG_TITLE_0);
        String dialogText=Messages.get().key(Messages.GUI_TITLE_CANT_BE_EMPTY_0);
        CmsAlertDialog alert=new CmsAlertDialog(dialogTitle,dialogText);
        alert.center();
        return;
      }
      String oldTitle=m_entry.getTitle();
      if (!oldTitle.equals(text)) {
        if (m_entry.isNew()) {
          CmsRpcAction<String> action=new CmsRpcAction<String>(){
            /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
            @Override public void execute(){
              start(0,false);
              CmsCoreProvider.getService().translateUrlName(text,this);
            }
            /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
            @Override protected void onResponse(            String result){
              stop(false);
              String newUrlName=result;
              if (!m_entry.isRoot()) {
                String parentPath=CmsResource.getParentFolder(m_entry.getSitePath());
                CmsClientSitemapEntry parent=CmsSitemapView.getInstance().getController().getEntry(parentPath);
                newUrlName=CmsSitemapController.ensureUniqueName(parent,result);
              }
              CmsClientSitemapEntry newEntry=new CmsClientSitemapEntry(m_entry);
              newEntry.setTitle(text);
              newEntry.setName(newUrlName);
              CmsSitemapController controller=CmsSitemapView.getInstance().getController();
              controller.editAndChangeName(m_entry,text,newUrlName,m_entry.getVfsPath(),m_entry.getProperties(),false);
            }
          }
;
          action.execute();
        }
 else {
          CmsSitemapController controller=CmsSitemapView.getInstance().getController();
          controller.edit(m_entry,text,m_entry.getVfsPath(),m_entry.getProperties(),false);
        }
      }
      titleLabel.setVisible(true);
    }
  }
);
}
