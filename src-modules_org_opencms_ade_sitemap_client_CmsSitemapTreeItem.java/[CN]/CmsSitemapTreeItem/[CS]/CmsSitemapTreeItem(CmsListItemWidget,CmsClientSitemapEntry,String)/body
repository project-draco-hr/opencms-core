{
  super(widget);
  m_decoratedPanel.addDecorationBoxStyle(CSS.sitemapEntryDecoration());
  m_listItemWidget=widget;
  m_originalPath=oriSitePath;
  m_entry=entry;
  setId(getName(entry.getSitePath()));
  updateSitePath(entry.getSitePath());
  updateSitemapReferenceStatus(entry);
  setDropEnabled(!m_entry.getProperties().containsKey(CmsSitemapManager.Property.sitemap));
  widget.setTitleEditable(true);
  widget.setTitleEditHandler(new I_CmsTitleEditHandler(){
    /** 
 * @see org.opencms.gwt.client.ui.CmsListItemWidget.I_CmsTitleEditHandler#handleEdit(org.opencms.gwt.client.ui.input.CmsLabel,com.google.gwt.user.client.ui.TextBox)
 */
    public void handleEdit(    CmsLabel titleLabel,    TextBox box){
      final String text=box.getText();
      box.removeFromParent();
      if (CmsStringUtil.isEmpty(text)) {
        titleLabel.setVisible(true);
        String dialogTitle=Messages.get().key(Messages.GUI_EDIT_TITLE_ERROR_DIALOG_TITLE_0);
        String dialogText=Messages.get().key(Messages.GUI_TITLE_CANT_BE_EMPTY_0);
        CmsAlertDialog alert=new CmsAlertDialog(dialogTitle,dialogText);
        alert.center();
        return;
      }
      String oldTitle=m_entry.getTitle();
      if (!oldTitle.equals(text)) {
        CmsClientSitemapEntry newEntry=new CmsClientSitemapEntry(m_entry);
        newEntry.setTitle(text);
        CmsClientSitemapChangeEdit edit=new CmsClientSitemapChangeEdit(m_entry,newEntry);
        CmsSitemapView.getInstance().getController().addChange(edit,false);
      }
      titleLabel.setVisible(true);
    }
  }
);
}
