{
  ServletRequest request=pageContext.getRequest();
  ServletResponse response=pageContext.getResponse();
  if (CmsFlexController.isCmsRequest(request)) {
    CmsObject cms=CmsFlexController.getCmsObject(request);
    Locale locale=cms.getRequestContext().getLocale();
    boolean isOnline=cms.getRequestContext().getCurrentProject().isOnlineProject();
    m_parentElement=CmsJspStandardContextBean.getInstance(request).getElement();
    if (m_value != null) {
      try {
        CmsResource res=cms.readResource(m_value);
        I_CmsFormatterBean formatter=getFormatterForType(cms,res,isOnline);
        if (formatter != null) {
          CmsContainerElementBean element=new CmsContainerElementBean(res.getStructureId(),formatter.getJspStructureId(),m_parameterMap,false);
          element.initResource(cms);
          element.initSettings(cms,formatter);
          boolean openedEditable=false;
          if (Boolean.valueOf(m_editable).booleanValue()) {
            openedEditable=CmsJspTagEdit.insertDirectEditStart(cms,pageContext,res,m_canCreate,m_canDelete,m_createType,m_creationSiteMap,m_postCreateHandler);
          }
          CmsJspStandardContextBean.getInstance(request).setElement(element);
          try {
            CmsJspTagInclude.includeTagAction(pageContext,cms.getRequestContext().removeSiteRoot(formatter.getJspRootPath()),null,locale,false,isOnline,null,CmsRequestUtil.getAtrributeMap(request),request,response);
          }
 catch (          JspException e) {
            LOG.error(e.getLocalizedMessage(),e);
          }
          if (openedEditable) {
            CmsJspTagEdit.insertDirectEditEnd(pageContext);
          }
        }
      }
 catch (      CmsException e) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
    CmsJspStandardContextBean.getInstance(request).setElement(m_parentElement);
  }
  release();
  return EVAL_PAGE;
}
