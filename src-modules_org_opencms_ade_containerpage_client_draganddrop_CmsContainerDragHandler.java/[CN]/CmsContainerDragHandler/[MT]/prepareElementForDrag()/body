{
  if (m_dragElement instanceof CmsDraggableListItemWidget<?>) {
    m_dragFromMenu=true;
    CmsDragTargetMenu dragParent=new CmsDragTargetMenu();
    dragParent.setWidth(m_dragElement.getElement().getOffsetWidth() + "px");
    dragParent.getElement().getStyle().setPosition(Position.ABSOLUTE);
    RootPanel.get().add(dragParent);
    m_currentTarget=dragParent;
    m_dragElement=createDragClone(m_dragElement.getElement(),dragParent,m_dragElement.getClientId());
    m_dragElement.setDragParent(dragParent);
    m_placeholder=new SimplePanel();
    dragParent.add((Widget)m_dragElement);
    if (m_editor.getClipboard().isActive()) {
      m_editor.getClipboard().hideMenu();
      dragParent.getElement().getStyle().setTop(m_editor.getClipboard().getAbsoluteTop(),Unit.PX);
      dragParent.getElement().getStyle().setLeft(m_editor.getClipboard().getAbsoluteLeft(),Unit.PX);
    }
 else {
      m_editor.getAdd().hideMenu();
      dragParent.getElement().getStyle().setTop(m_editor.getAdd().getAbsoluteTop(),Unit.PX);
      dragParent.getElement().getStyle().setLeft(m_editor.getAdd().getAbsoluteLeft(),Unit.PX);
    }
    Document.get().getBody().addClassName(I_CmsButton.ButtonData.MOVE.getIconClass());
    DOM.setCapture(m_dragElement.getElement());
  }
 else {
    m_currentTarget=m_dragElement.getDragParent();
    m_dragFromMenu=false;
    m_placeholder=createPlaceholder(m_dragElement);
  }
  m_targetInfos=new HashMap<I_CmsDragTargetContainer,DragInfo>();
  m_startInfo=new DragInfo(m_dragElement,m_placeholder,m_cursorOffsetLeft,m_cursorOffsetTop);
  m_current=m_startInfo;
  m_targetInfos.put(m_currentTarget,m_current);
  prepareElement(m_current,m_currentTarget,false);
  positionElement();
  m_targets=new ArrayList<I_CmsDragTargetContainer>();
  m_targets.add(m_currentTarget);
  m_currentTarget.getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().currentTarget());
  m_currentTarget.highlightContainer();
  String clientId=m_dragElement.getClientId();
  m_controller.getElement(clientId,new I_CmsSimpleCallback<CmsContainerElement>(){
    /** 
 * Executed with the requested element data.
 * Generates drag element widgets from the contents for each available container type.<p>
 * @param arg the element data
 * @see org.opencms.gwt.client.util.I_CmsSimpleCallback#execute(Object)
 */
    public void execute(    CmsContainerElement arg){
      if ((arg != null) && isDragging()) {
        if (!isDragFromMenu()) {
          m_editor.getClipboard().showDropzone(true);
          I_CmsDragTargetContainer dropZone=m_editor.getClipboard().getDropzone();
          CmsDraggableListItemWidget<I_CmsDragTargetContainer> menuItem=m_controller.getContainerpageUtil().createListWidget(arg,dropZone);
          dropZone.add(menuItem);
          DragInfo infoMenu=new DragInfo(menuItem,createPlaceholder(menuItem),menuItem.getOffsetWidth() - 20,20);
          addTargetInfo(dropZone,infoMenu);
          prepareElement(infoMenu,dropZone,true);
          setDropZoneInfo(infoMenu);
          getTargets().add(0,dropZone);
        }
        if (m_controller.isSubcontainerEditing()) {
          if (isDragFromMenu()) {
            String type=m_controller.getSubcontainerType();
            if (arg.getContents().containsKey(type)) {
              try {
                CmsDragContainerElement dragElement;
                if (arg.isSubContainer()) {
                  CmsDebugLog.getInstance().printLine("Cannot drop sub-container into subcontainer");
                }
 else {
                  dragElement=m_controller.getContainerpageUtil().createElement(arg,m_controller.getSubcontainer(),type);
                  m_controller.getSubcontainer().add(dragElement);
                  int offsetLeft=dragElement.getOffsetWidth() - 20;
                  DragInfo info=new DragInfo(dragElement,createPlaceholder(dragElement),offsetLeft,20);
                  addTargetInfo(m_controller.getSubcontainer(),info);
                  prepareElement(info,m_controller.getSubcontainer(),true);
                  addDragTarget(m_controller.getSubcontainer());
                  m_controller.getSubcontainer().highlightContainer();
                }
              }
 catch (              Exception e) {
                CmsDebugLog.getInstance().printLine(e.getMessage());
              }
            }
 else {
              CmsDebugLog.getInstance().printLine("No content for type " + type);
            }
          }
        }
 else {
          CmsDebugLog.getInstance().printLine("Loaded content for " + arg.getContents().size() + " container types");
          Iterator<Entry<String,CmsDragTargetContainer>> it=m_controller.getContainerTargets().entrySet().iterator();
          while (it.hasNext()) {
            Entry<String,CmsDragTargetContainer> entry=it.next();
            String containerType=m_controller.getContainerType(entry.getKey());
            if (arg.getContents().containsKey(containerType) && (entry.getValue() != getDragElement().getDragParent())) {
              try {
                CmsDragContainerElement dragElement;
                if (arg.isSubContainer()) {
                  CmsDebugLog.getInstance().printLine("Generating sub-container elements.");
                  List<CmsContainerElement> subElements=new ArrayList<CmsContainerElement>();
                  Iterator<String> itSub=arg.getSubItems().iterator();
                  while (itSub.hasNext()) {
                    CmsContainerElement element=m_controller.getCachedElement(itSub.next());
                    if (element != null) {
                      subElements.add(element);
                    }
                  }
                  dragElement=m_controller.getContainerpageUtil().createSubcontainerElement(arg,subElements,entry.getValue(),containerType);
                  CmsDebugLog.getInstance().printLine("Sub-container created.");
                }
 else {
                  dragElement=m_controller.getContainerpageUtil().createElement(arg,entry.getValue(),containerType);
                }
                entry.getValue().add(dragElement);
                int offsetLeft=dragElement.getOffsetWidth() - 20;
                DragInfo info=new DragInfo(dragElement,createPlaceholder(dragElement),offsetLeft,20);
                addTargetInfo(entry.getValue(),info);
                prepareElement(info,entry.getValue(),true);
                addDragTarget(entry.getValue());
                entry.getValue().highlightContainer();
              }
 catch (              Exception e) {
                CmsDebugLog.getInstance().printLine(e.getMessage());
                continue;
              }
            }
          }
        }
      }
    }
    /** 
 * @see org.opencms.gwt.client.util.I_CmsSimpleCallback#onError(java.lang.String)
 */
    public void onError(    String message){
    }
  }
);
}
