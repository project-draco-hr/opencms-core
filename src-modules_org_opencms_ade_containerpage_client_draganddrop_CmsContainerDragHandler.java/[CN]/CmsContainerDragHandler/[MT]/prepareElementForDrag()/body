{
  if (m_dragElement instanceof CmsDraggableListItemWidget) {
    m_dragFromMenu=true;
    CmsDragTargetMenu dragParent=new CmsDragTargetMenu();
    dragParent.setWidth(m_dragElement.getElement().getOffsetWidth() + "px");
    dragParent.getElement().getStyle().setPosition(Position.ABSOLUTE);
    dragParent.getElement().getStyle().setTop(0,Unit.PX);
    dragParent.getElement().getStyle().setLeft(0,Unit.PX);
    RootPanel.get().add(dragParent);
    m_currentTarget=dragParent;
    m_dragElement.setDragParent(dragParent);
    m_placeholder=new SimplePanel();
    dragParent.add((Widget)m_dragElement);
    CmsContainerpageDataProvider.get().getContainerpageUtil().getClipboard().hideMenu();
    Document.get().getBody().addClassName(CmsToolbarButton.ButtonData.MOVE.getIconClass());
    DOM.setCapture(m_dragElement.getElement());
  }
 else {
    m_dragFromMenu=false;
    m_placeholder=createPlaceholder(m_dragElement);
  }
  m_targetInfos=new HashMap<I_CmsDragTargetContainer,DragInfo>();
  m_startInfo=new DragInfo(m_dragElement,m_placeholder,m_cursorOffsetLeft,m_cursorOffsetTop);
  m_current=m_startInfo;
  m_targetInfos.put(m_currentTarget,m_current);
  prepareElement(m_current,m_currentTarget,false);
  positionElement();
  m_targets=new ArrayList<I_CmsDragTargetContainer>();
  m_targets.add(m_currentTarget);
  m_currentTarget.getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().currentTarget());
  m_currentTarget.highlightContainer();
  String clientId=m_dragElement.getClientId();
  CmsContainerpageDataProvider.get().getElement(clientId,new I_CmsSimpleCallback<CmsContainerElement>(){
    /** 
 * Executed with the requested element data.
 * Generates drag element widgets from the contents for each available container type.<p>
 * @param arg the element data
 * @see org.opencms.gwt.client.util.I_CmsSimpleCallback#execute(Object)
 */
    public void execute(    CmsContainerElement arg){
      if ((arg != null) && isDragging()) {
        if (!isDragFromMenu()) {
          CmsContainerpageDataProvider.get().getContainerpageUtil().getClipboard().showDropzone(true);
          I_CmsDragTargetContainer dropZone=CmsContainerpageDataProvider.get().getContainerpageUtil().getClipboard().getDropzone();
          CmsDraggableListItemWidget menuItem=new CmsDraggableListItemWidget(new CmsListInfoBean(arg.getTitle(),arg.getFile(),null),true);
          menuItem.setClientId(arg.getClientId());
          menuItem.setDragParent(dropZone);
          dropZone.add(menuItem);
          DragInfo infoMenu=new DragInfo(menuItem,createPlaceholder(menuItem),menuItem.getOffsetWidth() - 20,20);
          addTargetInfo(dropZone,infoMenu);
          prepareElement(infoMenu,dropZone,true);
          setDropZoneInfo(infoMenu);
          getTargets().add(0,dropZone);
        }
        Iterator<Entry<String,CmsDragTargetContainer>> it=CmsContainerpageDataProvider.get().getContainerTargets().entrySet().iterator();
        while (it.hasNext()) {
          Entry<String,CmsDragTargetContainer> entry=it.next();
          String containerType=CmsContainerpageDataProvider.get().getContainerType(entry.getKey());
          if (arg.getContents().containsKey(containerType) && (entry.getValue() != getDragElement().getDragParent())) {
            try {
              CmsDragContainerElement dragElement=CmsContainerpageDataProvider.get().getContainerpageUtil().createElement(arg,entry.getValue(),containerType);
              entry.getValue().add(dragElement);
              int offsetLeft=dragElement.getOffsetWidth() - 20;
              DragInfo info=new DragInfo(dragElement,createPlaceholder(dragElement),offsetLeft,20);
              addTargetInfo(entry.getValue(),info);
              prepareElement(info,entry.getValue(),true);
              addDragTarget(entry.getValue());
              entry.getValue().highlightContainer();
            }
 catch (            Exception e) {
              continue;
            }
          }
        }
      }
    }
    /** 
 * @see org.opencms.gwt.client.util.I_CmsSimpleCallback#onError(java.lang.String)
 */
    public void onError(    String message){
    }
  }
);
}
