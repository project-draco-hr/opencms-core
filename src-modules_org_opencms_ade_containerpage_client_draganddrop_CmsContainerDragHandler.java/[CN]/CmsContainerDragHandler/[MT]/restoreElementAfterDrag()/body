{
  Iterator<Entry<I_CmsDragTargetContainer,DragInfo>> it=m_targetInfos.entrySet().iterator();
  while (it.hasNext()) {
    Entry<I_CmsDragTargetContainer,DragInfo> entry=it.next();
    if (entry.getValue().equals(m_current)) {
      Element element=entry.getValue().getDraggable().getElement();
      Style style=element.getStyle();
      style.clearPosition();
      style.clearWidth();
      style.clearTop();
      style.clearLeft();
      style.clearZIndex();
      style.clearMargin();
      entry.getValue().getPlaceholder().removeFromParent();
      element.removeClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragElementBackground());
      element.removeClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragElementBorder());
      element.removeClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragging());
      ((CmsDragContainerElement)entry.getValue().getDraggable()).getElementOptionBar().removeStyleName(I_CmsToolbarButtonLayoutBundle.INSTANCE.toolbarButtonCss().cmsHovering());
    }
 else {
      entry.getValue().getPlaceholder().removeFromParent();
      ((Widget)entry.getValue().getDraggable()).removeFromParent();
    }
    entry.getKey().getElement().removeClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().currentTarget());
    entry.getKey().removeHighlighting();
  }
  m_targetInfos=null;
  m_current=null;
  m_startInfo=null;
}
