{
  ResultSet res=null;
  Connection conn=null;
  CmsTaskLog tasklog=null;
  List logs=new ArrayList();
  PreparedStatement stmt=null;
  String comment=null;
  java.sql.Timestamp starttime=null;
  int id=CmsDbUtil.UNKNOWN_ID;
  CmsUUID user=CmsUUID.getNullUUID();
  int type=CmsDbUtil.UNKNOWN_ID;
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_TASKLOG_READ_PPROJECTLOGS");
    stmt.setInt(1,projectid);
    res=stmt.executeQuery();
    while (res.next()) {
      comment=res.getString(m_sqlManager.readQuery("C_LOG_COMMENT"));
      id=res.getInt(m_sqlManager.readQuery("C_LOG_ID"));
      starttime=CmsDbUtil.getTimestamp(res,m_sqlManager.readQuery("C_LOG_STARTTIME"));
      user=new CmsUUID(res.getString(m_sqlManager.readQuery("C_LOG_USER")));
      type=res.getInt(m_sqlManager.readQuery("C_LOG_TYPE"));
      tasklog=new CmsTaskLog(id,comment,user,starttime,type);
      logs.add(tasklog);
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
catch (  Exception exc) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_READ_TASK_LOGS_0),exc);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,res);
  }
  return logs;
}
