{
  Connection conn=null;
  ResultSet res=null;
  CmsTaskLog tasklog=null;
  Vector logs=new Vector();
  PreparedStatement stmt=null;
  String comment=null;
  java.sql.Timestamp starttime=null;
  int id=I_CmsConstants.C_UNKNOWN_ID;
  int task=I_CmsConstants.C_UNKNOWN_ID;
  CmsUUID user=CmsUUID.getNullUUID();
  int type=I_CmsConstants.C_UNKNOWN_ID;
  try {
    conn=m_sqlManager.getConnection();
    stmt=m_sqlManager.getPreparedStatement(conn,"C_TASKLOG_READ_LOGS");
    stmt.setInt(1,taskId);
    res=stmt.executeQuery();
    while (res.next()) {
      comment=res.getString(m_sqlManager.get("C_TASKLOG_COMMENT"));
      id=res.getInt(m_sqlManager.get("C_TASKLOG_ID"));
      starttime=SqlHelper.getTimestamp(res,m_sqlManager.get("C_TASKLOG_STARTTIME"));
      task=res.getInt(m_sqlManager.get("C_TASKLOG_TASK"));
      user=new CmsUUID(res.getString(m_sqlManager.get("C_TASKLOG_USER")));
      type=res.getInt(m_sqlManager.get("C_TASKLOG_TYPE"));
      tasklog=new CmsTaskLog(id,comment,task,user,starttime,type);
      logs.addElement(tasklog);
    }
  }
 catch (  SQLException exc) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,exc,false);
  }
catch (  Exception exc) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_UNKNOWN_EXCEPTION,exc,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,res);
  }
  return logs;
}
