{
  List options=new ArrayList();
  List values=new ArrayList();
  int selectedValue=-1;
  String currentTemplate=null;
  TreeMap templates=null;
  try {
    currentTemplate=getCms().readPropertyObject(getParamResource(),I_CmsConstants.C_PROPERTY_TEMPLATE,true).getValue();
    templates=CmsNewResourceXmlPage.getTemplates(getCms());
  }
 catch (  CmsException e) {
  }
  if (currentTemplate == null) {
    currentTemplate="";
  }
  if (templates == null) {
    String name=currentTemplate;
    try {
      name=getCms().readPropertyObject(name,I_CmsConstants.C_PROPERTY_TITLE,false).getValue();
    }
 catch (    CmsException exc) {
    }
    options.add(name);
    values.add(currentTemplate);
  }
 else {
    Iterator i=templates.keySet().iterator();
    int counter=0;
    while (i.hasNext()) {
      String key=(String)i.next();
      String path=(String)templates.get(key);
      if (currentTemplate.equals(path)) {
        selectedValue=counter;
      }
      options.add(key);
      values.add(path);
      counter++;
    }
  }
  String hiddenField="<input type=\"hidden\" name=\"" + PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_TEMPLATE+ "\" value=\""+ currentTemplate+ "\">";
  return buildSelect(attributes,options,values,selectedValue,false) + hiddenField;
}
