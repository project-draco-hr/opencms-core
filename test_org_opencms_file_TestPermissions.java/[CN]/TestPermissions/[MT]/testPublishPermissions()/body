{
  CmsObject cms=getCmsObject();
  echo("Testing publish permissions for a user");
  String resource="/folder1/page1.html";
  cms.lockResource(resource);
  cms.chacc(resource,I_CmsPrincipal.PRINCIPAL_GROUP,OpenCms.getDefaultUsers().getGroupUsers(),0,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE);
  cms.chacc(resource,I_CmsPrincipal.PRINCIPAL_USER,"test1",CmsPermissionSet.PERMISSION_READ + CmsPermissionSet.PERMISSION_WRITE,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE);
  cms.chacc(resource,I_CmsPrincipal.PRINCIPAL_USER,"test2",CmsPermissionSet.PERMISSION_READ + CmsPermissionSet.PERMISSION_WRITE + CmsPermissionSet.PERMISSION_DIRECT_PUBLISH,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE);
  cms.unlockResource(resource);
  cms.loginUser("test1","test1");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
    fail("Publish permissions available but should not be available for user test1");
  }
 catch (  Exception e) {
  }
  cms.loginUser("test2","test2");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
  }
 catch (  Exception e) {
    fail("Publish permissions unavailable but should be available for user test2");
  }
  cms.loginUser("Admin","admin");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
  }
 catch (  Exception e) {
    fail("Publish permissions unavailable but should be available for user Admin");
  }
  cms.addUserToGroup("test1",OpenCms.getDefaultUsers().getGroupProjectmanagers());
  cms.loginUser("test1","test1");
  assertEquals(CmsProject.ONLINE_PROJECT_ID,cms.getRequestContext().currentProject().getUuid());
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
    fail("Publish permissions available but should not be available for user test1 in online project");
  }
 catch (  Exception e) {
  }
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
  }
 catch (  Exception e) {
    fail("Publish permissions unavailable but should be available for user test1 because he is a project manager");
  }
  String folder="/newfolder/";
  cms.loginUser("Admin","admin");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  cms.createResource(folder,CmsResourceTypeFolder.getStaticTypeId());
  cms.lockResource(folder);
  cms.chacc(folder,I_CmsPrincipal.PRINCIPAL_GROUP,OpenCms.getDefaultUsers().getGroupUsers(),0,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE + CmsAccessControlEntry.ACCESS_FLAGS_INHERIT);
  cms.chacc(folder,I_CmsPrincipal.PRINCIPAL_GROUP,OpenCms.getDefaultUsers().getGroupProjectmanagers(),0,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE + CmsAccessControlEntry.ACCESS_FLAGS_INHERIT);
  cms.chacc(folder,I_CmsPrincipal.PRINCIPAL_USER,"test1",CmsPermissionSet.PERMISSION_READ + CmsPermissionSet.PERMISSION_WRITE,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE + CmsAccessControlEntry.ACCESS_FLAGS_INHERIT);
  cms.chacc(folder,I_CmsPrincipal.PRINCIPAL_USER,"test2",CmsPermissionSet.PERMISSION_READ + CmsPermissionSet.PERMISSION_WRITE + CmsPermissionSet.PERMISSION_DIRECT_PUBLISH,0,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE + CmsAccessControlEntry.ACCESS_FLAGS_INHERIT);
  cms.unlockResource(folder);
  resource="/newfolder/newpage.html";
  cms.createResource(resource,CmsResourceTypePlain.getStaticTypeId(),"This is a test".getBytes(),Collections.EMPTY_LIST);
  cms.unlockResource(resource);
  cms.loginUser("test1","test1");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
    fail("Publish permissions available but should not be available for user test1");
  }
 catch (  Exception e) {
  }
  cms.loginUser("test2","test2");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
    fail("Publish permissions available but should be unavailable for user test2 because the parent folder is new");
  }
 catch (  Exception e) {
  }
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(folder),false);
  }
 catch (  Exception e) {
    fail("Publish permissions on new folder unavailable but should be available for user test2");
  }
  OpenCms.getPublishManager().publishResource(cms,folder);
  OpenCms.getPublishManager().waitWhileRunning();
  try {
    OpenCms.getPublishManager().getPublishList(cms,cms.readResource(resource),false);
  }
 catch (  Exception e) {
    fail("Publish permissions unavailable but should be available for user test2 because the parent folder is now published");
  }
}
