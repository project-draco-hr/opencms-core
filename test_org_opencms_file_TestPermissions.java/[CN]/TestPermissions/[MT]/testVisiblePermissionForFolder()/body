{
  CmsObject cms=getCmsObject();
  echo("Testing visible permissions on a list of files in a folder");
  String folder="/types";
  cms.lockResource(folder);
  cms.chacc(folder,I_CmsPrincipal.C_PRINCIPAL_GROUP,OpenCms.getDefaultUsers().getGroupUsers(),0,0,I_CmsConstants.C_ACCESSFLAGS_OVERWRITE + I_CmsConstants.C_ACCESSFLAGS_INHERIT);
  cms.chacc(folder,I_CmsPrincipal.C_PRINCIPAL_GROUP,OpenCms.getDefaultUsers().getGroupProjectmanagers(),0,0,I_CmsConstants.C_ACCESSFLAGS_OVERWRITE + I_CmsConstants.C_ACCESSFLAGS_INHERIT);
  cms.chacc(folder,I_CmsPrincipal.C_PRINCIPAL_USER,"test1",CmsPermissionSet.PERMISSION_READ,0,I_CmsConstants.C_ACCESSFLAGS_OVERWRITE + I_CmsConstants.C_ACCESSFLAGS_INHERIT);
  cms.chacc(folder,I_CmsPrincipal.C_PRINCIPAL_USER,"test2",CmsPermissionSet.PERMISSION_READ + CmsPermissionSet.PERMISSION_VIEW,0,I_CmsConstants.C_ACCESSFLAGS_OVERWRITE + I_CmsConstants.C_ACCESSFLAGS_INHERIT);
  cms.unlockResource(folder);
  List resultList;
  cms.loginUser("test1","test1");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  resultList=cms.readResources(folder,CmsResourceFilter.ONLY_VISIBLE);
  if (resultList.size() > 0) {
    fail("Was able to read " + resultList.size() + " invisible resources in a folder with filter excluding invisible resources");
  }
  resultList=cms.readResources(folder,CmsResourceFilter.ALL);
  if (resultList.size() != 6) {
    fail("There should be 6 visible resource in the folder, not " + resultList.size());
  }
  cms.loginUser("test2","test2");
  cms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
  resultList=cms.readResources(folder,CmsResourceFilter.ONLY_VISIBLE);
  if (resultList.size() != 6) {
    fail("There should be 6 visible resource in the folder, not " + resultList.size());
  }
}
