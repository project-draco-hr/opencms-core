{
  m_user=user;
  try {
    m_workplaceButtonStyle=((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACEGENERALOPTIONS + CmsWorkplaceConfiguration.N_BUTTONSTYLE)).intValue();
  }
 catch (  Throwable t) {
    m_workplaceButtonStyle=OpenCms.getWorkplaceManager().getDefaultUserSettings().getWorkplaceButtonStyle();
  }
  Object timeWarpObj=m_user.getAdditionalInfo(ADDITIONAL_INFO_TIMEWARP);
  try {
    m_timeWarp=((Long)timeWarpObj).longValue();
  }
 catch (  ClassCastException e) {
    try {
      m_timeWarp=Long.parseLong((String)timeWarpObj);
    }
 catch (    Throwable t) {
      m_timeWarp=CmsContextInfo.CURRENT_TIME;
    }
  }
catch (  Throwable t) {
    m_timeWarp=CmsContextInfo.CURRENT_TIME;
  }
  m_workplaceReportType=(String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACEGENERALOPTIONS + CmsWorkplaceConfiguration.N_REPORTTYPE);
  if (m_workplaceReportType == null) {
    m_workplaceReportType=OpenCms.getWorkplaceManager().getDefaultUserSettings().getWorkplaceReportType();
  }
  try {
    m_listAllProjects=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACEGENERALOPTIONS + CmsWorkplaceConfiguration.N_LISTALLPROJECTS)).booleanValue();
  }
 catch (  Throwable t) {
    m_listAllProjects=OpenCms.getWorkplaceManager().getDefaultUserSettings().getListAllProjects();
  }
  try {
    m_showPublishNotification=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACEGENERALOPTIONS + CmsWorkplaceConfiguration.N_PUBLISHNOTIFICATION)).booleanValue();
  }
 catch (  Throwable t) {
    m_showPublishNotification=OpenCms.getWorkplaceManager().getDefaultUserSettings().getShowPublishNotification();
  }
  String uploadVariant=(String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACEGENERALOPTIONS + CmsWorkplaceConfiguration.N_UPLOADAPPLET);
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(uploadVariant)) {
    uploadVariant=OpenCms.getWorkplaceManager().getDefaultUserSettings().getUploadVariant().toString();
  }
  setUploadVariant(uploadVariant);
  Object obj=m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESTARTUPSETTINGS + CmsWorkplaceConfiguration.N_LOCALE);
  if (obj == null) {
    m_locale=null;
  }
 else {
    m_locale=CmsLocaleManager.getLocale(String.valueOf(obj));
  }
  if (m_locale == null) {
    m_locale=OpenCms.getWorkplaceManager().getDefaultUserSettings().getLocale();
  }
  try {
    m_project=(String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESTARTUPSETTINGS + CmsWorkplaceConfiguration.N_PROJECT);
  }
 catch (  Throwable t) {
    m_project=null;
  }
  if (m_project == null) {
    m_project=OpenCms.getWorkplaceManager().getDefaultUserSettings().getStartProject();
    String ou=user.getOuFqn();
    if (ou == null) {
      ou="";
    }
    m_project=user.getOuFqn() + m_project;
  }
  m_view=(String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESTARTUPSETTINGS + CmsWorkplaceConfiguration.N_WORKPLACEVIEW);
  if (m_view == null) {
    m_view=OpenCms.getWorkplaceManager().getDefaultUserSettings().getStartView();
  }
  try {
    m_explorerButtonStyle=((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_EXPLORERGENERALOPTIONS + CmsWorkplaceConfiguration.N_BUTTONSTYLE)).intValue();
  }
 catch (  Throwable t) {
    m_explorerButtonStyle=OpenCms.getWorkplaceManager().getDefaultUserSettings().getExplorerButtonStyle();
  }
  try {
    m_explorerFileEntries=((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_EXPLORERGENERALOPTIONS + CmsWorkplaceConfiguration.N_ENTRIES)).intValue();
  }
 catch (  Throwable t) {
    m_explorerFileEntries=OpenCms.getWorkplaceManager().getDefaultUserSettings().getExplorerFileEntries();
  }
  try {
    m_explorerSettings=((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_EXPLORERGENERALOPTIONS + CmsWorkplaceConfiguration.N_EXPLORERDISPLAYOPTIONS)).intValue();
  }
 catch (  Throwable t) {
    m_explorerSettings=OpenCms.getWorkplaceManager().getDefaultUserSettings().getExplorerSettings();
  }
  try {
    m_dialogFileCopy=CmsResourceCopyMode.valueOf(((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_FILECOPY)).intValue());
  }
 catch (  Throwable t) {
    m_dialogFileCopy=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogCopyFileMode();
  }
  try {
    m_dialogFolderCopy=CmsResourceCopyMode.valueOf(((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_FOLDERCOPY)).intValue());
  }
 catch (  Throwable t) {
    m_dialogFolderCopy=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogCopyFolderMode();
  }
  try {
    m_dialogFileDelete=CmsResourceDeleteMode.valueOf(((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_FILEDELETION)).intValue());
  }
 catch (  Throwable t) {
    m_dialogFileDelete=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogDeleteFileMode();
  }
  try {
    m_dialogDirectpublish=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_DIRECTPUBLISH)).booleanValue();
  }
 catch (  Throwable t) {
    m_dialogDirectpublish=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogPublishSiblings();
  }
  try {
    m_showLock=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_SHOWLOCK)).booleanValue();
  }
 catch (  Throwable t) {
    m_showLock=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogShowLock();
  }
  try {
    m_showExportSettings=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_SHOWEXPORTSETTINGS)).booleanValue();
  }
 catch (  Throwable t) {
    m_showExportSettings=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogShowExportSettings();
  }
  try {
    m_dialogPermissionsInheritOnFolder=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_PERMISSIONSINHERITONFOLDER)).booleanValue();
  }
 catch (  Throwable t) {
    m_dialogPermissionsInheritOnFolder=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogPermissionsInheritOnFolder();
  }
  try {
    m_dialogExpandInheritedPermissions=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_EXPANDPERMISSIONSINHERITED)).booleanValue();
  }
 catch (  Throwable t) {
    m_dialogExpandInheritedPermissions=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogExpandInheritedPermissions();
  }
  try {
    m_dialogExpandUserPermissions=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_DIALOGSDEFAULTSETTINGS + CmsWorkplaceConfiguration.N_EXPANDPERMISSIONSUSER)).booleanValue();
  }
 catch (  Throwable t) {
    m_dialogExpandUserPermissions=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDialogExpandUserPermissions();
  }
  try {
    m_editorButtonStyle=((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_EDITORGENERALOPTIONS + CmsWorkplaceConfiguration.N_BUTTONSTYLE)).intValue();
  }
 catch (  Throwable t) {
    m_editorButtonStyle=OpenCms.getWorkplaceManager().getDefaultUserSettings().getEditorButtonStyle();
  }
  try {
    m_directeditButtonStyle=((Integer)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_EDITORGENERALOPTIONS + CmsWorkplaceConfiguration.N_DIRECTEDITSTYLE)).intValue();
  }
 catch (  Throwable t) {
    m_directeditButtonStyle=OpenCms.getWorkplaceManager().getDefaultUserSettings().getDirectEditButtonStyle();
  }
  m_editorSettings=new TreeMap<String,String>();
  Iterator<String> itKeys=m_user.getAdditionalInfo().keySet().iterator();
  while (itKeys.hasNext()) {
    String key=itKeys.next();
    if (key.startsWith(PREFERENCES + CmsWorkplaceConfiguration.N_EDITORPREFERREDEDITORS)) {
      String editKey=key.substring((PREFERENCES + CmsWorkplaceConfiguration.N_EDITORPREFERREDEDITORS).length());
      m_editorSettings.put(editKey,m_user.getAdditionalInfo(key).toString());
    }
  }
  if (m_editorSettings.isEmpty()) {
    m_editorSettings=new TreeMap<String,String>(OpenCms.getWorkplaceManager().getDefaultUserSettings().getEditorSettings());
  }
  m_startGalleriesSettings=new TreeMap<String,String>();
  Iterator<String> gKeys=m_user.getAdditionalInfo().keySet().iterator();
  while (gKeys.hasNext()) {
    String key=gKeys.next();
    if (key.startsWith(PREFERENCES + CmsWorkplaceConfiguration.N_STARTGALLERIES)) {
      String editKey=key.substring((PREFERENCES + CmsWorkplaceConfiguration.N_STARTGALLERIES).length());
      m_startGalleriesSettings.put(editKey,m_user.getAdditionalInfo(key).toString());
    }
  }
  if (m_startGalleriesSettings.isEmpty()) {
    m_startGalleriesSettings=new TreeMap<String,String>();
  }
  m_startSite=(String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESTARTUPSETTINGS + I_CmsXmlConfiguration.N_SITE);
  if (m_startSite == null) {
    m_startSite=OpenCms.getWorkplaceManager().getDefaultUserSettings().getStartSite();
  }
  String startFolder=(String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESTARTUPSETTINGS + CmsWorkplaceConfiguration.N_FOLDER);
  if (startFolder == null) {
    startFolder=OpenCms.getWorkplaceManager().getDefaultUserSettings().getStartFolder();
  }
  setStartFolder(startFolder);
  try {
    m_restrictExplorerView=((Boolean)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESTARTUPSETTINGS + CmsWorkplaceConfiguration.N_RESTRICTEXPLORERVIEW)).booleanValue();
  }
 catch (  Throwable t) {
    m_restrictExplorerView=OpenCms.getWorkplaceManager().getDefaultUserSettings().getRestrictExplorerView();
  }
  m_workplaceSearchIndexName=OpenCms.getWorkplaceManager().getDefaultUserSettings().getWorkplaceSearchIndexName();
  m_workplaceSearchViewStyle=CmsSearchResultStyle.valueOf((String)m_user.getAdditionalInfo(PREFERENCES + CmsWorkplaceConfiguration.N_WORKPLACESEARCH + CmsWorkplaceConfiguration.N_SEARCHVIEWSTYLE));
  if (m_workplaceSearchViewStyle == null) {
    m_workplaceSearchViewStyle=OpenCms.getWorkplaceManager().getDefaultUserSettings().getWorkplaceSearchViewStyle();
  }
  try {
    boolean enabled=((Boolean)m_user.getAdditionalInfo(PREFERENCES + SYNC_SETTINGS + SYNC_ENABLED)).booleanValue();
    String destination=(String)m_user.getAdditionalInfo(PREFERENCES + SYNC_SETTINGS + SYNC_DESTINATION);
    List<String> vfsList=CmsStringUtil.splitAsList((String)m_user.getAdditionalInfo(PREFERENCES + SYNC_SETTINGS + SYNC_VFS_LIST),'|');
    m_synchronizeSettings=new CmsSynchronizeSettings();
    m_synchronizeSettings.setEnabled(enabled);
    m_synchronizeSettings.setDestinationPathInRfs(destination);
    m_synchronizeSettings.setSourceListInVfs(vfsList);
  }
 catch (  Throwable t) {
    m_synchronizeSettings=null;
  }
  m_uploadAppletClientFolder=(String)m_user.getAdditionalInfo(ADDITIONAL_INFO_UPLOADAPPLET_CLIENTFOLDER);
  try {
    save(null);
  }
 catch (  CmsException e) {
    if (LOG.isWarnEnabled()) {
      LOG.warn(e.getLocalizedMessage(),e);
    }
  }
}
