{
  CmsRpcAction<CmsAliasInitialFetchResult> action=new CmsRpcAction<CmsAliasInitialFetchResult>(){
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
    @Override public void execute(){
      getService().getAliasTable(this);
      start(200,false);
    }
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
    @Override public void onResponse(    CmsAliasInitialFetchResult aliasTable){
      stop(false);
      String lockOwner=aliasTable.getAliasTableLockOwner();
      if (lockOwner != null) {
        String errorMessage=CmsAliasMessages.messageAliasTableLocked(lockOwner);
        String title=CmsAliasMessages.messageAliasTableLockedTitle();
        CmsAlertDialog alert=new CmsAlertDialog(title,errorMessage);
        alert.center();
      }
 else {
        m_downloadUrl=aliasTable.getDownloadUrl();
        m_initialData=aliasTable.getRows();
        m_siteRoot=CmsCoreProvider.get().getSiteRoot();
        List<CmsAliasTableRow> copiedData=copyData(m_initialData);
        List<CmsRewriteAliasTableRow> rewriteData=aliasTable.getRewriteAliases();
        m_view.setData(copiedData,rewriteData);
        if (afterLoad != null) {
          afterLoad.run();
        }
      }
    }
  }
;
  action.execute();
}
