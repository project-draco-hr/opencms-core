{
  super(Integer.MAX_VALUE,(CellTable.Resources)GWT.create(I_CmsCellTableResources.class),new ProvidesKey<CmsAliasTableRow>(){
    public Object getKey(    CmsAliasTableRow item){
      return item.getKey();
    }
  }
);
  m_controller=controller;
  m_errorColumn=new CmsAliasErrorColumn();
  @SuppressWarnings("unchecked") A_CmsAliasTableColumn<CmsAliasTableRow,?,CmsAliasCellTable>[] columns=new A_CmsAliasTableColumn[]{new CmsAliasSelectionColumn(this),new CmsAliasPathColumn(this),new CmsResourcePathColumn(this),new CmsAliasModeColumn(this),m_errorColumn};
  m_dataProvider=new ListDataProvider<CmsAliasTableRow>();
  m_dataProvider.addDataDisplay(this);
  ColumnSortEvent.ListHandler<CmsAliasTableRow> sortHandler=new ColumnSortEvent.ListHandler<CmsAliasTableRow>(m_dataProvider.getList());
  for (  A_CmsAliasTableColumn<CmsAliasTableRow,?,CmsAliasCellTable> column : columns) {
    column.initSortHandler(sortHandler);
  }
  addColumnSortHandler(sortHandler);
  final MultiSelectionModel<CmsAliasTableRow> selectionModel=new MultiSelectionModel<CmsAliasTableRow>(getKeyProvider());
  selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler(){
    public void onSelectionChange(    SelectionChangeEvent event){
      m_controller.changeSelection(selectionModel.getSelectedSet());
    }
  }
);
  setSelectionModel(selectionModel,DefaultSelectionEventManager.<CmsAliasTableRow>createCheckboxManager());
  for (  A_CmsAliasTableColumn<?,?,CmsAliasCellTable> column : columns) {
    column.addToTable(this);
  }
  CmsCellTableUtil.ensureCellTableParentResize(this);
}
