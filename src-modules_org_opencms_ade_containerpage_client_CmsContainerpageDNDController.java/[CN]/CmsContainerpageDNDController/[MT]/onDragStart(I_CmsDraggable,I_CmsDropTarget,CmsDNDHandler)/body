{
  m_dragOverlay=DOM.createDiv();
  m_dragOverlay.addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragOverlay());
  Document.get().getBody().appendChild(m_dragOverlay);
  m_isNew=false;
  m_originalIndex=-1;
  m_initialDropTarget=target;
  handler.setOrientation(Orientation.ALL);
  m_controller.hideEditableListButtons();
  if (target != null) {
    handler.addTarget(target);
    if (target instanceof I_CmsDropContainer) {
      prepareTargetContainer((I_CmsDropContainer)target,draggable,handler.getPlaceholder());
    }
  }
  m_dragInfos.put(target,new DragInfo(handler.getDragHelper(),handler.getPlaceholder(),handler.getCursorOffsetX(),handler.getCursorOffsetY()));
  m_controller.getHandler().hideMenu();
  String clientId=draggable.getId();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(clientId)) {
    CmsDebugLog.getInstance().printLine("draggable has no id, canceling drop");
    handler.cancel();
  }
  if (isNewId(clientId)) {
    clientId=m_controller.getNewResourceId(clientId);
    m_isNew=true;
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(clientId)) {
      handler.cancel();
    }
  }
  m_controller.getElement(clientId,new I_CmsSimpleCallback<CmsContainerElementData>(){
    /** 
 * Execute on success.<p>
 * @param arg the container element data
 */
    public void execute(    CmsContainerElementData arg){
      prepareHelperElements(arg,handler);
    }
  }
);
  if (target instanceof CmsContainerPageContainer) {
    String id=((CmsContainerPageContainer)target).getContainerId();
    CmsContainerpageEditor.getZIndexManager().start(id);
  }
 else {
    handler.setStartPosition(-1,0);
  }
  return true;
}
