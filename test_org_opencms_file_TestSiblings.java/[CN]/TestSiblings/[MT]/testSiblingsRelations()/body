{
  echo("Testing link management features with siblings");
  CmsObject cms=getCmsObject();
  String sib1Name="/folder1/sib1.html";
  String sib2Name="/folder1/sib2.html";
  String sib3Name="/folder1/sib3.html";
  String targetName="/folder1/image2.gif";
  CmsResource target=cms.readResource(targetName);
  CmsResource sib1=cms.createResource(sib1Name,CmsResourceTypeXmlPage.getStaticTypeId());
  int sources=cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size();
  TestLinkValidation.setContent(cms,sib1Name,"<img src='" + targetName + "'>");
  assertEquals(sources + 1,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources++;
  List links=cms.getRelationsForResource(sib1Name,CmsRelationFilter.TARGETS);
  assertEquals(1,links.size());
  CmsRelation relation=new CmsRelation(sib1,target,CmsRelationType.EMBEDDED_IMAGE);
  assertRelation(relation,(CmsRelation)links.get(0));
  cms.createSibling(sib1Name,sib2Name,Collections.EMPTY_LIST);
  CmsResource sib2=cms.readResource(sib2Name);
  assertEquals(sources + 1,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources++;
  links=cms.getRelationsForResource(sib2Name,CmsRelationFilter.TARGETS);
  assertEquals(1,links.size());
  relation=new CmsRelation(sib2,target,CmsRelationType.EMBEDDED_IMAGE);
  assertRelation(relation,(CmsRelation)links.get(0));
  cms.createSibling(sib1Name,sib3Name,Collections.EMPTY_LIST);
  CmsResource sib3=cms.readResource(sib3Name);
  assertEquals(sources + 1,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources++;
  links=cms.getRelationsForResource(sib3Name,CmsRelationFilter.TARGETS);
  assertEquals(1,links.size());
  relation=new CmsRelation(sib3,target,CmsRelationType.EMBEDDED_IMAGE);
  assertRelation(relation,(CmsRelation)links.get(0));
  TestLinkValidation.setContent(cms,sib1Name,"<h1>hello world!</h1>");
  assertEquals(sources - 3,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources-=3;
  assertTrue(cms.getRelationsForResource(sib1Name,CmsRelationFilter.TARGETS).isEmpty());
  assertTrue(cms.getRelationsForResource(sib2Name,CmsRelationFilter.TARGETS).isEmpty());
  assertTrue(cms.getRelationsForResource(sib3Name,CmsRelationFilter.TARGETS).isEmpty());
  TestLinkValidation.setContent(cms,sib1Name,"<img src='" + targetName + "'>");
  assertEquals(sources + 3,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources+=3;
  links=cms.getRelationsForResource(sib1Name,CmsRelationFilter.TARGETS);
  assertEquals(1,links.size());
  relation=new CmsRelation(sib1,target,CmsRelationType.EMBEDDED_IMAGE);
  assertRelation(relation,(CmsRelation)links.get(0));
  links=cms.getRelationsForResource(sib2Name,CmsRelationFilter.TARGETS);
  assertEquals(1,links.size());
  relation=new CmsRelation(sib2,target,CmsRelationType.EMBEDDED_IMAGE);
  assertRelation(relation,(CmsRelation)links.get(0));
  links=cms.getRelationsForResource(sib3Name,CmsRelationFilter.TARGETS);
  assertEquals(1,links.size());
  relation=new CmsRelation(sib3,target,CmsRelationType.EMBEDDED_IMAGE);
  assertRelation(relation,(CmsRelation)links.get(0));
  cms.deleteResource(sib3Name,CmsResource.DELETE_PRESERVE_SIBLINGS);
  assertEquals(sources - 1,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources--;
  cms.deleteResource(sib2Name,CmsResource.DELETE_PRESERVE_SIBLINGS);
  assertEquals(sources - 1,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources--;
  cms.deleteResource(sib1Name,CmsResource.DELETE_PRESERVE_SIBLINGS);
  assertEquals(sources - 1,cms.getRelationsForResource(targetName,CmsRelationFilter.SOURCES).size());
  sources--;
}
