{
  CmsFlexRequest f_req=controller.getCurrentRequest();
  CmsFlexResponse f_res=controller.getCurrentResponse();
  try {
    f_req.getRequestDispatcher(controller.getCmsObject().getSitePath(controller.getCmsResource())).include(f_req,f_res);
  }
 catch (  SocketException e) {
    LOG.debug(Messages.get().key(Messages.LOG_IGNORING_EXC_1,e.getClass().getName()),e);
  }
  byte[] result=null;
  HttpServletResponse res=controller.getTopResponse();
  if (!controller.isStreaming() && !f_res.isSuspended()) {
    try {
      if (!res.isCommitted() || m_errorPagesAreNotCommited) {
        boolean isWorkplaceUser=CmsWorkplaceManager.isWorkplaceUser(f_req);
        if (controller.isTop() && !isWorkplaceUser && CmsFlexController.isNotModifiedSince(f_req,controller.getDateLastModified())) {
          if (f_req.getParameterMap().size() == 0) {
            CmsFlexController.setDateExpiresHeader(res,controller.getDateExpires());
          }
          res.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
          return null;
        }
        result=f_res.getWriterBytes();
        if (controller.getTopRequest().getHeader(I_CmsConstants.C_HEADER_OPENCMS_EXPORT) != null) {
          controller.getTopRequest().setAttribute(I_CmsConstants.C_HEADER_OPENCMS_EXPORT,new Long(controller.getDateLastModified()));
        }
 else         if (controller.isTop()) {
          res.setContentLength(result.length);
          if (isWorkplaceUser) {
            res.setDateHeader(I_CmsConstants.C_HEADER_LAST_MODIFIED,System.currentTimeMillis());
            res.setHeader(I_CmsConstants.C_HEADER_CACHE_CONTROL,I_CmsConstants.C_HEADER_VALUE_MAX_AGE + "0");
            res.addHeader(I_CmsConstants.C_HEADER_CACHE_CONTROL,I_CmsConstants.C_HEADER_VALUE_MUST_REVALIDATE);
          }
 else {
            CmsFlexController.setDateLastModifiedHeader(res,controller.getDateLastModified());
            if ((f_req.getParameterMap().size() == 0) && (controller.getDateLastModified() > -1)) {
              CmsFlexController.setDateExpiresHeader(res,controller.getDateExpires());
            }
          }
          res.setStatus(HttpServletResponse.SC_OK);
          CmsFlexResponse.processHeaders(f_res.getHeaders(),res);
          res.getOutputStream().write(result);
          res.getOutputStream().flush();
        }
      }
    }
 catch (    IllegalStateException e) {
      LOG.debug(Messages.get().key(Messages.LOG_IGNORING_EXC_1,e.getClass().getName()),e);
    }
catch (    SocketException e) {
      LOG.debug(Messages.get().key(Messages.LOG_IGNORING_EXC_1,e.getClass().getName()),e);
    }
  }
  return result;
}
