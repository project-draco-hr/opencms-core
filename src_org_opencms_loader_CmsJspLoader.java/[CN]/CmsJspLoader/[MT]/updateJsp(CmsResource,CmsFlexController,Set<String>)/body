{
  String jspVfsName=resource.getRootPath();
  String extension;
  boolean isHardInclude;
  int loaderId=OpenCms.getResourceManager().getResourceType(resource.getTypeId()).getLoaderId();
  if ((loaderId == CmsJspLoader.RESOURCE_LOADER_ID) && (!jspVfsName.endsWith(JSP_EXTENSION))) {
    extension=JSP_EXTENSION;
    isHardInclude=false;
  }
 else {
    extension="";
    isHardInclude=(loaderId != CmsJspLoader.RESOURCE_LOADER_ID);
  }
  String jspTargetName=CmsFileUtil.getRepositoryName(m_jspWebAppRepository,jspVfsName + extension,controller.getCurrentRequest().isOnline());
  if (updatedFiles.contains(jspTargetName)) {
    return jspTargetName;
  }
  String jspPath=CmsFileUtil.getRepositoryName(m_jspRepository,jspVfsName + extension,controller.getCurrentRequest().isOnline());
  File d=new File(jspPath).getParentFile();
  if ((d == null) || (d.exists() && !(d.isDirectory() && d.canRead()))) {
    CmsMessageContainer message=Messages.get().container(Messages.LOG_ACCESS_DENIED_1,jspPath);
    LOG.error(message.key());
    throw new ServletException(message.key());
  }
  if (!d.exists()) {
    d.mkdirs();
  }
  ReentrantReadWriteLock readWriteLock=getFileLock(jspVfsName);
  try {
    readWriteLock.readLock().lock();
    File jspFile=new File(jspPath);
    boolean mustUpdate=false;
    long jspModificationDate=0;
    if (!jspFile.exists()) {
      mustUpdate=true;
      File folder=jspFile.getParentFile();
      if (!folder.exists()) {
        boolean success=folder.mkdirs();
        if (!success) {
          LOG.error(org.opencms.db.Messages.get().getBundle().key(org.opencms.db.Messages.LOG_CREATE_FOLDER_FAILED_1,folder.getAbsolutePath()));
        }
      }
    }
 else {
      jspModificationDate=jspFile.lastModified();
      if (jspModificationDate <= resource.getDateLastModified()) {
        mustUpdate=true;
      }
 else       if (controller.getCurrentRequest().isDoRecompile()) {
        mustUpdate=true;
      }
 else {
        if (controller.getCurrentRequest().isOnline()) {
          mustUpdate=!m_onlineJsps.containsKey(jspVfsName);
        }
 else {
          mustUpdate=!m_offlineJsps.containsKey(jspVfsName);
        }
        if (mustUpdate) {
          mustUpdate=updateStrongLinks(resource,controller,updatedFiles);
        }
      }
    }
    if (mustUpdate) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_WRITING_JSP_1,jspTargetName));
      }
      readWriteLock.readLock().unlock();
      readWriteLock.writeLock().lock();
      try {
        if (!jspFile.exists() || (jspModificationDate == jspFile.lastModified())) {
          updatedFiles.add(jspTargetName);
          byte[] contents;
          String encoding;
          try {
            CmsObject cms=controller.getCmsObject();
            contents=cms.readFile(resource).getContents();
            encoding=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_CONTENT_ENCODING,true).getValue();
            if (encoding == null) {
              encoding=OpenCms.getSystemInfo().getDefaultEncoding();
            }
 else {
              encoding=CmsEncoder.lookupEncoding(encoding.trim(),encoding);
            }
          }
 catch (          CmsException e) {
            controller.setThrowable(e,jspVfsName);
            throw new ServletException(Messages.get().getBundle().key(Messages.ERR_LOADER_JSP_ACCESS_1,jspVfsName),e);
          }
          try {
            contents=parseJsp(contents,encoding,controller,updatedFiles,isHardInclude);
            if (LOG.isInfoEnabled()) {
              LOG.info(Messages.get().getBundle().key(Messages.LOG_JSP_PERMCHECK_4,new Object[]{jspFile.getAbsolutePath(),Boolean.valueOf(jspFile.exists()),Boolean.valueOf(jspFile.isFile()),Boolean.valueOf(jspFile.canWrite())}));
            }
synchronized (CmsJspLoader.class) {
              FileOutputStream fs=new FileOutputStream(jspFile);
              fs.write(contents);
              fs.close();
            }
            if (controller.getCurrentRequest().isOnline()) {
              m_onlineJsps.put(jspVfsName,Boolean.TRUE);
            }
 else {
              m_offlineJsps.put(jspVfsName,Boolean.TRUE);
            }
            if (LOG.isInfoEnabled()) {
              LOG.info(Messages.get().getBundle().key(Messages.LOG_UPDATED_JSP_2,jspTargetName,jspVfsName));
            }
          }
 catch (          FileNotFoundException e) {
            throw new ServletException(Messages.get().getBundle().key(Messages.ERR_LOADER_JSP_WRITE_1,jspFile.getName()),e);
          }
        }
      }
  finally {
        readWriteLock.readLock().lock();
        readWriteLock.writeLock().unlock();
      }
    }
    controller.updateDates(jspFile.lastModified(),CmsResource.DATE_EXPIRED_DEFAULT);
  }
  finally {
    readWriteLock.readLock().unlock();
  }
  return jspTargetName;
}
