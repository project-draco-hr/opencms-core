{
  byte[] processResult=null;
  Class cdClass=getContentDefinitionClass();
  String singleSelection="";
  String allSelections="";
  CmsSession session=(CmsSession)cms.getRequestContext().getSession(true);
  String selectBoxValue=(String)session.getValue("selectbox");
  String filterParam=(String)parameters.get("filterparameter");
  if (filterParam != null)   session.putValue("filterparameter",filterParam);
  String moduleName="";
  moduleName=(String)getClass().toString();
  moduleName=moduleName.substring(5);
  moduleName=moduleName.trim();
  moduleName=moduleName.replace('.','_');
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  template.setData("filter",lang.getLanguageValue(moduleName + ".label.filter"));
  template.setData("filterparameter",lang.getLanguageValue(moduleName + ".label.filterparameter"));
  Vector filterMethods=new Vector();
  try {
    filterMethods=(Vector)cdClass.getMethod("getFilterMethods",new Class[]{CmsObject.class}).invoke(null,new Object[]{cms});
  }
 catch (  InvocationTargetException ite) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentHead: InvocationTargetException!");
    }
  }
catch (  NoSuchMethodException nsm) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentHead: Requested method was not found!");
    }
  }
catch (  Exception e) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentHead: Problem occured with your filter methods!");
    }
  }
  FilterMethod filterMethod=null;
  if (selectBoxValue == null) {
    FilterMethod defaultFilter=(FilterMethod)filterMethods.firstElement();
    session.putValue("selectbox",defaultFilter.getFilterName());
  }
  if (filterParam != null)   parameters.put("filterparameter",filterParam);
  for (int i=0; i < filterMethods.size(); i++) {
    FilterMethod currentFilter=(FilterMethod)filterMethods.elementAt(i);
    template.setData("selectname",currentFilter.getFilterName());
    template.setData("selectnumber","" + i);
    template.setData("selectparameter","" + currentFilter.hasUserParameter());
    try {
      singleSelection=template.getProcessedDataValue("singleselection",this);
      allSelections+=singleSelection;
    }
 catch (    Exception e) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice getContentHead: Error while getting processedDataValue from Backoffice template!");
      }
    }
  }
  String createButton=null;
  try {
    createButton=(String)getCreateUrl(cms,null,null,null);
  }
 catch (  Exception e) {
  }
  if (createButton == null) {
    String cb=template.getDataValue("nowand");
    template.setData("createbutton",cb);
  }
 else {
    String cb=template.getDataValue("wand");
    template.setData("createbutton",cb);
  }
  template.setData("selectionbox","" + allSelections);
  processResult=startProcessing(cms,template,elementName,parameters,templateSelector);
  return processResult;
}
