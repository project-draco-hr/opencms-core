{
  byte[] processResult=null;
  I_CmsSession session=(CmsSession)cms.getRequestContext().getSession(true);
  Class cdClass=getContentDefinitionClass();
  String id=(String)parameters.get("id");
  if (id == null)   id="";
  if (id != "") {
    session.putValue("idsave",id);
  }
 else {
    String idsave=(String)session.getValue("idsave");
    if (idsave == null)     idsave="";
    id=idsave;
    session.removeValue("idsave");
  }
  String action=(String)parameters.get("action");
  if (action == null || action.equals("")) {
    if (id != "") {
      templateSelector="delete";
      String moduleName="";
      moduleName=(String)getClass().toString();
      moduleName=moduleName.substring(5);
      moduleName=moduleName.trim();
      moduleName=moduleName.replace('.','_');
      CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
      template.setData("deletetitle",lang.getLanguageValue("messagebox.title.delete"));
      template.setData("deletedialog",lang.getLanguageValue("messagebox.message1.delete"));
      template.setData("newsentry",id);
      template.setData("setaction","default");
    }
  }
 else {
    templateSelector="done";
    session.removeValue("idsave");
    Integer idInteger=null;
    try {
      idInteger=Integer.valueOf(id);
    }
 catch (    Exception e) {
      Object o=null;
      o=getContentDefinitionConstructor(cms,cdClass,id);
      try {
        Method deleteMethod=(Method)cdClass.getMethod("delete",new Class[]{CmsObject.class});
        deleteMethod.invoke(o,new Object[]{cms});
      }
 catch (      Exception e1) {
        System.err.println("error: ");
        if (A_OpenCms.isLogging()) {
          A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice: delete method throwed an exception!");
        }
        System.err.println("error: ");
        templateSelector="deleteerror";
        System.err.println("error: " + e1.getMessage());
        template.setData("deleteerror",e1.getMessage());
      }
      processResult=startProcessing(cms,template,elementName,parameters,templateSelector);
      return processResult;
    }
    Object o=null;
    o=getContentDefinitionConstructor(cms,cdClass,idInteger);
    try {
      Method deleteMethod=(Method)cdClass.getMethod("delete",new Class[]{CmsObject.class});
      deleteMethod.invoke(o,new Object[]{cms});
    }
 catch (    InvocationTargetException e) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice: delete method throwed an exception!");
      }
      templateSelector="deleteerror";
      template.setData("deleteerror",((CmsException)e.getTargetException()).getMessage());
    }
catch (    NoSuchMethodException e) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice: delete method throwed an exception!");
      }
      templateSelector="deleteerror";
      template.setData("deleteerror",e.getMessage());
    }
catch (    IllegalAccessException e) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_INFO,getClassName() + ": Backoffice: delete method throwed an exception!");
      }
      templateSelector="deleteerror";
      template.setData("deleteerror",e.getMessage());
    }
  }
  processResult=startProcessing(cms,template,elementName,parameters,templateSelector);
  return processResult;
}
