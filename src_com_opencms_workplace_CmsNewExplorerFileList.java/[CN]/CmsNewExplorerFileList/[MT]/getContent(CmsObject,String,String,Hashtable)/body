{
  if (A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_DEBUG) && I_CmsLogChannels.C_LOGGING && (DEBUG > 0)) {
    A_OpenCms.log(C_OPENCMS_DEBUG,"[CmsDumpTemplate] Now dumping contents of file " + templateFile);
  }
  I_CmsSession session=cms.getRequestContext().getSession(true);
  String lang=CmsXmlLanguageFile.getCurrentUserLanguage(cms);
  CmsMessages messages=new CmsMessages("com.opencms.workplace.workplace",new Locale(lang,"",""));
  String currentFolder=(String)parameters.get("folder");
  if ((currentFolder != null) && (currentFolder.startsWith("vfslink:"))) {
    parameters.put("mode","vfslink");
    parameters.put("file",currentFolder.substring(8));
  }
 else {
    if ((currentFolder != null) && (!"".equals(currentFolder)) && folderExists(cms,currentFolder)) {
      session.putValue(C_PARA_FILELIST,currentFolder);
    }
 else {
      currentFolder=(String)session.getValue(C_PARA_FILELIST);
      if ((currentFolder == null) || (!folderExists(cms,currentFolder))) {
        currentFolder=cms.rootFolder().getAbsolutePath();
        session.putValue(C_PARA_FILELIST,currentFolder);
      }
    }
  }
  String mode=(String)parameters.get("mode");
  boolean listonly="listonly".equals(mode);
  boolean projectView="projectview".equals(mode);
  boolean vfslinkView="vfslink".equals(mode);
  if (vfslinkView) {
    String file=(String)parameters.get("file");
    boolean found=true;
    try {
      cms.readFileHeader(file);
    }
 catch (    CmsException e) {
      found=false;
    }
    if (found) {
      currentFolder="vfslink:" + file;
    }
 else {
      currentFolder=cms.rootFolder().getAbsolutePath();
      vfslinkView=false;
      parameters.remove("mode");
    }
    session.putValue(C_PARA_FILELIST,currentFolder);
  }
  if (DEBUG > 2) {
    System.err.println("[" + System.currentTimeMillis() + "] CmsNewExplorerFileList.getContent() called");
    System.err.println("templateFile=" + templateFile);
    System.err.println("elementName=" + elementName);
    Iterator i=parameters.keySet().iterator();
    while (i.hasNext()) {
      String key=(String)i.next();
      System.err.println("parameters:  key=" + key + " value="+ parameters.get(key));
    }
    System.err.println();
  }
  boolean noKontext="false".equals(parameters.get("kontext"));
  String flaturl=(String)parameters.get("flaturl");
  String checksum=(String)parameters.get("check");
  boolean newTreePlease=true;
  long check=-1;
  try {
    check=Long.parseLong(checksum);
    if (check == cms.getFileSystemFolderChanges()) {
      newTreePlease=false;
    }
  }
 catch (  Exception e) {
  }
  check=cms.getFileSystemFolderChanges();
  CmsUUID currentFolderId;
  if (!vfslinkView) {
    currentFolderId=(cms.readFolder(currentFolder)).getResourceId();
  }
 else {
    currentFolderId=CmsUUID.getNullUUID();
  }
  StringBuffer content=new StringBuffer(2048);
  content.append("<html> \n<head> \n");
  content.append("<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=");
  content.append(cms.getRequestContext().getEncoding());
  content.append("\">\n");
  content.append("<script language=JavaScript>\n");
  content.append("function initialize() {\n");
  if (listonly) {
    content.append("top.openfolderMethod='openthisfolderflat';\n");
  }
 else {
    content.append("top.openfolderMethod='openthisfolder';\n");
  }
  if (projectView || vfslinkView) {
    content.append("top.projectView=true;\n");
  }
 else {
    content.append("top.projectView=false;\n");
  }
  if (noKontext) {
    content.append("top.showKon=false;\n");
  }
 else {
    content.append("top.showKon=true;\n");
  }
  if (flaturl != null) {
    content.append("top.flaturl='");
    content.append(flaturl);
    content.append("';\n");
  }
 else   if (!listonly) {
    content.append("top.flaturl='';\n");
  }
  content.append("top.head.helpUrl='explorer/index.html';\n");
  content.append("top.setProject(");
  content.append(cms.getRequestContext().currentProject().getId());
  content.append(");\n");
  content.append("top.setOnlineProject(");
  content.append(cms.onlineProject().getId());
  content.append(");\n");
  content.append("top.setChecksum(");
  content.append(check);
  content.append(");\n");
  boolean writeAccess=true;
  if (!vfslinkView) {
    CmsFolder test=cms.readFolder(currentFolder);
    writeAccess=test.getProjectId() == cms.getRequestContext().currentProject().getId();
  }
  content.append("top.enableNewButton(");
  content.append(writeAccess);
  content.append(");\n");
  content.append("top.setDirectory(\"");
  content.append(currentFolderId);
  content.append("\",\"");
  content.append(currentFolder);
  content.append("\");\n");
  content.append("top.rD();\n\n");
  int filelist=getDefaultPreferences(cms);
  boolean showTitle=(filelist & C_FILELIST_TITLE) > 0;
  boolean showDateChanged=(filelist & C_FILELIST_CHANGED) > 0;
  boolean showOwner=(filelist & C_FILELIST_OWNER) > 0;
  boolean showGroup=(filelist & C_FILELIST_GROUP) > 0;
  boolean showSize=(filelist & C_FILELIST_SIZE) > 0;
  Vector resources=getRessources(cms,currentFolder,parameters);
  int startat=0;
  int stopat=resources.size();
  int selectedPage=1;
  int numberOfPages=0;
  int maxEntrys=C_ENTRYS_PER_PAGE;
  if (!(listonly || projectView || vfslinkView)) {
    String selPage=(String)parameters.get("selPage");
    if (selPage == null || "".equals(selPage)) {
      selPage=(String)session.getValue(C_SESSION_CURRENT_PAGE);
    }
    if (selPage != null && !"".equals(selPage)) {
      try {
        selectedPage=Integer.parseInt(selPage);
        session.putValue(C_SESSION_CURRENT_PAGE,selPage);
      }
 catch (      Exception e) {
      }
    }
    if (stopat > maxEntrys) {
      numberOfPages=(stopat / maxEntrys) + 1;
      if (selectedPage > numberOfPages) {
        selectedPage=1;
      }
      startat=(selectedPage - 1) * maxEntrys;
      if ((startat + maxEntrys) < stopat) {
        stopat=startat + maxEntrys;
      }
    }
  }
  for (int i=startat; i < stopat; i++) {
    CmsResource res=(CmsResource)resources.elementAt(i);
    content.append("top.aF(");
    content.append("\"");
    content.append(res.getName());
    content.append("\",");
    if (projectView || vfslinkView) {
      content.append("\"");
      content.append(res.getPath());
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showTitle) {
      String title="";
      try {
        title=cms.readProperty(res.getAbsolutePath(),C_PROPERTY_TITLE);
      }
 catch (      CmsException e) {
      }
      if (title == null) {
        title="";
      }
      content.append("\"");
      if (title != null)       content.append(Encoder.escapeHtml(title));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    content.append(res.getType());
    content.append(",");
    if (showDateChanged) {
      content.append("\"");
      content.append(Utils.getNiceDate(res.getDateLastModified()));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    content.append("\"\",");
    content.append("\"\",");
    if (res.isFolder() || (!showSize)) {
      content.append("\"\",");
    }
 else {
      content.append(res.getLength());
      content.append(",");
    }
    content.append(res.getState());
    content.append(",");
    content.append(res.getProjectId());
    content.append(",");
    if (showOwner) {
      content.append("\"");
      content.append(cms.getPermissions(res.getAbsolutePath()).getPermissionString());
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showGroup) {
      content.append("\"\",");
    }
 else {
      content.append("\"\",");
    }
    content.append(0);
    content.append(",");
    if (res.isLockedBy().isNullUUID()) {
      content.append("\"\",");
    }
 else {
      content.append("\"");
      content.append(cms.lockedBy(res).getName());
      content.append("\",");
    }
    int lockedInProject=res.getLockedInProject();
    String lockedInProjectName="";
    try {
      lockedInProjectName=cms.readProject(lockedInProject).getName();
    }
 catch (    CmsException exc) {
    }
    content.append("\"");
    content.append(lockedInProjectName);
    content.append("\",");
    content.append(lockedInProject);
    content.append(");\n");
  }
  if (newTreePlease && (!(listonly || vfslinkView))) {
    content.append("\n top.rT();\n");
    Vector tree=cms.getFolderTree();
    int startAt=1;
    CmsUUID parentId=CmsUUID.getNullUUID();
    boolean grey=false;
    int onlineProjectId=cms.onlineProject().getId();
    if (cms.getRequestContext().currentProject().isOnlineProject()) {
      CmsFolder rootFolder=(CmsFolder)tree.elementAt(0);
      content.append("top.aC(\"");
      content.append(rootFolder.getResourceId());
      content.append("\", ");
      content.append("\"");
      content.append(messages.key("title.rootfolder"));
      content.append("\", \"");
      content.append(rootFolder.getParentId());
      content.append("\", false);\n");
      for (int i=startAt; i < tree.size(); i++) {
        CmsFolder folder=(CmsFolder)tree.elementAt(i);
        content.append("top.aC(\"");
        content.append(folder.getResourceId());
        content.append("\", ");
        content.append("\"");
        content.append(folder.getName());
        content.append("\", \"");
        content.append(folder.getParentId());
        content.append("\", false);\n");
      }
    }
 else {
      Hashtable idMixer=new Hashtable();
      CmsFolder rootFolder=(CmsFolder)tree.elementAt(0);
      String folderToIgnore=null;
      if (rootFolder.getProjectId() != onlineProjectId) {
        startAt=2;
        grey=false;
        idMixer.put((CmsFolder)tree.elementAt(1),rootFolder.getResourceId());
      }
 else {
        grey=true;
      }
      content.append("top.aC(\"");
      content.append(rootFolder.getResourceId());
      content.append("\", ");
      content.append("\"");
      content.append(messages.key("title.rootfolder"));
      content.append("\", \"");
      content.append(rootFolder.getParentId());
      content.append("\", ");
      content.append(grey);
      content.append(");\n");
      for (int i=startAt; i < tree.size(); i++) {
        CmsFolder folder=(CmsFolder)tree.elementAt(i);
        if ((folder.getState() == C_STATE_DELETED) || (folder.getAbsolutePath().equals(folderToIgnore))) {
          folderToIgnore=folder.getAbsolutePath();
        }
 else {
          if (folder.getProjectId() != onlineProjectId) {
            grey=false;
            parentId=folder.getParentId();
            try {
              if (folder.getAbsolutePath().equals(((CmsFolder)tree.elementAt(i + 1)).getAbsolutePath())) {
                i++;
                idMixer.put((CmsFolder)tree.elementAt(i),folder.getResourceId());
              }
            }
 catch (            IndexOutOfBoundsException exc) {
            }
          }
 else {
            grey=true;
            parentId=folder.getParentId();
            if (idMixer.containsKey(parentId)) {
              parentId=(CmsUUID)idMixer.get(parentId);
            }
          }
          content.append("top.aC(\"");
          content.append(folder.getResourceId());
          content.append("\", ");
          content.append("\"");
          content.append(folder.getName());
          content.append("\", \"");
          content.append(parentId);
          content.append("\", ");
          content.append(grey);
          content.append(");\n");
        }
      }
    }
  }
  if (listonly || projectView) {
    content.append(" top.dUL(document); \n");
  }
 else {
    content.append(" top.dU(document,");
    content.append(numberOfPages);
    content.append(",");
    content.append(selectedPage);
    content.append("); \n");
  }
  content.append("}\n");
  content.append("</script>\n</head> \n<BODY onLoad=\"initialize()\"></BODY> \n</html>\n");
  return (content.toString()).getBytes();
}
