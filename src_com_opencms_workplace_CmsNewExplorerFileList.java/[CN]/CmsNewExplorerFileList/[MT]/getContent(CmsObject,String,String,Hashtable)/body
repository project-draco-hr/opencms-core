{
  if (A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && C_DEBUG) {
    A_OpenCms.log(C_OPENCMS_DEBUG,"[CmsDumpTemplate] Now dumping contents of file " + templateFile);
  }
  I_CmsSession session=cms.getRequestContext().getSession(true);
  CmsXmlWpTemplateFile templateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  CmsXmlLanguageFile lang=templateDocument.getLanguageFile();
  String currentFolder=(String)parameters.get("folder");
  if ((currentFolder != null) && (!"".equals(currentFolder)) && folderExists(cms,currentFolder)) {
    session.putValue(C_PARA_FILELIST,currentFolder);
  }
 else {
    currentFolder=(String)session.getValue(C_PARA_FILELIST);
    if ((currentFolder == null) || (!folderExists(cms,currentFolder))) {
      currentFolder=cms.rootFolder().getAbsolutePath();
      session.putValue(C_PARA_FILELIST,currentFolder);
    }
  }
  boolean listonly="listonly".equals(parameters.get("mode"));
  boolean projectView="projectview".equals(parameters.get("mode"));
  boolean noKontext="false".equals(parameters.get("kontext"));
  String flaturl=(String)parameters.get("flaturl");
  String checksum=(String)parameters.get("check");
  boolean newTreePlease=true;
  long check=-1;
  try {
    check=Long.parseLong(checksum);
    if (check == cms.getFileSystemFolderChanges()) {
      newTreePlease=false;
    }
  }
 catch (  Exception e) {
  }
  check=cms.getFileSystemFolderChanges();
  int currentFolderId=(cms.readFolder(currentFolder)).getResourceId();
  StringBuffer content=new StringBuffer();
  content.append("<html> \n<head> \n<script language=JavaScript>\n");
  content.append("function initialize() {\n");
  if (listonly) {
    content.append("top.openfolderMethod='openthisfolderflat';\n");
  }
 else {
    content.append("top.openfolderMethod='openthisfolder';\n");
  }
  if (projectView) {
    content.append("top.projectView=true;\n");
  }
 else {
    content.append("top.projectView=false;\n");
  }
  if (noKontext) {
    content.append("top.showKon=false;\n");
  }
 else {
    content.append("top.showKon=true;\n");
  }
  if (flaturl != null) {
    content.append("top.flaturl='" + flaturl + "';\n");
  }
 else   if (!listonly) {
    content.append("top.flaturl='';\n");
  }
  content.append("top.help_url='ExplorerAnsicht/index.html';\n");
  content.append("top.setProject(" + cms.getRequestContext().currentProject().getId() + ");\n");
  content.append("top.setOnlineProject(" + cms.onlineProject().getId() + ");\n");
  content.append("top.setChecksum(" + check + ");\n");
  CmsFolder test=cms.readFolder(currentFolder);
  boolean writeAccess=test.getProjectId() == cms.getRequestContext().currentProject().getId();
  content.append("top.enableNewButton(" + writeAccess + ");\n");
  content.append("top.setDirectory(" + currentFolderId + ",\""+ currentFolder+ "\");\n");
  content.append("top.rD();\n\n");
  int filelist=getDefaultPreferences(cms);
  boolean showTitle=(filelist & C_FILELIST_TITLE) > 0;
  boolean showDateChanged=(filelist & C_FILELIST_CHANGED) > 0;
  boolean showOwner=(filelist & C_FILELIST_OWNER) > 0;
  boolean showGroup=(filelist & C_FILELIST_GROUP) > 0;
  boolean showSize=(filelist & C_FILELIST_SIZE) > 0;
  Vector resources=getRessources(cms,currentFolder,projectView);
  int startat=0;
  int stopat=resources.size();
  int selectedPage=1;
  int numberOfPages=0;
  int maxEntrys=C_ENTRYS_PER_PAGE;
  if (!(listonly || projectView)) {
    String selPage=(String)parameters.get("selPage");
    if (selPage == null || "".equals(selPage)) {
      selPage=(String)session.getValue(C_SESSION_CURRENT_PAGE);
    }
    if (selPage != null && !"".equals(selPage)) {
      try {
        selectedPage=Integer.parseInt(selPage);
        session.putValue(C_SESSION_CURRENT_PAGE,selPage);
      }
 catch (      Exception e) {
      }
    }
    if (stopat > maxEntrys) {
      numberOfPages=(stopat / maxEntrys) + 1;
      if (selectedPage > numberOfPages) {
        selectedPage=1;
      }
      startat=(selectedPage - 1) * maxEntrys;
      if ((startat + maxEntrys) < stopat) {
        stopat=startat + maxEntrys;
      }
    }
  }
  for (int i=startat; i < stopat; i++) {
    CmsResource res=(CmsResource)resources.elementAt(i);
    content.append("top.aF(");
    content.append("\"" + res.getName() + "\",");
    if (projectView) {
      content.append("\"" + res.getPath() + "\",");
    }
 else {
      content.append("\"\",");
    }
    if (showTitle) {
      String title="";
      try {
        title=cms.readProperty(res.getAbsolutePath(),C_PROPERTY_TITLE);
      }
 catch (      CmsException e) {
      }
      if (title == null) {
        title="";
      }
      content.append("\"" + getChars(title) + "\",");
    }
 else {
      content.append("\"\",");
    }
    content.append(res.getType() + ",");
    if (showDateChanged) {
      content.append("\"" + Utils.getNiceDate(res.getDateLastModified()) + "\",");
    }
 else {
      content.append("\"\",");
    }
    content.append("\"\",");
    content.append("\"\",");
    if (res.isFolder() || (!showSize)) {
      content.append("\"\",");
    }
 else {
      content.append(res.getLength() + ",");
    }
    content.append(res.getState() + ",");
    content.append(res.getProjectId() + ",");
    if (showOwner) {
      content.append("\"" + cms.readUser(res.getOwnerId()).getName() + "\",");
    }
 else {
      content.append("\"\",");
    }
    if (showGroup) {
      content.append("\"" + cms.readGroup(res).getName() + "\",");
    }
 else {
      content.append("\"\",");
    }
    content.append(res.getAccessFlags() + ",");
    if (res.isLockedBy() == C_UNKNOWN_ID) {
      content.append("\"\",");
    }
 else {
      content.append("\"" + cms.lockedBy(res).getName() + "\",");
    }
    int lockedInProject=res.getLockedInProject();
    String lockedInProjectName="";
    try {
      lockedInProjectName=cms.readProject(lockedInProject).getName();
    }
 catch (    CmsException exc) {
    }
    content.append("\"" + lockedInProjectName + "\","+ lockedInProject+ ");\n");
  }
  if (newTreePlease && (!listonly)) {
    content.append("\n top.rT();\n");
    Vector tree=cms.getFolderTree();
    int startAt=1;
    int parentId;
    boolean grey=false;
    int onlineProjectId=cms.onlineProject().getId();
    if (onlineProjectId == cms.getRequestContext().currentProject().getId()) {
      CmsFolder rootFolder=(CmsFolder)tree.elementAt(0);
      content.append("top.aC(");
      content.append(rootFolder.getResourceId() + ", ");
      content.append("\"" + lang.getDataValue("title.rootfolder") + "\", ");
      content.append(rootFolder.getParentId() + ", false);\n");
      for (int i=startAt; i < tree.size(); i++) {
        CmsFolder folder=(CmsFolder)tree.elementAt(i);
        content.append("top.aC(");
        content.append(folder.getResourceId() + ", ");
        content.append("\"" + folder.getName() + "\", ");
        content.append(folder.getParentId() + ", false);\n");
      }
    }
 else {
      Hashtable idMixer=new Hashtable();
      CmsFolder rootFolder=(CmsFolder)tree.elementAt(0);
      String folderToIgnore=null;
      if (rootFolder.getProjectId() != onlineProjectId) {
        startAt=2;
        grey=false;
        idMixer.put(new Integer(((CmsFolder)tree.elementAt(1)).getResourceId()),new Integer(rootFolder.getResourceId()));
      }
 else {
        grey=true;
      }
      content.append("top.aC(");
      content.append(rootFolder.getResourceId() + ", ");
      content.append("\"" + lang.getDataValue("title.rootfolder") + "\", ");
      content.append(rootFolder.getParentId() + ", " + grey+ ");\n");
      for (int i=startAt; i < tree.size(); i++) {
        CmsFolder folder=(CmsFolder)tree.elementAt(i);
        if ((folder.getState() == C_STATE_DELETED) || (folder.getAbsolutePath().equals(folderToIgnore))) {
          folderToIgnore=folder.getAbsolutePath();
        }
 else {
          if (folder.getProjectId() != onlineProjectId) {
            grey=false;
            parentId=folder.getParentId();
            try {
              if (folder.getAbsolutePath().equals(((CmsFolder)tree.elementAt(i + 1)).getAbsolutePath())) {
                i++;
                idMixer.put(new Integer(((CmsFolder)tree.elementAt(i)).getResourceId()),new Integer(folder.getResourceId()));
              }
            }
 catch (            IndexOutOfBoundsException exc) {
            }
          }
 else {
            grey=true;
            parentId=folder.getParentId();
            if (idMixer.containsKey(new Integer(parentId))) {
              parentId=((Integer)idMixer.get(new Integer(parentId))).intValue();
            }
          }
          content.append("top.aC(");
          content.append(folder.getResourceId() + ", ");
          content.append("\"" + folder.getName() + "\", ");
          content.append(parentId + ", " + grey+ ");\n");
        }
      }
    }
  }
  if (listonly || projectView) {
    content.append(" top.dUL(document); \n");
  }
 else {
    content.append(" top.dU(document," + numberOfPages + ","+ selectedPage+ "); \n");
  }
  content.append("}\n");
  content.append("</script>\n</head> \n<BODY onLoad=\"initialize()\"></BODY> \n</html>\n");
  return (content.toString()).getBytes();
}
