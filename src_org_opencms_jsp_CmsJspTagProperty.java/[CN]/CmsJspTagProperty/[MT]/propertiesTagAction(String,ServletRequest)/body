{
  CmsFlexController controller=CmsFlexController.getController(req);
  FileUse useAction=FileUse.URI;
  if (action != null) {
    useAction=FileUse.parse(action);
  }
  String vfsUri=null;
  boolean search=false;
  if (useAction != null) {
switch (useAction) {
case URI:
case PARENT:
      vfsUri=controller.getCmsObject().getRequestContext().getUri();
    break;
case SEARCH:
case SEARCH_URI:
case SEARCH_PARENT:
  vfsUri=controller.getCmsObject().getRequestContext().getUri();
search=true;
break;
case ELEMENT_URI:
case THIS:
vfsUri=controller.getCurrentRequest().getElementUri();
break;
case SEARCH_ELEMENT_URI:
case SEARCH_THIS:
vfsUri=controller.getCurrentRequest().getElementUri();
search=true;
break;
case CONTAINER:
CmsObject cms=controller.getCmsObject();
try {
CmsContainerElementBean currentElement=OpenCms.getADEManager().getCurrentElement(req);
return CmsXmlContentPropertyHelper.mergeDefaults(cms,cms.readResource(currentElement.getElementId()),currentElement.getProperties());
}
 catch (CmsException e) {
LOG.debug(e.getLocalizedMessage(),e);
return new HashMap<String,String>();
}
default :
}
}
 else {
vfsUri=CmsLinkManager.getAbsoluteUri(action,controller.getCurrentRequest().getElementUri());
search=false;
}
Map<String,String> value=new HashMap<String,String>();
if (vfsUri != null) {
value=CmsProperty.toMap(controller.getCmsObject().readPropertyObjects(vfsUri,search));
}
return value;
}
