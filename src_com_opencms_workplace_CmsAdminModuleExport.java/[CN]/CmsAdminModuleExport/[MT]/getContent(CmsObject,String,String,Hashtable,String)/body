{
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlTemplateFile templateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  CmsRequestContext reqCont=cms.getRequestContext();
  I_CmsRegistry reg=cms.getRegistry();
  String step=(String)parameters.get(C_ACTION);
  String moduleName=(String)parameters.get(C_MODULE);
  if ((step != null) && ("ok".equals(step))) {
    String exportName=(String)parameters.get("modulename");
    String[] resourcen=null;
    int resourceCount=0;
    int i=0;
    if (reg.getModuleType(exportName).equals(CmsRegistry.C_MODULE_TYPE_SIMPLE)) {
      if (DEBUG > 0) {
        System.out.println(exportName + " is a simple module");
      }
      String additionalResources=OpenCms.getRegistry().getModuleParameterString(exportName,I_CmsConstants.C_MODULE_PROPERTY_ADDITIONAL_RESOURCES);
      int additionalResourceCount=0;
      StringTokenizer additionalResourceTokens=null;
      if (additionalResources != null && !additionalResources.equals("")) {
        additionalResourceTokens=new StringTokenizer(additionalResources,I_CmsConstants.C_MODULE_PROPERTY_ADDITIONAL_RESOURCES_SEPARATOR);
        resourceCount=(additionalResourceTokens.countTokens() * 2) + CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;
        resourcen=new String[resourceCount];
        while (additionalResourceTokens.hasMoreTokens()) {
          String currentResource=additionalResourceTokens.nextToken();
          if (DEBUG > 0) {
            System.err.println("Adding resource: " + currentResource);
            System.err.println("Adding resource: " + C_VFS_PATH_BODIES.substring(0,C_VFS_PATH_BODIES.length() - 1) + currentResource);
          }
          resourcen[i++]=currentResource;
          resourcen[i++]=C_VFS_PATH_BODIES.substring(0,C_VFS_PATH_BODIES.length() - 1) + currentResource;
        }
      }
 else {
        resourceCount=CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;
        resourcen=new String[resourceCount];
        i=0;
      }
    }
 else {
      if (DEBUG > 0) {
        System.out.println(exportName + " is a traditional module");
      }
      resourceCount=CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT;
      resourcen=new String[resourceCount];
      i=0;
    }
    resourcen[i++]=C_VFS_PATH_MODULES + exportName + "/";
    if (!C_VFS_NEW_STRUCTURE) {
      resourcen[i++]=C_VFS_PATH_MODULEDEMOS + exportName + "/";
      resourcen[i++]=C_VFS_PATH_BODIES.substring(0,C_VFS_PATH_BODIES.length() - 1) + C_VFS_PATH_MODULEDEMOS + exportName+ "/";
    }
    for (i=0; i < resourceCount; i++) {
      try {
        if (resourcen[i] != null) {
          if (DEBUG > 0) {
            System.err.println("reading file header of: " + resourcen[i]);
          }
          cms.readFileHeader(resourcen[i]);
        }
      }
 catch (      CmsException e) {
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(I_CmsLogChannels.C_MODULE_DEBUG,"error exporting module: couldn't add " + resourcen[i] + " to Module\n"+ Utils.getStackTrace(e));
        }
        resourcen[i]=resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT];
      }
    }
    try {
      cms.readFileHeader(resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT]);
    }
 catch (    CmsException e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_MODULE_DEBUG,"error exporting module: couldn't add " + resourcen[resourceCount - CmsAdminModuleExport.C_MINIMUM_MODULE_RESOURCE_COUNT] + " to Module\n"+ "You dont have this module in this project!");
      }
      return startProcessing(cms,templateDocument,elementName,parameters,"done");
    }
    reg.exportModule(exportName,resourcen,com.opencms.boot.CmsBase.getAbsolutePath(cms.readExportPath()) + "/" + exportName+ "_"+ reg.getModuleVersion(exportName));
    templateSelector="done";
  }
 else {
    templateDocument.setData("modulename",moduleName);
  }
  return startProcessing(cms,templateDocument,elementName,parameters,templateSelector);
}
