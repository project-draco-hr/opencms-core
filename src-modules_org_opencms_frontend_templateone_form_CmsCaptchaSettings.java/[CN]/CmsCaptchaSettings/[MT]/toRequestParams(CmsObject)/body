{
  StringBuffer buf=new StringBuffer();
  buf.append(C_PARAM_IMAGE_WIDTH).append("=").append(m_imageWidth);
  buf.append("&").append(C_PARAM_IMAGE_HEIGHT).append("=").append(m_imageHeight);
  buf.append("&").append(C_PARAM_MIN_FONT_SIZE).append("=").append(m_minFontSize);
  buf.append("&").append(C_PARAM_MAX_FONT_SIZE).append("=").append(m_maxFontSize);
  buf.append("&").append(C_PARAM_MIN_PHRASE_LENGTH).append("=").append(m_minPhraseLength);
  buf.append("&").append(C_PARAM_MAX_PHRASE_LENGTH).append("=").append(m_maxPhraseLength);
  buf.append("&").append(C_PARAM_FONT_COLOR).append("=").append(CmsEncoder.escape(getFontColorString(),cms.getRequestContext().getEncoding()));
  buf.append("&").append(C_PARAM_BACKGROUND_COLOR).append("=").append(CmsEncoder.escape(getBackgroundColorString(),cms.getRequestContext().getEncoding()));
  buf.append("&").append(C_PARAM_HOLES_PER_GLYPH).append("=").append(m_holesPerGlyp);
  buf.append("&").append(C_PARAM_FILTER_AMPLITUDE).append("=").append(m_filterAmplitude);
  buf.append("&").append(C_PARAM_USE_BACKGROUND_IMAGE).append("=").append(Boolean.toString(m_useBackgroundImage));
  return buf.toString();
}
