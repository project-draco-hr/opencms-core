{
  try {
    String captchaSettingsPath=content.getStringValue(cms,new StringBuffer(CmsForm.NODE_CAPTCHA).append("/").append(CmsForm.NODE_CAPTCHA_PRESET).toString(),locale);
    if (CmsStringUtil.isNotEmpty(captchaSettingsPath)) {
      m_presetPath=captchaSettingsPath;
      CmsFile captchaSettingsFile=cms.readFile(captchaSettingsPath);
      CmsXmlContent preset=CmsXmlContentFactory.unmarshal(cms,captchaSettingsFile);
      Locale captchaSettingsLocale=Locale.ENGLISH;
      String stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_IMAGEWIDTH,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        m_imageWidth=Integer.parseInt(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_IMAGEHEIGHT,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        m_imageHeight=Integer.parseInt(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_MIN_PHRASE_LENGTH,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        m_minPhraseLength=Integer.parseInt(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_MAX_PHRASE_LENGTH,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        m_maxPhraseLength=Integer.parseInt(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_MIN_FONT_SIZE,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        m_minFontSize=Integer.parseInt(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_MAX_FONT_SIZE,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        m_maxFontSize=Integer.parseInt(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_FONTCOLOR,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        setFontColor(stringValue);
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_BACKGROUNDCOLOR,captchaSettingsLocale);
      setBackgroundColor(stringValue);
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_HOLESPERGLYPH,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        setHolesPerGlyph(Integer.parseInt(stringValue));
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_FILTER_AMPLITUDE,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        setFilterAmplitude(Integer.parseInt(stringValue));
      }
      stringValue=preset.getStringValue(cms,CmsCaptchaSettings.NODE_CAPTCHAPRESET_FILTER_WAVELENGTH,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        setFilterWaveLength(Integer.parseInt(stringValue));
      }
      stringValue=preset.getStringValue(cms,CmsForm.NODE_CAPTCHA_CHARACTERS,captchaSettingsLocale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        setCharacterPool(stringValue);
      }
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        setCharacterPool(stringValue);
      }
    }
 else {
    }
  }
 catch (  Exception ex) {
    if (LOG.isErrorEnabled()) {
      LOG.error(ex.getLocalizedMessage());
    }
  }
}
