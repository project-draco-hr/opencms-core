{
  A_CmsRequestContext reqCont=cms.getRequestContext();
  HttpSession session=((HttpServletRequest)reqCont.getRequest().getOriginalRequest()).getSession(true);
  String template="";
  String panel;
  String oldPanel;
  int explorerSettingsValue;
  Enumeration keys=parameters.keys();
  String key;
  System.err.println("#####");
  while (keys.hasMoreElements()) {
    key=(String)keys.nextElement();
    System.err.print(key);
    System.err.print(":");
    System.err.println(parameters.get(key));
  }
  System.err.println("?????");
  String[] skeys=session.getValueNames();
  System.err.println("++++++SESSIONVALUES");
  for (int i=0; i < skeys.length; i++) {
    key=(String)skeys[i];
    System.err.print(key);
    System.err.print(":");
    System.err.println(session.getValue(key));
  }
  System.err.println("?????");
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  panel=(String)parameters.get("panel");
  if ((parameters.get("SUBMIT") != null) || (parameters.get("OK") != null)) {
    if (panel != null) {
      if (panel.equals("explorer")) {
        int explorerSettings=getExplorerSettings(parameters);
        session.putValue("EXPLORERSETTINGS",new Integer(explorerSettings).toString());
      }
      if (panel.equals("task")) {
        Hashtable taskSettings=getTaskSettings(parameters,session);
        if (taskSettings != null) {
          session.putValue("TASKSETTINGS",taskSettings);
        }
      }
      if (panel.equals("user")) {
        String userSettings=getUserSettings(parameters);
        if (userSettings != null) {
          session.putValue("USERSETTINGS",userSettings);
        }
      }
      if (panel.equals("start")) {
        Hashtable startSettings=getStartSettings(parameters);
        if (startSettings != null) {
          session.putValue("STARTSETTINGS",startSettings);
        }
      }
    }
    String explorerSettings=(String)session.getValue("EXPLORERSETTINGS");
    if (explorerSettings != null) {
      cms.getRequestContext().currentUser().setAdditionalInfo(C_ADDITIONAL_INFO_EXPLORERSETTINGS,explorerSettings);
    }
    Hashtable taskSettings=(Hashtable)session.getValue("TASKSETTINGS");
    if (taskSettings != null) {
      cms.getRequestContext().currentUser().setAdditionalInfo(C_ADDITIONAL_INFO_TASKSETTINGS,taskSettings);
    }
    String userSettings=(String)session.getValue("USERSETTINGS");
    if (userSettings != null) {
      cms.getRequestContext().setCurrentGroup(userSettings);
    }
    Hashtable startSettings=(Hashtable)session.getValue("STARTSETTINGS");
    if (startSettings != null) {
      cms.getRequestContext().currentUser().setAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS,startSettings);
    }
    cms.writeUser(cms.getRequestContext().currentUser());
  }
  if (panel != null) {
    template=panel;
    if (panel.equals("explorer")) {
      String explorerSettings=null;
      explorerSettings=(String)session.getValue("EXPLORERSETTINGS");
      if (explorerSettings == null) {
        explorerSettings=(String)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_EXPLORERSETTINGS);
      }
      if (parameters.get("DEFAULT") != null) {
        explorerSettings=null;
      }
      if (explorerSettings != null) {
        explorerSettingsValue=new Integer(explorerSettings).intValue();
      }
 else {
        explorerSettingsValue=C_FILELIST_TITLE + C_FILELIST_TYPE + C_FILELIST_CHANGED;
      }
      if ((explorerSettingsValue & C_FILELIST_TITLE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKTITLE",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKTITLE"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_TYPE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKTYPE",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKTYPE"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_CHANGED) > 0) {
        xmlTemplateDocument.setXmlData("CHECKCHANGED",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKCHANGED"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_SIZE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKSIZE",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKSIZE"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_STATE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKSTATE",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKSTATE"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_OWNER) > 0) {
        xmlTemplateDocument.setXmlData("CHECKOWNER",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKOWNER"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_GROUP) > 0) {
        xmlTemplateDocument.setXmlData("CHECKGROUP",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKGROUP"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_ACCESS) > 0) {
        xmlTemplateDocument.setXmlData("CHECKACCESS",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKACCESS"," ");
      }
      if ((explorerSettingsValue & C_FILELIST_LOCKED) > 0) {
        xmlTemplateDocument.setXmlData("CHECKLOCKEDBY",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKLOCKEDBY"," ");
      }
    }
 else     if (panel.equals("task")) {
      Hashtable taskSettings=null;
      taskSettings=(Hashtable)session.getValue("TASKSETTINGS");
      if (taskSettings == null) {
        taskSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_TASKSETTINGS);
      }
      if (taskSettings == null) {
        taskSettings=new Hashtable();
        taskSettings.put(C_TASK_VIEW_ALL,new Boolean(false));
        taskSettings.put(C_TASK_MESSAGES,new Integer(C_TASK_MESSAGES_ACCEPTED + C_TASK_MESSAGES_FORWARDED + C_TASK_MESSAGES_COMPLETED+ C_TASK_MESSAGES_MEMBERS));
        taskSettings.put(C_TASK_FILTER,new String("a1"));
      }
      if (((Boolean)taskSettings.get(C_TASK_VIEW_ALL)).booleanValue()) {
        xmlTemplateDocument.setXmlData("CHVIEWALL",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHVIEWALL"," ");
      }
      int taskMessages=((Integer)taskSettings.get(C_TASK_MESSAGES)).intValue();
      if ((taskMessages & C_TASK_MESSAGES_ACCEPTED) > 0) {
        xmlTemplateDocument.setXmlData("CHMESSAGEACCEPTED",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHMESSAGEACCEPTED"," ");
      }
      if ((taskMessages & C_TASK_MESSAGES_FORWARDED) > 0) {
        xmlTemplateDocument.setXmlData("CHMESSAGEFORWARDED",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHMESSAGEFORWARDED"," ");
      }
      if ((taskMessages & C_TASK_MESSAGES_COMPLETED) > 0) {
        xmlTemplateDocument.setXmlData("CHMESSAGECOMPLETED",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHMESSAGECOMPLETED"," ");
      }
      if ((taskMessages & C_TASK_MESSAGES_MEMBERS) > 0) {
        xmlTemplateDocument.setXmlData("CHMESSAGEMEMEBERS",C_CHECKED);
      }
 else {
        xmlTemplateDocument.setXmlData("CHMESSAGEMEMEBERS"," ");
      }
    }
 else     if (panel.equals("start")) {
      Hashtable startSettings=null;
      startSettings=(Hashtable)session.getValue("STARTSETTINGS");
      if (startSettings == null) {
        startSettings=(Hashtable)cms.getRequestContext().currentUser().getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
      }
      Hashtable blub=cms.getRequestContext().currentUser().getAdditionalInfo();
      Enumeration sdkeys=blub.keys();
      while (sdkeys.hasMoreElements()) {
        String sdkey=(String)sdkeys.nextElement();
        System.err.println(sdkey + " : " + blub.get(sdkey));
      }
      if (startSettings == null) {
        startSettings=new Hashtable();
        startSettings.put(C_START_LANGUAGE,"de");
        startSettings.put(C_START_PROJECT,reqCont.currentProject().getName());
        String currentView=(String)session.getValue(C_PARA_VIEW);
        if (currentView == null) {
          currentView="explorer.html";
        }
        startSettings.put(C_START_VIEW,currentView);
        startSettings.put(C_START_DEFAULTGROUP,reqCont.currentGroup().getName());
        startSettings.put(C_START_ACCESSFLAGS,new Integer(C_ACCESS_DEFAULT_FLAGS));
      }
      int flags=((Integer)startSettings.get(C_START_ACCESSFLAGS)).intValue();
      if ((flags & C_ACCESS_OWNER_READ) > 0) {
        xmlTemplateDocument.setXmlData("CHECKUR","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKUR"," ");
      }
      if ((flags & C_ACCESS_OWNER_WRITE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKUW","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKUW"," ");
      }
      if ((flags & C_ACCESS_OWNER_VISIBLE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKUV","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKUV"," ");
      }
      if ((flags & C_ACCESS_GROUP_READ) > 0) {
        xmlTemplateDocument.setXmlData("CHECKGR","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKGR"," ");
      }
      if ((flags & C_ACCESS_GROUP_WRITE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKGW","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKGW"," ");
      }
      if ((flags & C_ACCESS_GROUP_VISIBLE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKGV","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKGV"," ");
      }
      if ((flags & C_ACCESS_PUBLIC_READ) > 0) {
        xmlTemplateDocument.setXmlData("CHECKPR","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKPR"," ");
      }
      if ((flags & C_ACCESS_PUBLIC_WRITE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKPW","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKPW"," ");
      }
      if ((flags & C_ACCESS_PUBLIC_VISIBLE) > 0) {
        xmlTemplateDocument.setXmlData("CHECKPV","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKPV"," ");
      }
      if ((flags & C_ACCESS_INTERNAL_READ) > 0) {
        xmlTemplateDocument.setXmlData("CHECKIF","CHECKED");
      }
 else {
        xmlTemplateDocument.setXmlData("CHECKIF"," ");
      }
    }
 else     if (panel.equals("user")) {
      A_CmsUser user=cms.getRequestContext().currentUser();
      xmlTemplateDocument.setXmlData("USER",user.getName());
      xmlTemplateDocument.setXmlData("FIRSTNAME",user.getFirstname());
      xmlTemplateDocument.setXmlData("LASTNAME",user.getLastname());
      xmlTemplateDocument.setXmlData("DESCRIPTION",user.getDescription());
      xmlTemplateDocument.setXmlData("EMAIL",user.getEmail());
      xmlTemplateDocument.setXmlData("ADRESS",user.getAddress());
    }
    oldPanel=(String)session.getValue(C_PARA_OLDPANEL);
    if (oldPanel != null) {
      if (oldPanel.equals("explorer")) {
        int explorerSettings=getExplorerSettings(parameters);
        session.putValue("EXPLORERSETTINGS",new Integer(explorerSettings).toString());
      }
      if (oldPanel.equals("task")) {
        Hashtable taskSettings=getTaskSettings(parameters,session);
        if (taskSettings != null) {
          session.putValue("TASKSETTINGS",taskSettings);
        }
      }
      if (oldPanel.equals("user")) {
        String userSettings=getUserSettings(parameters);
        if (userSettings != null) {
          session.putValue("USERSETTINGS",userSettings);
        }
      }
      if (oldPanel.equals("start")) {
        Hashtable startSettings=getStartSettings(parameters);
        if (startSettings != null) {
          session.putValue("STARTSETTINGS",startSettings);
        }
      }
    }
    session.putValue(C_PARA_OLDPANEL,panel);
  }
  if ((parameters.get("OK") != null) || (parameters.get("CANCEL") != null)) {
    session.removeValue("EXPLORERSETTINGS");
    session.removeValue("TASKSETTINGS");
    session.removeValue("USERSETTINGS");
    session.removeValue("STARTSETTINGS");
    session.removeValue(C_PARA_OLDPANEL);
    try {
      cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath() + C_WP_RELOAD);
    }
 catch (    Exception e) {
      throw new CmsException("Redirect fails :" + getConfigFile(cms).getWorkplaceActionPath() + C_WP_RELOAD,CmsException.C_UNKNOWN_EXCEPTION,e);
    }
  }
  return startProcessing(cms,xmlTemplateDocument,"",parameters,template);
}
