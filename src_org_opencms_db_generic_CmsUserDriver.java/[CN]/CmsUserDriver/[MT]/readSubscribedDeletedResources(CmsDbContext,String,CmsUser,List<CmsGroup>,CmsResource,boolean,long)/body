{
  PreparedStatement stmt=null;
  Connection conn=null;
  ResultSet res=null;
  List<I_CmsHistoryResource> resources=new ArrayList<I_CmsHistoryResource>();
  Set<CmsUUID> historyIDs=new HashSet<CmsUUID>();
  List<String> principalIds=new ArrayList<String>();
  principalIds.add(user.getId().toString());
  if ((groups != null) && !groups.isEmpty()) {
    Iterator<CmsGroup> it=groups.iterator();
    while (it.hasNext()) {
      principalIds.add(it.next().getId().toString());
    }
  }
  StringBuffer conditions=new StringBuffer(256);
  List<String> params=new ArrayList<String>();
  conditions.append(m_sqlManager.readQuery("C_SUBSCRIPTION_DELETED"));
  if (principalIds.size() == 1) {
    conditions.append(BEGIN_INCLUDE_CONDITION);
    conditions.append(m_sqlManager.readQuery("C_SUBSCRIPTION_DELETED_FILTER_PRINCIPAL_SINGLE"));
    params.add(principalIds.get(0));
    conditions.append(END_CONDITION);
  }
 else {
    conditions.append(BEGIN_INCLUDE_CONDITION);
    conditions.append(m_sqlManager.readQuery("C_SUBSCRIPTION_DELETED_FILTER_PRINCIPALS"));
    conditions.append(BEGIN_CONDITION);
    Iterator<String> it=principalIds.iterator();
    while (it.hasNext()) {
      params.add(it.next());
      conditions.append("?");
      if (it.hasNext()) {
        conditions.append(", ");
      }
    }
    conditions.append(END_CONDITION);
    conditions.append(END_CONDITION);
  }
  try {
    conn=m_sqlManager.getConnection(poolName);
    stmt=m_sqlManager.getPreparedStatementForSql(conn,conditions.toString());
    stmt.setLong(1,deletedFrom);
    for (int i=0; i < params.size(); i++) {
      stmt.setString(i + 2,params.get(i));
    }
    res=stmt.executeQuery();
    while (res.next()) {
      historyIDs.add(new CmsUUID(res.getString(1)));
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,res);
  }
  String parentFolderPath="";
  if (parent != null) {
    parentFolderPath=CmsResource.getFolderPath(parent.getRootPath());
  }
  for (Iterator<CmsUUID> i=historyIDs.iterator(); i.hasNext(); ) {
    CmsUUID id=i.next();
    int version=m_driverManager.getHistoryDriver(dbc).readLastVersion(dbc,id);
    if (version > 0) {
      I_CmsHistoryResource histRes=m_driverManager.getHistoryDriver(dbc).readResource(dbc,id,version);
      if (parent != null) {
        if (!includeSubFolders && !parentFolderPath.equals(CmsResource.getFolderPath(histRes.getRootPath()))) {
          continue;
        }
 else         if (includeSubFolders && !histRes.getRootPath().startsWith(parentFolderPath)) {
          continue;
        }
      }
      resources.add(histRes);
    }
  }
  return resources;
}
