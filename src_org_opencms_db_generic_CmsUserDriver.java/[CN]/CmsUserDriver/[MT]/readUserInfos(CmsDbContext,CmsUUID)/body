{
  Map<String,Object> infos=new HashMap<String,Object>();
  ResultSet res=null;
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_USERDATA_READ_1");
    stmt.setString(1,userId.toString());
    res=stmt.executeQuery();
    while (res.next()) {
      String key=res.getString(m_sqlManager.readQuery("C_USERDATA_KEY_0"));
      String type=res.getString(m_sqlManager.readQuery("C_USERDATA_TYPE_0"));
      byte[] value=m_sqlManager.getBytes(res,m_sqlManager.readQuery("C_USERDATA_VALUE_0"));
      Object data=null;
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_DBG_READUSERINFO_2,key,type));
          if (value != null) {
            try {
              LOG.debug(Messages.get().getBundle().key(Messages.LOG_DBG_READUSERINFO_VALUE_1,new String(value)));
            }
 catch (            Exception e) {
            }
          }
 else {
            LOG.debug(Messages.get().getBundle().key(Messages.LOG_DBG_READUSERINFO_VALUE_1,null));
          }
        }
        data=CmsDataTypeUtil.dataDeserialize(value,type);
      }
 catch (      Exception e) {
        LOG.error(Messages.get().container(Messages.ERR_READING_ADDITIONAL_INFO_1,userId.toString()).key(),e);
      }
      if ((key != null) && (data != null)) {
        infos.put(key,data);
      }
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,res);
  }
  return infos;
}
