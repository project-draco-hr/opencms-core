{
  CmsUUID parentId=CmsUUID.getNullUUID();
  CmsGroup group=null;
  Connection conn=null;
  PreparedStatement stmt=null;
  if (existsGroup(dbc,groupName,reservedParam)) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_GROUP_WITH_NAME_ALREADY_EXISTS_1,groupName);
    if (LOG.isErrorEnabled()) {
      LOG.error(message.key());
    }
    throw new CmsDbEntryAlreadyExistsException(message);
  }
  try {
    if (CmsStringUtil.isNotEmpty(parentGroupName)) {
      parentId=readGroup(dbc,parentGroupName).getId();
    }
    if (reservedParam == null) {
      conn=m_sqlManager.getConnection(dbc);
    }
 else {
      conn=m_sqlManager.getConnection(dbc,((Integer)reservedParam).intValue());
    }
    stmt=m_sqlManager.getPreparedStatement(conn,"C_GROUPS_CREATEGROUP");
    stmt.setString(1,groupId.toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,groupName);
    stmt.setString(4,m_sqlManager.validateEmpty(description));
    stmt.setInt(5,flags);
    stmt.executeUpdate();
    group=new CmsGroup(groupId,parentId,groupName,description,flags);
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
  return group;
}
