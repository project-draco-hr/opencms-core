{
  boolean entryExists=false;
  CmsLogFilter filter=CmsLogFilter.ALL.includeType(CmsLogEntryType.USER_RESOURCE_VISITED).filterResource(resource.getStructureId()).filterUser(user.getId());
  if (m_driverManager.getProjectDriver(dbc).readLog(dbc,OpenCms.getSubscriptionManager().getPoolName(),filter).size() > 0) {
    entryExists=true;
    m_driverManager.getProjectDriver(dbc).deleteLog(dbc,OpenCms.getSubscriptionManager().getPoolName(),filter);
  }
  List<CmsLogEntry> newEntries=new ArrayList<CmsLogEntry>(1);
  CmsLogEntry entry=new CmsLogEntry(user.getId(),System.currentTimeMillis(),resource.getStructureId(),CmsLogEntryType.USER_RESOURCE_VISITED,new String[]{user.getName(),resource.getRootPath()});
  newEntries.add(entry);
  m_driverManager.getProjectDriver(dbc).log(dbc,poolName,newEntries);
  if (!entryExists) {
    PreparedStatement stmt=null;
    Connection conn=null;
    ResultSet res=null;
    int count=0;
    try {
      conn=m_sqlManager.getConnection(poolName);
      stmt=m_sqlManager.getPreparedStatement(conn,dbc.currentProject(),"C_VISITED_USER_COUNT_2");
      stmt.setString(1,user.getId().toString());
      stmt.setInt(2,CmsLogEntryType.USER_RESOURCE_VISITED.getId());
      res=stmt.executeQuery();
      if (res.next()) {
        count=res.getInt(1);
        while (res.next()) {
        }
      }
 else {
        throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_COUNTING_VISITED_RESOURCES_1,user.getName()));
      }
      int maxCount=OpenCms.getSubscriptionManager().getMaxVisitedCount();
      if (count > maxCount) {
        m_sqlManager.closeAll(dbc,null,stmt,res);
        stmt=m_sqlManager.getPreparedStatement(conn,dbc.currentProject(),"C_VISITED_USER_DELETE_GETDATE_3");
        stmt.setString(1,user.getId().toString());
        stmt.setInt(2,CmsLogEntryType.USER_RESOURCE_VISITED.getId());
        stmt.setInt(3,count - maxCount);
        res=stmt.executeQuery();
        long deleteDate=0;
        while (res.next()) {
          deleteDate=res.getLong(1);
        }
        if (deleteDate > 0) {
          filter=CmsLogFilter.ALL.includeType(CmsLogEntryType.USER_RESOURCE_VISITED).filterUser(user.getId()).filterTo(deleteDate);
          m_driverManager.getProjectDriver(dbc).deleteLog(dbc,OpenCms.getSubscriptionManager().getPoolName(),filter);
        }
      }
    }
 catch (    SQLException e) {
      throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
    }
 finally {
      m_sqlManager.closeAll(dbc,conn,stmt,res);
    }
  }
}
