{
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    if (reservedParam == null) {
      conn=m_sqlManager.getConnection();
    }
 else {
      conn=m_sqlManager.getConnection(((Integer)reservedParam).intValue());
    }
    stmt=m_sqlManager.getPreparedStatement(conn,"C_USERS_ADD");
    stmt.setString(1,id.toString());
    stmt.setString(2,name);
    stmt.setString(3,m_sqlManager.validateEmpty(password));
    stmt.setString(4,m_sqlManager.validateEmpty(recoveryPassword));
    stmt.setString(5,m_sqlManager.validateEmpty(description));
    stmt.setString(6,m_sqlManager.validateEmpty(firstname));
    stmt.setString(7,m_sqlManager.validateEmpty(lastname));
    stmt.setString(8,m_sqlManager.validateEmpty(email));
    stmt.setTimestamp(9,new Timestamp(lastlogin));
    stmt.setTimestamp(10,new Timestamp(lastused));
    stmt.setInt(11,flags);
    m_sqlManager.setBytes(stmt,12,internalSerializeAdditionalUserInfo(additionalInfos));
    stmt.setString(13,defaultGroup.getId().toString());
    stmt.setString(14,m_sqlManager.validateEmpty(address));
    stmt.setString(15,m_sqlManager.validateEmpty(section));
    stmt.setInt(16,type);
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,"[CmsUser]: " + name + ", Id="+ id.toString(),CmsException.C_SQL_ERROR,e,true);
  }
catch (  IOException e) {
    throw m_sqlManager.getCmsException(this,"[CmsAccessUserInfoMySql/addUserInformation(id,object)]:",CmsException.C_SERIALIZATION,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return readUser(id);
}
