{
  Connection conn=null;
  PreparedStatement stmt=null;
  if (existsUser(dbc,userFqn)) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_USER_WITH_NAME_ALREADY_EXISTS_1,userFqn);
    if (LOG.isErrorEnabled()) {
      LOG.error(message.key());
    }
    throw new CmsDbEntryAlreadyExistsException(message);
  }
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_USERS_ADD_10");
    stmt.setString(1,id.toString());
    stmt.setString(2,CmsOrganizationalUnit.getSimpleName(userFqn));
    stmt.setString(3,password);
    stmt.setString(4,m_sqlManager.validateEmpty(firstname));
    stmt.setString(5,m_sqlManager.validateEmpty(lastname));
    stmt.setString(6,m_sqlManager.validateEmpty(email));
    stmt.setLong(7,lastlogin);
    stmt.setInt(8,flags);
    stmt.setString(9,CmsOrganizationalUnit.SEPARATOR + CmsOrganizationalUnit.getParentFqn(userFqn));
    stmt.setLong(10,(dateCreated == 0 ? System.currentTimeMillis() : dateCreated));
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
  internalWriteUserInfos(dbc,id,additionalInfos);
  return readUser(dbc,id);
}
