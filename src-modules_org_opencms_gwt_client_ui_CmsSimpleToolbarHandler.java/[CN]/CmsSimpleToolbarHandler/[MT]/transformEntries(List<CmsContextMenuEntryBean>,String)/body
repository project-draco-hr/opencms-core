{
  List<I_CmsContextMenuEntry> menuEntries=new ArrayList<I_CmsContextMenuEntry>();
  for (  CmsContextMenuEntryBean bean : menuBeans) {
    final CmsContextMenuEntry entry=new CmsContextMenuEntry();
    entry.setBean(bean);
    if (bean.hasSubMenu()) {
      entry.setSubMenu(transformEntries(bean.getSubMenu(),uri));
    }
    Command cmd=null;
    String name=entry.getName();
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(name)) {
      if (name.equals(CmsAvailabilityDialog.class.getName())) {
        entry.setImageClass(org.opencms.gwt.client.ui.css.I_CmsImageBundle.INSTANCE.contextMenuIcons().availability());
        cmd=new Command(){
          /** 
 * @see com.google.gwt.user.client.Command#execute()
 */
          public void execute(){
            new CmsAvailabilityDialog(CmsCoreProvider.get().getUri()).loadAndShow();
          }
        }
;
      }
 else       if (name.equals(CmsShowWorkplace.class.getName())) {
        entry.setImageClass(org.opencms.gwt.client.ui.css.I_CmsImageBundle.INSTANCE.contextMenuIcons().workplace());
        cmd=new Command(){
          /** 
 * @see com.google.gwt.user.client.Command#execute()
 */
          public void execute(){
            new CmsShowWorkplace(uri).openWorkplace();
          }
        }
;
      }
    }
    entry.setCommand(cmd);
    menuEntries.add(entry);
  }
  return menuEntries;
}
