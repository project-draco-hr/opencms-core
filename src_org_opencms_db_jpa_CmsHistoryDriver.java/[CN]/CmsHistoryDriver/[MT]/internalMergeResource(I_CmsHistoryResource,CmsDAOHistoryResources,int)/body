{
  int resourceVersion=hr.getResourceVersion();
  int structureVersion=histRes.getStructureVersion() - versionOffset;
  int tagId=hr.getPublishTag();
  CmsUUID structureId=histRes.getStructureId();
  CmsUUID resourceId=new CmsUUID(hr.getResourceId());
  int resourceType=hr.getResourceType();
  int resourceFlags=hr.getResourceFlags();
  CmsUUID projectLastModified=new CmsUUID(hr.getProjectLastModified());
  int state=histRes.getState().getState();
  long dateCreated=hr.getDateCreated();
  long dateLastModified=hr.getDateLastModified();
  long dateReleased=histRes.getDateReleased();
  long dateExpired=histRes.getDateExpired();
  int resourceSize=hr.getResourceSize();
  CmsUUID userLastModified=new CmsUUID(hr.getUserLastModified());
  CmsUUID userCreated=new CmsUUID(hr.getUserCreated());
  String resourcePath=histRes.getRootPath();
  CmsUUID parentId=histRes.getParentId();
  long dateContent=hr.getDateContent();
  if (histRes.isFolder()) {
    return new CmsHistoryFolder(tagId,structureId,resourceId,resourcePath,resourceType,resourceFlags,projectLastModified,CmsResourceState.valueOf(state),dateCreated,userCreated,dateLastModified,userLastModified,dateReleased,dateExpired,resourceVersion + structureVersion,parentId,resourceVersion,structureVersion);
  }
 else {
    return new CmsHistoryFile(tagId,structureId,resourceId,resourcePath,resourceType,resourceFlags,projectLastModified,CmsResourceState.valueOf(state),dateCreated,userCreated,dateLastModified,userLastModified,dateReleased,dateExpired,resourceSize,dateContent,resourceVersion + structureVersion,parentId,null,resourceVersion,structureVersion);
  }
}
