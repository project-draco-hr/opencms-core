{
  CmsProject currentProject=dbc.currentProject();
  CmsUser currentUser=dbc.currentUser();
  List<String> projectresources=m_driverManager.getProjectDriver(dbc).readProjectResources(dbc,currentProject);
  try {
    CmsDAOHistoryProjects hp=new CmsDAOHistoryProjects();
    hp.setPublishTag(publishTag);
    hp.setProjectId(currentProject.getUuid().toString());
    hp.setProjectName(currentProject.getSimpleName());
    hp.setProjectPublishDate(publishDate);
    hp.setProjectPublishedBy(currentUser.getId().toString());
    hp.setUserId(currentProject.getOwnerId().toString());
    hp.setGroupId(currentProject.getGroupId().toString());
    hp.setManagerGroupId(currentProject.getManagerGroupId().toString());
    hp.setProjectDescription(currentProject.getDescription());
    hp.setDateCreated(currentProject.getDateCreated());
    hp.setProjectType(currentProject.getType().getMode());
    hp.setProjectOu(CmsOrganizationalUnit.SEPARATOR + currentProject.getOuFqn());
    m_sqlManager.persist(dbc,hp);
    CmsDAOHistoryProjectResources hpr;
    for (    String projectResource : projectresources) {
      hpr=new CmsDAOHistoryProjectResources();
      hpr.setPublishTag(publishTag);
      hpr.setProjectId(currentProject.getUuid().toString());
      hpr.setResourcePath(projectResource);
      m_sqlManager.persist(dbc,hpr);
    }
  }
 catch (  PersistenceException e) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_JPA_PERSITENCE_1,e),e);
  }
}
