{
  if (containerType.equals(CmsDefaultXmlContentHandler.DEFAULT_FORMATTER_TYPE)) {
    return CmsDefaultXmlContentHandler.DEFAULT_FORMATTER;
  }
  if (m_containerFormatters != null) {
    return m_containerFormatters.get(containerType);
  }
  if (!CmsStringUtil.isEmptyOrWhitespaceOnly(m_schema)) {
    CmsXmlContentDefinition contentDef=new CmsXmlEntityResolver(cms).getCachedContentDefinition(m_schema);
    if (contentDef == null) {
      try {
        CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,cms.readFile(resource));
        contentDef=content.getContentDefinition();
      }
 catch (      CmsException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().getBundle().key(Messages.ERR_READING_FORMATTER_CONFIGURATION_1,cms.getSitePath(resource)),e);
        }
        return null;
      }
    }
    m_containerFormatters=contentDef.getContentHandler().getFormatters();
    if (m_containerFormatters.isEmpty()) {
      LOG.warn(Messages.get().getBundle().key(Messages.LOG_WARN_NO_FORMATTERS_DEFINED_1,contentDef.getSchemaLocation()));
    }
    return m_containerFormatters.get(containerType);
  }
  CmsXmlContentDefinition contentDef=null;
  try {
    List<CmsRelation> relations=cms.getRelationsForResource(resource,CmsRelationFilter.TARGETS.filterType(CmsRelationType.XSD));
    if ((relations != null) && !relations.isEmpty()) {
      String xsd=cms.getSitePath(relations.get(0).getTarget(cms,CmsResourceFilter.ALL));
      contentDef=new CmsXmlEntityResolver(cms).getCachedContentDefinition(xsd);
    }
    if (contentDef == null) {
      CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,cms.readFile(resource));
      contentDef=content.getContentDefinition();
    }
  }
 catch (  CmsException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().getBundle().key(Messages.ERR_READING_FORMATTER_CONFIGURATION_1,cms.getSitePath(resource)),e);
    }
    return null;
  }
  Map<String,String> formatters=contentDef.getContentHandler().getFormatters();
  return formatters.get(containerType);
}
