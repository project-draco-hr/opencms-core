{
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  I_CmsSession session=cms.getRequestContext().getSession(true);
  CmsXmlWpTemplateFile templateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  CmsXmlLanguageFile lang=templateDocument.getLanguageFile();
  String navPos=(String)session.getValue(C_SESSION_ADMIN_POS);
  templateDocument.setData("emptyPic",(String)resourcesUri(cms,"empty.gif",null,null));
  CmsXmlWpConfigFile confFile=new CmsXmlWpConfigFile(cms);
  String sendBy=(String)parameters.get("sender");
  if (sendBy == null) {
    if (navPos == null) {
      sendBy=confFile.getWorkplaceAdministrationPath();
    }
 else {
      if (!navPos.endsWith("/")) {
        navPos=navPos.substring(0,navPos.indexOf("/") + 1);
      }
      sendBy=navPos;
    }
  }
  Vector iconVector=new Vector();
  if (sendBy.endsWith("/administration/")) {
    sendBy=confFile.getWorkplaceAdministrationPath();
    iconVector=cms.getSubFolders(sendBy);
    Vector modules=new Vector();
    modules=cms.getSubFolders(C_MODULES_PATH);
    for (int i=0; i < modules.size(); i++) {
      Vector moduleAdminPoints=new Vector();
      moduleAdminPoints=cms.getSubFolders(((CmsFolder)modules.elementAt(i)).getAbsolutePath() + "administration/");
      for (int j=0; j < moduleAdminPoints.size(); j++) {
        iconVector.addElement(moduleAdminPoints.elementAt(j));
      }
    }
  }
 else {
    iconVector=cms.getSubFolders(sendBy);
  }
  session.putValue(C_SESSION_ADMIN_POS,sendBy);
  Vector iconVector2=cms.getFilesInFolder(sendBy);
  int numFolders=iconVector.size();
  if (numFolders > 0) {
    String iconNames[]=new String[numFolders];
    int index[]=new int[numFolders];
    String folderTitles[]=new String[numFolders];
    String folderLangKeys[]=new String[numFolders];
    String folderPos[]=new String[numFolders];
    String folderVisible[]=new String[numFolders];
    String folderActiv[]=new String[numFolders];
    String accessVisible[]=new String[numFolders];
    for (int i=0; i < numFolders; i++) {
      CmsResource aktIcon=(CmsResource)iconVector.elementAt(i);
      try {
        Hashtable propertyinfos=cms.readAllProperties(aktIcon.getAbsolutePath());
        iconNames[i]=aktIcon.getAbsolutePath();
        index[i]=i;
        folderLangKeys[i]=getStringValue((String)propertyinfos.get(C_PROPERTY_NAVTEXT));
        folderTitles[i]=getStringValue((String)propertyinfos.get(C_PROPERTY_TITLE));
        folderPos[i]=getStringValue((String)propertyinfos.get(C_PROPERTY_NAVPOS));
        if (folderPos[i].equals("")) {
          folderPos[i]="101";
        }
        folderVisible[i]=getStringValue((String)propertyinfos.get(C_PROPERTY_VISIBLE));
        folderActiv[i]=getStringValue((String)propertyinfos.get(C_PROPERTY_ACTIV));
        accessVisible[i]=new Boolean(checkVisible(cms,aktIcon)).toString();
      }
 catch (      CmsException e) {
        if (e.getType() != CmsException.C_NO_ACCESS && e.getType() != CmsException.C_ACCESS_DENIED) {
          throw e;
        }
      }
catch (      Exception exc) {
        throw new CmsException("[" + this.getClass().getName() + "] "+ exc.getMessage(),CmsException.C_SQL_ERROR,exc);
      }
    }
    sort(iconNames,index,folderPos,numFolders);
    String completeTable="";
    int element=0;
    int zeile=0;
    while (element < numFolders) {
      String completeRow="";
      while ((element < numFolders)) {
        int pos=index[element];
        if (iconNames[element] != null) {
          completeRow+=generateIcon(cms,templateDocument,parameters,lang,folderTitles[pos],iconNames[element],folderLangKeys[pos],folderActiv[pos],folderVisible[pos],accessVisible[pos]);
        }
        element++;
      }
      templateDocument.setData("entrys",completeRow);
      completeTable+=templateDocument.getProcessedDataValue("list_row");
      zeile++;
    }
    templateDocument.setData("iconTable",completeTable);
  }
 else {
    try {
      cms.getRequestContext().getResponse().sendCmsRedirect(sendBy + "index.html?initial=true");
    }
 catch (    Exception e) {
      throw new CmsException("Redirect fails :" + ((CmsFile)iconVector2.elementAt(0)).getAbsolutePath(),CmsException.C_UNKNOWN_EXCEPTION,e);
    }
    return null;
  }
  return startProcessing(cms,templateDocument,elementName,parameters,templateSelector);
}
