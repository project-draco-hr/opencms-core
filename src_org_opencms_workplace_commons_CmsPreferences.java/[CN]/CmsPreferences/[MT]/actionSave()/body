{
  HttpServletRequest request=getJsp().getRequest();
  request.setAttribute(SESSION_WORKPLACE_CLASS,this);
  CmsUserSettings userSettings=new CmsUserSettings(getSettings().getUser());
  m_userSettings.setEditorSettings(userSettings.getEditorSettings());
  m_userSettings.setStartGalleriesSetting(userSettings.getStartGalleriesSettings());
  m_userSettings.setSynchronizeSettings(userSettings.getSynchronizeSettings());
  Enumeration<String> en=request.getParameterNames();
  while (en.hasMoreElements()) {
    String paramName=en.nextElement();
    if (paramName.startsWith(PARAM_PREFERREDEDITOR_PREFIX)) {
      String paramValue=request.getParameter(paramName);
      if ((paramValue != null) && !INPUT_DEFAULT.equals(paramValue.trim())) {
        m_userSettings.setPreferredEditor(paramName.substring(PARAM_PREFERREDEDITOR_PREFIX.length()),CmsEncoder.decode(paramValue));
      }
 else {
        m_userSettings.setPreferredEditor(paramName.substring(PARAM_PREFERREDEDITOR_PREFIX.length()),null);
      }
    }
 else     if (paramName.startsWith(PARAM_STARTGALLERY_PREFIX)) {
      String paramValue=request.getParameter(paramName);
      if (paramValue != null) {
        m_userSettings.setStartGallery(paramName.substring(PARAM_STARTGALLERY_PREFIX.length()),CmsEncoder.decode(paramValue));
      }
    }
  }
  m_userSettings.setUser(getSettings().getUser());
  try {
    m_userSettings.save(getCms());
  }
 catch (  CmsException e) {
    if (LOG.isInfoEnabled()) {
      LOG.info(e.getLocalizedMessage());
    }
  }
  updatePreferences(getCms(),getJsp().getRequest());
  try {
    String projectName=m_userSettings.getStartProject();
    CmsProject project=getCms().readProject(projectName);
    getCms().getRequestContext().setCurrentProject(project);
    getSettings().setProject(project.getUuid());
  }
 catch (  Exception e) {
    LOG.error(e.getLocalizedMessage());
  }
  try {
    if (DIALOG_SET.equals(getParamAction())) {
      Map<String,String[]> params=new HashMap<String,String[]>();
      params.put(PARAM_TAB,new String[]{String.valueOf(getActiveTab())});
      params.put(PARAM_SETPRESSED,new String[]{Boolean.TRUE.toString()});
      sendForward(getJsp().getRequestContext().getUri(),params);
    }
 else {
      Map<String,String[]> params=new HashMap<String,String[]>();
      params.put(PARAM_ACTION,new String[]{DIALOG_RELOAD});
      sendForward(getJsp().getRequestContext().getUri(),params);
    }
  }
 catch (  IOException e) {
    if (LOG.isInfoEnabled()) {
      LOG.info(e.getLocalizedMessage());
    }
  }
catch (  ServletException e) {
    if (LOG.isInfoEnabled()) {
      LOG.info(e.getLocalizedMessage());
    }
  }
}
