{
  m_context=context;
  displayResourceInfo(m_context.getResources());
  String projectName=m_context.getCms().getRequestContext().getCurrentProject().getName();
  Panel resourceListPanel=null;
  try {
    List<String> projectRes=m_context.getCms().readProjectResources(m_context.getCms().getRequestContext().getCurrentProject());
    List<CmsResource> resources=new ArrayList<CmsResource>();
    CmsObject rootCms=OpenCms.initCmsObject(m_context.getCms());
    rootCms.getRequestContext().setSiteRoot("/");
    for (    String res : projectRes) {
      try {
        CmsResource resource=rootCms.readResource(res,CmsResourceFilter.ONLY_VISIBLE_NO_DELETED);
        resources.add(resource);
      }
 catch (      CmsException ex) {
        LOG.warn("Error reading project resource '" + res + "'.",ex);
      }
    }
    if (!resources.isEmpty()) {
      resourceListPanel=createResourceListPanel(CmsVaadinUtils.getMessageText(Messages.GUI_COPYTOPROJECT_PART_1,projectName),resources);
    }
  }
 catch (  CmsException e) {
    LOG.error("Error reading resources of the project '" + projectName + "'.",e);
  }
  VerticalLayout main=new VerticalLayout();
  if (resourceListPanel != null) {
    main.addComponent(resourceListPanel);
  }
  Label label=new Label(CmsVaadinUtils.getMessageText(Messages.GUI_COPYTOPROJECT_PROJECT_CONFIRMATION_2,m_context.getResources().get(0).getName(),projectName));
  main.addComponent(label);
  main.setSpacing(true);
  setContent(main);
  Button okButton=createButtonOK();
  okButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      submit();
    }
  }
);
  addButton(okButton);
  Button cancelButton=createButtonCancel();
  cancelButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      cancel();
    }
  }
);
  addButton(cancelButton);
}
