{
  int level=0;
  if (!tagcontent.equals("")) {
    try {
      level=Integer.parseInt(tagcontent);
    }
 catch (    NumberFormatException e) {
      throw new CmsException(e.getMessage());
    }
  }
  String folder="";
  if (level <= 0) {
    folder=cms.rootFolder().getAbsolutePath();
  }
 else {
    folder=extractFolder(cms,level);
  }
  String requestedUri=cms.getRequestContext().getUri();
  String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();
  String servletPath=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getServletPath();
  CmsXmlTemplateFile xmlDataBlock=(CmsXmlTemplateFile)doc;
  Vector resources=cms.getSubFolders(folder);
  Vector allFile=cms.getFilesInFolder(folder);
  resources.ensureCapacity(resources.size() + allFile.size());
  Enumeration e=allFile.elements();
  while (e.hasMoreElements()) {
    resources.addElement(e.nextElement());
  }
  String result="";
  if (xmlDataBlock.hasData("navEntry")) {
    if (!xmlDataBlock.hasData("navCurrent")) {
      xmlDataBlock.setData("navCurrent",xmlDataBlock.getDataValue("navEntry"));
    }
    if (!xmlDataBlock.hasData("navTreeStart")) {
      xmlDataBlock.setData("navTreeStart","");
    }
    if (!xmlDataBlock.hasData("navTreeEnd")) {
      xmlDataBlock.setData("navTreeEnd","");
    }
    result=buildNavFold(cms,xmlDataBlock,userObject,resources,requestedUri,currentFolder,servletPath);
  }
  return result.getBytes();
}
