{
  StringBuffer result=new StringBuffer();
  int size=resources.size();
  String navLink[]=new String[size];
  String navText[]=new String[size];
  float navPos[]=new float[size];
  int max=extractNav(cms,resources,navLink,navText,navPos);
  if (max > 0) {
    result.append(xmlDataBlock.getProcessedDataValue("navTreeStart",this));
    for (int i=0; i < max; i++) {
      xmlDataBlock.setData("navText",navText[i]);
      xmlDataBlock.setData("count",new Integer(i + 1).toString());
      if (navLink[i].endsWith("/")) {
        String navIndex=cms.readProperty(navLink[i],C_PROPERTY_NAVINDEX);
        if (navIndex == null) {
          navIndex=C_NAVINDEX;
        }
        try {
          cms.readFile(navLink[i] + navIndex);
          xmlDataBlock.setData("navLink",servletPath + navLink[i] + navIndex);
        }
 catch (        CmsException e) {
          xmlDataBlock.setData("navLink",servletPath + requestedUri);
        }
      }
 else {
        try {
          cms.readFile(navLink[i]);
          xmlDataBlock.setData("navLink",servletPath + navLink[i]);
        }
 catch (        CmsException e) {
          xmlDataBlock.setData("navLink",servletPath + requestedUri);
        }
      }
      if (navLink[i].equals(currentFolder) || navLink[i].equals(requestedUri)) {
        result.append(xmlDataBlock.getProcessedDataValue("navCurrent",this));
      }
 else {
        result.append(xmlDataBlock.getProcessedDataValue("navEntry",this));
      }
      depth--;
      if (depth >= 0) {
        if (navLink[i].endsWith("/")) {
          Vector all=cms.getSubFolders(navLink[i]);
          Vector files=cms.getFilesInFolder(navLink[i]);
          all.ensureCapacity(all.size() + files.size());
          Enumeration e=files.elements();
          while (e.hasMoreElements()) {
            all.addElement(e.nextElement());
          }
          result.append(buildNavTree(cms,xmlDataBlock,userObject,all,requestedUri,currentFolder,servletPath,depth));
        }
      }
    }
    result.append(xmlDataBlock.getProcessedDataValue("navTreeEnd",this));
  }
  return result.toString();
}
