{
  CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;
  if (!template.hasData("naventry")) {
    return "".getBytes();
  }
  int level=1;
  int[] count={0};
  String exact="false";
  if (!tagcontent.equals("")) {
    try {
      if (tagcontent.indexOf(",") != -1) {
        level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(",")));
        exact=tagcontent.substring(tagcontent.indexOf(",") + 1).toLowerCase();
      }
 else {
        level=Integer.parseInt(tagcontent);
      }
    }
 catch (    NumberFormatException e) {
      level=1;
      exact=tagcontent.toLowerCase();
      if (!exact.equals("true")) {
        exact="false";
      }
    }
  }
  String folder=extractFolder(cms,level,exact);
  if (folder.equals(""))   return "".getBytes();
  String requestedUri=cms.getRequestContext().getUri();
  String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();
  String servletPath=cms.getRequestContext().getRequest().getServletUrl();
  Vector vfsDeps=new Vector();
  vfsDeps.add(cms.readFolder(folder));
  registerVariantDeps(cms,doc.getAbsoluteFilename(),null,null,(Hashtable)userObject,vfsDeps,null,null);
  Vector resources=cms.getSubFolders(folder);
  Vector allFile=cms.getFilesInFolder(folder);
  resources.ensureCapacity(resources.size() + allFile.size());
  Enumeration e=allFile.elements();
  while (e.hasMoreElements()) {
    resources.addElement(e.nextElement());
  }
  String result="";
  if (!template.hasData("navcurrent")) {
    template.setData("navcurrent",template.getData("naventry"));
  }
  if (!template.hasData("navstart")) {
    template.setData("navstart","");
  }
  if (!template.hasData("navend")) {
    template.setData("navend","");
  }
  result=buildNavFold(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,count);
  return result.getBytes();
}
