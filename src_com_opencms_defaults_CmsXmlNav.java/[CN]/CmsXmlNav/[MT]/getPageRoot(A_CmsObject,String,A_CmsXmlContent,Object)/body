{
  int level=0;
  try {
    level=Integer.parseInt(tagcontent);
  }
 catch (  NumberFormatException e) {
    throw new CmsException(e.getMessage());
  }
  if (level > 0) {
    String requestedUri=cms.getRequestContext().getUri();
    String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();
    Vector resources=cms.getSubFolders(currentFolder);
    Vector allFile=cms.getFilesInFolder(currentFolder);
    resources.ensureCapacity(resources.size() + allFile.size());
    Enumeration e=allFile.elements();
    while (e.hasMoreElements()) {
      resources.addElement(e.nextElement());
    }
    int size=resources.size();
    String navLink[]=new String[size];
    String navText[]=new String[size];
    float navPos[]=new float[size];
    int pos=0;
    int max=extractNav(cms,resources,navLink,navText,navPos);
    for (int i=0; i < max; i++) {
      if (navLink[i].equals(currentFolder) || navLink[i].equals(requestedUri)) {
        if (level < i) {
          pos=level;
        }
 else {
          pos=i;
        }
      }
    }
    return (navLink[pos]);
  }
  return (((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getServletPath() + "/");
}
