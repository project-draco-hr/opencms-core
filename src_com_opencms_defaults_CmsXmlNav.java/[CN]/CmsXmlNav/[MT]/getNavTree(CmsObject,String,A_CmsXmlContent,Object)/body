{
  CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;
  if (!template.hasData("naventry")) {
    return "".getBytes();
  }
  int level=1;
  int depth=0;
  int[] count={0};
  String exact="false";
  boolean depthIsNull=true;
  if (!tagcontent.equals("")) {
    StringTokenizer st=new StringTokenizer(tagcontent,",");
    String token1="", token2="", token3="";
    if (st.hasMoreTokens())     token1=st.nextToken();
    if (st.hasMoreTokens())     token2=st.nextToken();
    if (st.hasMoreTokens())     token3=st.nextToken();
    if (!token3.equals(""))     exact=token3.toLowerCase();
    if (!token2.equals("")) {
      try {
        depth=Integer.parseInt(token2);
      }
 catch (      NumberFormatException e) {
        depth=0;
        exact=token2.toLowerCase();
        if (!exact.equals("true")) {
          exact="false";
        }
      }
    }
    if (!token1.equals("")) {
      try {
        level=Integer.parseInt(token1);
      }
 catch (      NumberFormatException e) {
        level=1;
        exact=token1.toLowerCase();
        if (!exact.equals("true")) {
          exact="false";
        }
      }
    }
  }
  String folder=extractFolder(cms,level,exact);
  if (folder.equals(""))   return "".getBytes();
  if (depth > 0) {
    depthIsNull=false;
  }
  Vector vfsDeps=new Vector();
  vfsDeps.add(cms.readFolder(folder));
  registerVariantDeps(cms,doc.getAbsoluteFilename(),null,null,(Hashtable)userObject,vfsDeps,null,null);
  Vector resources=cms.getSubFolders(folder);
  Vector allFile=cms.getFilesInFolder(folder);
  resources.ensureCapacity(resources.size() + allFile.size());
  Enumeration e=allFile.elements();
  while (e.hasMoreElements()) {
    resources.addElement(e.nextElement());
  }
  String requestedUri=cms.getRequestContext().getUri();
  String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();
  String servletPath=cms.getRequestContext().getRequest().getServletUrl();
  String result="";
  if (!template.hasData("navcurrent")) {
    template.setData("navcurrent",template.getData("naventry"));
  }
  if (!template.hasData("navstart")) {
    template.setData("navstart","");
  }
  if (!template.hasData("navend")) {
    template.setData("navend","");
  }
  result=buildNavTree(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,depth,depthIsNull,count);
  return result.getBytes();
}
