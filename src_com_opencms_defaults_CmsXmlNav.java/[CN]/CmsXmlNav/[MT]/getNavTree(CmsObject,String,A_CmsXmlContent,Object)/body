{
  CmsXmlTemplateFile template=(CmsXmlTemplateFile)doc;
  if (!template.hasData("naventry")) {
    return "".getBytes();
  }
  int level=0;
  int depth=0;
  boolean depthIsNull=true;
  if (!tagcontent.equals("")) {
    try {
      if (tagcontent.indexOf(",") != -1) {
        level=Integer.parseInt(tagcontent.substring(0,tagcontent.indexOf(",")));
        depth=Integer.parseInt(tagcontent.substring(tagcontent.indexOf(",") + 1));
      }
 else {
        level=Integer.parseInt(tagcontent);
      }
    }
 catch (    NumberFormatException e) {
      throw new CmsException(e.getMessage());
    }
  }
  String folder="";
  if (level <= 0) {
    folder=cms.rootFolder().getAbsolutePath();
  }
 else {
    folder=extractFolder(cms,level);
  }
  if (depth > 0) {
    depthIsNull=false;
  }
  Vector resources=cms.getSubFolders(folder);
  Vector allFile=cms.getFilesInFolder(folder);
  resources.ensureCapacity(resources.size() + allFile.size());
  Enumeration e=allFile.elements();
  while (e.hasMoreElements()) {
    resources.addElement(e.nextElement());
  }
  String requestedUri=cms.getRequestContext().getUri();
  String currentFolder=cms.getRequestContext().currentFolder().getAbsolutePath();
  String servletPath=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getServletPath();
  String result="";
  if (!template.hasData("navcurrent")) {
    template.setData("navcurrent",template.getData("naventry"));
  }
  if (!template.hasData("navstart")) {
    template.setData("navstart","");
  }
  if (!template.hasData("navend")) {
    template.setData("navend","");
  }
  result=buildNavTree(cms,template,userObject,resources,requestedUri,currentFolder,servletPath,level,depth,depthIsNull);
  return result.getBytes();
}
