{
  echo("Testing login messages");
  CmsObject cms=getCmsObject();
  String adminUser=OpenCms.getDefaultUsers().getUserAdmin();
  String test1User="test1";
  assertNull(OpenCms.getLoginManager().getLoginMessage());
  String message="This is the test login message";
  CmsLoginMessage loginMessage=new CmsLoginMessage(message,true);
  OpenCms.getLoginManager().setLoginMessage(cms,loginMessage);
  CmsException error=null;
  try {
    cms.loginUser(test1User,"test1");
  }
 catch (  CmsAuthentificationException e) {
    error=e;
  }
  assertNotNull(error);
  if (error != null) {
    assertSame(Messages.ERR_LOGIN_FAILED_WITH_MESSAGE_1,error.getMessageContainer().getKey());
    assertTrue(error.getMessage().indexOf(message) > 0);
  }
  cms.loginUser(adminUser,"admin");
  OpenCms.getLoginManager().removeLoginMessage(cms);
  cms.loginUser(test1User,"test1");
  cms.loginUser(adminUser,"admin");
  loginMessage=new CmsLoginMessage(message,false);
  OpenCms.getLoginManager().setLoginMessage(cms,loginMessage);
  cms.loginUser(test1User,"test1");
  cms.loginUser(adminUser,"admin");
  loginMessage=new CmsLoginMessage(0,System.currentTimeMillis(),message,true);
  OpenCms.getLoginManager().setLoginMessage(cms,loginMessage);
  cms.loginUser(test1User,"test1");
  cms.loginUser(adminUser,"admin");
  loginMessage=new CmsLoginMessage(System.currentTimeMillis() + 100000,Long.MAX_VALUE,message,true);
  OpenCms.getLoginManager().setLoginMessage(cms,loginMessage);
  cms.loginUser(test1User,"test1");
  cms.loginUser(adminUser,"admin");
  loginMessage=new CmsLoginMessage(message,true);
  OpenCms.getLoginManager().setLoginMessage(cms,loginMessage);
  error=null;
  try {
    cms.loginUser(test1User,"test1");
  }
 catch (  CmsAuthentificationException e) {
    error=e;
  }
  assertNotNull(error);
  if (error != null) {
    assertSame(Messages.ERR_LOGIN_FAILED_WITH_MESSAGE_1,error.getMessageContainer().getKey());
    assertTrue(error.getMessage().indexOf(message) > 0);
  }
  cms.loginUser(adminUser,"admin");
  OpenCms.getLoginManager().removeLoginMessage(cms);
}
