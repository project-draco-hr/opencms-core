{
  StringBuffer result=new StringBuffer(512);
  boolean added=false;
  if (!option.getEditorHeight().equals(EDITOR_DEFAULTHEIGHT)) {
    result.append(OPTION_HEIGHT);
    result.append(option.getEditorHeight());
    added=true;
  }
  if (option.useCss()) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(OPTION_CSS);
    result.append(option.getCssPath());
    added=true;
  }
  if (option.showStylesXml()) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(OPTION_STYLES);
    result.append(option.getStylesXmlPath());
    added=true;
  }
  if (!option.getAdditionalButtons().isEmpty()) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(CmsStringUtil.collectionAsString(option.getAdditionalButtons(),String.valueOf(DELIMITER_OPTION)));
    added=true;
  }
  if (!option.getHiddenButtons().isEmpty()) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(OPTION_HIDEBUTTONS);
    result.append(CmsStringUtil.collectionAsString(option.getHiddenButtons(),String.valueOf(DELIMITER_VALUE)));
    added=true;
  }
  if (CmsStringUtil.isNotEmpty(option.getButtonBarOptionString())) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(OPTION_BUTTONBAR);
    result.append(option.getButtonBarOptionString());
    added=true;
  }
  if (option.isImportCss()) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(OPTION_IMPORTCSS);
    added=true;
  }
  if (CmsStringUtil.isNotEmpty(option.getFormatSelectOptions())) {
    if (added) {
      result.append(DELIMITER_OPTION);
    }
    result.append(OPTION_FORMATSELECT_OPTIONS);
    result.append(option.getFormatSelectOptions());
    added=true;
  }
  return result.toString();
}
