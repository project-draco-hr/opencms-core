{
  StringBuffer result=new StringBuffer(512);
  boolean added=false;
  if (!option.getEditorHeight().equals(EDITOR_DEFAULTHEIGHT)) {
    result.append(OPTION_HEIGHT);
    result.append(option.getEditorHeight());
    added=true;
  }
  if (option.showAnchorDialog()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_ANCHOR);
    added=true;
  }
  if (option.showLinkDialog()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_LINK);
    added=true;
  }
  if (option.showFormatSelect()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_FORMATSELECT);
    added=true;
  }
  if (option.showSourceEditor()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_SOURCE);
    added=true;
  }
  if (option.showTableDialog()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_TABLE);
    added=true;
  }
  if (option.showImageDialog()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_IMAGE);
    added=true;
  }
  if (option.useCss()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_CSS);
    result.append(option.getCssPath());
    added=true;
  }
  if (option.showStylesXml()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_STYLES);
    result.append(option.getStylesXmlPath());
    added=true;
  }
  if (!option.getHiddenButtons().isEmpty()) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_HIDEBUTTONS);
    result.append(CmsStringUtil.collectionAsString(option.getHiddenButtons(),String.valueOf(VALUE_DELIMITER)));
    added=true;
  }
  if (CmsStringUtil.isNotEmpty(option.getFormatSelectOptions())) {
    if (added) {
      result.append(OPTION_DELIMITER);
    }
    result.append(OPTION_FORMATSELECT_OPTIONS);
    result.append(option.getFormatSelectOptions());
    added=true;
  }
  boolean isFirst=true;
  for (int i=0; i < option.getDisplayGalleries().size(); i++) {
    String gallery=(String)option.getDisplayGalleries().get(i);
    if (added || !isFirst) {
      result.append(OPTION_DELIMITER);
    }
    result.append(gallery);
    isFirst=false;
  }
  return result.toString();
}
