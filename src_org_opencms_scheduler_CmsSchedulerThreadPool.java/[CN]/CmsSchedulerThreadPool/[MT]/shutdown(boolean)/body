{
  m_isShutdown=true;
  for (int i=0; i < m_currentThreadCount; i++) {
    if (m_workers[i] != null) {
      m_workers[i].shutdown();
    }
  }
synchronized (m_nextRunnableLock) {
    m_nextRunnableLock.notifyAll();
  }
  if (waitForJobsToComplete) {
    int alive=m_currentThreadCount;
    while (alive > 0) {
      alive=0;
      for (int i=0; i < m_currentThreadCount; i++) {
        if (m_workers[i].isAlive()) {
          try {
            if (OpenCms.getLog(this).isDebugEnabled()) {
              OpenCms.getLog(this).debug("Waiting for thread no. " + i + " to shut down");
            }
            alive++;
            m_workers[i].join(200);
          }
 catch (          InterruptedException e) {
          }
        }
      }
    }
    int activeCount=m_threadGroup.activeCount();
    if (activeCount > 0 && OpenCms.getLog(this).isInfoEnabled()) {
      OpenCms.getLog(this).info("There are still " + activeCount + " worker threads active.");
    }
    if (OpenCms.getLog(this).isDebugEnabled()) {
      OpenCms.getLog(this).debug("Scheduler has been shut down");
    }
  }
}
