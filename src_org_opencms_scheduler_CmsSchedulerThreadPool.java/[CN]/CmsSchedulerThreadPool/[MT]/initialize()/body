{
  if (m_maxThreadCount <= 0 || m_maxThreadCount > 200) {
    throw new SchedulerConfigException(Messages.get().getBundle().key(Messages.ERR_MAX_THREAD_COUNT_BOUNDS_0));
  }
  if (m_initialThreadCount < 0 || m_initialThreadCount > m_maxThreadCount) {
    throw new SchedulerConfigException(Messages.get().getBundle().key(Messages.ERR_INIT_THREAD_COUNT_BOUNDS_0));
  }
  if (m_threadPriority <= 0 || m_threadPriority > 9) {
    throw new SchedulerConfigException(Messages.get().getBundle().key(Messages.ERR_SCHEDULER_PRIORITY_BOUNDS_0));
  }
  if (m_inheritGroup) {
    m_threadGroup=Thread.currentThread().getThreadGroup();
  }
 else {
    m_threadGroup=Thread.currentThread().getThreadGroup();
    ThreadGroup parent=m_threadGroup;
    while (!parent.getName().equals("main")) {
      m_threadGroup=parent;
      parent=m_threadGroup.getParent();
    }
    m_threadGroup=new ThreadGroup(parent,this.getClass().getName());
  }
  if (m_inheritLoader) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_USING_THREAD_CLASSLOADER_1,Thread.currentThread().getName()));
  }
  m_workers=new CmsSchedulerThread[m_maxThreadCount];
  for (int i=0; i < m_initialThreadCount; ++i) {
    growThreadPool();
  }
}
