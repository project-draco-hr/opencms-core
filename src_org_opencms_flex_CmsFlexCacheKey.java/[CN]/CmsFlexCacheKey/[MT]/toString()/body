{
  StringBuffer str=new StringBuffer(100);
  if (m_always < 0) {
    str.append(CACHE_01_NEVER);
    if (m_parseError) {
      str.append(";");
      str.append(CACHE_11_PARSE_ERROR);
    }
    return str.toString();
  }
  if (m_noparams != null) {
    str.append(CACHE_05_NO_PARAMS);
    if (m_noparams.size() == 0) {
      str.append(";");
    }
 else {
      str.append("=(");
      Iterator<String> i=m_noparams.iterator();
      while (i.hasNext()) {
        Object o=i.next();
        str.append(o);
        if (i.hasNext()) {
          str.append(",");
        }
      }
      str.append(");");
    }
  }
  if (m_noattrs != null) {
    str.append(CACHE_19_NO_ATTRS);
    if (m_noattrs.size() == 0) {
      str.append(";");
    }
 else {
      str.append("=(");
      Iterator<String> i=m_noattrs.iterator();
      while (i.hasNext()) {
        String s=i.next();
        str.append(s);
        if (i.hasNext()) {
          str.append(",");
        }
      }
      str.append(");");
    }
  }
  if (m_always > 0) {
    str.append(CACHE_00_ALWAYS);
    if (m_parseError) {
      str.append(";");
      str.append(CACHE_11_PARSE_ERROR);
    }
    return str.toString();
  }
  if (m_uri != null) {
    appendKeyValue(str,CACHE_02_URI,m_uri);
  }
  if (m_site != null) {
    appendKeyValue(str,CACHE_17_SITE,m_site);
  }
  if (m_element != null) {
    appendKeyValue(str,CACHE_14_ELEMENT,m_element);
  }
  if (m_device != null) {
    appendKeyValue(str,CACHE_20_DEVICE,m_device);
  }
  if (m_containerElement != null) {
    appendKeyValue(str,CACHE_21_CONTAINER_ELEMENT,m_containerElement);
  }
  if (m_locale != null) {
    appendKeyValue(str,CACHE_15_LOCALE,m_locale);
  }
  if (m_encoding != null) {
    appendKeyValue(str,CACHE_16_ENCODING,m_encoding);
  }
  if (m_ip != null) {
    appendKeyValue(str,CACHE_13_IP,m_ip);
  }
  if (m_user != null) {
    appendKeyValue(str,CACHE_03_USER,m_user);
  }
  if (m_params != null) {
    str.append(CACHE_04_PARAMS);
    if (m_params.size() == 0) {
      str.append(";");
    }
 else {
      str.append("=(");
      Iterator<String> i=m_params.iterator();
      while (i.hasNext()) {
        Object o=i.next();
        if (I_CmsResourceLoader.PARAMETER_ELEMENT.equals(o)) {
          continue;
        }
        str.append(o);
        if (i.hasNext()) {
          str.append(",");
        }
      }
      str.append(");");
    }
  }
  if (m_attrs != null) {
    str.append(CACHE_18_ATTRS);
    if (m_attrs.size() == 0) {
      str.append(";");
    }
 else {
      str.append("=(");
      Iterator<String> i=m_attrs.iterator();
      while (i.hasNext()) {
        String s=i.next();
        str.append(s);
        if (i.hasNext()) {
          str.append(",");
        }
      }
      str.append(");");
    }
  }
  if (m_session != null) {
    str.append(CACHE_07_SESSION);
    str.append("=(");
    Iterator<String> i=m_session.iterator();
    while (i.hasNext()) {
      Object o=i.next();
      str.append(o);
      if (i.hasNext()) {
        str.append(",");
      }
    }
    str.append(");");
  }
  if (m_timeout >= 0) {
    str.append(CACHE_06_TIMEOUT);
    str.append("=(");
    str.append(m_timeout);
    str.append(");");
  }
  if (m_schemes != null) {
    str.append(CACHE_08_SCHEMES);
    if (m_schemes.size() == 0) {
      str.append(";");
    }
 else {
      str.append("=(");
      Iterator<String> i=m_schemes.iterator();
      while (i.hasNext()) {
        str.append(i.next());
        if (i.hasNext()) {
          str.append(",");
        }
      }
      str.append(");");
    }
  }
  if (m_ports != null) {
    str.append(CACHE_09_PORTS);
    if (m_ports.size() == 0) {
      str.append(";");
    }
 else {
      str.append("=(");
      Iterator<Integer> i=m_ports.iterator();
      while (i.hasNext()) {
        str.append(i.next());
        if (i.hasNext()) {
          str.append(",");
        }
      }
      str.append(");");
    }
  }
  if (m_parseError) {
    str.append(CACHE_11_PARSE_ERROR);
  }
  return str.toString();
}
