{
  CmsListColumnDefinition userCol=new CmsListColumnDefinition(LIST_COLUMN_USER);
  userCol.setName(Messages.get().container(Messages.GUI_ALLDEP_LIST_COL_USER_0));
  CmsListColumnDefinition credentialCol=new CmsListColumnDefinition(LIST_COLUMN_CREDENTIAL);
  credentialCol.setName(Messages.get().container(Messages.GUI_ALLDEP_LIST_COL_CREDENTIALS_0));
  CmsListColumnDefinition pathCol=new CmsListColumnDefinition(LIST_COLUMN_PATH);
  pathCol.setName(Messages.get().container(Messages.GUI_ALLDEP_LIST_COL_PATH_0));
  CmsListColumnDefinition permCol=new CmsListColumnDefinition(LIST_COLUMN_PERMISSIONS);
  permCol.setName(Messages.get().container(Messages.GUI_ALLDEP_LIST_COL_PERMISSIONS_0));
  List<CmsListColumnDefinition> columns=Arrays.asList(userCol,credentialCol,pathCol,permCol);
  for (  CmsListColumnDefinition col : columns) {
    metadata.addColumn(col);
  }
  CmsListSearchAction searchAction=new CmsListSearchAction(metadata.getColumnDefinition(LIST_COLUMN_PATH));
  metadata.setSearchAction(searchAction);
  for (  CmsListColumnDefinition col : columns) {
    if (!searchAction.getColumns().contains(col)) {
      searchAction.addColumn(col);
    }
  }
  metadata.setCsvItemFormatter(new CsvItemFormatter(){
    public String csvHeader(){
      return "";
    }
    public String csvItem(    CmsListItem item){
      StringWriter sw=new StringWriter();
      try {
        CSVWriter csvWriter=new CSVWriter(sw);
        try {
          csvWriter.writeNext(new String[]{(String)item.get(LIST_COLUMN_USER),(String)item.get(LIST_COLUMN_CREDENTIAL),(String)item.get(LIST_COLUMN_PATH),(String)item.get(LIST_COLUMN_PERMISSIONS)});
        }
  finally {
          csvWriter.close();
        }
      }
 catch (      IOException e) {
        LOG.error(e.getLocalizedMessage(),e);
      }
      return sw.getBuffer().toString();
    }
  }
);
}
