{
  m_report.println(Messages.get().container(Messages.RPT_VALIDATE_EXTERNAL_LINKS_BEGIN_0),I_CmsReport.C_FORMAT_HEADLINE);
  List links=cms.readResources(I_CmsConstants.C_ROOT,CmsResourceFilter.ONLY_VISIBLE_NO_DELETED.addRequireType(CmsResourceTypePointer.getStaticTypeId()));
  Iterator iterator=links.iterator();
  Map brokenLinks=new HashMap();
  for (int i=1; iterator.hasNext(); i++) {
    CmsFile link=cms.readFile(cms.getSitePath((CmsResource)iterator.next()));
    String linkUrl=new String(link.getContents());
    m_report.printMessageWithParam(i,links.size(),Messages.get().container(Messages.RPT_VALIDATE_LINK_0),linkUrl);
    if (!checkUrl(linkUrl)) {
      brokenLinks.put(link.getRootPath(),linkUrl);
      m_report.println(Messages.get().container(Messages.RPT_BROKEN_0),I_CmsReport.C_FORMAT_ERROR);
    }
 else {
      m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.C_FORMAT_OK);
    }
  }
  m_report.println(Messages.get().container(Messages.RPT_LINK_VALIDATION_STAT_2,new Integer(links.size()),new Integer(brokenLinks.size())),I_CmsReport.C_FORMAT_HEADLINE);
  m_report.println(Messages.get().container(Messages.RPT_VALIDATE_EXTERNAL_LINKS_END_0),I_CmsReport.C_FORMAT_HEADLINE);
  OpenCms.getLinkManager().setPointerLinkValidationResult(new CmsPointerLinkValidationResult(brokenLinks));
}
