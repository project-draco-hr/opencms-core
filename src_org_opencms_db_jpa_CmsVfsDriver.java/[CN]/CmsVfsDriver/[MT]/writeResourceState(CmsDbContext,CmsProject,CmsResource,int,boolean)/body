{
  if (project.getUuid().equals(CmsProject.ONLINE_PROJECT_ID)) {
    return;
  }
  try {
    Query q;
    if (changed == CmsDriverManager.UPDATE_RESOURCE_PROJECT) {
      q=m_sqlManager.createQuery(dbc,project,C_RESOURCES_UPDATE_RESOURCE_PROJECT);
      q.setParameter(1,resource.getResourceId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOResources> resr=q.getResultList();
      for (      I_CmsDAOResources r : resr) {
        r.setResourceFlags(resource.getFlags());
        r.setProjectLastModified(project.getUuid().toString());
      }
    }
    if (changed == CmsDriverManager.UPDATE_RESOURCE) {
      q=m_sqlManager.createQuery(dbc,project,C_RESOURCES_UPDATE_RESOURCE_STATELASTMODIFIED);
      q.setParameter(1,resource.getResourceId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOResources> res=q.getResultList();
      for (      I_CmsDAOResources r : res) {
        r.setResourceState(resource.getState().getState());
        r.setDateLastModified(resource.getDateLastModified());
        r.setUserLastModified(resource.getUserLastModified().toString());
        r.setProjectLastModified(project.getUuid().toString());
      }
    }
    if ((changed == CmsDriverManager.UPDATE_RESOURCE_STATE) || (changed == CmsDriverManager.UPDATE_ALL)) {
      q=m_sqlManager.createQuery(dbc,project,C_RESOURCES_UPDATE_RESOURCE_STATE);
      q.setParameter(1,resource.getResourceId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOResources> res=q.getResultList();
      for (      I_CmsDAOResources r : res) {
        r.setResourceState(resource.getState().getState());
        r.setProjectLastModified(project.getUuid().toString());
      }
    }
    if ((changed == CmsDriverManager.UPDATE_STRUCTURE) || (changed == CmsDriverManager.UPDATE_ALL) || (changed == CmsDriverManager.UPDATE_STRUCTURE_STATE)) {
      q=m_sqlManager.createQuery(dbc,project,C_RESOURCES_UPDATE_STRUCTURE_STATE);
      q.setParameter(1,resource.getStructureId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOStructure> res=q.getResultList();
      for (      I_CmsDAOStructure s : res) {
        s.setStructureState(resource.getState().getState());
      }
    }
    if ((changed == CmsDriverManager.UPDATE_STRUCTURE) || (changed == CmsDriverManager.UPDATE_ALL)) {
      q=m_sqlManager.createQuery(dbc,project,C_RESOURCES_UPDATE_RELEASE_EXPIRED);
      q.setParameter(1,resource.getStructureId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOStructure> res=q.getResultList();
      for (      I_CmsDAOStructure s : res) {
        s.setDateReleased(resource.getDateReleased());
        s.setDateExpired(resource.getDateExpired());
      }
    }
  }
 catch (  PersistenceException e) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_JPA_PERSITENCE,e),e);
  }
  if (isPublishing) {
    internalUpdateVersions(dbc,resource);
  }
}
