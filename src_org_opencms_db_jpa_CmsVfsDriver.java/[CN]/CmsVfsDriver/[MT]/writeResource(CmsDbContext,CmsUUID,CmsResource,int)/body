{
  internalValidateResourceLength(resource);
  String resourcePath=CmsFileUtil.removeTrailingSeparator(resource.getRootPath());
  long resourceDateModified;
  if (resource.isTouched()) {
    resourceDateModified=resource.getDateLastModified();
  }
 else {
    resourceDateModified=System.currentTimeMillis();
  }
  CmsResourceState structureState=resource.getState();
  CmsResourceState resourceState=resource.getState();
  CmsResourceState structureStateOld=internalReadStructureState(dbc,projectId,resource);
  CmsResourceState resourceStateOld=internalReadResourceState(dbc,projectId,resource);
  CmsUUID projectLastModified=projectId;
  if (changed == CmsDriverManager.UPDATE_RESOURCE_STATE) {
    resourceState=resourceStateOld;
    resourceState=(resourceState.isNew() ? CmsResource.STATE_NEW : CmsResource.STATE_CHANGED);
    structureState=structureStateOld;
  }
 else   if (changed == CmsDriverManager.UPDATE_STRUCTURE_STATE) {
    structureState=structureStateOld;
    structureState=(structureState.isNew() ? CmsResource.STATE_NEW : CmsResource.STATE_CHANGED);
  }
 else   if (changed == CmsDriverManager.NOTHING_CHANGED) {
    projectLastModified=resource.getProjectLastModified();
  }
 else {
    resourceState=resourceStateOld;
    resourceState=(resourceState.isNew() ? CmsResource.STATE_NEW : CmsResource.STATE_CHANGED);
    structureState=structureStateOld;
    structureState=(structureState.isNew() ? CmsResource.STATE_NEW : CmsResource.STATE_CHANGED);
  }
  try {
    Query q;
    if (changed != CmsDriverManager.UPDATE_STRUCTURE_STATE) {
      q=m_sqlManager.createQuery(dbc,projectId,C_RESOURCES_UPDATE_RESOURCES);
      q.setParameter(1,resource.getResourceId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOResources> res=q.getResultList();
      for (      I_CmsDAOResources r : res) {
        r.setResourceType(resource.getTypeId());
        r.setResourceFlags(resource.getFlags());
        r.setDateLastModified(resourceDateModified);
        r.setUserLastModified(resource.getUserLastModified().toString());
        r.setResourceState(resourceState.getState());
        r.setResourceSize(resource.getLength());
        r.setDateContent(resource.getDateContent());
        r.setProjectLastModified(projectLastModified.toString());
        r.setSiblingCount(countSiblings(dbc,projectId,resource.getResourceId()));
      }
    }
 else {
      q=m_sqlManager.createQuery(dbc,projectId,C_RESOURCES_UPDATE_RESOURCES_WITHOUT_STATE);
      q.setParameter(1,resource.getResourceId().toString());
      @SuppressWarnings("unchecked") List<I_CmsDAOResources> res=q.getResultList();
      for (      I_CmsDAOResources r : res) {
        r.setResourceType(resource.getTypeId());
        r.setResourceFlags(resource.getFlags());
        r.setDateLastModified(resourceDateModified);
        r.setUserLastModified(resource.getUserLastModified().toString());
        r.setResourceSize(resource.getLength());
        r.setDateContent(resource.getDateContent());
        r.setProjectLastModified(projectLastModified.toString());
        r.setSiblingCount(countSiblings(dbc,projectId,resource.getResourceId()));
      }
    }
    String parentId=internalReadParentId(dbc,projectId,resourcePath);
    q=m_sqlManager.createQuery(dbc,projectId,C_RESOURCES_UPDATE_STRUCTURE);
    q.setParameter(1,resource.getStructureId().toString());
    @SuppressWarnings("unchecked") List<I_CmsDAOStructure> res=q.getResultList();
    for (    I_CmsDAOStructure s : res) {
      s.setResourceId(resource.getResourceId().toString());
      s.setResourcePath(resourcePath);
      s.setStructureState(structureState.getState());
      s.setDateReleased(resource.getDateReleased());
      s.setDateExpired(resource.getDateExpired());
      s.setParentId(parentId);
    }
  }
 catch (  PersistenceException e) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_JPA_PERSITENCE_1,e),e);
  }
}
