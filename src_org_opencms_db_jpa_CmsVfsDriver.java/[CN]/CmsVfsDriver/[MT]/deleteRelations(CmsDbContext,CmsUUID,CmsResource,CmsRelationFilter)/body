{
  try {
    if (filter.isSource()) {
      List<Object> params=new ArrayList<Object>(7);
      StringBuffer queryBuf=new StringBuffer(256);
      queryBuf.append(m_sqlManager.readQuery(projectId,C_DELETE_RELATIONS));
      queryBuf.append(prepareRelationConditions(projectId,filter,resource,params,true));
      Query q=m_sqlManager.createQueryFromJPQL(dbc,queryBuf.toString());
      for (int i=0; i < params.size(); i++) {
        q.setParameter(i + 1,params.get(i));
      }
      @SuppressWarnings("unchecked") List<I_CmsDAOResourceRelations> res=q.getResultList();
      for (      I_CmsDAOResourceRelations rr : res) {
        m_sqlManager.remove(dbc,rr);
      }
    }
    if (filter.isTarget()) {
      List<Object> params=new ArrayList<Object>(7);
      StringBuffer queryBuf=new StringBuffer(256);
      queryBuf.append(m_sqlManager.readQuery(projectId,C_DELETE_RELATIONS));
      queryBuf.append(prepareRelationConditions(projectId,filter,resource,params,false));
      Query q=m_sqlManager.createQueryFromJPQL(dbc,queryBuf.toString());
      for (int i=0; i < params.size(); i++) {
        q.setParameter(i + 1,params.get(i));
      }
      @SuppressWarnings("unchecked") List<I_CmsDAOResourceRelations> res=q.getResultList();
      for (      I_CmsDAOResourceRelations rr : res) {
        m_sqlManager.remove(dbc,rr);
      }
    }
  }
 catch (  PersistenceException e) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_JPA_PERSITENCE_1,e),e);
  }
  updateBrokenRelations(dbc,projectId,resource.getRootPath());
}
