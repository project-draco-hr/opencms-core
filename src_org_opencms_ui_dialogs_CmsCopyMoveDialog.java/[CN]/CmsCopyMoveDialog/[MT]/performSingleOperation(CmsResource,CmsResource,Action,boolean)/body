{
  m_updateResources.add(target.getStructureId());
  m_updateResources.add(source.getStructureId());
  String finalTarget=target.getRootPath();
  if (finalTarget.equals(source.getRootPath()) || finalTarget.startsWith(source.getRootPath())) {
    throw new CmsVfsException(Messages.get().container(org.opencms.workplace.commons.Messages.ERR_COPY_ONTO_ITSELF_1,finalTarget));
  }
  if (!finalTarget.endsWith("/")) {
    finalTarget+="/";
  }
  if (finalTarget.equals(CmsResource.getParentFolder(source.getRootPath()))) {
    finalTarget+=OpenCms.getResourceManager().getNameGenerator().getCopyFileName(getRootCms(),finalTarget,source.getName());
  }
 else {
    finalTarget+=source.getName();
  }
  if (overwrite && getRootCms().existsResource(finalTarget)) {
    CmsLockUtil.ensureLock(getRootCms(),getRootCms().readResource(finalTarget));
    getRootCms().deleteResource(finalTarget,CmsResource.DELETE_PRESERVE_SIBLINGS);
  }
  if (action == Action.move) {
    CmsResource parent=getRootCms().readParentFolder(source.getStructureId());
    m_updateResources.add(parent.getStructureId());
    CmsLockActionRecord lockRecord=CmsLockUtil.ensureLock(getRootCms(),source);
    getRootCms().moveResource(source.getRootPath(),finalTarget);
    if (lockRecord.getChange() == CmsLockActionRecord.LockChange.locked) {
      getRootCms().unlockResource(finalTarget);
    }
  }
 else   if ((action == Action.container_page_automatic) || (action == Action.container_page_copy) || (action == Action.container_page_reuse)) {
    CmsContainerPageCopier copier=new CmsContainerPageCopier(m_context.getCms());
    try {
      CmsContainerPageCopier.CopyMode mode=action == Action.container_page_automatic ? CmsContainerPageCopier.CopyMode.automatic : (action == Action.container_page_copy ? CmsContainerPageCopier.CopyMode.smartCopyAndChangeLocale : CmsContainerPageCopier.CopyMode.reuse);
      copier.setCopyMode(mode);
      copier.run(m_context.getResources().get(0),target);
      m_context.finish(Arrays.asList(copier.getTargetFolder().getStructureId(),copier.getCopiedFolderOrPage().getStructureId()));
    }
 catch (    CmsException e) {
      m_context.error(e);
    }
catch (    NoCustomReplacementException e) {
      String errorMessage=CmsVaadinUtils.getMessageText(org.opencms.ui.Messages.GUI_COPYPAGE_NO_REPLACEMENT_FOUND_1,e.getResource().getRootPath());
      CmsErrorDialog.showErrorDialog(errorMessage,e);
    }
  }
 else {
    CmsResourceCopyMode copyMode=null;
switch ((Action)m_actionCombo.getValue()) {
case copy_all:
      copyMode=CmsResource.COPY_AS_NEW;
    break;
case copy_sibling_all:
  copyMode=CmsResource.COPY_AS_SIBLING;
break;
case copy_sibling_mixed:
case sub_sitemap:
default :
copyMode=CmsResource.COPY_PRESERVE_SIBLING;
}
getRootCms().copyResource(source.getRootPath(),finalTarget,copyMode);
if (action == Action.sub_sitemap) {
getRootCms().adjustLinks(source.getRootPath(),finalTarget);
}
getRootCms().unlockResource(finalTarget);
CmsResource copyResource=getRootCms().readResource(finalTarget);
m_updateResources.add(copyResource.getStructureId());
}
}
