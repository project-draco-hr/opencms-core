{
  Analyzer analyzer=null;
  Class<?> analyzerClass;
  try {
    analyzerClass=Class.forName(className);
  }
 catch (  ClassNotFoundException e) {
    analyzerClass=Class.forName(LUCENE_ANALYZER + className);
    LOG.warn(e.getLocalizedMessage(),e);
  }
  if (StandardAnalyzer.class.equals(analyzerClass)) {
    analyzer=new StandardAnalyzer(CmsSearchIndex.LUCENE_VERSION);
  }
 else   if (CmsGallerySearchAnalyzer.class.equals(analyzerClass)) {
    analyzer=new CmsGallerySearchAnalyzer(CmsSearchIndex.LUCENE_VERSION);
  }
 else {
    boolean hasEmpty=false;
    boolean hasVersion=false;
    boolean hasVersionWithString=false;
    Constructor<?>[] constructors=analyzerClass.getConstructors();
    for (int i=0; i < constructors.length; i++) {
      Constructor<?> c=constructors[i];
      Class<?>[] parameters=c.getParameterTypes();
      if (parameters.length == 0) {
        hasEmpty=true;
      }
      if ((parameters.length == 1) && parameters[0].equals(Version.class)) {
        hasVersion=true;
      }
      if ((stemmer != null) && (parameters.length == 2) && parameters[0].equals(Version.class)&& parameters[1].equals(String.class)) {
        hasVersionWithString=true;
      }
    }
    if (hasVersionWithString) {
      analyzer=(Analyzer)analyzerClass.getDeclaredConstructor(new Class[]{Version.class,String.class}).newInstance(CmsSearchIndex.LUCENE_VERSION,stemmer);
    }
 else     if (hasVersion) {
      analyzer=(Analyzer)analyzerClass.getDeclaredConstructor(new Class[]{Version.class}).newInstance(CmsSearchIndex.LUCENE_VERSION);
    }
 else     if (hasEmpty) {
      analyzer=(Analyzer)analyzerClass.newInstance();
    }
  }
  return analyzer;
}
