{
  CmsSearchManager manager=OpenCms.getSearchManager();
  I_CmsReport report=null;
  boolean writeLog=Boolean.valueOf((String)parameters.get(JOB_PARAM_WRITELOG)).booleanValue();
  if (writeLog) {
    report=new CmsLogReport(cms.getRequestContext().getLocale(),CmsSearchManager.class);
  }
  List updateList=null;
  String indexList=(String)parameters.get(JOB_PARAM_INDEXLIST);
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(indexList)) {
    updateList=new ArrayList();
    String[] indexNames=CmsStringUtil.splitAsArray(indexList,'|');
    for (int i=0; i < indexNames.length; i++) {
      if (manager.getIndex(indexNames[i]) != null) {
        updateList.add(indexNames[i]);
      }
 else {
        if (LOG.isWarnEnabled()) {
          LOG.warn(Messages.get().getBundle().key(Messages.LOG_NO_INDEX_WITH_NAME_1,indexNames[i]));
        }
      }
    }
  }
  long startTime=System.currentTimeMillis();
  if (updateList == null) {
    OpenCms.fireCmsEvent(I_CmsEventListener.EVENT_REBUILD_SEARCHINDEX,Collections.singletonMap(I_CmsEventListener.KEY_REPORT,report));
  }
 else {
    manager.rebuildIndexes(updateList,report);
  }
  long runTime=System.currentTimeMillis() - startTime;
  String finishMessage=Messages.get().getBundle().key(Messages.LOG_REBUILD_INDEXES_FINISHED_1,CmsStringUtil.formatRuntime(runTime));
  if (LOG.isInfoEnabled()) {
    LOG.info(finishMessage);
  }
  return finishMessage;
}
