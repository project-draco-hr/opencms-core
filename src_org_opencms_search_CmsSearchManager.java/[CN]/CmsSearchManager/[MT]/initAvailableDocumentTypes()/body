{
  CmsSearchDocumentType documenttype=null;
  String className=null;
  String name=null;
  I_CmsDocumentFactory documentFactory=null;
  List<String> resourceTypes=null;
  List<String> mimeTypes=null;
  Class<?> c=null;
  m_documentTypes=new HashMap<String,I_CmsDocumentFactory>();
  for (int i=0, n=m_documentTypeConfigs.size(); i < n; i++) {
    documenttype=m_documentTypeConfigs.get(i);
    name=documenttype.getName();
    try {
      className=documenttype.getClassName();
      resourceTypes=documenttype.getResourceTypes();
      mimeTypes=documenttype.getMimeTypes();
      if (name == null) {
        throw new CmsIndexException(Messages.get().container(Messages.ERR_DOCTYPE_NO_NAME_0));
      }
      if (className == null) {
        throw new CmsIndexException(Messages.get().container(Messages.ERR_DOCTYPE_NO_CLASS_DEF_0));
      }
      if (resourceTypes.size() == 0) {
        throw new CmsIndexException(Messages.get().container(Messages.ERR_DOCTYPE_NO_RESOURCETYPE_DEF_0));
      }
      try {
        c=Class.forName(className);
        documentFactory=(I_CmsDocumentFactory)c.getConstructor(new Class[]{String.class}).newInstance(new Object[]{name});
      }
 catch (      ClassNotFoundException exc) {
        throw new CmsIndexException(Messages.get().container(Messages.ERR_DOCCLASS_NOT_FOUND_1,className),exc);
      }
catch (      Exception exc) {
        throw new CmsIndexException(Messages.get().container(Messages.ERR_DOCCLASS_INIT_1,className),exc);
      }
      if (documentFactory.isUsingCache()) {
        documentFactory.setCache(m_extractionResultCache);
      }
      for (Iterator<String> key=documentFactory.getDocumentKeys(resourceTypes,mimeTypes).iterator(); key.hasNext(); ) {
        m_documentTypes.put(key.next(),documentFactory);
      }
    }
 catch (    CmsException e) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.LOG_DOCTYPE_CONFIG_FAILED_1,name),e);
      }
    }
  }
}
