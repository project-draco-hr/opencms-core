{
  List lockedResources=null;
  Iterator i=null;
  CmsResource currentResource=null;
  String currentPath=null;
  int count=0;
  m_locks.clear();
  try {
    lockedResources=cms.readLockedFileHeaders();
    i=lockedResources.iterator();
    while (i.hasNext()) {
      currentResource=(CmsResource)i.next();
      currentPath=currentResource.getFullResourceName();
      addResource(currentPath,currentResource.isLockedBy(),currentResource.getProjectId(),CmsLock.C_TYPE_DIRECT_LOCKED);
      count++;
    }
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_DEBUG)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_DEBUG,"[" + this.getClass().getName() + "] initialized, found "+ count+ " directly locked resources");
    }
  }
 catch (  CmsException e) {
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[" + this.getClass().getName() + "] error initializing: "+ e.toString());
    }
  }
  return count;
}
