{
  CmsLock parentFolderLock=null;
  CmsLock siblingLock=null;
  CmsResource sibling=null;
  CmsResource resource=null;
  if (context.currentProject().getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    return CmsLock.getNullLock();
  }
  resource=internalReadFileHeader(driverManager,context,resourcename);
  if (resource == null || resource.getState() == I_CmsConstants.C_STATE_DELETED) {
    return CmsLock.getNullLock();
  }
  if (m_exclusiveLocks.containsKey(resourcename)) {
    return (CmsLock)m_exclusiveLocks.get(resourcename);
  }
  List siblings=driverManager.getAllSiblings(context,resourcename);
  if ((parentFolderLock=getParentFolderLock(resourcename)) == null) {
    for (int i=0; i < siblings.size(); i++) {
      sibling=(CmsResource)siblings.get(i);
      siblingLock=(CmsLock)m_exclusiveLocks.get(sibling.getRootPath());
      if (siblingLock != null) {
        return new CmsLock(resourcename,siblingLock.getUserId(),siblingLock.getProjectId(),CmsLock.C_TYPE_SHARED_EXCLUSIVE);
      }
    }
    return CmsLock.getNullLock();
  }
 else {
    for (int i=0; i < siblings.size(); i++) {
      sibling=(CmsResource)siblings.get(i);
      if (m_exclusiveLocks.containsKey(sibling.getRootPath())) {
        return new CmsLock(resourcename,parentFolderLock.getUserId(),parentFolderLock.getProjectId(),CmsLock.C_TYPE_SHARED_INHERITED);
      }
    }
    return new CmsLock(resourcename,parentFolderLock.getUserId(),parentFolderLock.getProjectId(),CmsLock.C_TYPE_INHERITED);
  }
}
