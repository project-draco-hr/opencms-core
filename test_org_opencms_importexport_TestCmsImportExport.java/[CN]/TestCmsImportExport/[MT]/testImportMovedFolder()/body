{
  CmsObject cms=getCmsObject();
  echo("Testing the import of a folder that has been moved.");
  String filename="newtestfile.html";
  String foldername="/folderToMove/";
  String folder2="/movedFolder/";
  String zipExportFilename=OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf("packages/testImportExportMovedFolder.zip");
  try {
    cms.getRequestContext().setSiteRoot("/");
    CmsResource folderBefore=cms.createResource(foldername,CmsResourceTypeFolder.getStaticTypeId());
    cms.createResource(foldername + filename,CmsResourceTypePlain.getStaticTypeId());
    cms.unlockResource(foldername);
    OpenCms.getPublishManager().publishResource(cms,foldername);
    OpenCms.getPublishManager().waitWhileRunning();
    storeResources(cms,foldername,true);
    CmsVfsImportExportHandler vfsExportHandler=new CmsVfsImportExportHandler();
    List exportPaths=new ArrayList(1);
    exportPaths.add(foldername);
    CmsExportParameters params=new CmsExportParameters(zipExportFilename,null,true,false,false,exportPaths,false,true,0,true,false);
    vfsExportHandler.setExportParams(params);
    OpenCms.getImportExportManager().exportData(cms,vfsExportHandler,new CmsShellReport(cms.getRequestContext().getLocale()));
    cms.lockResource(foldername);
    cms.moveResource(foldername,folder2);
    cms.unlockResource(folder2);
    OpenCms.getPublishManager().publishResource(cms,folder2);
    OpenCms.getPublishManager().waitWhileRunning();
    assertFalse(cms.existsResource(foldername));
    assertFalse(cms.existsResource(foldername + filename));
    assertTrue(cms.existsResource(folder2));
    assertTrue(cms.existsResource(folder2 + filename));
    cms.readResource(folderBefore.getStructureId());
    try {
      cms.readResource(foldername);
      fail("should not be found");
    }
 catch (    Exception e) {
    }
    printExceptionWarning();
    OpenCms.getImportExportManager().importData(cms,new CmsShellReport(cms.getRequestContext().getLocale()),new CmsImportParameters(zipExportFilename,"/",true));
    assertTrue(cms.existsResource(folder2));
    assertTrue(cms.existsResource(folder2 + filename));
    assertFalse(cms.existsResource(foldername));
    assertFalse(cms.existsResource(foldername + filename));
    List lockedResources=cms.getLockedResources("/",CmsLockFilter.FILTER_ALL);
    assertFalse(lockedResources.contains(foldername));
    assertFalse(lockedResources.contains(folder2));
    String offlineContent=new String(cms.readFile(folder2 + filename).getContents());
    cms.getRequestContext().setCurrentProject(cms.readProject(CmsProject.ONLINE_PROJECT_ID));
    assertEquals(offlineContent,new String(cms.readFile(folder2 + filename).getContents()));
  }
  finally {
    try {
      if (zipExportFilename != null) {
        File file=new File(zipExportFilename);
        if (file.exists()) {
          file.delete();
        }
      }
    }
 catch (    Throwable t) {
    }
  }
}
