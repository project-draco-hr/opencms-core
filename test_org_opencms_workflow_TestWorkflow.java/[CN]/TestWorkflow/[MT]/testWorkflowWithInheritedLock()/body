{
  try {
    OpenCmsTestLogAppender.setBreakOnError(false);
    CmsObject cms=getCmsObject();
    CmsUser editor=cms.createUser("Editor2","password","desc",new HashMap<String,Object>());
    cms.addUserToGroup("Editor2","Users");
    cms.lockResource("/system/");
    cms.chacc("/system/",I_CmsPrincipal.PRINCIPAL_GROUP,"Users","+w");
    cms.unlockResource("/system/");
    CmsObject editorCms=OpenCms.initCmsObject(cms);
    editorCms.loginUser("Editor2","password");
    editorCms.getRequestContext().setCurrentProject(cms.readProject("Offline"));
    CmsResource first=editorCms.createResource("/system/dir0",0);
    cms.changeLock("/system/dir0");
    cms.chacc("/system/dir0/",I_CmsPrincipal.PRINCIPAL_GROUP,"Users","+w");
    cms.unlockResource("/system/dir0");
    editorCms.lockResource("/system/dir0");
    CmsResource second=editorCms.createResource("/system/dir0/er4",1);
    List<CmsResource> resources=new ArrayList<CmsResource>();
    resources.add(second);
    CmsWorkflowResponse response=OpenCms.getWorkflowManager().executeAction(editorCms,CmsWorkflowManager.ACTION_RELEASE,resources);
    CmsUUID projectId=response.getWorkflowId();
    CmsResource er4=cms.readResource("/system/dir0/er4");
    assertEquals(projectId,er4.getProjectLastModified());
    assertEquals(editor.getId(),er4.getUserLastModified());
    assertFalse("directory should be still in another project",cms.readResource("/system/dir0").getProjectLastModified().equals(projectId));
  }
  finally {
    OpenCmsTestLogAppender.setBreakOnError(false);
  }
}
