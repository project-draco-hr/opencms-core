{
  Connection conn=null;
  PreparedStatement stmt=null;
  String ownerName=new String();
  String group=new String();
  String managerGroup=new String();
  try {
    CmsUser owner=m_driverManager.getUserDriver().readUser(project.getOwnerId());
    ownerName=owner.getName() + " " + owner.getFirstname()+ " "+ owner.getLastname();
  }
 catch (  CmsException e) {
    ownerName="";
  }
  try {
    group=m_driverManager.getUserDriver().readGroup(project.getGroupId()).getName();
  }
 catch (  CmsException e) {
    group="";
  }
  try {
    managerGroup=m_driverManager.getUserDriver().readGroup(project.getManagerGroupId()).getName();
  }
 catch (  CmsException e) {
    managerGroup="";
  }
  Vector projectresources=readAllProjectResources(project.getId());
  try {
    conn=m_sqlManager.getConnectionForBackup();
    stmt=m_sqlManager.getPreparedStatement(conn,"C_PROJECTS_CREATE_BACKUP");
    stmt.setInt(1,versionId);
    stmt.setInt(2,project.getId());
    stmt.setString(3,project.getName());
    stmt.setTimestamp(4,new Timestamp(publishDate));
    stmt.setString(5,currentUser.getId().toString());
    stmt.setString(6,currentUser.getName() + " " + currentUser.getFirstname()+ " "+ currentUser.getLastname());
    stmt.setString(7,project.getOwnerId().toString());
    stmt.setString(8,ownerName);
    stmt.setString(9,project.getGroupId().toString());
    stmt.setString(10,group);
    stmt.setString(11,project.getManagerGroupId().toString());
    stmt.setString(12,managerGroup);
    stmt.setString(13,project.getDescription());
    stmt.setTimestamp(14,new Timestamp(project.getCreateDate()));
    stmt.setInt(15,project.getType());
    stmt.setInt(16,project.getTaskId());
    stmt.executeUpdate();
    stmt.close();
    for (int i=0; i < projectresources.size(); i++) {
      stmt=m_sqlManager.getPreparedStatement(conn,"C_PROJECTRESOURCES_CREATE_BACKUP");
      stmt.setInt(1,versionId);
      stmt.setInt(2,project.getId());
      stmt.setString(3,(String)projectresources.get(i));
      stmt.executeUpdate();
      stmt.close();
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
}
