{
  SortedMap collectedResources=new TreeMap();
  Iterator i=CmsFileUtil.removeRedundancies(m_paths).iterator();
  while (i.hasNext()) {
    String path=(String)i.next();
    m_report.print(Messages.get().container(Messages.RPT_EXTRACT_FROM_PATH_BEGIN_1,path),I_CmsReport.FORMAT_HEADLINE);
    m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0),I_CmsReport.FORMAT_HEADLINE);
    try {
      List resources=cms.readResources(path,CmsResourceFilter.IGNORE_EXPIRATION,true);
      Iterator j=resources.iterator();
      while (j.hasNext()) {
        CmsResource res=(CmsResource)j.next();
        CmsContentCheckResource contentCheckRes=new CmsContentCheckResource(res);
        collectedResources.put(contentCheckRes.getResourceName(),contentCheckRes);
      }
    }
 catch (    CmsException e) {
      m_report.println(Messages.get().container(Messages.RPT_EXTRACT_FROM_PATH_ERROR_2,path,e),I_CmsReport.FORMAT_ERROR);
    }
    m_report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0),I_CmsReport.FORMAT_HEADLINE);
    m_report.println(Messages.get().container(Messages.RPT_EXTRACT_FROM_PATH_END_0),I_CmsReport.FORMAT_HEADLINE);
  }
  return collectedResources;
}
