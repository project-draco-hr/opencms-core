{
  String newtab=new String();
  String folderimg=new String();
  String treeswitch=new String();
  CmsResource lastFolder=null;
  Vector subfolders=new Vector();
  Vector list=new Vector();
  Vector untestedSubfolders=new Vector();
  Vector untestedSubfiles=new Vector();
  cms.setContextToCos();
  Vector untestedlist=cms.getSubFolders(curfolder);
  for (int i=0; i < untestedlist.size(); i++) {
    CmsFolder subfolder=(CmsFolder)untestedlist.elementAt(i);
    if (checkAccess(cms,subfolder)) {
      list.addElement(subfolder);
    }
  }
  if (displayFiles) {
    Vector untestedfileslist=cms.getFilesInFolder(curfolder);
    for (int i=0; i < untestedfileslist.size(); i++) {
      CmsFile file=(CmsFile)untestedfileslist.elementAt(i);
      if (checkAccess(cms,file)) {
        list.addElement(file);
      }
    }
  }
  Enumeration enum=list.elements();
  if (list.size() > 0) {
    lastFolder=(CmsResource)list.lastElement();
  }
 else {
    lastFolder=null;
  }
  while (enum.hasMoreElements()) {
    CmsResource res=(CmsResource)enum.nextElement();
    if (checkAccess(cms,(CmsResource)res)) {
      subfolders=new Vector();
      if (res.isFolder()) {
        untestedSubfolders=cms.getSubFolders(res.getAbsolutePath());
        for (int i=0; i < untestedSubfolders.size(); i++) {
          CmsFolder subfolder=(CmsFolder)untestedSubfolders.elementAt(i);
          if (checkAccess(cms,subfolder)) {
            subfolders.addElement(subfolder);
          }
        }
        if (displayFiles) {
          untestedSubfiles=cms.getFilesInFolder(res.getAbsolutePath());
          for (int i=0; i < untestedSubfiles.size(); i++) {
            CmsFile subfile=(CmsFile)untestedSubfiles.elementAt(i);
            if (checkAccess(cms,subfile)) {
              subfolders.addElement(subfile);
            }
          }
        }
      }
      if (res.isFolder()) {
        if (res.getAbsolutePath().equals(filelist)) {
          folderimg=template.getProcessedDataValue(C_TREEIMG_FOLDEROPEN,this);
        }
 else {
          folderimg=template.getProcessedDataValue(C_TREEIMG_FOLDERCLOSE,this);
        }
      }
 else {
        I_CmsResourceType type=cms.getResourceType(res.getType());
        String icon=getIcon(cms,type,configFile);
        template.setData("icon",cms.getRequestContext().getRequest().getServletUrl() + configFile.getWpPicturePath() + icon);
        folderimg=template.getProcessedDataValue("TREEIMG_FILE",this);
      }
      if (res.getAbsolutePath().equals(lastFolder.getAbsolutePath())) {
        if (subfolders.size() > 0) {
          if (endfolder.startsWith(res.getAbsolutePath())) {
            template.setData(C_TREELINK,C_WP_FOLDER_TREE + "?" + C_PARA_FOLDERTREE+ "="+ Encoder.escape(curfolder));
            treeswitch=template.getProcessedDataValue(C_TREEIMG_MEND,this);
          }
 else {
            template.setData(C_TREELINK,C_WP_FOLDER_TREE + "?" + C_PARA_FOLDERTREE+ "="+ Encoder.escape(res.getAbsolutePath()));
            treeswitch=template.getProcessedDataValue(C_TREEIMG_PEND,this);
          }
        }
 else {
          treeswitch=template.getProcessedDataValue(C_TREEIMG_END,this);
        }
      }
 else {
        if (subfolders.size() > 0) {
          if (endfolder.startsWith(res.getAbsolutePath())) {
            template.setData(C_TREELINK,C_WP_FOLDER_TREE + "?" + C_PARA_FOLDERTREE+ "="+ Encoder.escape(curfolder));
            treeswitch=template.getProcessedDataValue(C_TREEIMG_MCROSS,this);
          }
 else {
            template.setData(C_TREELINK,C_WP_FOLDER_TREE + "?" + C_PARA_FOLDERTREE+ "="+ Encoder.escape(res.getAbsolutePath()));
            treeswitch=template.getProcessedDataValue(C_TREEIMG_PCROSS,this);
          }
        }
 else {
          treeswitch=template.getProcessedDataValue(C_TREEIMG_CROSS,this);
        }
      }
      if (res.getAbsolutePath().equals(lastFolder.getAbsolutePath())) {
        newtab=tab + template.getProcessedDataValue(C_TREEIMG_EMPTY,this);
      }
 else {
        newtab=tab + template.getProcessedDataValue(C_TREEIMG_VERT,this);
      }
      if (res.inProject(cms.getRequestContext().currentProject())) {
        template.setData(C_TREESTYLE,C_FILE_INPROJECT);
      }
 else {
        template.setData(C_TREESTYLE,C_FILE_NOTINPROJECT);
      }
      template.setData(C_FILELIST,C_WP_EXPLORER_FILELIST + "?" + C_PARA_FILELIST+ "="+ res.getAbsolutePath());
      template.setData(C_TREELIST,C_WP_EXPLORER_TREE + "?" + C_PARA_FILELIST+ "="+ res.getAbsolutePath());
      template.setData(C_TREEENTRY,res.getName());
      template.setData(C_TREEVAR,res.getAbsolutePath());
      template.setData(C_TREETAB,tab);
      template.setData(C_TREEFOLDER,folderimg);
      template.setData(C_TREESWITCH,treeswitch);
      if ((res.inProject(cms.getRequestContext().currentProject()) && checkWriteable(cms,(CmsResource)res)) || offselect) {
        template.setData(C_TREESTYLE,C_FILE_INPROJECT);
        output.append(template.getProcessedDataValue(C_TREELINE,this));
      }
 else {
        template.setData(C_TREESTYLE,C_FILE_NOTINPROJECT);
        output.append(template.getProcessedDataValue(C_TREELINEDISABLED,this));
      }
      if ((endfolder.startsWith(res.getAbsolutePath())) && (endfolder.endsWith("/"))) {
        showTree(cms,res.getAbsolutePath(),endfolder,filelist,template,output,newtab,displayFiles,offselect,configFile);
      }
    }
  }
  cms.setContextToVfs();
}
