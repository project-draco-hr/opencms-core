{
  if (resource != null) {
    return resource;
  }
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(cms.getRequestContext().getSiteRoot())) {
    return resource;
  }
  if (m_missingUrisOffline == null) {
    init();
  }
  try {
    CmsSiteEntryBean entry=getUri(cms,cms.getRequestContext().getUri());
    if (entry == null) {
      return resource;
    }
    resource=cms.readResource(entry.getResourceId());
    req.setAttribute(CmsADEManager.ATTR_SITEMAP_ENTRY,entry.cloneWithoutSubEntries());
    req.setAttribute(SITEMAP_CURRENT_URI,cms.getRequestContext().getUri());
    cms.getRequestContext().setUri(cms.getSitePath(resource));
  }
 catch (  Throwable e) {
    String uri=cms.getRequestContext().getUri();
    CmsMessageContainer msg=Messages.get().container(Messages.ERR_SITEMAP_1,uri);
    if (LOG.isErrorEnabled()) {
      LOG.error(msg.key(),e);
    }
    throw new CmsResourceInitException(msg,e);
  }
  return resource;
}
