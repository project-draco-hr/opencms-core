{
  String path=normalizePath(cms.getRequestContext().addSiteRoot(cms.getRequestContext().getUri()));
  CmsSiteEntryBean uriEntry;
  boolean online=cms.getRequestContext().currentProject().isOnlineProject();
  if (online) {
    uriEntry=m_urisOnline.get(path);
  }
 else {
    uriEntry=m_urisOffline.get(path);
  }
  if (uriEntry != null) {
    return uriEntry;
  }
  Boolean missing=null;
  if (online) {
    missing=m_missingUrisOnline.get(path);
  }
 else {
    missing=m_missingUrisOffline.get(path);
  }
  if (missing != null) {
    return null;
  }
  CmsSitemapBean sitemap=getSitemap(cms,normalizePath(cms.getRequestContext().getSiteRoot()),req);
  if (sitemap == null) {
    if (online) {
      m_missingUrisOnline.put(path,Boolean.TRUE);
    }
 else {
      m_missingUrisOffline.put(path,Boolean.TRUE);
    }
    return null;
  }
  String sitePath=normalizePath(cms.getRequestContext().getUri());
  LinkedList<String> entryPaths=new LinkedList<String>(CmsStringUtil.splitAsList(sitePath,"/"));
  if (entryPaths.isEmpty()) {
    uriEntry=sitemap.getSiteEntries().get(0);
  }
 else {
    String uriPath="";
    List<CmsSiteEntryBean> subEntries=sitemap.getSiteEntries();
    boolean finished=false;
    while (!finished) {
      String name=entryPaths.removeFirst();
      uriPath+="/" + name;
      if (online) {
        missing=m_missingUrisOnline.get(uriPath.substring(1));
      }
 else {
        missing=m_missingUrisOffline.get(uriPath.substring(1));
      }
      if (missing != null) {
        return null;
      }
      int i=0;
      for (; i < subEntries.size(); i++) {
        CmsSiteEntryBean entry=subEntries.get(i);
        if (!entry.getName().equals(name)) {
          continue;
        }
        if (entryPaths.isEmpty()) {
          uriEntry=entry;
          finished=true;
        }
 else {
          subEntries=entry.getSubEntries();
          if (subEntries.isEmpty()) {
            String sitemapPath=entry.getProperties().get(CmsSiteEntryBean.PROPERTY_SITEMAP);
            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(sitemapPath)) {
              sitemapPath=normalizePath(cms.getRequestContext().addSiteRoot(sitemapPath));
              sitemap=getSitemap(cms,sitemapPath,req);
              if (sitemap == null) {
                if (online) {
                  m_missingUrisOnline.put(path,Boolean.TRUE);
                }
 else {
                  m_missingUrisOffline.put(path,Boolean.TRUE);
                }
                return null;
              }
              subEntries=sitemap.getSiteEntries();
            }
          }
          finished=subEntries.isEmpty();
        }
        break;
      }
      if (i == subEntries.size()) {
        finished=true;
      }
    }
  }
  if (uriEntry != null) {
    if (online) {
      m_urisOnline.put(path,uriEntry);
    }
 else {
      m_urisOffline.put(path,uriEntry);
    }
  }
 else {
    if (online) {
      m_missingUrisOnline.put(path,Boolean.TRUE);
    }
 else {
      m_missingUrisOffline.put(path,Boolean.TRUE);
    }
  }
  return uriEntry;
}
