{
  PDRectangle box=page.findCropBox();
  double aspectRatio=box.getWidth() / box.getHeight();
  if ((boxWidth < 0) && (boxHeight < 0)) {
    throw new IllegalArgumentException("At least one of width / height must be positive!");
  }
 else   if ((boxWidth < 0) && (boxHeight > 0)) {
    boxWidth=(int)Math.ceil(aspectRatio * boxHeight);
  }
 else   if ((boxWidth > 0) && (boxHeight < 0)) {
    boxHeight=(int)Math.ceil(boxWidth / aspectRatio);
  }
  int fakePixelWidth=(int)(FAKE_PIXEL_MULTIPLIER * box.getWidth());
  int fakePixelHeight=(int)(FAKE_PIXEL_MULTIPLIER * box.getHeight());
  int[] unpaddedThumbnailDimensions=CmsImageScaler.calculateDimension(fakePixelWidth,fakePixelHeight,boxWidth,boxHeight);
  float widthInInches=box.getWidth() / POINTS_PER_INCH;
  int dpi=(int)(unpaddedThumbnailDimensions[0] / widthInInches);
  BufferedImage image=page.convertToImage(BufferedImage.TYPE_3BYTE_BGR,dpi);
  BufferedImage paddedImage=new BufferedImage(boxWidth,boxHeight,BufferedImage.TYPE_3BYTE_BGR);
  Graphics g=paddedImage.createGraphics();
  g.setColor(Color.WHITE);
  g.fillRect(0,0,paddedImage.getWidth(),paddedImage.getHeight());
  g.drawImage(image,(boxWidth - image.getWidth()) / 2,(boxHeight - image.getHeight()) / 2,null);
  return paddedImage;
}
