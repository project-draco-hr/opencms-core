{
  String listMethod=n.getAttribute(C_MODULELIST_METHOD);
  CmsRegistry reg=cms.getRegistry();
  CmsXmlWpTemplateFile listdef=getModulelistDefinitions(cms);
  Method callingMethod=null;
  Vector list=new Vector();
  try {
    callingMethod=callingObject.getClass().getMethod(listMethod,new Class[]{CmsObject.class,CmsXmlLanguageFile.class});
    list=(Vector)callingMethod.invoke(callingObject,new Object[]{cms,lang});
  }
 catch (  NoSuchMethodException exc) {
    throwException("Could not find method " + listMethod + " in calling class "+ callingObject.getClass().getName()+ " for generating projectlist content.",CmsException.C_NOT_FOUND);
  }
catch (  InvocationTargetException targetEx) {
    Throwable e=targetEx.getTargetException();
    if (!(e instanceof CmsException)) {
      throwException("User method " + listMethod + " in calling class "+ callingObject.getClass().getName()+ " throwed an exception. "+ e,CmsException.C_UNKNOWN_EXCEPTION);
    }
 else {
      throw (CmsException)e;
    }
  }
catch (  Exception exc2) {
    throwException("User method " + listMethod + " in calling class "+ callingObject.getClass().getName()+ " was found but could not be invoked. "+ exc2,CmsException.C_XML_NO_USER_METHOD);
  }
  CmsRequestContext reqCont=cms.getRequestContext();
  if (reqCont.currentProject().isOnlineProject()) {
    listdef.setData("menue","menueonline");
  }
 else {
    listdef.setData("menue","modulemenue");
  }
  StringBuffer result=new StringBuffer();
  for (int i=0; i < list.size(); i++) {
    String currentModule=(String)list.elementAt(i);
    listdef.setData(C_MODULELIST_NAME,currentModule);
    listdef.setData(C_MODULELIST_NICE_NAME,reg.getModuleNiceName(currentModule));
    listdef.setData(C_MODULELIST_VERSION,reg.getModuleVersion(currentModule) + "");
    listdef.setData(C_MODULELIST_AUTHOR,reg.getModuleAuthor(currentModule));
    listdef.setData(C_MODULELIST_DATECREATED,CmsMessages.getDateShort(reg.getModuleCreateDate(currentModule)));
    if (reg.getModuleUploadDate(currentModule) == -1) {
      listdef.setData(C_MODULELIST_DATEUPLOADED,"   -   ");
    }
 else {
      listdef.setData(C_MODULELIST_DATEUPLOADED,CmsMessages.getDateShort(reg.getModuleUploadDate(currentModule)));
    }
    listdef.setData(C_MODULELIST_IDX,new Integer(i).toString());
    result.append(listdef.getProcessedDataValue(C_TAG_MODULELIST_DEFAULT,callingObject,parameters));
  }
  return result.toString();
}
