{
  CmsObject cms=getCmsObject();
  String paramUri=getRequest().getParameter(ReqParam.URI.getName());
  cms.lockResourceTemporary(uri);
  CmsFile containerPage=cms.readFile(uri);
  CmsXmlContainerPage xmlCnt=CmsXmlContainerPageFactory.unmarshal(cms,containerPage);
  Locale locale=CmsLocaleManager.getLocale(cntPage.getString(JsonCntPage.LOCALE.getName()));
  if (xmlCnt.hasLocale(locale)) {
    xmlCnt.removeLocale(locale);
  }
  xmlCnt.addLocale(cms,locale);
  JSONObject cnts=cntPage.getJSONObject(JsonCntPage.CONTAINERS.getName());
  int cntCount=0;
  Iterator<String> itCnt=cnts.keys();
  while (itCnt.hasNext()) {
    String cntKey=itCnt.next();
    JSONObject cnt=cnts.getJSONObject(cntKey);
    I_CmsXmlContentValue cntValue=xmlCnt.getValue(CmsXmlContainerPage.N_CONTAINER,locale,cntCount);
    if (cntValue == null) {
      cntValue=xmlCnt.addValue(cms,CmsXmlContainerPage.N_CONTAINER,locale,cntCount);
    }
    String name=cnt.getString(JsonContainer.NAME.getName());
    xmlCnt.getValue(CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlContainerPage.N_NAME),locale,0).setStringValue(cms,name);
    String type=cnt.getString(JsonContainer.TYPE.getName());
    xmlCnt.getValue(CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlContainerPage.N_TYPE),locale,0).setStringValue(cms,type);
    JSONArray elems=cnt.getJSONArray(JsonCntPage.ELEMENTS.getName());
    for (int i=0; i < elems.length(); i++) {
      JSONObject elem=elems.getJSONObject(i);
      String formatter=elem.getString(JsonCntElem.FORMATTER.getName());
      String elemUri=elem.getString(JsonCntElem.URI.getName());
      if (type.equals(CmsContainerPageBean.TYPE_TEMPLATE) && elemUri.equals(paramUri)) {
        continue;
      }
      String clientId=elem.getString(JsonCntElem.ID.getName());
      I_CmsXmlContentValue elemValue=xmlCnt.addValue(cms,CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlContainerPage.N_ELEMENT),locale,i);
      xmlCnt.getValue(CmsXmlUtils.concatXpath(elemValue.getPath(),CmsXmlContainerPage.N_URI),locale,0).setStringValue(cms,elemUri);
      xmlCnt.getValue(CmsXmlUtils.concatXpath(elemValue.getPath(),CmsXmlContainerPage.N_FORMATTER),locale,0).setStringValue(cms,formatter);
      if (clientId.contains("#")) {
        CmsContainerElementBean element=getCachedElement(clientId);
        Map<String,CmsProperty> properties=m_manager.getElementProperties(element);
        Map<String,CmsXmlContentProperty> propertiesConf=m_manager.getElementPropertyConfiguration(element.getElement());
        Iterator<String> itProps=properties.keySet().iterator();
        int j=0;
        while (itProps.hasNext()) {
          String propertyName=itProps.next();
          if ((properties.get(propertyName).getStructureValue() != null) && propertiesConf.containsKey(propertyName)) {
            I_CmsXmlContentValue propValue=xmlCnt.addValue(cms,CmsXmlUtils.concatXpath(elemValue.getPath(),CmsXmlContainerPage.N_PROPERTIES),locale,j);
            xmlCnt.getValue(CmsXmlUtils.concatXpath(propValue.getPath(),CmsXmlContainerPage.N_NAME),locale,0).setStringValue(cms,propertyName);
            I_CmsXmlContentValue valValue=xmlCnt.addValue(cms,CmsXmlUtils.concatXpath(propValue.getPath(),CmsXmlContainerPage.N_VALUE),locale,0);
            if (propertiesConf.get(propertyName).getPropertyType() == CmsXmlContentProperty.T_URI) {
              xmlCnt.addValue(cms,CmsXmlUtils.concatXpath(valValue.getPath(),CmsXmlContainerPage.N_URI),locale,0).setStringValue(cms,properties.get(propertyName).getStructureValue());
            }
 else {
              xmlCnt.addValue(cms,CmsXmlUtils.concatXpath(valValue.getPath(),CmsXmlContainerPage.N_STRING),locale,0).setStringValue(cms,properties.get(propertyName).getStructureValue());
            }
            j++;
          }
        }
      }
    }
    cntCount++;
  }
  containerPage.setContents(xmlCnt.marshal());
  cms.writeFile(containerPage);
}
