{
  CmsObject cms=getCmsObject();
  cms.lockResourceTemporary(uri);
  CmsFile containerPage=cms.readFile(uri);
  CmsXmlContent xmlCnt=CmsXmlContentFactory.unmarshal(cms,containerPage);
  Locale locale=CmsLocaleManager.getLocale(cntPage.getString(P_LOCALE));
  if (xmlCnt.hasLocale(locale)) {
    xmlCnt.removeLocale(locale);
  }
  xmlCnt.addLocale(cms,locale);
  JSONObject cnts=cntPage.getJSONObject(P_CONTAINERS);
  int cntCount=0;
  Iterator itCnt=cnts.keys();
  while (itCnt.hasNext()) {
    String cntKey=(String)itCnt.next();
    JSONObject cnt=cnts.getJSONObject(cntKey);
    I_CmsXmlContentValue cntValue=xmlCnt.getValue(CmsContainerPageLoader.N_CONTAINER,locale,cntCount);
    if (cntValue == null) {
      cntValue=xmlCnt.addValue(cms,CmsContainerPageLoader.N_CONTAINER,locale,cntCount);
    }
    String name=cnt.getString(P_NAME);
    xmlCnt.getValue(CmsXmlUtils.concatXpath(cntValue.getPath(),CmsContainerPageLoader.N_NAME),locale,0).setStringValue(cms,name);
    String type=cnt.getString(P_TYPE);
    xmlCnt.getValue(CmsXmlUtils.concatXpath(cntValue.getPath(),CmsContainerPageLoader.N_TYPE),locale,0).setStringValue(cms,type);
    JSONArray elems=cnt.getJSONArray(P_ELEMENTS);
    for (int i=0; i < elems.length(); i++) {
      String elem=elems.getString(i);
      CmsUUID id=CmsADEElementManager.getInstance().parseId(elem);
      CmsResource res=cms.readResource(id);
      String formatter=cnt.getJSONArray(P_FORMATTERS).getString(i);
      I_CmsXmlContentValue elemValue=xmlCnt.addValue(cms,CmsXmlUtils.concatXpath(cntValue.getPath(),CmsContainerPageLoader.N_ELEMENT),locale,i);
      xmlCnt.getValue(CmsXmlUtils.concatXpath(elemValue.getPath(),CmsContainerPageLoader.N_URI),locale,0).setStringValue(cms,cms.getSitePath(res));
      xmlCnt.getValue(CmsXmlUtils.concatXpath(elemValue.getPath(),CmsContainerPageLoader.N_FORMATTER),locale,0).setStringValue(cms,formatter);
    }
    cntCount++;
  }
  containerPage.setContents(xmlCnt.marshal());
  cms.writeFile(containerPage);
}
