{
  CmsObject cms=getCmsObject();
  String resourceName=subcontainer.getString(CmsElementUtil.JsonElement.FILE.getName());
  String title=subcontainer.getString(CmsElementUtil.JsonElement.TITLE.getName());
  String description=subcontainer.getString(CmsElementUtil.JsonElement.DESCRIPTION.getName());
  JSONArray types=subcontainer.getJSONArray(CmsElementUtil.JsonElement.TYPES.getName());
  JSONArray subitems=subcontainer.getJSONArray(CmsElementUtil.JsonElement.SUBITEMS.getName());
  cms.lockResourceTemporary(resourceName);
  CmsFile subcontainerFile=cms.readFile(resourceName);
  CmsXmlSubContainer xmlSubContainer=CmsXmlSubContainerFactory.unmarshal(cms,subcontainerFile);
  Locale locale=cms.getRequestContext().getLocale();
  if (xmlSubContainer.hasLocale(locale)) {
    xmlSubContainer.removeLocale(locale);
  }
  xmlSubContainer.addLocale(cms,locale);
  I_CmsXmlContentValue cntValue=xmlSubContainer.getValue(CmsXmlSubContainer.XmlNode.SUBCONTAINER.getName(),locale,0);
  if (cntValue == null) {
    cntValue=xmlSubContainer.addValue(cms,CmsXmlSubContainer.XmlNode.SUBCONTAINER.getName(),locale,0);
  }
  xmlSubContainer.getValue(CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlSubContainer.XmlNode.TITLE.getName()),locale,0).setStringValue(cms,title);
  xmlSubContainer.getValue(CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlSubContainer.XmlNode.DESCRIPTION.getName()),locale,0).setStringValue(cms,description);
  if (types != null) {
    for (int i=0; i < types.length(); i++) {
      xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlSubContainer.XmlNode.TYPE.getName()),locale,i).setStringValue(cms,types.getString(i));
    }
  }
  if (subitems != null) {
    for (int i=0; i < subitems.length(); i++) {
      JSONObject subElement=subitems.getJSONObject(i);
      I_CmsXmlContentValue elemValue=xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(cntValue.getPath(),CmsXmlSubContainer.XmlNode.ELEMENT.getName()),locale,i);
      String elemUri=subElement.getString(JsonCntElem.URI.getName());
      String clientId=subElement.getString(JsonCntElem.ID.getName());
      xmlSubContainer.getValue(CmsXmlUtils.concatXpath(elemValue.getPath(),CmsXmlContainerPage.XmlNode.URI.getName()),locale,0).setStringValue(cms,elemUri);
      if (clientId.contains("#")) {
        CmsContainerElementBean element=getCachedElement(clientId);
        Map<String,CmsProperty> properties=m_manager.getElementProperties(cms,element);
        Map<String,CmsXmlContentProperty> propertiesConf=m_manager.getElementPropertyConfiguration(cms,cms.readResource(element.getElementId()));
        Iterator<String> itProps=properties.keySet().iterator();
        int j=0;
        while (itProps.hasNext()) {
          String propertyName=itProps.next();
          if ((properties.get(propertyName).getStructureValue() == null) || !propertiesConf.containsKey(propertyName)) {
            continue;
          }
          I_CmsXmlContentValue propValue=xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(elemValue.getPath(),CmsXmlContainerPage.XmlNode.PROPERTIES.getName()),locale,j);
          xmlSubContainer.getValue(CmsXmlUtils.concatXpath(propValue.getPath(),CmsXmlContainerPage.XmlNode.NAME.getName()),locale,0).setStringValue(cms,propertyName);
          I_CmsXmlContentValue valValue=xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(propValue.getPath(),CmsXmlContainerPage.XmlNode.VALUE.getName()),locale,0);
          if (propertiesConf.get(propertyName).getPropertyType().equals(CmsXmlContentProperty.T_VFSLIST)) {
            I_CmsXmlContentValue filelistValue=xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(valValue.getPath(),CmsXmlContainerPage.XmlNode.FILELIST.getName()),locale,0);
            int index=0;
            for (            String strId : CmsStringUtil.splitAsList(properties.get(propertyName).getStructureValue(),CmsXmlContentProperty.PROP_SEPARATOR)) {
              try {
                CmsResource res=cms.readResource(new CmsUUID(strId));
                I_CmsXmlContentValue fileValue=xmlSubContainer.getValue(CmsXmlUtils.concatXpath(filelistValue.getPath(),CmsXmlContainerPage.XmlNode.URI.getName()),locale,index);
                if (fileValue == null) {
                  fileValue=xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(filelistValue.getPath(),CmsXmlContainerPage.XmlNode.URI.getName()),locale,index);
                }
                fileValue.setStringValue(cms,cms.getSitePath(res));
                index++;
              }
 catch (              CmsException e) {
                LOG.error(e.getLocalizedMessage(),e);
              }
            }
          }
 else {
            xmlSubContainer.addValue(cms,CmsXmlUtils.concatXpath(valValue.getPath(),CmsXmlContainerPage.XmlNode.STRING.getName()),locale,0).setStringValue(cms,properties.get(propertyName).getStructureValue());
          }
          j++;
        }
      }
    }
  }
  subcontainerFile.setContents(xmlSubContainer.marshal());
  cms.writeFile(subcontainerFile);
}
