{
  CmsObject cms=getCmsObject();
  JSONObject result=new JSONObject();
  JSONObject resElements=new JSONObject();
  JSONObject resContainers=new JSONObject();
  result.put(P_ELEMENTS,resElements);
  result.put(P_CONTAINERS,resContainers);
  result.put(P_LOCALE,cms.getRequestContext().getLocale().toString());
  CmsResourceUtil resUtil=new CmsResourceUtil(cms,resource);
  Set<String> types=cntPage.getTypes();
  result.put(CmsADEServer.P_ALLOWEDIT,resUtil.getLock().isLockableBy(cms.getRequestContext().currentUser()) && resUtil.isEditable());
  result.put(CmsADEServer.P_LOCKED,resUtil.getLockedByName());
  resElements.merge(getNewElements(cntPage.getNewConfig(),types),true,false);
  CmsElementUtil elemUtil=new CmsElementUtil(cms,getRequest(),getResponse(),getRequest().getParameter(PARAMETER_URL));
  Set<CmsUUID> ids=new HashSet<CmsUUID>();
  for (  Map.Entry<String,CmsContainerBean> entry : cntPage.getContainers().entrySet()) {
    CmsContainerBean container=entry.getValue();
    JSONObject resContainer=new JSONObject();
    resContainer.put(P_NAME,container.getName());
    resContainer.put(P_TYPE,container.getType());
    resContainer.put(P_MAXELEMENTS,container.getMaxElements());
    JSONArray resContainerElems=new JSONArray();
    resContainer.put(P_ELEMENTS,resContainerElems);
    int renderElems=container.getElements().size();
    if ((container.getMaxElements() > -1) && (renderElems > container.getMaxElements())) {
      renderElems=container.getMaxElements();
    }
    for (    CmsContainerElementBean element : container.getElements()) {
      if (renderElems < 1) {
        break;
      }
      renderElems--;
      String id=CmsElementUtil.createId(element.getElement().getStructureId());
      resContainerElems.put(id);
      if (ids.contains(element.getElement().getStructureId())) {
        continue;
      }
      JSONObject resElement=elemUtil.getElementData(element.getElement(),types);
      ids.add(element.getElement().getStructureId());
      resElements.put(id,resElement);
    }
    resContainers.put(container.getName(),resContainer);
  }
  JSONArray resFavorites=getFavoriteList(resElements,types);
  result.put(P_FAVORITES,resFavorites);
  JSONArray resRecent=getRecentList(resElements,types);
  result.put(P_RECENT,resRecent);
  return result;
}
