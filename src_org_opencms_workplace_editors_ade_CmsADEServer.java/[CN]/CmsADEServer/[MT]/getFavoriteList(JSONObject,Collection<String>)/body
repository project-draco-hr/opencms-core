{
  JSONArray result=new JSONArray();
  CmsObject cms=getCmsObject();
  CmsElementUtil elemUtil=new CmsElementUtil(cms,getRequest().getParameter(ReqParam.URI.getName()),getRequest(),getResponse());
  List<CmsContainerElementBean> favList=m_manager.getFavoriteList(cms);
  for (  CmsContainerElementBean element : favList) {
    if (cms.existsResource(element.getElementId(),CmsResourceFilter.ONLY_VISIBLE_NO_DELETED)) {
      String id=element.getClientId();
      if ((resElements != null) && !resElements.has(id)) {
        try {
          JSONObject elemData=elemUtil.getElementData(element,types);
          resElements.put(id,elemData);
          if (elemData.has(CmsElementUtil.JsonElement.SUBITEMS.getName())) {
            CmsResource elementRes=cms.readResource(element.getElementId());
            CmsXmlSubContainer xmlSubContainer=CmsXmlSubContainerFactory.unmarshal(cms,elementRes,getRequest());
            CmsSubContainerBean subContainer=xmlSubContainer.getSubContainer(cms,cms.getRequestContext().getLocale());
            for (            CmsContainerElementBean subElement : subContainer.getElements()) {
              String subId=subElement.getClientId();
              if (!resElements.has(subId)) {
                JSONObject subItemData=elemUtil.getElementData(subElement,types);
                resElements.put(subId,subItemData);
                m_sessionCache.setCacheContainerElement(subId,subElement);
              }
            }
          }
          m_sessionCache.setCacheContainerElement(element.getClientId(),element);
          result.put(id);
        }
 catch (        Exception e) {
          if (!LOG.isDebugEnabled()) {
            LOG.warn(e.getLocalizedMessage());
          }
          LOG.debug(e.getLocalizedMessage(),e);
        }
      }
 else {
        result.put(id);
      }
    }
  }
  return result;
}
