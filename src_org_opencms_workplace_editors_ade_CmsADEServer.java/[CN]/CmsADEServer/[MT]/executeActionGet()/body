{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  if (!checkParameters(request,result,ReqParam.ACTION)) {
    return result;
  }
  String actionParam=request.getParameter(ReqParam.ACTION.getName());
  Action action=Action.valueOf(actionParam.toUpperCase());
  if (action.equals(Action.PUBLISH_LIST) || action.equals(Action.PUBLISH)) {
    CmsADEPublish pubHelper=new CmsADEPublish(this);
    return pubHelper.handleRequest(action,result);
  }
  if (!checkParameters(request,result,ReqParam.CNTPAGE,ReqParam.LOCALE,ReqParam.URI)) {
    return result;
  }
  String cntPageParam=request.getParameter(ReqParam.CNTPAGE.getName());
  String localeParam=request.getParameter(ReqParam.LOCALE.getName());
  String uriParam=request.getParameter(ReqParam.URI.getName());
  CmsObject cms=getCmsObject();
  cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));
  CmsResource cntPageRes=cms.readResource(cntPageParam);
  CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,cntPageRes,request);
  CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
  if (action.equals(Action.ALL)) {
    result=getContainerPage(cntPageRes,cntPage,uriParam.equals(cntPageParam) ? null : uriParam);
  }
 else   if (action.equals(Action.ELEM)) {
    if (!checkParameters(request,result,ReqParam.ELEM)) {
      return result;
    }
    String elemParam=request.getParameter(ReqParam.ELEM.getName());
    CmsElementUtil elemUtil=new CmsElementUtil(cms,uriParam,request,getResponse());
    JSONObject resElements=new JSONObject();
    if (elemParam.startsWith("[")) {
      JSONArray elems=new JSONArray(elemParam);
      for (int i=0; i < elems.length(); i++) {
        String elemId=elems.getString(i);
        CmsContainerElementBean element=getCachedElement(elemId);
        resElements.put(element.getClientId(),elemUtil.getElementData(element,cntPage.getTypes()));
      }
    }
 else {
      CmsContainerElementBean element=getCachedElement(elemParam);
      resElements.put(element.getClientId(),elemUtil.getElementData(element,cntPage.getTypes()));
    }
    result.put(JsonResponse.ELEMENTS.getName(),resElements);
  }
 else   if (action.equals(Action.ELEMPROPS)) {
    if (!checkParameters(request,result,ReqParam.ELEM,ReqParam.PROPERTIES)) {
      return result;
    }
    String elemParam=request.getParameter(ReqParam.ELEM.getName());
    String propertiesParam=request.getParameter(ReqParam.PROPERTIES.getName());
    CmsElementUtil elemUtil=new CmsElementUtil(cms,uriParam,request,getResponse());
    JSONObject resElements=new JSONObject();
    JSONObject properties=new JSONObject(propertiesParam);
    CmsContainerElementBean element=createElement(m_manager.convertToServerId(elemParam),properties);
    String clientId=element.getClientId();
    m_sessionCache.setCacheContainerElement(element.getClientId(),element);
    resElements.put(clientId,elemUtil.getElementData(element,cntPage.getTypes()));
    result.put(JsonResponse.ELEMENTS.getName(),resElements);
  }
 else   if (action.equals(Action.FAV)) {
    result.put(JsonResponse.FAVORITES.getName(),getFavoriteList(null,cntPage.getTypes()));
  }
 else   if (action.equals(Action.REC)) {
    result.put(JsonResponse.RECENT.getName(),getRecentList(null,cntPage.getTypes()));
  }
 else   if (action.equals(Action.SEARCH)) {
    CmsSearchOptions searchOptions=new CmsSearchOptions(request);
    JSONObject searchResult=getSearchResult(cntPageParam,searchOptions,cntPage.getTypes());
    result.merge(searchResult,true,false);
  }
 else   if (action.equals(Action.LS)) {
    CmsSearchOptions searchOptions=new CmsSearchOptions(request);
    JSONObject searchResult=getLastSearchResult(cntPageParam,searchOptions,cntPage.getTypes());
    CmsSearchOptions oldOptions=m_sessionCache.getADESearchOptions();
    if (oldOptions != null) {
      result.put(JsonSearch.TYPE.getName(),oldOptions.getTypes());
      result.put(JsonSearch.TEXT.getName(),oldOptions.getText());
      result.put(JsonSearch.LOCATION.getName(),oldOptions.getLocation());
    }
    result.merge(searchResult,true,false);
  }
 else   if (action.equals(Action.NEW)) {
    if (!checkParameters(request,result,ReqParam.DATA)) {
      return result;
    }
    String dataParam=request.getParameter(ReqParam.DATA.getName());
    String type=dataParam;
    CmsResource newResource=m_manager.createNewElement(cms,cntPageParam,request,type);
    result.put(JsonNewRes.ID.getName(),m_manager.convertToClientId(newResource.getStructureId()));
    result.put(JsonNewRes.URI.getName(),cms.getSitePath(newResource));
  }
 else   if (action.equals(Action.PROPS)) {
    if (!checkParameters(request,result,ReqParam.ELEM)) {
      return result;
    }
    String elemParam=request.getParameter(ReqParam.ELEM.getName());
    CmsElementUtil elemUtil=new CmsElementUtil(cms,uriParam,request,getResponse());
    CmsContainerElementBean element=getCachedElement(elemParam);
    result=elemUtil.getElementPropertyInfo(element);
  }
 else {
    result.put(JsonResponse.ERROR.getName(),Messages.get().getBundle().key(Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,ReqParam.ACTION.getName(),actionParam));
  }
  return result;
}
