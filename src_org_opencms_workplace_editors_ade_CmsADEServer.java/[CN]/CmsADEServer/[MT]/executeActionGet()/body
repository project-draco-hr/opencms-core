{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  String objParam=request.getParameter(PARAMETER_OBJ);
  if (objParam == null) {
    result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_OBJ));
    return result;
  }
  String urlParam=request.getParameter(PARAMETER_URL);
  if (urlParam == null) {
    result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_URL));
    return result;
  }
  CmsObject cms=getCmsObject();
  CmsResource cntPageRes=cms.readResource(urlParam);
  CmsContainerPageBean cntPage=CmsContainerPageCache.getInstance().getCache(cms,cntPageRes,cms.getRequestContext().getLocale());
  if (objParam.equals(OBJ_ALL)) {
    result=getContainerPage(cntPageRes,cntPage);
  }
 else   if (objParam.equals(OBJ_ELEM)) {
    String elemParam=request.getParameter(PARAMETER_ELEM);
    if (elemParam == null) {
      result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_ELEM));
      return result;
    }
    CmsElementUtil elemUtil=new CmsElementUtil(cms,request,getResponse());
    JSONObject resElements=new JSONObject();
    if (elemParam.startsWith("[")) {
      JSONArray elems=new JSONArray(elemParam);
      for (int i=0; i < elems.length(); i++) {
        String elem=elems.getString(i);
        resElements.put(elem,elemUtil.getElementData(CmsElementUtil.parseId(elem),cntPage.getTypes()));
      }
    }
 else {
      resElements.put(elemParam,elemUtil.getElementData(CmsElementUtil.parseId(elemParam),cntPage.getTypes()));
    }
    result.put(P_ELEMENTS,resElements);
  }
 else   if (objParam.equals(OBJ_FAV)) {
    result.put(P_FAVORITES,getFavoriteList(null,cntPage.getTypes()));
  }
 else   if (objParam.equals(OBJ_REC)) {
    result.put(P_RECENT,CmsRecentListManager.getInstance().getRecentList(cms,null,cntPage.getTypes(),request,getResponse()));
  }
 else   if (objParam.equals(OBJ_SEARCH)) {
    String containerPageUri=request.getParameter(PARAMETER_URL);
    if (containerPageUri == null) {
      result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_URL));
      return result;
    }
    CmsSearchOptions searchOptions=new CmsSearchOptions(request);
    JSONObject searchResult=CmsSearchListManager.getInstance().getSearchResult(cms,searchOptions,cntPage.getTypes(),request,getResponse());
    result.merge(searchResult,true,false);
  }
 else   if (objParam.equals(OBJ_LS)) {
    String containerPageUri=request.getParameter(PARAMETER_URL);
    if (containerPageUri == null) {
      result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_URL));
      return result;
    }
    CmsSearchOptions searchOptions=new CmsSearchOptions(request);
    JSONObject searchResult=CmsSearchListManager.getInstance().getLastSearchResult(cms,searchOptions,cntPage.getTypes(),request,getResponse());
    result.merge(searchResult,true,false);
  }
 else   if (objParam.equals(OBJ_NEW)) {
    String dataParam=request.getParameter(PARAMETER_DATA);
    if (dataParam == null) {
      result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_DATA));
      return result;
    }
    String containerPageUri=request.getParameter(PARAMETER_URL);
    if (containerPageUri == null) {
      result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_MISSING_PARAMETER_1,PARAMETER_URL));
      return result;
    }
    String type=dataParam;
    CmsElementCreator elemCreator=new CmsElementCreator(cms,cms.readResource(containerPageUri));
    CmsResource newResource=elemCreator.createElement(cms,type);
    result.put(P_ID,CmsElementUtil.createId(newResource.getStructureId()));
    result.put(P_URI,cms.getSitePath(newResource));
  }
 else {
    result.put(RES_ERROR,Messages.get().getBundle().key(Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,PARAMETER_OBJ,objParam));
  }
  return result;
}
