{
  CmsObject cms=getCmsObject();
  JSONObject result=new JSONObject();
  JSONObject resElements=new JSONObject();
  result.put(JsonCntPage.elements.name(),resElements);
  result.put(JsonCntPage.locale.name(),cms.getRequestContext().getLocale().toString());
  result.put(JsonCntPage.recentListSize.name(),m_manager.getRecentListMaxSize(cms));
  resElements.merge(getNewResourceTypes(cms.getSitePath(resource),types),true,false);
  resElements.merge(getSearchResourceTypes(cms.getSitePath(resource),types),true,false);
  CmsElementUtil elemUtil=new CmsElementUtil(cms,getRequest().getParameter(ReqParam.uri.name()),getRequest(),getResponse());
  Set<String> ids=new HashSet<String>();
  if (elemUri != null) {
    CmsResource elemRes=cms.readResource(elemUri);
    CmsContainerElementBean element=new CmsContainerElementBean(elemRes.getStructureId(),null,null);
    m_sessionCache.setCacheContainerElement(element.getClientId(),element);
    String id=element.getClientId();
    JSONObject resElement=elemUtil.getElementData(element,types);
    ids.add(id);
    resElements.put(id,resElement);
  }
  for (  Map.Entry<String,CmsContainerBean> entry : cntPage.getContainers().entrySet()) {
    CmsContainerBean container=entry.getValue();
    int renderElems=container.getElements().size();
    if ((container.getMaxElements() > -1) && (renderElems > container.getMaxElements())) {
      renderElems=container.getMaxElements();
    }
    for (    CmsContainerElementBean element : container.getElements()) {
      if (renderElems < 1) {
        break;
      }
      renderElems--;
      String id=element.getClientId();
      if (ids.contains(id)) {
        continue;
      }
      m_sessionCache.setCacheContainerElement(element.getClientId(),element);
      JSONObject resElement=elemUtil.getElementData(element,types);
      if (resElement.has(CmsElementUtil.JsonElement.subItems.name())) {
        CmsResource elementRes=cms.readResource(element.getElementId());
        CmsXmlSubContainer xmlSubContainer=CmsXmlSubContainerFactory.unmarshal(cms,elementRes,getRequest());
        CmsSubContainerBean subContainer=xmlSubContainer.getSubContainer(cms,cms.getRequestContext().getLocale());
        for (        CmsContainerElementBean subElement : subContainer.getElements()) {
          if (!ids.contains(subElement.getElementId())) {
            m_sessionCache.setCacheContainerElement(subElement.getClientId(),subElement);
            String subId=subElement.getClientId();
            if (ids.contains(subId)) {
              continue;
            }
            JSONObject subItemData=elemUtil.getElementData(subElement,types);
            ids.add(subId);
            resElements.put(subId,subItemData);
          }
        }
      }
      ids.add(id);
      resElements.put(id,resElement);
    }
  }
  JSONArray resFavorites=getFavoriteList(resElements,types);
  result.put(JsonCntPage.favorites.name(),resFavorites);
  JSONArray resRecent=getRecentList(resElements,types);
  result.put(JsonCntPage.recent.name(),resRecent);
  return result;
}
