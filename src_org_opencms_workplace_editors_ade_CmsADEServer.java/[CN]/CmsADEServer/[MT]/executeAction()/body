{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  CmsObject cms=getCmsObject();
  if (!checkParameters(request,result,ReqParam.action.name(),ReqParam.locale.name(),ReqParam.cntpage.name(),ReqParam.params.name(),ReqParam.uri.name())) {
    return result;
  }
  String actionParam=request.getParameter(ReqParam.action.name());
  Action action=Action.valueOf(actionParam.toUpperCase());
  String localeParam=request.getParameter(ReqParam.locale.name());
  cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));
  String cntPageParam=request.getParameter(ReqParam.cntpage.name());
  String uriParam=request.getParameter(ReqParam.uri.name());
  JSONObject reqParams=new JSONObject(request.getParameter(ReqParam.params.name()));
  CmsFlexController.getController(request).getCurrentRequest().addParameterMap(CmsRequestUtil.getParameterMapFromJSON(reqParams));
  JSONObject data=new JSONObject();
  if (checkParameters(request,null,ReqParam.data.name())) {
    String dataParam=request.getParameter(ReqParam.data.name());
    data=new JSONObject(dataParam);
  }
  if (action.equals(Action.ALL)) {
    if (!checkParameters(data,result,JsonCntPage.containers.name())) {
      return result;
    }
    Set<String> cntTypes=new HashSet<String>();
    JSONArray types=data.optJSONArray(JsonCntPage.containers.name());
    for (int i=0; i < types.length(); i++) {
      cntTypes.add(types.getString(i));
    }
    CmsResource cntPageRes=cms.readResource(cntPageParam);
    CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,cntPageRes,request);
    CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
    result=getContainerPage(cntPageRes,cntPage,uriParam.equals(cntPageParam) ? null : uriParam,cntTypes);
  }
 else   if (action.equals(Action.ELEM)) {
    if (!checkParameters(data,result,JsonRequest.elem.name(),JsonCntPage.containers.name())) {
      return result;
    }
    Set<String> cntTypes=new HashSet<String>();
    JSONArray types=data.optJSONArray(JsonCntPage.containers.name());
    for (int i=0; i < types.length(); i++) {
      cntTypes.add(types.getString(i));
    }
    JSONArray elems=data.optJSONArray(JsonRequest.elem.name());
    if (elems == null) {
      elems=new JSONArray();
      elems.put(data.optString(JsonRequest.elem.name()));
    }
    result.put(JsonResponse.elements.name(),getElements(elems,uriParam,request,cntTypes));
  }
 else   if (action.equals(Action.ELEMPROPS)) {
    if (!checkParameters(data,result,JsonRequest.elem.name(),JsonRequest.properties.name())) {
      return result;
    }
    String elemParam=data.optString(JsonRequest.elem.name());
    JSONObject properties=data.optJSONObject(JsonRequest.properties.name());
    CmsContainerElementBean element=createElement(m_manager.convertToServerId(elemParam),properties);
    m_sessionCache.setCacheContainerElement(element.getClientId(),element);
    JSONObject resElements=new JSONObject();
    CmsResource cntPageRes=cms.readResource(cntPageParam);
    CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,cntPageRes,request);
    CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
    CmsElementUtil elemUtil=new CmsElementUtil(cms,uriParam,request,getResponse());
    resElements.put(element.getClientId(),elemUtil.getElementData(element,cntPage.getTypes()));
    result.put(JsonResponse.elements.name(),resElements);
  }
 else   if (action.equals(Action.GET)) {
    CmsResource cntPageRes=cms.readResource(cntPageParam);
    CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,cntPageRes,request);
    CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
    if (checkParameters(data,null,JsonRequest.fav.name())) {
      result.put(JsonResponse.favorites.name(),getFavoriteList(null,cntPage.getTypes()));
    }
    if (checkParameters(data,result,JsonRequest.rec.name())) {
      result.put(JsonResponse.recent.name(),getRecentList(null,cntPage.getTypes()));
    }
    return result;
  }
 else   if (action.equals(Action.SEARCH)) {
    CmsSearchOptions searchOptions=getSearchOptions(data);
    CmsResource cntPageRes=cms.readResource(cntPageParam);
    CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,cntPageRes,request);
    CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
    JSONObject searchResult=getSearchResult(cntPageParam,searchOptions,cntPage.getTypes());
    result.merge(searchResult,true,false);
  }
 else   if (action.equals(Action.LS)) {
    CmsSearchOptions searchOptions=getSearchOptions(data);
    CmsResource cntPageRes=cms.readResource(cntPageParam);
    CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,cntPageRes,request);
    CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
    JSONObject searchResult=getLastSearchResult(cntPageParam,searchOptions,cntPage.getTypes());
    CmsSearchOptions oldOptions=m_sessionCache.getSearchOptions();
    if (oldOptions != null) {
      result.put(JsonSearch.type.name(),oldOptions.getTypes());
      result.put(JsonSearch.text.name(),oldOptions.getText());
      result.put(JsonSearch.location.name(),oldOptions.getLocation());
    }
    result.merge(searchResult,true,false);
  }
 else   if (action.equals(Action.NEW)) {
    if (!checkParameters(data,result,JsonRequest.type.name())) {
      return result;
    }
    String type=data.optString(JsonRequest.type.name());
    CmsResource newResource=m_manager.createNewElement(cms,cntPageParam,request,type);
    result.put(JsonNewRes.id.name(),newResource.getStructureId().toString());
    result.put(JsonNewRes.uri.name(),cms.getSitePath(newResource));
  }
 else   if (action.equals(Action.PROPS)) {
    if (!checkParameters(data,result,JsonRequest.elem.name())) {
      return result;
    }
    String elemParam=data.optString(JsonRequest.elem.name());
    CmsElementUtil elemUtil=new CmsElementUtil(cms,uriParam,request,getResponse());
    CmsContainerElementBean element=getCachedElement(elemParam);
    result.put(JsonRequest.properties.name(),elemUtil.getElementPropertyInfo(element));
  }
 else   if (action.equals(Action.SET)) {
    if (checkParameters(data,null,JsonRequest.fav.name())) {
      JSONArray list=data.optJSONArray(JsonRequest.fav.name());
      m_manager.saveFavoriteList(cms,arrayToElementList(list));
    }
 else     if (checkParameters(data,result,JsonRequest.rec.name())) {
      JSONArray list=data.optJSONArray(JsonRequest.rec.name());
      m_sessionCache.setCacheRecentList(arrayToElementList(list));
    }
 else {
      return result;
    }
  }
 else   if (action.equals(Action.CNT)) {
    setContainerPage(cntPageParam,data);
  }
 else   if (action.equals(Action.STARTEDIT)) {
    try {
      cms.lockResourceTemporary(cntPageParam);
    }
 catch (    CmsException e) {
      error(result,e.getLocalizedMessage(getWorkplaceLocale()));
    }
  }
 else   if (action.equals(Action.STOPEDIT)) {
    try {
      cms.unlockResource(cntPageParam);
    }
 catch (    CmsException e) {
      error(result,e.getLocalizedMessage(getWorkplaceLocale()));
    }
  }
 else   if (action.equals(Action.DEL)) {
    if (!checkParameters(data,result,JsonRequest.elem.name())) {
      return result;
    }
    JSONArray elems=data.optJSONArray(JsonRequest.elem.name());
    deleteElements(elems);
  }
 else   if (action.equals(Action.SUBCNT)) {
    if (!checkParameters(data,result,JsonRequest.elem.name())) {
      return result;
    }
    try {
      setSubContainer(data.getJSONObject(JsonRequest.elem.name()));
    }
 catch (    Exception e) {
      error(result,e.getLocalizedMessage());
    }
  }
 else   if (action.equals(Action.NEWSUB)) {
    if (!checkParameters(data,result,JsonRequest.elem.name())) {
      return result;
    }
    try {
      CmsResource newSub=createNewSubContainer(cntPageParam,request);
      JSONObject subcontainer=data.getJSONObject(JsonRequest.elem.name());
      subcontainer.put(CmsElementUtil.JsonElement.file.name(),cms.getSitePath(newSub));
      setSubContainer(subcontainer);
      result.put(JsonNewRes.id.name(),newSub.getStructureId().toString());
      result.put(JsonNewRes.uri.name(),cms.getSitePath(newSub));
    }
 catch (    Exception e) {
      error(result,e.getLocalizedMessage());
    }
  }
 else {
    error(result,Messages.get().getBundle(getWorkplaceLocale()).key(Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,ReqParam.action.name(),actionParam));
  }
  return result;
}
