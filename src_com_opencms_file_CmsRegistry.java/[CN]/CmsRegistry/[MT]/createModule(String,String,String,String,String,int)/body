{
  if (moduleExists(modulename)) {
    throw new CmsException("Module exists already " + modulename,CmsException.C_REGISTRY_ERROR);
  }
  if (!hasAccess()) {
    throw new CmsException("No access to perform the action 'createModule'",CmsException.C_REGISTRY_ERROR);
  }
  String moduleType=CmsRegistry.C_MODULE_TYPE_TRADITIONAL;
  StringBuffer moduleString=new StringBuffer();
  moduleString.append(C_EMPTY_MODULE[0] + moduleType);
  moduleString.append(C_EMPTY_MODULE[1] + modulename);
  moduleString.append(C_EMPTY_MODULE[2] + niceModulename);
  moduleString.append(C_EMPTY_MODULE[3] + version);
  moduleString.append(C_EMPTY_MODULE[4] + description);
  moduleString.append(C_EMPTY_MODULE[5] + author);
  moduleString.append(C_EMPTY_MODULE[6] + createDate);
  moduleString.append(C_EMPTY_MODULE[7]);
  moduleString.append(C_EXPORTPOINT[0] + "/system/modules/" + modulename+ "/classes/");
  moduleString.append(C_EXPORTPOINT[1] + "WEB-INF/classes/" + C_EXPORTPOINT[2]);
  moduleString.append(C_EXPORTPOINT[0] + "/system/modules/" + modulename+ "/lib/");
  moduleString.append(C_EXPORTPOINT[1] + "WEB-INF/lib/" + C_EXPORTPOINT[2]);
  moduleString.append(C_EMPTY_MODULE[8]);
  Document doc;
  try {
    doc=parse(moduleString.toString().getBytes(I_CmsXmlParser.C_XML_ENCODING));
  }
 catch (  UnsupportedEncodingException uee) {
    doc=parse(moduleString.toString().getBytes());
  }
  m_xmlReg.getElementsByTagName("modules").item(0).appendChild(getXmlParser().importNode(m_xmlReg,doc.getFirstChild()));
  saveRegistry();
}
