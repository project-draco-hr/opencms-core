{
  if (!hasAccess()) {
    throw new CmsSecurityException(CmsSecurityException.C_SECURITY_NO_REGISTRY_PERMISSIONS);
  }
  try {
    Element module=getModuleElement(modulename);
    Element params=(Element)(module.getElementsByTagName("parameters").item(0));
    while (params.hasChildNodes()) {
      params.removeChild(params.getFirstChild());
    }
    for (int i=0; i < names.size(); i++) {
      Element para=m_xmlReg.createElement("para");
      params.appendChild(para);
      Element name=m_xmlReg.createElement("name");
      Element desc=m_xmlReg.createElement("description");
      Element type=m_xmlReg.createElement("type");
      Element value=m_xmlReg.createElement("value");
      name.appendChild(m_xmlReg.createTextNode(names.elementAt(i).toString()));
      desc.appendChild(m_xmlReg.createCDATASection(descriptions.elementAt(i).toString()));
      type.appendChild(m_xmlReg.createTextNode(types.elementAt(i).toString()));
      value.appendChild(m_xmlReg.createTextNode(values.elementAt(i).toString()));
      para.appendChild(name);
      para.appendChild(desc);
      para.appendChild(type);
      para.appendChild(value);
    }
    saveRegistry();
    Class eventClass=getModuleMaintenanceEventClass(modulename);
    try {
      Class declaration[]={CmsObject.class};
      Object arguments[]={m_cms};
      Method eventMethod=eventClass.getMethod(C_EVENT_METHOD_NAME_UPDATE_PARAMETER,declaration);
      eventMethod.invoke(null,arguments);
    }
 catch (    Exception exc) {
    }
  }
 catch (  Exception exc) {
  }
}
