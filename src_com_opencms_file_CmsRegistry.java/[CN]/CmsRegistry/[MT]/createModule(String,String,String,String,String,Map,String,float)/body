{
  if (moduleExists(modulename)) {
    throw new CmsException("Module exists already " + modulename,CmsException.C_REGISTRY_ERROR);
  }
  if (!hasAccess()) {
    throw new CmsSecurityException(CmsSecurityException.C_SECURITY_NO_REGISTRY_PERMISSIONS);
  }
  StringBuffer moduleString=new StringBuffer();
  moduleString.append(C_EMPTY_MODULE[0] + type);
  moduleString.append(C_EMPTY_MODULE[1] + modulename);
  moduleString.append(C_EMPTY_MODULE[2] + niceModulename);
  moduleString.append(C_EMPTY_MODULE[3] + version);
  moduleString.append(C_EMPTY_MODULE[4] + description);
  moduleString.append(C_EMPTY_MODULE[5] + author);
  moduleString.append(C_EMPTY_MODULE[6] + createDate);
  moduleString.append(C_EMPTY_MODULE[7]);
  Iterator i=exportPoints.keySet().iterator();
  while (i.hasNext()) {
    String key=(String)i.next();
    String value=(String)exportPoints.get(key);
    moduleString.append(C_EXPORTPOINT[0]);
    moduleString.append(key);
    moduleString.append(C_EXPORTPOINT[1]);
    moduleString.append(value);
    moduleString.append(C_EXPORTPOINT[2]);
  }
  moduleString.append(C_EMPTY_MODULE[8]);
  Document doc;
  try {
    doc=parse(moduleString.toString().getBytes(OpenCms.getSystemInfo().getDefaultEncoding()));
  }
 catch (  UnsupportedEncodingException uee) {
    doc=parse(moduleString.toString().getBytes());
  }
  m_xmlReg.getElementsByTagName("modules").item(0).appendChild(getXmlParser().importNode(m_xmlReg,doc.getFirstChild()));
  saveRegistry();
}
