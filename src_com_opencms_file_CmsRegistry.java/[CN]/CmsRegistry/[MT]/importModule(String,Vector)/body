{
  if (!hasAccess()) {
    throw new CmsException("No access to perform the action 'importModule'",CmsException.C_REGISTRY_ERROR);
  }
  Element newModule=getModuleElementFromImport(moduleZip);
  String newModuleName=newModule.getElementsByTagName("name").item(0).getFirstChild().getNodeValue();
  String newModuleVersion=newModule.getElementsByTagName("version").item(0).getFirstChild().getNodeValue();
  if (moduleExists(newModuleName)) {
    throw new CmsException("The module " + newModuleName + " exists already",CmsException.C_REGISTRY_ERROR);
  }
  Vector dependencies=checkDependencies(newModule);
  if (dependencies.size() != 0) {
    throw new CmsException("the dependencies for the module are not fulfilled.",CmsException.C_REGISTRY_ERROR);
  }
  Vector resourceNames=new Vector();
  Vector resourceCodes=new Vector();
  CmsImport cmsImport=new CmsImport(moduleZip,"/",m_cms,new CmsShellReport());
  cmsImport.importResources(exclusion,resourceNames,resourceCodes,"module",newModuleName + "_" + newModuleVersion);
  Element regModules=(Element)(m_xmlReg.getElementsByTagName("modules").item(0));
  Node uploadDate=newModule.getOwnerDocument().createElement("uploaddate");
  uploadDate.appendChild(newModule.getOwnerDocument().createTextNode(m_dateFormat.format(new java.util.Date())));
  newModule.appendChild(uploadDate);
  Node uploadBy=newModule.getOwnerDocument().createElement("uploadedby");
  uploadBy.appendChild(newModule.getOwnerDocument().createTextNode(m_cms.getRequestContext().currentUser().getName()));
  newModule.appendChild(uploadBy);
  Node files=newModule.getOwnerDocument().createElement("files");
  for (int i=0; i < resourceNames.size(); i++) {
    Node file=newModule.getOwnerDocument().createElement("file");
    files.appendChild(file);
    Node name=newModule.getOwnerDocument().createElement("name");
    file.appendChild(name);
    Node checksum=newModule.getOwnerDocument().createElement("checksum");
    file.appendChild(checksum);
    name.appendChild(newModule.getOwnerDocument().createTextNode((String)resourceNames.elementAt(i)));
    checksum.appendChild(newModule.getOwnerDocument().createTextNode(com.opencms.util.Encoder.escape((String)resourceCodes.elementAt(i))));
  }
  newModule.appendChild(files);
  Node newNode=getXmlParser().importNode(m_xmlReg,newModule);
  regModules.appendChild(newNode);
  saveRegistry();
  try {
    init();
  }
 catch (  Exception exc) {
    throw new CmsException("couldn't init registry",CmsException.C_REGISTRY_ERROR,exc);
  }
  Class eventClass=getModuleMaintenanceEventClass(newModuleName);
  try {
    Class declaration[]={CmsObject.class};
    Object arguments[]={m_cms};
    Method eventMethod=eventClass.getMethod(C_UPLOAD_EVENT_METHOD_NAME,declaration);
    eventMethod.invoke(null,arguments);
  }
 catch (  Exception exc) {
  }
}
