{
  setEnabled(true);
  m_textbox.setStyleName(CSS.textBox());
  m_textbox.getElement().setId("CmsTextBox_" + (idCounter++));
  m_textbox.addMouseOverHandler(new MouseOverHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.MouseOverHandler#onMouseOver(com.google.gwt.event.dom.client.MouseOverEvent)
 */
    public void onMouseOver(    MouseOverEvent event){
      if (!isPreventShowError()) {
        showError();
      }
    }
  }
);
  m_textbox.addMouseOutHandler(new MouseOutHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.MouseOutHandler#onMouseOut(com.google.gwt.event.dom.client.MouseOutEvent)
 */
    public void onMouseOut(    MouseOutEvent event){
      hideError();
    }
  }
);
  m_textbox.addFocusHandler(new FocusHandler(){
    public void onFocus(    FocusEvent event){
      setGhostStyleEnabled(false);
    }
  }
);
  m_textbox.addBlurHandler(new BlurHandler(){
    public void onBlur(    BlurEvent event){
      setGhostStyleEnabled(m_ghostMode);
    }
  }
);
  m_textboxContainer.setStyleName(CSS.textBoxPanel());
  m_textboxContainer.addStyleName(I_CmsLayoutBundle.INSTANCE.generalCss().cornerAll());
  m_textboxContainer.addStyleName(I_CmsLayoutBundle.INSTANCE.generalCss().textMedium());
  m_panel.add(m_textboxContainer);
  m_panel.add(m_error);
  m_textboxContainer.add(m_textbox);
  m_textboxContainer.setPaddingX(4);
  initWidget(m_panel);
  m_textbox.addValueChangeHandler(new ValueChangeHandler<String>(){
    /** 
 * @see com.google.gwt.event.logical.shared.ValueChangeHandler#onValueChange(ValueChangeEvent event) 
 */
    public void onValueChange(    ValueChangeEvent<String> event){
      setGhostMode(false);
      if ((m_ghostValue != null) && "".equals(m_textbox.getValue())) {
        m_ghostMode=true;
        setGhostStyleEnabled(true);
        m_textbox.setValue(m_ghostValue);
      }
      fireValueChangedEvent();
    }
  }
);
  m_textbox.addKeyPressHandler(new KeyPressHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.KeyPressHandler#onKeyPress(com.google.gwt.event.dom.client.KeyPressEvent)
 */
    public void onKeyPress(    KeyPressEvent event){
      int keyCode=event.getNativeEvent().getKeyCode();
      if (!isNavigationKey(keyCode)) {
        setGhostMode(false);
      }
    }
  }
);
}
