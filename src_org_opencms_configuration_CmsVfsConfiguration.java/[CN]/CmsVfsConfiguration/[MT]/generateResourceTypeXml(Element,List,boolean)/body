{
  for (int i=0; i < resourceTypes.size(); i++) {
    I_CmsResourceType resType=(I_CmsResourceType)resourceTypes.get(i);
    if (resType.isAdditionalModuleResourceType() == module) {
      Element resourceType=startNode.addElement(N_TYPE).addAttribute(A_CLASS,resType.getClass().getName());
      resourceType.addAttribute(A_NAME,resType.getTypeName());
      resourceType.addAttribute(A_ID,String.valueOf(resType.getTypeId()));
      List mappings=(resType).getMapping();
      for (int j=0; j < mappings.size(); j++) {
        Element mapping=resourceType.addElement(N_MAPPING);
        mapping.addAttribute(A_SUFFIX,(String)mappings.get(j));
      }
      Map prop=resType.getConfiguration();
      if (prop != null) {
        List sortedRuntimeProperties=new ArrayList(prop.keySet());
        Collections.sort(sortedRuntimeProperties);
        Iterator it=sortedRuntimeProperties.iterator();
        while (it.hasNext()) {
          String key=(String)it.next();
          Object valueObject=prop.get(key);
          String value=new String();
          if (valueObject instanceof String) {
            value=(String)valueObject;
          }
 else           if (valueObject instanceof Integer) {
            value=((Integer)valueObject).toString();
          }
          resourceType.addElement(N_PARAM).addAttribute(A_NAME,key).addText(value);
        }
      }
    }
  }
}
