{
  if (OpenCms.getRunLevel() >= OpenCms.RUNLEVEL_3_SHELL_ACCESS) {
    m_resourceManager=OpenCms.getResourceManager();
    m_xmlContentTypeManager=OpenCms.getXmlContentTypeManager();
    m_defaultFiles=OpenCms.getDefaultFiles();
  }
  Element vfs=parent.addElement(N_VFS);
  Element resources=vfs.addElement(N_RESOURCES);
  Element resourceloadersElement=resources.addElement(N_RESOURCELOADERS);
  for (  I_CmsResourceLoader loader : m_resourceManager.getLoaders()) {
    Element loaderNode=resourceloadersElement.addElement(N_LOADER);
    loaderNode.addAttribute(A_CLASS,loader.getClass().getName());
    CmsParameterConfiguration loaderConfiguration=loader.getConfiguration();
    if (loaderConfiguration != null) {
      loaderConfiguration.appendToXml(loaderNode);
    }
  }
  Element resourcetypesElement=resources.addElement(N_RESOURCETYPES);
  List<I_CmsResourceType> resourceTypes=new ArrayList<I_CmsResourceType>();
  if (m_resourceManager.getResTypeUnknownFolder() != null) {
    resourceTypes.add(m_resourceManager.getResTypeUnknownFolder());
  }
  if (m_resourceManager.getResTypeUnknownFile() != null) {
    resourceTypes.add(m_resourceManager.getResTypeUnknownFile());
  }
  resourceTypes.addAll(m_resourceManager.getResourceTypes());
  generateResourceTypeXml(resourcetypesElement,resourceTypes,false);
  Element collectorsElement=resources.addElement(N_COLLECTORS);
  for (  I_CmsResourceCollector collector : m_resourceManager.getRegisteredContentCollectors()) {
    collectorsElement.addElement(N_COLLECTOR).addAttribute(A_CLASS,collector.getClass().getName()).addAttribute(A_ORDER,String.valueOf(collector.getOrder()));
  }
  Element namegeneratorElement=resources.addElement(N_NAMEGENERATOR);
  String nameGeneratorClass=m_resourceManager.getNameGenerator().getClass().getName();
  namegeneratorElement.addAttribute(A_CLASS,nameGeneratorClass);
  Element mimeTypesElement=resources.addElement(N_MIMETYPES);
  for (  CmsMimeType type : m_resourceManager.getMimeTypes()) {
    mimeTypesElement.addElement(N_MIMETYPE).addAttribute(A_EXTENSION,type.getExtension()).addAttribute(A_TYPE,type.getType());
  }
  Element relationTypesElement=resources.addElement(N_RELATIONTYPES);
  for (  CmsRelationType type : m_resourceManager.getRelationTypes()) {
    relationTypesElement.addElement(N_RELATIONTYPE).addAttribute(A_NAME,type.getName()).addAttribute(A_TYPE,type.getType());
  }
  boolean writeConfig=false;
  for (  CmsHtmlConverterOption converter : m_resourceManager.getHtmlConverters()) {
    if (!converter.isDefault()) {
      writeConfig=true;
      break;
    }
  }
  if (writeConfig) {
    Element htmlConvertersElement=resources.addElement(N_HTML_CONVERTERS);
    for (    CmsHtmlConverterOption converter : m_resourceManager.getHtmlConverters()) {
      Element converterElement=htmlConvertersElement.addElement(N_HTML_CONVERTER).addAttribute(A_NAME,converter.getName());
      converterElement.addAttribute(A_CLASS,converter.getClassName());
    }
  }
  Element defaultFileElement=vfs.addElement(N_DEFAULTFILES);
  for (  String element : m_defaultFiles) {
    defaultFileElement.addElement(N_DEFAULTFILE).addAttribute(A_NAME,element);
  }
  Element translationsElement=vfs.addElement(N_TRANSLATIONS);
  Element fileTransElement=translationsElement.addElement(N_FILETRANSLATIONS).addAttribute(A_ENABLED,String.valueOf(m_fileTranslationEnabled));
  for (  String translation : m_fileTranslations) {
    fileTransElement.addElement(N_TRANSLATION).setText(translation);
  }
  Element folderTransElement=translationsElement.addElement(N_FOLDERTRANSLATIONS).addAttribute(A_ENABLED,String.valueOf(m_folderTranslationEnabled));
  for (  String translation : m_folderTranslations) {
    folderTransElement.addElement(N_TRANSLATION).setText(translation);
  }
  Element xmlContentsElement=vfs.addElement(N_XMLCONTENT);
  Element xmlWidgetsElement=xmlContentsElement.addElement(N_WIDGETS);
  for (  String widget : m_xmlContentTypeManager.getRegisteredWidgetNames()) {
    Element widgetElement=xmlWidgetsElement.addElement(N_WIDGET).addAttribute(A_CLASS,widget);
    String alias=m_xmlContentTypeManager.getRegisteredWidgetAlias(widget);
    if (alias != null) {
      widgetElement.addAttribute(A_ALIAS,alias);
    }
    String defaultConfiguration=m_xmlContentTypeManager.getWidgetDefaultConfiguration(widget);
    if (CmsStringUtil.isNotEmpty(defaultConfiguration)) {
      widgetElement.addAttribute(A_CONFIGURATION,defaultConfiguration);
    }
  }
  Element xmlSchemaTypesElement=xmlContentsElement.addElement(N_SCHEMATYPES);
  for (  I_CmsXmlSchemaType type : m_xmlContentTypeManager.getRegisteredSchemaTypes()) {
    I_CmsWidget widget=m_xmlContentTypeManager.getWidgetDefault(type.getTypeName());
    xmlSchemaTypesElement.addElement(N_SCHEMATYPE).addAttribute(A_CLASS,type.getClass().getName()).addAttribute(A_DEFAULTWIDGET,widget.getClass().getName());
  }
  return vfs;
}
