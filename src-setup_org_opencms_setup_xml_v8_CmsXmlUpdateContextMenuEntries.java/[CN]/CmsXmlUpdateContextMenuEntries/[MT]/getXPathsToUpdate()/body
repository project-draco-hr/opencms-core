{
  if (m_updateActions == null) {
    m_updateActions=new HashMap<String,CmsXmlUpdateAction>();
    final String pointerAdvanced=xpathForType("pointer") + "/" + CmsWorkplaceConfiguration.N_EDITOPTIONS+ "/"+ CmsWorkplaceConfiguration.N_CONTEXTMENU+ "/"+ CmsWorkplaceConfiguration.N_ENTRY+ xpathAttr(I_CmsXmlConfiguration.A_KEY,"GUI_EXPLORER_CONTEXT_ADVANCED_0");
    CmsXmlUpdateAction updatePointerTouch=new CmsXmlUpdateAction(){
      @SuppressWarnings("unchecked") @Override public boolean executeUpdate(      Document doc,      String xpath,      boolean forReal){
        String touchPath=xpath + "/" + CmsWorkplaceConfiguration.N_ENTRY+ xpathAttr(I_CmsXmlConfiguration.A_KEY,"GUI_EXPLORER_CONTEXT_TOUCH_0");
        if (doc.selectSingleNode(touchPath) != null) {
          return false;
        }
        org.dom4j.Element parent=(org.dom4j.Element)(doc.selectSingleNode(xpath));
        try {
          parent.elements().add(0,createElementFromXml("<entry key=\"GUI_EXPLORER_CONTEXT_TOUCH_0\" uri=\"commons/touch.jsp\" rule=\"standard\"/>"));
          parent.elements().add(1,createElementFromXml("<separator/>"));
        }
 catch (        DocumentException de) {
          System.out.println("Failed to update context menu entry for type pointer!");
          return false;
        }
        return true;
      }
    }
;
    m_updateActions.put(pointerAdvanced,updatePointerTouch);
    final String xmlcontentContext=xpathForType("xmlcontent") + "/" + CmsWorkplaceConfiguration.N_EDITOPTIONS+ "/"+ CmsWorkplaceConfiguration.N_CONTEXTMENU;
    m_updateActions.put(xmlcontentContext,new CmsXmlUpdateAction(){
      @Override public boolean executeUpdate(      Document doc,      String xpath,      boolean forReal){
        String availabilityEntry=xpath + "/" + CmsWorkplaceConfiguration.N_ENTRY+ xpathAttr(I_CmsXmlConfiguration.A_KEY,"GUI_EXPLORER_CONTEXT_AVAILABILITY_0");
        if (doc.selectSingleNode(availabilityEntry) != null) {
          return false;
        }
        CmsSetupXmlHelper.setValue(doc,availabilityEntry + "/@" + I_CmsXmlConfiguration.A_NAME,"org.opencms.gwt.client.ui.CmsAvailabilityDialog");
        CmsSetupXmlHelper.setValue(doc,availabilityEntry + "/@" + CmsWorkplaceConfiguration.A_RULE,"containerpage");
        return true;
      }
    }
);
  }
  return new ArrayList<String>(m_updateActions.keySet());
}
