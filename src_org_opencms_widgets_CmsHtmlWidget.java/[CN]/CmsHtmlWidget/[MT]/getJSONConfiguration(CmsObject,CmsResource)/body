{
  JSONObject result=new JSONObject();
  CmsHtmlWidgetOption widgetOptions=getHtmlWidgetOption();
  CmsEditorDisplayOptions options=OpenCms.getWorkplaceManager().getEditorDisplayOptions();
  Properties displayOptions=options.getDisplayOptions(cms);
  try {
    if (options.showElement("gallery.enhancedoptions",displayOptions)) {
      result.put("cmsGalleryEnhancedOptions",true);
    }
    if (options.showElement("gallery.usethickbox",displayOptions)) {
      result.put("cmsGalleryUseThickbox",true);
    }
    result.put("fullpage",widgetOptions.isFullPage());
    List<String> toolbarItems=widgetOptions.getButtonBarShownItems();
    result.put("toolbar_items",toolbarItems);
    result.put("language",OpenCms.getWorkplaceManager().getWorkplaceLocale(cms).getLanguage());
    String editorHeight=widgetOptions.getEditorHeight();
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(editorHeight)) {
      editorHeight=editorHeight.replaceAll("px","");
      result.put("height",editorHeight);
    }
    boolean cssConfigured=false;
    String cssPath="";
    if (widgetOptions.useCss()) {
      cssPath=widgetOptions.getCssPath();
      widgetOptions.setCssPath(null);
      cssConfigured=true;
    }
 else     if (OpenCms.getWorkplaceManager().getEditorCssHandlers().size() > 0) {
      Iterator<I_CmsEditorCssHandler> i=OpenCms.getWorkplaceManager().getEditorCssHandlers().iterator();
      try {
        String editedResourceSitePath=resource == null ? null : cms.getSitePath(resource);
        while (i.hasNext()) {
          I_CmsEditorCssHandler handler=i.next();
          if (handler.matches(cms,editedResourceSitePath)) {
            cssPath=handler.getUriStyleSheet(cms,editedResourceSitePath);
            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(cssPath)) {
              cssConfigured=true;
            }
            break;
          }
        }
      }
 catch (      Exception e) {
      }
    }
    if (cssConfigured) {
      result.put("content_css",OpenCms.getLinkManager().substituteLink(cms,cssPath));
    }
    if (widgetOptions.showStylesFormat()) {
      try {
        CmsFile file=cms.readFile(widgetOptions.getStylesFormatPath());
        String characterEncoding=OpenCms.getSystemInfo().getDefaultEncoding();
        result.put("style_formats",new String(file.getContents(),characterEncoding));
      }
 catch (      CmsException cmsException) {
        LOG.error("Can not open file:" + widgetOptions.getStylesFormatPath(),cmsException);
      }
catch (      UnsupportedEncodingException ex) {
        LOG.error(ex);
      }
    }
    String formatSelectOptions=widgetOptions.getFormatSelectOptions();
    if (!CmsStringUtil.isEmpty(formatSelectOptions) && !widgetOptions.isButtonHidden(CmsHtmlWidgetOption.OPTION_FORMATSELECT)) {
      formatSelectOptions=StringUtils.replace(formatSelectOptions,";",",");
      result.put("block_formats",formatSelectOptions);
    }
    CmsWorkplaceEditorConfiguration editorConfig=OpenCms.getWorkplaceManager().getWorkplaceEditorManager().getEditorConfiguration("tinymce");
    Boolean pasteText=Boolean.valueOf(editorConfig.getParameters().get("paste_text"));
    JSONObject directOptions=new JSONObject();
    directOptions.put("paste_text_sticky_default",pasteText);
    directOptions.put("paste_text_sticky",Boolean.TRUE);
    result.put("tinyMceOptions",directOptions);
  }
 catch (  JSONException e) {
    LOG.error(e.getLocalizedMessage(),e);
  }
  return result;
}
