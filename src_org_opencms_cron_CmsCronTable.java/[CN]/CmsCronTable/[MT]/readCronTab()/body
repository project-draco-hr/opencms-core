{
  Element cronjob=null;
  CmsCronEntry cronEntry=null;
  int min=I_CmsConstants.C_UNKNOWN_ID;
  int hour=I_CmsConstants.C_UNKNOWN_ID;
  int dayOfMonth=I_CmsConstants.C_UNKNOWN_ID;
  int month=I_CmsConstants.C_UNKNOWN_ID;
  int dayOfWeek=I_CmsConstants.C_UNKNOWN_ID;
  String userName=null;
  String groupName=null;
  String className=null;
  String textValue=null;
  String params=null;
  try {
    CmsRegistry registry=OpenCms.getRegistry();
    Element system=registry.getDom4jSystemElement();
    Element crontab=system.element("crontab");
    if (crontab != null) {
      List cronjobs=crontab.elements();
      Iterator i=cronjobs.iterator();
      while (i.hasNext()) {
        cronjob=(Element)i.next();
        try {
          textValue=cronjob.element("min").getText().trim();
          if ("*".equals(textValue)) {
            min=I_CmsConstants.C_UNKNOWN_ID;
          }
 else {
            min=Integer.parseInt(textValue);
          }
          textValue=cronjob.element("hour").getText().trim();
          if ("*".equals(textValue)) {
            hour=I_CmsConstants.C_UNKNOWN_ID;
          }
 else {
            hour=Integer.parseInt(textValue);
          }
          textValue=cronjob.element("dayofmonth").getText().trim();
          if ("*".equals(textValue)) {
            dayOfMonth=I_CmsConstants.C_UNKNOWN_ID;
          }
 else {
            dayOfMonth=Integer.parseInt(textValue);
          }
          textValue=cronjob.element("month").getText().trim();
          if ("*".equals(textValue)) {
            month=I_CmsConstants.C_UNKNOWN_ID;
          }
 else {
            month=Integer.parseInt(textValue);
          }
          textValue=cronjob.element("dayofweek").getText().trim();
          if ("*".equals(textValue)) {
            dayOfWeek=I_CmsConstants.C_UNKNOWN_ID;
          }
 else {
            dayOfWeek=Integer.parseInt(textValue);
          }
          userName=cronjob.element("user").getText().trim();
          groupName=cronjob.element("group").getText().trim();
          className=cronjob.element("class").getText().trim();
          params=cronjob.element("params").getText().trim();
          if ("".equals(params)) {
            params=null;
          }
          cronEntry=new CmsCronEntry(min,hour,dayOfWeek,month,dayOfMonth,userName,groupName,className,params);
          m_cronEntries.add(cronEntry);
        }
 catch (        Exception e) {
          if (org.opencms.main.OpenCms.getLog(this).isErrorEnabled()) {
            org.opencms.main.OpenCms.getLog(this).error("Error reading cronjob in registry.xml: " + cronjob.toString(),e);
          }
        }
      }
    }
  }
 catch (  Exception e) {
    if (org.opencms.main.OpenCms.getLog(this).isErrorEnabled()) {
      org.opencms.main.OpenCms.getLog(this).error("Error reading crontab in registry.xml",e);
    }
  }
}
