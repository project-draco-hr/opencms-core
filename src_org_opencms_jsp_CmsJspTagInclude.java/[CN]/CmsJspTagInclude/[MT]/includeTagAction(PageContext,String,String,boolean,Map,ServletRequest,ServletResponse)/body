{
  CmsFlexController controller=(CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME);
  if (target == null) {
    target=controller.getCmsObject().getRequestContext().getUri();
  }
  Map parameterMap=new HashMap();
  if (paramMap != null) {
    parameterMap.putAll(paramMap);
  }
  if (element != null) {
    addParameter(parameterMap,CmsJspTagTemplate.C_TEMPLATE_ELEMENT,element,true);
    if (!("body".equals(element) || "(default)".equals(element))) {
      addParameter(parameterMap,CmsXmlTemplate.C_FRAME_SELECTOR,element,true);
    }
  }
  boolean isPageTarget=false;
  try {
    target=CmsLinkManager.getAbsoluteUri(target,controller.getCurrentRequest().getElementUri());
    CmsResource resource=controller.getCmsObject().readFileHeader(target);
    isPageTarget=((CmsResourceTypePage.C_RESOURCE_TYPE_ID == resource.getType()));
  }
 catch (  CmsException e) {
    throw new JspException("File not found: " + target,e);
  }
  String bodyAttribute=(String)controller.getCmsObject().getRequestContext().getAttribute(I_CmsConstants.C_XML_BODY_ELEMENT);
  if (bodyAttribute == null) {
    if (isPageTarget) {
      if (!target.startsWith(I_CmsWpConstants.C_VFS_PATH_BODIES)) {
        target=I_CmsWpConstants.C_VFS_PATH_BODIES + target.substring(1);
      }
    }
    if (isPageTarget) {
      addParameter(parameterMap,CmsXmlTemplateLoader.C_ELEMENT_REPLACE,"body:" + target,true);
      target=C_BODYLOADER_URI;
    }
  }
 else {
    if (target.equals(controller.getCmsObject().getRequestContext().getUri())) {
      addParameter(parameterMap,CmsXmlTemplateLoader.C_ELEMENT_REPLACE,"body:" + bodyAttribute,true);
      target=C_BODYLOADER_URI;
    }
 else {
      if (isPageTarget) {
        if (isPageTarget && !target.startsWith(I_CmsWpConstants.C_VFS_PATH_BODIES)) {
          target=I_CmsWpConstants.C_VFS_PATH_BODIES + target.substring(1);
        }
        addParameter(parameterMap,CmsXmlTemplateLoader.C_ELEMENT_REPLACE,"body:" + target,true);
        target=C_BODYLOADER_URI;
      }
    }
  }
  Map oldParameterMap=req.getParameterMap();
  String directEditMode=null;
  String directEditIncludeFile=null;
  if (editable) {
    directEditIncludeFile=(String)context.getRequest().getAttribute(I_CmsEditorActionHandler.C_DIRECT_EDIT_INCLUDE_FILE_URI);
    if (directEditIncludeFile != null) {
      directEditMode=OpenCms.getWorkplaceManager().getEditorActionHandler().getEditMode(controller.getCmsObject(),target,(CmsXmlPage)req.getAttribute(CmsXmlPage.C_ATTRIBUTE_XMLPAGE_OBJECT),element);
    }
  }
  try {
    if (directEditMode != null) {
      req.setAttribute(I_CmsEditorActionHandler.C_DIRECT_EDIT_PARAM_ELEMENT,element);
      req.setAttribute(I_CmsEditorActionHandler.C_DIRECT_EDIT_PARAM_LOCALE,controller.getCmsObject().getRequestContext().getLocale().toString());
      req.setAttribute(I_CmsEditorActionHandler.C_DIRECT_EDIT_PARAM_TARGET,target);
      includeDirectEditElement(context,directEditIncludeFile,I_CmsEditorActionHandler.C_DIRECT_EDIT_AREA_START + "_" + directEditMode,req,res);
    }
    controller.getCurrentRequest().addParameterMap(parameterMap);
    context.getOut().print(CmsFlexResponse.C_FLEX_CACHE_DELIMITER);
    controller.getCurrentResponse().addToIncludeList(target,parameterMap);
    controller.getCurrentRequest().getRequestDispatcher(target).include(req,res);
    if (directEditMode != null) {
      includeDirectEditElement(context,directEditIncludeFile,I_CmsEditorActionHandler.C_DIRECT_EDIT_AREA_END + "_" + directEditMode,req,res);
    }
  }
 catch (  ServletException e) {
    Throwable t;
    if (e.getRootCause() != null) {
      t=e.getRootCause();
    }
 else {
      t=e;
    }
    t=controller.setThrowable(t);
    throw new JspException(imprintExceptionMessage(t,target),t);
  }
catch (  IOException e) {
    Throwable t=controller.setThrowable(e);
    throw new JspException(imprintExceptionMessage(t,target),t);
  }
 finally {
    if (oldParameterMap != null) {
      controller.getCurrentRequest().setParameterMap(oldParameterMap);
    }
  }
}
