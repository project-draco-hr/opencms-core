{
  int findLength;
  if (content == null) {
    return null;
  }
  int stringLength=content.length();
  if (searchString == null || (findLength=searchString.length()) == 0) {
    return content;
  }
  if (replaceItem == null) {
    replaceItem="";
  }
  int replaceLength=replaceItem.length();
  int length;
  if (findLength == replaceLength) {
    length=stringLength;
  }
 else {
    int count;
    int start;
    int end;
    count=0;
    start=0;
    while ((end=content.indexOf(searchString,start)) != -1) {
      count++;
      start=end + findLength;
    }
    if (count == 0) {
      return content;
    }
    length=stringLength - (count * (findLength - replaceLength));
  }
  int start=0;
  int end=content.indexOf(searchString,start);
  if (end == -1) {
    return content;
  }
  StringBuffer sb=new StringBuffer(length);
  while (end != -1) {
    sb.append(content.substring(start,end));
    sb.append(replaceItem);
    start=end + findLength;
    end=content.indexOf(searchString,start);
  }
  end=stringLength;
  sb.append(content.substring(start,end));
  return sb.toString();
}
