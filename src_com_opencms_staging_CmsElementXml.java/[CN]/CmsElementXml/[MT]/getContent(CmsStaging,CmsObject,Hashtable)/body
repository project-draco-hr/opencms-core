{
  byte[] result=null;
  I_CmsTemplate templateClass=this.getTemplateClass(cms,m_className);
  CmsCacheDirectives cd=templateClass.getCacheDirectives(cms,m_templateName,m_elementName,parameters,null);
  boolean streamable=false;
  CmsElementVariant variant=null;
  Object cacheKey=templateClass.getKey(cms,m_templateName,parameters,null);
  boolean cacheable=cd.isInternalCacheable();
  if (cacheable && m_variants.containsKey(cacheKey) && !templateClass.shouldReload(cms,m_templateName,m_elementName,parameters,null)) {
    variant=(CmsElementVariant)m_variants.get(cacheKey);
  }
 else {
    try {
      System.err.println(toString() + " : Variante muss generiert werden.");
      result=templateClass.getContent(cms,m_templateName,m_elementName,parameters);
      cacheKey=templateClass.getKey(cms,m_templateName,parameters,null);
      System.err.println("*** Trying to get variant with key: " + cacheKey);
      variant=(CmsElementVariant)m_variants.get(cacheKey);
      System.err.println(toString() + " : New variant is: " + variant);
    }
 catch (    CmsException e) {
      throw e;
    }
    if (cacheable) {
    }
    if (streamable) {
      result=null;
    }
  }
  try {
    System.err.println("= Start resolving variant " + variant);
    int len=variant.size();
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    for (int i=0; i < len; i++) {
      System.err.print("= Part " + i + " is a ");
      Object o=variant.get(i);
      if (o instanceof String) {
        System.err.println("String");
        baos.write(((String)o).getBytes());
      }
 else       if (o instanceof byte[]) {
        System.err.println("byte array");
        baos.write((byte[])o);
      }
 else       if (o instanceof CmsElementLink) {
        System.err.println("Link");
        String lookupName=((CmsElementLink)o).getElementName();
        System.err.println("= Trying to resolve link \"" + lookupName + "\".");
        CmsElementDefinition elDef=getElementDefinition(lookupName);
        if (elDef != null) {
          A_CmsElement subEl=staging.getElementLocator().get(elDef.getDescriptor());
          System.err.println("= Element defintion for \"" + lookupName + "\" says: ");
          System.err.println("= -> Class    : " + elDef.getClassName());
          System.err.println("= -> Template : " + elDef.getTemplateName());
          if (subEl != null) {
            System.err.println("= Element object found for \"" + lookupName + "\". Calling getContent on this object. ");
            baos.write(subEl.getContent(staging,cms,parameters));
          }
 else {
            System.err.println("= Cannot find Element object for \"" + lookupName + "\". Trying to create a new one. ");
            I_CmsTemplate subTemplClass=getTemplateClass(cms,elDef.getClassName());
            subEl=subTemplClass.createElement(cms,elDef.getTemplateName(),lookupName,parameters);
            staging.getElementLocator().put(elDef.getDescriptor(),subEl);
            System.err.println("= New Element object is: " + subEl);
            baos.write(subEl.getContent(staging,cms,parameters));
          }
        }
 else {
          System.err.println("= No element definition found for \"" + lookupName + "\". Ignoring this link. ");
        }
      }
    }
    result=baos.toByteArray();
  }
 catch (  Exception e) {
    System.err.println("Error while resolving element variant");
    e.printStackTrace();
  }
  return result;
}
