{
  m_eventBus=new SimpleEventBus();
  m_panel=uiBinder.createAndBindUi(this);
  initWidget(m_panel);
  m_selectBoxState=new CmsStyleVariable(m_opener);
  m_selectBoxState.setValue(I_CmsLayoutBundle.INSTANCE.generalCss().cornerAll());
  m_selectorState=new CmsStyleVariable(m_popup);
  m_selectorState.setValue(I_CmsLayoutBundle.INSTANCE.generalCss().cornerBottom());
  m_opener.addStyleName(CSS.selectBoxSelected());
  addHoverHandlers(m_opener);
  addMainPanelHoverHandlers(m_panel);
  m_openClose=new CmsPushButton(I_CmsButton.TRIANGLE_RIGHT,I_CmsButton.TRIANGLE_DOWN);
  m_openClose.setButtonStyle(ButtonStyle.FONT_ICON,null);
  m_openClose.setSize(Size.small);
  m_openClose.addStyleName(CSS.selectIcon());
  m_panel.add(m_openClose);
  m_openClose.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent event){
      if (m_popup.isShowing()) {
        close();
      }
 else {
        open();
      }
    }
  }
);
  m_popup.setWidget(m_selector);
  m_popup.addStyleName(CSS.selectorPopup());
  m_popup.addAutoHidePartner(m_panel.getElement());
  m_popup.addStyleName(CSS.selectBoxSelector());
  m_popup.addStyleName(I_CmsLayoutBundle.INSTANCE.generalCss().cornerBottom());
  m_popup.addStyleName(I_CmsLayoutBundle.INSTANCE.generalCss().textMedium());
  m_popup.addCloseHandler(new CloseHandler<PopupPanel>(){
    /** 
 * @see CloseHandler#onClose(CloseEvent)
 */
    public void onClose(    CloseEvent<PopupPanel> e){
      close();
    }
  }
);
  initOpener();
}
