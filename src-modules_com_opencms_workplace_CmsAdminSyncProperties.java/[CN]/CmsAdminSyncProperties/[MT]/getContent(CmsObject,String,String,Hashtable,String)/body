{
  if (CmsLog.getLog(this).isDebugEnabled() && C_DEBUG) {
    CmsLog.getLog(this).debug("Getting content of element " + ((elementName == null) ? "<root>" : elementName));
    CmsLog.getLog(this).debug("Template file is: " + templateFile);
    CmsLog.getLog(this).debug("Selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlTemplateFile templateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  CmsRequestContext reqCont=cms.getRequestContext();
  I_CmsSession session=CmsXmlTemplateLoader.getSession(reqCont,true);
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  String syncPath=new String();
  String allResources=new String();
  String step=(String)parameters.get(C_STEP);
  syncPath=(String)parameters.get(C_SYNCPATH);
  allResources=(String)parameters.get(C_SYNCRESOURCES);
  if (step == null) {
    if (session.getValue(C_STEP) == null) {
      session.removeValue(C_SYNCPATH);
      session.removeValue(C_SYNCRESOURCES);
      session.removeValue(C_ADDFOLDER);
      session.removeValue("lasturl");
      session.putValue(C_STEP,"nextstep");
    }
  }
 else {
    if ("OK".equalsIgnoreCase(step)) {
      syncPath=(String)parameters.get(C_SYNCPATH);
      allResources=(String)parameters.get(C_SYNCRESOURCES);
      Vector folders=null;
      if (((syncPath == null) || syncPath.equals("")) || ((allResources == null) || allResources.equals(""))) {
        templateSelector="datamissing";
      }
 else {
        session.putValue(C_SYNCPATH,syncPath);
        session.putValue(C_SYNCRESOURCES,allResources);
        folders=parseResources(allResources);
        checkRedundancies(folders);
        Vector notWriteable=new Vector();
        Iterator it=folders.iterator();
        while (it.hasNext()) {
          String source=(String)it.next();
          if (lang.getLanguageValue("title.rootfolder").equals(source)) {
            source="/";
          }
          if (!isReadable(cms,source)) {
            notWriteable.addElement(source);
            templateSelector="errorsyncproperties";
          }
        }
        if ("errorsyncproperties".equals(templateSelector)) {
          templateDocument.setData("details","The following folders were not readable:" + notWriteable.toString());
        }
      }
      if (templateSelector == null || "".equals(templateSelector)) {
        CmsSynchronizeSettings settings=new CmsSynchronizeSettings();
        settings.setEnabled(!"-".equals(syncPath));
        settings.setDestinationPathInRfs(syncPath);
        if (folders != null) {
          settings.setSourceListInVfs(new ArrayList(folders));
        }
        CmsUserSettings userSettings=new CmsUserSettings(cms.getRequestContext().currentUser());
        userSettings.setSynchronizeSettings(settings);
        userSettings.save(cms);
        templateSelector="done";
        session.removeValue(C_STEP);
      }
    }
 else     if ("fromerrorpage".equals(step)) {
      templateDocument.setData(C_SYNCPROJECT,"" + cms.getRequestContext().currentProject().getId());
      templateDocument.setData(C_SYNCPATH,(String)session.getValue(C_SYNCPATH));
      templateDocument.setData(C_ADDFOLDER,"");
      templateDocument.setData(C_SYNCRESOURCES,(String)session.getValue(C_SYNCRESOURCES));
      templateSelector="";
    }
 else     if ("cancel".equals(step)) {
      session.removeValue(C_STEP);
      templateSelector="done";
    }
  }
  if ((syncPath == null) || ("".equals(syncPath))) {
    syncPath=(String)session.getValue(C_SYNCPATH);
  }
  if ((allResources == null) || ("".equals(allResources))) {
    allResources=(String)session.getValue(C_SYNCRESOURCES);
  }
  CmsUserSettings userSettings=new CmsUserSettings(cms.getRequestContext().currentUser());
  CmsSynchronizeSettings settings=userSettings.getSynchronizeSettings();
  if (settings == null) {
    settings=new CmsSynchronizeSettings();
  }
  if ((syncPath == null) || ("".equals(syncPath))) {
    syncPath=settings.getDestinationPathInRfs();
    if (syncPath == null) {
      syncPath="";
    }
  }
  if ((allResources == null) || ("".equals(allResources))) {
    if (settings.getSourceListInVfs().size() > 0) {
      StringBuffer result=new StringBuffer();
      Iterator it=settings.getSourceListInVfs().iterator();
      while (it.hasNext()) {
        result.append(it.next());
        if (it.hasNext()) {
          result.append(';');
        }
      }
      allResources=result.toString();
    }
    if (allResources == null) {
      allResources="";
    }
    if (allResources.endsWith(";")) {
      allResources=allResources.substring(0,allResources.lastIndexOf(";"));
    }
  }
  templateDocument.setData(C_SYNCPROJECT,"" + cms.getRequestContext().currentProject().getId());
  templateDocument.setData(C_SYNCRESOURCES,allResources);
  templateDocument.setData(C_SYNCPATH,syncPath);
  session.putValue(C_SYNCPATH,syncPath);
  session.putValue(C_SYNCRESOURCES,allResources);
  return startProcessing(cms,templateDocument,elementName,parameters,templateSelector);
}
