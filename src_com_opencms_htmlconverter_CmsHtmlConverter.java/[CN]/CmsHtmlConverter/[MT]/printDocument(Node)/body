{
  if (node == null) {
    return;
  }
  int type=node.getNodeType();
  int replaceTag=-1;
  int replaceBlock=-1;
switch (type) {
case Node.DOCUMENT_NODE:
    m_tempString=new StringBuffer(m_configuration.getGlobalPrefix());
  this.printDocument(((Document)node).getDocumentElement());
break;
case Node.ELEMENT_NODE:
replaceBlock=this.indexReplaceBlock(node);
replaceTag=this.indexReplaceTag(node);
if (this.transformStartElement(node,replaceBlock,replaceTag)) {
break;
}
NodeList children=node.getChildNodes();
if (children != null) {
int len=children.getLength();
for (int i=0; i < len; i++) this.printDocument(children.item(i));
}
break;
case Node.TEXT_NODE:
this.transformTextNode(node);
break;
default :
break;
}
switch (type) {
case Node.ELEMENT_NODE:
this.transformEndElement(node,replaceBlock,replaceTag);
break;
case Node.DOCUMENT_NODE:
this.transformEndDocument();
break;
default :
break;
}
}
