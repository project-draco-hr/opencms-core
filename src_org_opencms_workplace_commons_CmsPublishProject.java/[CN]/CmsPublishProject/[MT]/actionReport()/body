{
  getJsp().getRequest().setAttribute(C_SESSION_WORKPLACE_CLASS,this);
switch (getAction()) {
case ACTION_REPORT_END:
    actionCloseDialog();
  break;
case ACTION_REPORT_UPDATE:
setParamAction(REPORT_UPDATE);
getJsp().include(C_FILE_REPORT_OUTPUT);
break;
case ACTION_REPORT_BEGIN:
case ACTION_CONFIRMED:
default :
try {
CmsResource publishResource=null;
boolean directPublish=Boolean.valueOf(getParamDirectpublish()).booleanValue();
if (directPublish) {
publishResource=getCms().readResource(getParamResource(),CmsResourceFilter.ALL);
CmsLock lock=getCms().getLock(publishResource);
if (!lock.isNullLock()) {
getCms().unlockResource(getParamResource());
}
}
 else {
if (getCms().getRequestContext().currentProject().getType() == I_CmsConstants.C_PROJECT_TYPE_TEMPORARY) {
setParamRefreshWorkplace("true");
}
}
if (showUnlockConfirmation()) {
if (directPublish) {
String folderName=getParamResource();
if (!folderName.endsWith("/")) {
  folderName+="/";
}
getCms().lockResource(folderName);
getCms().unlockResource(folderName);
}
 else {
getCms().unlockProject(Integer.parseInt(getParamProjectid()));
}
}
CmsXmlDocumentLinkValidatorThread thread=new CmsXmlDocumentLinkValidatorThread(getCms(),publishResource,"true".equals(getParamPublishsiblings()),getSettings());
setParamAction(REPORT_BEGIN);
setParamThread(thread.getUUID().toString());
setParamThreadHasNext("true");
setParamReportContinueKey("label.button.continue.brokenlinks");
getJsp().include(C_FILE_REPORT_OUTPUT);
}
 catch (Throwable e) {
includeErrorpage(this,e);
}
}
}
