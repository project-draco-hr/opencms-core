{
  fillParamValues(request);
  setParamDialogtype(DIALOG_TYPE);
  m_progress=new CmsProgressWidget(getJsp());
  m_progress.setWidth("300px");
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParamResource()) || isMultiOperation()) {
    setParamDirectpublish(CmsStringUtil.TRUE);
  }
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(getParamAction()) || DIALOG_INITIAL.equals(getParamAction())) {
    setParamPublishsiblings(String.valueOf(getSettings().getUserSettings().getDialogPublishSiblings()));
    setParamSubresources(Boolean.TRUE.toString());
    String defValue=CmsStringUtil.TRUE;
    if (OpenCms.getWorkplaceManager().getDefaultUserSettings().getPublishRelatedResources() == CmsDefaultUserSettings.PUBLISH_RELATED_RESOURCES_MODE_FALSE) {
      defValue=CmsStringUtil.FALSE;
    }
    setParamRelatedresources(defValue);
  }
  if (DIALOG_TYPE.equals(getParamAction())) {
    setAction(ACTION_PUBLISH);
  }
 else   if (DIALOG_LOCKS_CONFIRMED.equals(getParamAction())) {
    setAction(ACTION_LOCKS_CONFIRMED);
  }
 else   if (DIALOG_RESOURCES_CONFIRMED.equals(getParamAction())) {
    setAction(ACTION_RESOURCES_CONFIRMED);
    CmsPublishList publishList=getSettings().getPublishList();
    if (Boolean.valueOf(getParamRelatedresources()).booleanValue() && publishList.isDirectPublish()) {
      try {
        CmsProgressThread thread=CmsProgressWidget.getProgressThread(getParamProgresskey());
        CmsPublishList storedList=null;
        if (thread != null) {
          storedList=((CmsPublishResourcesList)thread.getList()).getPublishList();
        }
        if (storedList == null) {
          CmsPublishList relResources=OpenCms.getPublishManager().getRelatedResourcesToPublish(getCms(),publishList);
          publishList=OpenCms.getPublishManager().mergePublishLists(getCms(),publishList,relResources);
        }
 else {
          publishList=storedList;
        }
        getSettings().setPublishList(publishList);
      }
 catch (      CmsException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(e.getLocalizedMessage(),e);
        }
      }
    }
    CmsProgressWidget.removeProgressThread(getProgress().getKey());
    getProgress().startProgress(getBrokenRelationsList());
synchronized (this) {
      try {
        wait(500);
      }
 catch (      InterruptedException e) {
      }
    }
    CmsProgressThread thread=CmsProgressWidget.getProgressThread(getProgress().getKey());
    if ((!thread.isAlive()) && (thread.getList().getList().getTotalSize() == 0)) {
      setAction(ACTION_PUBLISH);
    }
  }
 else   if (DIALOG_WAIT.equals(getParamAction())) {
    setAction(ACTION_WAIT);
  }
 else   if (DIALOG_CANCEL.equals(getParamAction())) {
    setAction(ACTION_CANCEL);
  }
 else {
    setAction(ACTION_DEFAULT);
    if (isDirectPublish()) {
      if (!getCms().isManagerOfProject() && !checkResourcePermissions(CmsPermissionSet.ACCESS_DIRECT_PUBLISH,false)) {
        setAction(ACTION_CANCEL);
        return;
      }
      setDialogTitle(Messages.GUI_PUBLISH_RESOURCE_1,Messages.GUI_PUBLISH_MULTI_2);
    }
 else {
      setParamTitle(key(Messages.GUI_PUBLISH_PROJECT_0));
      computePublishProject();
    }
    if (isLockStateOk()) {
      setAction(ACTION_LOCKS_CONFIRMED);
    }
  }
}
