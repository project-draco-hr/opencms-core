{
  String errorMsgSuffix="";
  try {
    byte[] content=null;
    String fileName="";
    if (CmsStringUtil.isNotEmpty(getParamCsvContent())) {
      fileName=getParamFileName();
      content=getParamCsvContent().getBytes();
    }
 else {
      Iterator i=getMultiPartFileItems().iterator();
      FileItem fi=null;
      while (i.hasNext()) {
        fi=(FileItem)i.next();
        if (fi.getName() != null) {
          break;
        }
 else {
          continue;
        }
      }
      if (fi != null) {
        fileName=fi.getName();
        long size=fi.getSize();
        long maxFileSizeBytes=OpenCms.getWorkplaceManager().getFileBytesMaxUploadSize(getCms());
        if (maxFileSizeBytes > 0 && size > maxFileSizeBytes) {
          errorMsgSuffix="size";
          throw new CmsException("File size larger than maximum allowed upload size, currently set to " + (maxFileSizeBytes / 1024) + " kb");
        }
        content=fi.get();
        fi.delete();
      }
 else {
        throw new CmsException("Upload file not found");
      }
    }
    String newResname=getCms().getRequestContext().getFileTranslator().translateResource(CmsResource.getName(fileName.replace('\\','/')));
    newResname=CmsStringUtil.changeFileNameSuffixTo(newResname,"html");
    setParamNewResourceName(newResname);
    setParamResource(newResname);
    setParamResource(computeFullResourceName());
    int resTypeId=OpenCms.getResourceManager().getDefaultTypeForName(newResname).getTypeId();
    String xmlContent="";
    CmsProperty styleProp=CmsProperty.getNullProperty();
    if ("tab".equals(getParamDelimiter())) {
      setParamDelimiter("\t");
    }
    try {
      xmlContent=convertCsvToXml(new InputStreamReader(new ByteArrayInputStream(content),"ISO-8859-1"),getParamDelimiter());
    }
 catch (    Exception e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error(e);
      }
    }
    if (CmsStringUtil.isNotEmpty(getParamXsltFile())) {
      xmlContent=applyXslTransformation(getParamXsltFile(),xmlContent);
      styleProp=getCms().readPropertyObject(getParamXsltFile(),I_CmsConstants.C_PROPERTY_STYLESHEET,true);
    }
    content=xmlContent.getBytes();
    try {
      getCms().createResource(getParamResource(),resTypeId,content,Collections.EMPTY_LIST);
    }
 catch (    CmsException e) {
      getCms().lockResource(getParamResource());
      getCms().replaceResource(getParamResource(),resTypeId,content,null);
    }
    getCms().writePropertyObject(getParamResource(),styleProp);
  }
 catch (  CmsException e) {
    setAction(ACTION_SHOWERROR);
    getJsp().getRequest().setAttribute(C_SESSION_WORKPLACE_CLASS,this);
    setParamErrorstack(CmsException.getStackTraceAsString(e));
    setParamMessage(key("error.message.upload"));
    setParamReasonSuggestion(key("error.reason.upload" + errorMsgSuffix) + "<br>\n" + key("error.suggestion.upload" + errorMsgSuffix)+ "\n");
    getJsp().include(C_FILE_DIALOG_SCREEN_ERROR);
  }
}
