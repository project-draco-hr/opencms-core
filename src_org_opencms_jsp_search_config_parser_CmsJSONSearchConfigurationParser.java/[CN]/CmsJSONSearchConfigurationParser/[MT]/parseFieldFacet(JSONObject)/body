{
  try {
    final String field=fieldFacetObject.getString(JSON_KEY_FACET_FIELD);
    final String name=parseOptionalStringValue(fieldFacetObject,JSON_KEY_FACET_NAME);
    final String label=parseOptionalStringValue(fieldFacetObject,JSON_KEY_FACET_LABEL);
    final Integer minCount=parseOptionalIntValue(fieldFacetObject,JSON_KEY_FACET_MINCOUNT);
    final Integer limit=parseOptionalIntValue(fieldFacetObject,JSON_KEY_FACET_LIMIT);
    final String prefix=parseOptionalStringValue(fieldFacetObject,JSON_KEY_FACET_PREFIX);
    final String sorder=parseOptionalStringValue(fieldFacetObject,JSON_KEY_FACET_ORDER);
    I_CmsSearchConfigurationFacet.SortOrder order;
    try {
      order=I_CmsSearchConfigurationFacet.SortOrder.valueOf(sorder);
    }
 catch (    @SuppressWarnings("unused") final Exception e) {
      order=null;
    }
    final String filterQueryModifier=parseOptionalStringValue(fieldFacetObject,JSON_KEY_FACET_FILTERQUERYMODIFIER);
    final Boolean isAndFacet=parseOptionalBooleanValue(fieldFacetObject,JSON_KEY_FACET_ISANDFACET);
    final List<String> preselection=parseOptionalStringValues(fieldFacetObject,JSON_KEY_FACET_PRESELECTION);
    return new CmsSearchConfigurationFacetField(field,name,minCount,limit,prefix,label,order,filterQueryModifier,isAndFacet,preselection);
  }
 catch (  final JSONException e) {
    LOG.error(Messages.get().getBundle().key(Messages.ERR_FIELD_FACET_MANDATORY_KEY_MISSING_1,JSON_KEY_FACET_FIELD),e);
    return null;
  }
}
