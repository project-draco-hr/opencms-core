{
  m_driverManager.clearcache();
synchronized (m_driverManager) {
    try {
      m_driverManager.publishProject(this,publishList,report);
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error(e);
      }
      throw e;
    }
catch (    Exception e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error(e);
      }
      throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,e);
    }
 finally {
      m_driverManager.clearcache();
      if (m_context.currentProject().getId() == m_context.currentProject().getId() && (m_context.currentProject().getType() == I_CmsConstants.C_PROJECT_TYPE_TEMPORARY)) {
        m_context.setCurrentProject(readProject(I_CmsConstants.C_PROJECT_ONLINE_ID));
      }
      Map eventData=new HashMap();
      eventData.put(I_CmsEventListener.KEY_CMSOBJECT,this);
      eventData.put(I_CmsEventListener.KEY_REPORT,report);
      eventData.put(I_CmsEventListener.KEY_PUBLISHID,publishList.getPublishHistoryId().toString());
      CmsEvent exportPointEvent=new CmsEvent(I_CmsEventListener.EVENT_PUBLISH_PROJECT,eventData);
      OpenCms.fireCmsEvent(exportPointEvent);
    }
  }
}
