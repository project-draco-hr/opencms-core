{
  Map explorerTypeSettingsMap=new HashMap();
  List explorerTypeSettings=new ArrayList();
  if (m_defaultAccess.getAccessControlList() == null) {
    try {
      m_defaultAccess.createAccessControlList(CmsExplorerTypeAccess.PRINCIPAL_DEFAULT);
    }
 catch (    CmsException e) {
      if (CmsLog.INIT.isInfoEnabled()) {
        CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_ADD_TYPE_SETTING_FAILED_1,CmsExplorerTypeAccess.PRINCIPAL_DEFAULT),e);
      }
    }
  }
  explorerTypeSettings.addAll(m_explorerTypeSettingsFromXml);
  explorerTypeSettings.addAll(m_explorerTypeSettingsFromModules);
  for (int i=0; i < explorerTypeSettings.size(); i++) {
    CmsExplorerTypeSettings settings=(CmsExplorerTypeSettings)explorerTypeSettings.get(i);
    explorerTypeSettingsMap.put(settings.getName(),settings);
    if (getDefaultAccess() == settings.getAccess()) {
      continue;
    }
    try {
      settings.getAccess().createAccessControlList(settings.getName());
    }
 catch (    CmsException e) {
      if (CmsLog.INIT.isInfoEnabled()) {
        CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_ADD_TYPE_SETTING_FAILED_1,settings.getName()),e);
      }
    }
  }
  Collections.sort(explorerTypeSettings);
  m_explorerTypeSettings=Collections.unmodifiableList(explorerTypeSettings);
  m_explorerTypeSettingsMap=Collections.unmodifiableMap(explorerTypeSettingsMap);
}
