{
  List viewFolders=new ArrayList();
  try {
    viewFolders=cms.getSubFolders(I_CmsWpConstants.C_VFS_PATH_VIEWS);
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().key(Messages.LOG_WORKPLACE_INIT_NO_VIEWS_1,I_CmsWpConstants.C_VFS_PATH_VIEWS),e);
    viewFolders=new ArrayList();
  }
  m_views=new ArrayList(viewFolders.size());
  for (int i=0; i < viewFolders.size(); i++) {
    CmsFolder folder=(CmsFolder)viewFolders.get(i);
    String folderPath=cms.getSitePath(folder);
    try {
      String order=cms.readPropertyObject(folderPath,I_CmsConstants.C_PROPERTY_NAVPOS,false).getValue();
      String key=cms.readPropertyObject(folderPath,I_CmsConstants.C_PROPERTY_NAVTEXT,false).getValue();
      String viewUri=cms.readPropertyObject(folderPath,I_CmsConstants.C_PROPERTY_DEFAULT_FILE,false).getValue();
      if (viewUri == null) {
        viewUri=folderPath;
      }
 else       if (!viewUri.startsWith("/")) {
        viewUri=folderPath + viewUri;
      }
      if (order == null) {
        order="" + i;
      }
      Float orderValue;
      try {
        orderValue=Float.valueOf(order);
      }
 catch (      NumberFormatException e) {
        orderValue=Float.valueOf("" + i);
      }
      if (key == null) {
        key="View " + i;
        continue;
      }
      CmsWorkplaceView view=new CmsWorkplaceView(key,viewUri,orderValue);
      m_views.add(view);
      if (CmsLog.LOG.isInfoEnabled()) {
        CmsLog.LOG.info(Messages.get().key(Messages.INIT_WORKPLACE_VIEW_1,view.getUri()));
      }
    }
 catch (    CmsException e) {
      LOG.error(Messages.get().key(Messages.LOG_READING_VIEW_FOLDER_FAILED_1,folderPath),e);
    }
  }
  Collections.sort(m_views);
  return m_views;
}
