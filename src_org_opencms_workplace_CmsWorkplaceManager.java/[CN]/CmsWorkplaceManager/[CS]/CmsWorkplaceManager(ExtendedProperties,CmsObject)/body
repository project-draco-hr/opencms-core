{
  try {
    List dialogHandlerClasses=OpenCms.getRegistry().getDialogHandler();
    Iterator i=dialogHandlerClasses.iterator();
    m_dialogHandler=new HashMap();
    while (i.hasNext()) {
      String currentClass=(String)i.next();
      I_CmsDialogHandler handler=(I_CmsDialogHandler)Class.forName(currentClass).newInstance();
      m_dialogHandler.put(handler.getDialogHandler(),handler);
      if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Dialog handler class : " + currentClass + " instanciated");
      }
    }
  }
 catch (  Exception e) {
    if (OpenCms.getLog(this).isErrorEnabled()) {
      OpenCms.getLog(this).error(OpenCmsCore.C_MSG_CRITICAL_ERROR + "7",e);
    }
    throw e;
  }
  try {
    List editorHandlerClasses=OpenCms.getRegistry().getEditorHandler();
    String currentClass=(String)editorHandlerClasses.get(0);
    m_editorHandler=(I_CmsEditorHandler)Class.forName(currentClass).newInstance();
    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Editor handler class : " + currentClass + " instanciated");
    }
  }
 catch (  Exception e) {
    if (OpenCms.getLog(this).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Editor handler class : non-critical error initializing editor handler");
    }
  }
  try {
    List editorActionClasses=OpenCms.getRegistry().getEditorAction();
    String currentClass=(String)editorActionClasses.get(0);
    m_editorActionHandler=(I_CmsEditorActionHandler)Class.forName(currentClass).newInstance();
    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Editor action class  : " + currentClass + " instanciated");
    }
  }
 catch (  Exception e) {
    if (OpenCms.getLog(this).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Editor action class  : non-critical error initializing editor action class");
    }
  }
  m_fileMaxUploadSize=configuration.getInteger("workplace.file.maxuploadsize",-1);
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". File max. upload size: " + (m_fileMaxUploadSize > 0 ? (m_fileMaxUploadSize + " KB") : "unlimited"));
  }
  m_showUserGroupIcon=configuration.getBoolean("workplace.administration.showusergroupicon",true);
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Show user/group icon : " + (m_showUserGroupIcon ? "yes" : "no"));
  }
  String[] labelSiteFolderString=configuration.getStringArray("site.labeled.folders");
  if (labelSiteFolderString == null) {
    labelSiteFolderString=new String[0];
  }
  List labelSiteFoldersOri=java.util.Arrays.asList(labelSiteFolderString);
  m_labelSiteFolders=new ArrayList();
  for (int i=0; i < labelSiteFoldersOri.size(); i++) {
    String name=((String)labelSiteFoldersOri.get(i)).trim();
    if (name != null && !"".equals(name)) {
      m_labelSiteFolders.add(name);
      if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Label links in folder: " + (i + 1) + " - "+ name);
      }
    }
  }
  m_directPublishSiblings=configuration.getBoolean("workplace.directpublish.siblings",false);
  m_autoLockResources=configuration.getBoolean("workplace.autolock.resources",false);
  m_editorManager=new CmsWorkplaceEditorManager(cms);
}
