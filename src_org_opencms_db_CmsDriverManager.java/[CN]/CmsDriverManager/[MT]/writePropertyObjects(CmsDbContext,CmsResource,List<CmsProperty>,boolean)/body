{
  if ((properties == null) || (properties.size() == 0)) {
    return;
  }
  try {
    for (int i=0, n=properties.size(); i < n; i++) {
      Set<String> keyValidationSet=new HashSet<String>();
      CmsProperty property=properties.get(i);
      if (!keyValidationSet.contains(property.getName())) {
        keyValidationSet.add(property.getName());
      }
 else {
        throw new CmsVfsException(Messages.get().container(Messages.ERR_VFS_INVALID_PROPERTY_LIST_1,property.getName()));
      }
    }
    int updateStateValue=0;
    if (updateState) {
      updateStateValue=getUpdateState(dbc,resource,properties);
    }
    I_CmsVfsDriver vfsDriver=getVfsDriver(dbc);
    for (int i=0; i < properties.size(); i++) {
      CmsProperty property=properties.get(i);
      vfsDriver.writePropertyObject(dbc,dbc.currentProject(),resource,property);
    }
    if (updateStateValue > 0) {
      updateState(dbc,resource,(updateStateValue == 2));
    }
    if (updateState) {
      log(dbc,new CmsLogEntry(dbc,resource.getStructureId(),CmsLogEntryType.RESOURCE_PROPERTIES,new String[]{resource.getRootPath()}),false);
    }
  }
  finally {
    m_monitor.clearResourceCache();
    m_monitor.flushCache(CmsMemoryMonitor.CacheType.PROPERTY,CmsMemoryMonitor.CacheType.PROPERTY_LIST);
    OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.<String,Object>singletonMap(I_CmsEventListener.KEY_RESOURCE,resource)));
  }
}
