{
  String folderName=null;
  String resourceName=null;
  boolean isFolder=(resourceType == I_CmsConstants.C_TYPE_FOLDER);
  if (isFolder) {
    if (!newResourceName.endsWith(I_CmsConstants.C_FOLDER_SEPARATOR))     newResourceName+=I_CmsConstants.C_FOLDER_SEPARATOR;
    folderName=newResourceName.substring(0,newResourceName.lastIndexOf(I_CmsConstants.C_FOLDER_SEPARATOR,newResourceName.length() - 2) + 1);
    resourceName=newResourceName.substring(folderName.length(),newResourceName.length() - 1);
  }
 else {
    folderName=newResourceName.substring(0,newResourceName.lastIndexOf(I_CmsConstants.C_FOLDER_SEPARATOR,newResourceName.length()) + 1);
    resourceName=newResourceName.substring(folderName.length(),newResourceName.length());
  }
  validFilename(resourceName);
  CmsFolder parentFolder=readFolder(currentUser,currentProject,folderName);
  checkPermissions(currentUser,currentProject,parentFolder,I_CmsConstants.C_WRITE_ACCESS);
  CmsUser owner=readUser(currentUser,currentProject,ownername);
  CmsGroup group=readGroup(currentUser,groupname);
  if (filecontent == null) {
    filecontent=new byte[0];
  }
  CmsResource newResource=new CmsResource(CmsUUID.getNullUUID(),CmsUUID.getNullUUID(),parentFolder.getId(),CmsUUID.getNullUUID(),resourceName,resourceType,0,owner.getId(),group.getId(),currentProject.getId(),accessFlags,I_CmsConstants.C_STATE_NEW,currentUser.getId(),launcherType,launcherClassname,lastmodified,lastmodified,currentUser.getId(),filecontent.length,currentProject.getId(),I_CmsConstants.C_VFS_LINK_TYPE_MASTER);
  newResource=m_vfsDriver.importResource(currentProject,parentFolder.getId(),newResource,filecontent,currentUser.getId(),isFolder);
  clearResourceCache();
  m_vfsDriver.writeProperties(propertyinfos,currentProject.getId(),newResource,newResource.getType(),true);
  fileSystemChanged(true);
  return newResource;
}
