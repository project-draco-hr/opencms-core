{
  String filename;
  String foldername;
  validFilename(destination.replace('/','a'));
  CmsResource sourceFile=readFileHeader(currentUser,currentProject,source);
  if (destination.endsWith("/")) {
    filename=sourceFile.getName();
    foldername=destination;
  }
 else {
    foldername=destination.substring(0,destination.lastIndexOf("/") + 1);
    filename=destination.substring(destination.lastIndexOf("/") + 1,destination.length());
  }
  CmsFolder parentFolder=readFolder(currentUser,currentProject,foldername);
  CmsAccessGuard accessGuard=getVfsAccessGuard(currentUser,currentProject);
  accessGuard.check(sourceFile,C_READ_ACCESS);
  accessGuard.check(parentFolder,C_WRITE_ACCESS);
  m_vfsDriver.copyFile(currentProject,currentUser.getId(),parentFolder.getId(),source,foldername + filename);
  this.clearResourceCache(foldername + filename,currentProject,currentUser);
  CmsResource newResource=lockResource(currentUser,currentProject,destination,true);
  writeProperties(currentUser,currentProject,destination,readProperties(currentUser,currentProject,sourceFile.getResourceName(),null,false));
  ListIterator aceList=m_userDriver.getAccessControlEntries(currentProject,sourceFile.getResourceAceId(),false).listIterator();
  while (aceList.hasNext()) {
    CmsAccessControlEntry ace=(CmsAccessControlEntry)aceList.next();
    m_userDriver.createAccessControlEntry(currentProject,newResource.getResourceAceId(),ace.getPrincipal(),ace.getPermissions().getAllowedPermissions(),ace.getPermissions().getDeniedPermissions(),ace.getFlags());
  }
  clearAccessControlListCache();
  m_accessCache.clear();
  fileSystemChanged(sourceFile.isFolder());
}
