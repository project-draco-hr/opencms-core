{
  String destinationFileName=null;
  String destinationFolderName=null;
  if (destination.endsWith("/")) {
    copyFolder(currentUser,currentProject,source,destination);
    return;
  }
  validFilename(destination.replace('/','a'));
  destinationFolderName=destination.substring(0,destination.lastIndexOf("/") + 1);
  destinationFileName=destination.substring(destination.lastIndexOf("/") + 1,destination.length());
  CmsFile sourceFile=readFile(currentUser,currentProject,source,false);
  CmsFolder destinationFolder=readFolder(currentUser,currentProject,destinationFolderName);
  CmsAccessGuard accessGuard=getVfsAccessGuard(currentUser,currentProject);
  accessGuard.check(sourceFile,C_READ_ACCESS);
  accessGuard.check(destinationFolder,C_WRITE_ACCESS);
  m_vfsDriver.createFile(currentUser,currentProject,destinationFileName,sourceFile.getFlags(),destinationFolder.getId(),sourceFile.getContents(),getResourceType(currentUser,currentProject,sourceFile.getType()));
  this.clearResourceCache(destination,currentProject,currentUser);
  CmsResource newResource=lockResource(currentUser,currentProject,destination,true);
  writeProperties(currentUser,currentProject,destination,readProperties(currentUser,currentProject,source,null,false));
  ListIterator aceList=m_userDriver.getAccessControlEntries(currentProject,sourceFile.getResourceAceId(),false).listIterator();
  while (aceList.hasNext()) {
    CmsAccessControlEntry ace=(CmsAccessControlEntry)aceList.next();
    m_userDriver.createAccessControlEntry(currentProject,newResource.getResourceAceId(),ace.getPrincipal(),ace.getPermissions().getAllowedPermissions(),ace.getPermissions().getDeniedPermissions(),ace.getFlags());
  }
  clearAccessControlListCache();
  m_accessCache.clear();
  fileSystemChanged(false);
}
