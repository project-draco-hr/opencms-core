{
  if (!foldername.endsWith(I_CmsConstants.C_FOLDER_SEPARATOR))   foldername+=I_CmsConstants.C_FOLDER_SEPARATOR;
  String cacheKey=getCacheKey(currentUser.getName() + "_files_" + includeDeleted,currentUser,currentProject,foldername);
  Vector files=(Vector)m_resourceListCache.get(cacheKey);
  if ((files == null) || (files.size() == 0)) {
    try {
      files=helperGetFilesInFolder(currentUser,currentProject,foldername,includeDeleted);
    }
 catch (    CmsException e) {
      if (e.getType() == CmsException.C_ACCESS_DENIED)       return new Vector();
 else       throw e;
    }
    if (files == null) {
      return new Vector();
    }
    Vector onlineFiles=null;
    if (!currentProject.isOnlineProject()) {
      try {
        onlineFiles=helperGetFilesInFolder(currentUser,onlineProject(currentUser,currentProject),foldername,includeDeleted);
      }
 catch (      CmsException exc) {
        if (exc.getType() != CmsException.C_ACCESS_DENIED)         throw exc;
      }
    }
    if (onlineFiles != null) {
      files=mergeResources(files,onlineFiles);
    }
    m_resourceListCache.put(cacheKey,files);
  }
  return (files == null) ? null : (Vector)files.clone();
}
