{
  if ((!context.currentProject().isOnlineProject()) && (isManagerOfProject(context)) && (context.currentProject().getFlags() == I_CmsConstants.C_PROJECT_STATE_UNLOCKED)) {
    CmsResource offlineRes=null;
    try {
      clearResourceCache();
      offlineRes=readFileHeader(context,resource,CmsResourceFilter.ALL);
      if (!isInsideCurrentProject(context,offlineRes)) {
        offlineRes=null;
      }
    }
 catch (    CmsException exc) {
    }
    if ((offlineRes == null) || (offlineRes.getProjectLastModified() != context.currentProject().getId())) {
      if (CmsResource.isFolder(resource)) {
        List projectResources=m_projectDriver.readProjectResources(context.currentProject());
        for (int i=0; i < projectResources.size(); i++) {
          String resname=(String)projectResources.get(i);
          if (resname.startsWith(resource)) {
            m_projectDriver.deleteProjectResource(context.currentProject().getId(),resname);
          }
        }
      }
      try {
        m_projectDriver.createProjectResource(context.currentProject().getId(),resource,null);
      }
 catch (      CmsException exc) {
      }
 finally {
        OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_PROJECT_MODIFIED,Collections.singletonMap("project",context.currentProject())));
      }
    }
  }
 else {
    throw new CmsSecurityException("[" + this.getClass().getName() + "] "+ context.currentProject().getName(),CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
}
