{
  String destinationFileName=null;
  String destinationFolderName=null;
  CmsResource newResource=null;
  Map newResourceProps=null;
  if (destination.endsWith("/")) {
    copyFolder(context,source,destination,lockCopy,copyAsLink);
    return;
  }
  validFilename(destination.replace('/','a'));
  destinationFolderName=destination.substring(0,destination.lastIndexOf("/") + 1);
  destinationFileName=destination.substring(destination.lastIndexOf("/") + 1,destination.length());
  CmsFile sourceFile=readFile(context,source,false);
  CmsFolder destinationFolder=readFolder(context,destinationFolderName);
  checkPermissions(context,sourceFile,I_CmsConstants.C_READ_ACCESS);
  checkPermissions(context,destinationFolder,I_CmsConstants.C_WRITE_ACCESS);
  newResourceProps=readProperties(context,source,null,false);
  if (copyAsLink)   createVfsLink(context,destination,source,newResourceProps,I_CmsConstants.C_VFS_LINK_TYPE_MASTER);
 else {
    newResource=m_vfsDriver.createFile(context.currentUser(),context.currentProject(),destinationFileName,sourceFile.getFlags(),destinationFolder.getId(),sourceFile.getContents(),getResourceType(sourceFile.getType()));
    writeProperties(context,destination,newResourceProps);
    ListIterator aceList=m_userDriver.getAccessControlEntries(context.currentProject(),sourceFile.getResourceAceId(),false).listIterator();
    while (aceList.hasNext()) {
      CmsAccessControlEntry ace=(CmsAccessControlEntry)aceList.next();
      m_userDriver.createAccessControlEntry(context.currentProject(),newResource.getResourceAceId(),ace.getPrincipal(),ace.getPermissions().getAllowedPermissions(),ace.getPermissions().getDeniedPermissions(),ace.getFlags());
    }
  }
  if (lockCopy) {
    lockResource(context,destination,true);
  }
  clearAccessControlListCache();
  m_accessCache.clear();
  clearResourceCache();
  fileSystemChanged(false);
}
