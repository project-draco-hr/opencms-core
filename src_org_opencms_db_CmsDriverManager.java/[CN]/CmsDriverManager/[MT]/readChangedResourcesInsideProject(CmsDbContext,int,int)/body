{
  List projectResources=readProjectResources(dbc,readProject(dbc,projectId));
  List result=new ArrayList();
  String currentProjectResource=null;
  List resources=new ArrayList();
  CmsResource currentResource=null;
  CmsLock currentLock=null;
  for (int i=0; i < projectResources.size(); i++) {
    currentProjectResource=(String)projectResources.get(i);
    try {
      currentResource=readResource(dbc,currentProjectResource,CmsResourceFilter.ALL);
      if (currentResource.isFolder()) {
        resources.addAll(readResources(dbc,currentResource,CmsResourceFilter.ALL,true));
      }
 else {
        resources.add(currentResource);
      }
    }
 catch (    CmsException e) {
      if (e.getType() != CmsException.C_NOT_FOUND) {
        throw e;
      }
    }
  }
  for (int j=0; j < resources.size(); j++) {
    currentResource=(CmsResource)resources.get(j);
    currentLock=getLock(dbc,currentResource);
    if (currentResource.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
      if ((currentLock.isNullLock() && currentResource.getProjectLastModified() == projectId) || (currentLock.getUserId().equals(dbc.currentUser().getId()) && currentLock.getProjectId() == projectId)) {
        if ((currentResource.isFolder() && resourceType <= 0) || (currentResource.isFile() && resourceType != 0)) {
          result.add(currentResource);
        }
      }
    }
  }
  resources.clear();
  resources=null;
  return result;
}
