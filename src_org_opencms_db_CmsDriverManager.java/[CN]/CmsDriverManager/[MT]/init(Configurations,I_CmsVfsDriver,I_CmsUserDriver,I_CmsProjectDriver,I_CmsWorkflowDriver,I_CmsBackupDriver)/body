{
  m_limitedWorkplacePort=config.getInteger("workplace.limited.port",-1);
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Driver manager init  : phase 4 - connecting to the database");
  }
  m_vfsDriver=vfsDriver;
  m_userDriver=userDriver;
  m_projectDriver=projectDriver;
  m_workflowDriver=workflowDriver;
  m_backupDriver=backupDriver;
  m_configuration=config;
  m_keyGenerator=(I_CmsCacheKey)Class.forName(config.getString(I_CmsConstants.C_CONFIGURATION_CACHE + ".keygenerator")).newInstance();
  m_userCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".user",50)));
  m_groupCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".group",50)));
  m_userGroupsCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".usergroups",50)));
  m_projectCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".project",50)));
  m_resourceCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".resource",2500)));
  m_resourceListCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".subres",100)));
  m_propertyCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".property",5000)));
  m_propertyDefCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".propertydef",100)));
  m_propertyDefVectorCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".propertyvectordef",100)));
  m_accessCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".access",1000)));
  m_accessControlListCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".access",1000)));
  m_permissionCache=Collections.synchronizedMap(new CmsLruHashMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".access",1000)));
  m_cachelimit=config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".maxsize",20000);
  m_refresh=config.getString(I_CmsConstants.C_CONFIGURATION_CACHE + ".refresh","");
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Initializing registry: starting");
  }
  try {
    m_registry=new CmsRegistry(CmsBase.getAbsolutePath(config.getString(I_CmsConstants.C_CONFIGURATION_REGISTRY)));
  }
 catch (  CmsException ex) {
    throw ex;
  }
catch (  Exception ex) {
    if (OpenCms.getLog(this).isErrorEnabled())     OpenCms.getLog(this).error("Critical init error/4",ex);
    throw new CmsException("Init of registry failed",CmsException.C_REGISTRY_ERROR,ex);
  }
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Initializing registry: finished");
  }
  getProjectDriver().fillDefaults();
}
