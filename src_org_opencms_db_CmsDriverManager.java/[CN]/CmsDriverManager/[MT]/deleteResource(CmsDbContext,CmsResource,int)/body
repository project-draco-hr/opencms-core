{
  CmsLock currentLock=getLock(dbc,resource);
  if (currentLock.getType() == CmsLock.TYPE_INHERITED) {
    lockResource(dbc,resource,CmsLock.COMMON);
  }
  if (resource.isFolder()) {
    siblingMode=CmsResource.DELETE_PRESERVE_SIBLINGS;
  }
  boolean allSiblingsRemoved;
  List resources;
  if (siblingMode == CmsResource.DELETE_REMOVE_SIBLINGS) {
    resources=new ArrayList(readSiblings(dbc,resource,CmsResourceFilter.ALL));
    allSiblingsRemoved=true;
  }
 else {
    resources=Collections.singletonList(resource);
    allSiblingsRemoved=false;
  }
  int size=resources.size();
  if (size > 1) {
    for (int i=0; i < size; i++) {
      CmsResource currentResource=(CmsResource)resources.get(i);
      currentLock=getLock(dbc,currentResource);
      if (!currentLock.equals(CmsLock.getNullLock()) && !currentLock.getUserId().equals(dbc.currentUser().getId())) {
        CmsRequestContext context=dbc.getRequestContext();
        throw new CmsLockException(org.opencms.lock.Messages.get().container(org.opencms.lock.Messages.ERR_SIBLING_LOCKED_2,context.getSitePath(currentResource),context.getSitePath(resource)));
      }
    }
  }
  boolean removeAce=true;
  for (int i=0; i < size; i++) {
    CmsResource currentResource=(CmsResource)resources.get(i);
    if (CmsSecurityManager.PERM_ALLOWED != m_securityManager.hasPermissions(dbc,currentResource,CmsPermissionSet.ACCESS_WRITE,true,CmsResourceFilter.ALL)) {
      allSiblingsRemoved=false;
    }
 else {
      boolean existsOnline=m_vfsDriver.validateStructureIdExists(dbc,CmsProject.ONLINE_PROJECT_ID,currentResource.getStructureId());
      if (!existsOnline) {
        deleteAllProperties(dbc,currentResource.getRootPath());
        if (currentResource.isFolder()) {
          m_vfsDriver.removeFolder(dbc,dbc.currentProject(),currentResource);
        }
 else {
          if (currentResource.isLabeled() && !labelResource(dbc,currentResource,null,2)) {
            int flags=currentResource.getFlags();
            flags&=~CmsResource.FLAG_LABELED;
            currentResource.setFlags(flags);
          }
          m_vfsDriver.removeFile(dbc,dbc.currentProject(),currentResource,true);
        }
        m_lockManager.removeResource(this,dbc,currentResource,true);
      }
 else {
        removeAce=false;
        currentResource.setState(CmsResource.STATE_DELETED);
        m_vfsDriver.writeResourceState(dbc,dbc.currentProject(),currentResource,UPDATE_STRUCTURE_STATE);
        m_vfsDriver.writePropertyObject(dbc,dbc.currentProject(),currentResource,new CmsProperty(CmsPropertyDefinition.PROPERTY_INTERNAL,String.valueOf(dbc.currentProject().getId()),null));
        m_vfsDriver.writeLastModifiedProjectId(dbc,dbc.currentProject(),dbc.currentProject().getId(),currentResource);
      }
    }
  }
  if ((resource.getSiblingCount() <= 1) || allSiblingsRemoved) {
    if (removeAce) {
      m_userDriver.removeAccessControlEntries(dbc,dbc.currentProject(),resource.getResourceId());
    }
 else {
      m_userDriver.deleteAccessControlEntries(dbc,dbc.currentProject(),resource.getResourceId());
    }
  }
  clearAccessControlListCache();
  m_propertyCache.clear();
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_DELETED,Collections.singletonMap("resources",resources)));
}
