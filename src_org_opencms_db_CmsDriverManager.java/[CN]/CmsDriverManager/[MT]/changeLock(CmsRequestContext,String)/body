{
  CmsResource resource=readFileHeader(context,resourcename);
  CmsLock oldLock=getLock(context,resourcename);
  CmsLock exclusiveLock=null;
  if (oldLock.isNullLock()) {
    throw new CmsLockException("Unable to steal lock on a unlocked resource",CmsLockException.C_RESOURCE_UNLOCKED);
  }
  exclusiveLock=m_lockManager.getExclusiveLockedSibling(this,context,resourcename);
  oldLock=getLock(context,resourcename);
  m_lockManager.removeResource(this,context,resourcename,true);
  try {
    m_permissionCache.clear();
    checkPermissions(context,resource,I_CmsConstants.C_WRITE_ACCESS);
  }
 catch (  CmsSecurityException e) {
    m_lockManager.addResource(this,context,exclusiveLock.getResourceName(),exclusiveLock.getUserId(),exclusiveLock.getProjectId());
    throw e;
  }
  if (resource.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
    m_vfsDriver.writeLastModifiedProjectId(context.currentProject(),context.currentProject().getId(),resource);
  }
  m_lockManager.addResource(this,context,resource.getRootPath(),context.currentUser().getId(),context.currentProject().getId());
  clearResourceCache();
  m_permissionCache.clear();
  OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCE_MODIFIED,Collections.singletonMap("resource",resource)));
}
