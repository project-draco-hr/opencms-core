{
  I_CmsHistoryResource historyResource=readResource(dbc,resource,version);
  CmsResourceState state=CmsResource.STATE_CHANGED;
  if (resource.getState().isNew()) {
    state=CmsResource.STATE_NEW;
  }
  int newVersion=resource.getVersion();
  if (resource.getState().isUnchanged()) {
    newVersion++;
  }
  CmsResource newResource=null;
  if (historyResource instanceof CmsFile) {
    int flags=historyResource.getFlags();
    if (resource.isLabeled()) {
      flags|=CmsResource.FLAG_LABELED;
    }
    CmsFile newFile=new CmsFile(resource.getStructureId(),resource.getResourceId(),resource.getRootPath(),historyResource.getTypeId(),flags,dbc.currentProject().getUuid(),state,resource.getDateCreated(),historyResource.getUserCreated(),resource.getDateLastModified(),dbc.currentUser().getId(),historyResource.getDateReleased(),historyResource.getDateExpired(),resource.getSiblingCount(),historyResource.getLength(),historyResource.getDateContent(),newVersion,readFile(dbc,(CmsHistoryFile)historyResource).getContents());
    newResource=writeFile(dbc,newFile);
  }
 else {
    newResource=new CmsFolder(resource.getStructureId(),resource.getResourceId(),resource.getRootPath(),historyResource.getTypeId(),historyResource.getFlags(),dbc.currentProject().getUuid(),state,resource.getDateCreated(),historyResource.getUserCreated(),resource.getDateLastModified(),dbc.currentUser().getId(),historyResource.getDateReleased(),historyResource.getDateExpired(),newVersion);
    writeResource(dbc,newResource);
  }
  if (newResource != null) {
    List historyProperties=m_historyDriver.readProperties(dbc,historyResource);
    deleteAllProperties(dbc,newResource.getRootPath());
    writePropertyObjects(dbc,newResource,historyProperties,false);
    OpenCms.getMemoryMonitor().clearResourceCache();
  }
  HashMap data=new HashMap(2);
  data.put("resource",resource);
  data.put("change",new Integer(CHANGED_RESOURCE | CHANGED_CONTENT));
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_MODIFIED,data));
}
