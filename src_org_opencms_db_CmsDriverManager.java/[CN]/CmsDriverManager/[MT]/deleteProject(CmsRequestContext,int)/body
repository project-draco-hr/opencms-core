{
  Vector deletedFolders=new Vector();
  CmsProject deleteProject=readProject(context,projectId);
  if ((isAdmin(context) || isManagerOfProject(context)) && (projectId != I_CmsConstants.C_PROJECT_ONLINE_ID)) {
    List allFiles=m_vfsDriver.readFiles(deleteProject.getId(),false,true);
    List allFolders=m_vfsDriver.readFolders(deleteProject,false,true);
    for (int i=0; i < allFiles.size(); i++) {
      CmsFile currentFile=(CmsFile)allFiles.get(i);
      String currentResourceName=readPath(context,currentFile,true);
      if (currentFile.getState() == I_CmsConstants.C_STATE_NEW) {
        m_vfsDriver.deleteAllProperties(projectId,currentFile.getId());
        m_vfsDriver.removeFile(context.currentProject(),currentFile);
        m_userDriver.removeAllAccessControlEntries(context.currentProject(),currentFile.getResourceAceId());
      }
 else       if (currentFile.getState() == I_CmsConstants.C_STATE_CHANGED) {
        if (!currentFile.isLocked()) {
          lockResource(context,currentResourceName,true);
        }
        undoChanges(context,currentResourceName);
      }
 else       if (currentFile.getState() == I_CmsConstants.C_STATE_DELETED) {
        undeleteResource(context,currentResourceName);
        if (!currentFile.isLocked()) {
          lockResource(context,currentResourceName,true);
        }
        undoChanges(context,currentResourceName);
      }
    }
    for (int i=0; i < allFolders.size(); i++) {
      CmsFolder currentFolder=(CmsFolder)allFolders.get(i);
      String currentResourceName=readPath(context,currentFolder,true);
      if (currentFolder.getState() == I_CmsConstants.C_STATE_NEW) {
        m_vfsDriver.deleteAllProperties(projectId,currentFolder.getId());
        deletedFolders.addElement(currentFolder);
      }
 else       if (currentFolder.getState() == I_CmsConstants.C_STATE_CHANGED) {
        if (!currentFolder.isLocked()) {
          lockResource(context,currentResourceName,true);
        }
        undoChanges(context,currentResourceName);
      }
 else       if (currentFolder.getState() == I_CmsConstants.C_STATE_DELETED) {
        undeleteResource(context,currentResourceName);
        if (!currentFolder.isLocked()) {
          lockResource(context,currentResourceName,true);
        }
        undoChanges(context,currentResourceName);
      }
    }
    for (int i=deletedFolders.size() - 1; i > -1; i--) {
      CmsFolder delFolder=((CmsFolder)deletedFolders.elementAt(i));
      m_vfsDriver.removeFolder(context.currentProject(),delFolder);
      m_userDriver.removeAllAccessControlEntries(context.currentProject(),delFolder.getResourceAceId());
    }
    m_projectDriver.unlockProject(deleteProject);
    clearAccessControlListCache();
    clearResourceCache();
    m_projectDriver.deleteProject(deleteProject);
    m_projectCache.remove(new Integer(projectId));
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] "+ projectId,CmsException.C_NO_ACCESS);
  }
}
