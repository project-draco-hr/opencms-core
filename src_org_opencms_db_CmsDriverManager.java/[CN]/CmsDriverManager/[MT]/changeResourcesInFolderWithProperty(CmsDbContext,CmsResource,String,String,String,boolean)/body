{
  CmsResourceFilter filter=CmsResourceFilter.IGNORE_EXPIRATION;
  List<CmsResource> resources=new ArrayList<CmsResource>();
  if (recursive) {
    resources=readResourcesWithProperty(dbc,resource,propertyDefinition,null,filter);
    resources.add(resource);
  }
 else {
    resources.add(resource);
  }
  Pattern oldPattern;
  try {
    String tmpOldValue=oldValue;
    if (tmpOldValue.contains(CmsStringUtil.PLACEHOLDER_START) && tmpOldValue.contains(CmsStringUtil.PLACEHOLDER_END)) {
      tmpOldValue=tmpOldValue.replace(CmsStringUtil.PLACEHOLDER_START,"");
      tmpOldValue=tmpOldValue.replace(CmsStringUtil.PLACEHOLDER_END,"");
    }
    oldPattern=Pattern.compile(tmpOldValue);
  }
 catch (  PatternSyntaxException e) {
    throw new CmsVfsException(Messages.get().container(Messages.ERR_CHANGE_RESOURCES_IN_FOLDER_WITH_PROP_4,new Object[]{propertyDefinition,oldValue,newValue,resource.getRootPath()}),e);
  }
  List<CmsResource> changedResources=new ArrayList<CmsResource>(resources.size());
  CmsPermissionSet perm=CmsPermissionSet.ACCESS_WRITE;
  for (int i=0; i < resources.size(); i++) {
    CmsResource res=resources.get(i);
    try {
      m_securityManager.checkPermissions(dbc,res,perm,true,filter);
    }
 catch (    Exception e) {
      continue;
    }
    CmsProperty property=readPropertyObject(dbc,res,propertyDefinition,false);
    String propertyValue=property.getValue();
    boolean changed=false;
    if ((propertyValue != null) && oldPattern.matcher(propertyValue).matches()) {
      String tmpNewValue=CmsStringUtil.transformValues(oldValue,newValue,propertyValue);
      property.setStructureValue(tmpNewValue);
      changed=true;
    }
    if (changed) {
      writePropertyObject(dbc,res,property);
      changedResources.add(res);
    }
  }
  return changedResources;
}
