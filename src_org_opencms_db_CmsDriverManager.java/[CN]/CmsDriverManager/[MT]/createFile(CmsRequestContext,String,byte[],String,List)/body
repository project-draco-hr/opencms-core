{
  String folderName=newFileName.substring(0,newFileName.lastIndexOf(I_CmsConstants.C_FOLDER_SEPARATOR,newFileName.length()) + 1);
  String resourceName=newFileName.substring(folderName.length(),newFileName.length());
  validFilename(resourceName);
  if (!isAdmin(context) && (CmsResourceTypeXMLTemplate.C_RESOURCE_TYPE_NAME.equals(type) || CmsResourceTypeJsp.C_RESOURCE_TYPE_NAME.equals(type))) {
    throw new CmsSecurityException("[" + this.getClass().getName() + "] createFile() "+ resourceName,CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  CmsFolder parentFolder=readFolder(context,folderName);
  checkPermissions(context,parentFolder,I_CmsConstants.C_WRITE_ACCESS,CmsResourceFilter.ALL,-1);
  CmsFile newFile=m_vfsDriver.createFile(context.currentUser(),context.currentProject(),resourceName,0,parentFolder,contents,getResourceType(type),CmsResource.DATE_RELEASED_DEFAULT,CmsResource.DATE_EXPIRED_DEFAULT);
  newFile.setFullResourceName(newFileName);
  if (properties != null && properties != Collections.EMPTY_LIST) {
    m_vfsDriver.writePropertyObjects(context.currentProject(),newFile,properties);
    m_propertyCache.clear();
  }
  contents=null;
  clearResourceCache();
  OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCE_CREATED,Collections.singletonMap("resource",newFile)));
  return newFile;
}
