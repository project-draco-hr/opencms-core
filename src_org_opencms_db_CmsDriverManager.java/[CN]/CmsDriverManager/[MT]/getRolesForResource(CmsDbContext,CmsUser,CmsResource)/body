{
  if (user.isGuestUser()) {
    return Collections.EMPTY_LIST;
  }
  String key=user.getId().toString() + resource.getRootPath();
  List result=OpenCms.getMemoryMonitor().getCachedRoleList(key);
  if (result != null) {
    return result;
  }
  result=new ArrayList();
  Iterator itOus=getResourceOrgUnits(dbc,resource).iterator();
  while (itOus.hasNext()) {
    CmsOrganizationalUnit ou=(CmsOrganizationalUnit)itOus.next();
    List roles=new ArrayList(getGroupsOfUser(dbc,user.getName(),ou.getName(),false,true,false,dbc.getRequestContext().getRemoteAddress()));
    Iterator it=roles.iterator();
    while (it.hasNext()) {
      CmsGroup group=(CmsGroup)it.next();
      CmsRole givenRole=CmsRole.valueOf(group).forOrgUnit(null);
      if (givenRole.isOrganizationalUnitIndependent() || result.contains(givenRole)) {
        continue;
      }
      result.add(givenRole);
    }
  }
  result=Collections.unmodifiableList(result);
  OpenCms.getMemoryMonitor().cacheRoleList(key,result);
  return result;
}
