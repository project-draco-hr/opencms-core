{
  checkParentFolders(dbc,publishList);
  try {
    Map<String,Object> eventData=new HashMap<String,Object>();
    eventData.put(I_CmsEventListener.KEY_REPORT,report);
    eventData.put(I_CmsEventListener.KEY_PUBLISHLIST,publishList);
    eventData.put(I_CmsEventListener.KEY_PROJECTID,dbc.currentProject().getUuid());
    eventData.put(I_CmsEventListener.KEY_DBCONTEXT,dbc);
    CmsEvent beforePublishEvent=new CmsEvent(I_CmsEventListener.EVENT_BEFORE_PUBLISH_PROJECT,eventData);
    OpenCms.fireCmsEvent(beforePublishEvent);
  }
 catch (  Throwable t) {
    if (report != null) {
      report.addError(t);
      report.println(t);
    }
    if (LOG.isErrorEnabled()) {
      LOG.error(t.getLocalizedMessage(),t);
    }
  }
  Iterator<CmsResource> itResources=new ArrayList<CmsResource>(publishList.getAllResources()).iterator();
  while (itResources.hasNext()) {
    CmsResource resource=itResources.next();
    CmsLock lock=m_lockManager.getLock(dbc,resource,false);
    if (lock.getSystemLock().isUnlocked() && lock.isLockableBy(dbc.currentUser())) {
      if (getLock(dbc,resource).getEditionLock().isNullLock()) {
        lockResource(dbc,resource,CmsLockType.PUBLISH);
      }
 else {
        changeLock(dbc,resource,CmsLockType.PUBLISH);
      }
    }
 else     if (lock.getSystemLock().isPublish()) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.RPT_PUBLISH_REMOVED_RESOURCE_1,dbc.removeSiteRoot(resource.getRootPath())));
      }
      publishList.remove(resource);
      continue;
    }
 else {
      changeLock(dbc,resource,CmsLockType.PUBLISH);
    }
    lock=m_lockManager.getLock(dbc,resource,false);
    if (!lock.getSystemLock().isPublish()) {
      if (report != null) {
        report.println(Messages.get().container(Messages.RPT_PUBLISH_REMOVED_RESOURCE_1,dbc.removeSiteRoot(resource.getRootPath())),I_CmsReport.FORMAT_WARNING);
      }
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.RPT_PUBLISH_REMOVED_RESOURCE_1,dbc.removeSiteRoot(resource.getRootPath())));
      }
      publishList.remove(resource);
    }
  }
  CmsException enqueueException=null;
  try {
    m_publishEngine.enqueuePublishJob(cms,publishList,report);
  }
 catch (  CmsException exc) {
    enqueueException=exc;
  }
  if (enqueueException != null) {
    itResources=publishList.getAllResources().iterator();
    while (itResources.hasNext()) {
      CmsResource resource=itResources.next();
      CmsLock lock=m_lockManager.getLock(dbc,resource,false);
      if (lock.getSystemLock().isPublish() && lock.getSystemLock().isOwnedInProjectBy(cms.getRequestContext().getCurrentUser(),cms.getRequestContext().getCurrentProject())) {
        unlockResource(dbc,resource,true,true);
      }
    }
    throw enqueueException;
  }
}
