{
  if (CmsLog.LOG.isInfoEnabled()) {
    CmsLog.LOG.info(Messages.get().key(Messages.INIT_DRIVER_MANAGER_START_PHASE4_0));
  }
  m_vfsDriver=vfsDriver;
  m_userDriver=userDriver;
  m_projectDriver=projectDriver;
  m_workflowDriver=workflowDriver;
  m_backupDriver=backupDriver;
  m_configuration=configuration;
  ExtendedProperties config;
  if (configuration instanceof ExtendedProperties) {
    config=(ExtendedProperties)configuration;
  }
 else {
    config=new ExtendedProperties();
    config.putAll(configuration);
  }
  CmsSystemConfiguration systemConfiguation=(CmsSystemConfiguration)configurationManager.getConfiguration(CmsSystemConfiguration.class);
  CmsCacheSettings settings=systemConfiguation.getCacheSettings();
  m_keyGenerator=(I_CmsCacheKey)Class.forName(settings.getCacheKeyGenerator()).newInstance();
  LRUMap hashMap=new LRUMap(settings.getUserCacheSize());
  m_userCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_userCache",hashMap);
  }
  hashMap=new LRUMap(settings.getGroupCacheSize());
  m_groupCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_groupCache",hashMap);
  }
  hashMap=new LRUMap(settings.getUserGroupsCacheSize());
  m_userGroupsCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_userGroupsCache",hashMap);
  }
  hashMap=new LRUMap(settings.getProjectCacheSize());
  m_projectCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_projectCache",hashMap);
  }
  hashMap=new LRUMap(settings.getResourceCacheSize());
  m_resourceCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_resourceCache",hashMap);
  }
  hashMap=new LRUMap(settings.getResourcelistCacheSize());
  m_resourceListCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_resourceListCache",hashMap);
  }
  hashMap=new LRUMap(settings.getPropertyCacheSize());
  m_propertyCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_propertyCache",hashMap);
  }
  hashMap=new LRUMap(settings.getAclCacheSize());
  m_accessControlListCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + ".m_accessControlListCache",hashMap);
  }
  getProjectDriver().fillDefaults(new CmsDbContext());
  m_htmlLinkValidator=new CmsHtmlLinkValidator(this);
  int todo=0;
  m_invalidLoginStorage=new CmsInvalidLoginStorage(15,5);
}
