{
  if (source.isFolder()) {
    throw new CmsVfsException(Messages.get().container(Messages.ERR_VFS_FOLDERS_DONT_SUPPORT_SIBLINGS_0));
  }
  String destinationFoldername=CmsResource.getParentFolder(destination);
  CmsFolder destinationFolder=readFolder(dbc,destinationFoldername,CmsResourceFilter.IGNORE_EXPIRATION);
  int flags=source.getFlags();
  if (labelResource(dbc,source,destination,1)) {
    flags|=CmsResource.FLAG_LABELED;
  }
  CmsResource newResource=new CmsResource(new CmsUUID(),source.getResourceId(),destination,source.getTypeId(),source.isFolder(),flags,dbc.currentProject().getUuid(),CmsResource.STATE_KEEP,source.getDateCreated(),source.getUserCreated(),source.getDateLastModified(),source.getUserLastModified(),source.getDateReleased(),source.getDateExpired(),source.getSiblingCount() + 1,source.getLength(),source.getDateContent(),source.getVersion());
  newResource.setDateLastModified(newResource.getDateLastModified());
  log(dbc,new CmsLogEntry(dbc,newResource.getStructureId(),CmsLogEntryType.RESOURCE_CLONED,new String[]{newResource.getRootPath()}));
  newResource=createResource(dbc,destination,newResource,null,properties,false);
  copyRelations(dbc,source,newResource);
  m_monitor.clearAccessControlListCache();
  List<CmsResource> modifiedResources=new ArrayList<CmsResource>();
  modifiedResources.add(source);
  modifiedResources.add(newResource);
  modifiedResources.add(destinationFolder);
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCES_AND_PROPERTIES_MODIFIED,Collections.<String,Object>singletonMap(I_CmsEventListener.KEY_RESOURCES,modifiedResources)));
  return newResource;
}
