{
  checkPermissions(context,parent,CmsPermissionSet.ACCESS_READ,true,CmsResourceFilter.ALL);
  String cacheKey=getCacheKey(context.currentUser().getName() + filter.getCacheId(),context.currentProject(),parent.getRootPath());
  List subResources=(List)m_resourceListCache.get(cacheKey);
  if (subResources != null && subResources.size() > 0) {
    return updateContextDates(context,subResources,filter);
  }
  subResources=m_vfsDriver.readResourceTree(context.currentProject().getId(),parent.getRootPath(),filter.getType(),filter.getState(),filter.getModifiedAfter(),filter.getModifiedBefore(),(readTree ? I_CmsConstants.C_READMODE_INCLUDE_TREE : I_CmsConstants.C_READMODE_EXCLUDE_TREE) | (filter.excludeType() ? I_CmsConstants.C_READMODE_EXCLUDE_TYPE : 0) | (filter.excludeState() ? I_CmsConstants.C_READMODE_EXCLUDE_STATE : 0));
  for (int i=0; i < subResources.size(); i++) {
    CmsResource currentResource=(CmsResource)subResources.get(i);
    int perms=hasPermissions(context,currentResource,CmsPermissionSet.ACCESS_READ,true,filter);
    if (perms != PERM_ALLOWED) {
      subResources.remove(i--);
    }
  }
  m_resourceListCache.put(cacheKey,subResources);
  return updateContextDates(context,subResources,filter);
}
