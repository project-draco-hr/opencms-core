{
  String cacheKey=getCacheKey(new String[]{dbc.currentUser().getName(),filter.getCacheId(),readTree ? "+" : "-",parent.getRootPath()},dbc);
  List resourceList=m_monitor.getCachedResourceList(cacheKey);
  if ((resourceList == null) || !dbc.getProjectId().isNullUUID()) {
    resourceList=m_vfsDriver.readResourceTree(dbc,dbc.currentProject().getUuid(),(readTree ? parent.getRootPath() : parent.getStructureId().toString()),filter.getType(),filter.getState(),filter.getModifiedAfter(),filter.getModifiedBefore(),filter.getReleaseAfter(),filter.getReleaseBefore(),filter.getExpireAfter(),filter.getExpireBefore(),(readTree ? CmsDriverManager.READMODE_INCLUDE_TREE : CmsDriverManager.READMODE_EXCLUDE_TREE) | (filter.excludeType() ? CmsDriverManager.READMODE_EXCLUDE_TYPE : 0) | (filter.excludeState() ? CmsDriverManager.READMODE_EXCLUDE_STATE : 0)| ((filter.getOnlyFolders() != null) ? (filter.getOnlyFolders().booleanValue() ? CmsDriverManager.READMODE_ONLY_FOLDERS : CmsDriverManager.READMODE_ONLY_FILES) : 0));
    if (!parent.getRootPath().startsWith("/system/orgunits/")) {
      resourceList=filterPermissions(dbc,resourceList,filter);
    }
    if (dbc.getProjectId().isNullUUID()) {
      m_monitor.cacheResourceList(cacheKey,resourceList);
    }
  }
  return updateContextDates(dbc,resourceList,filter);
}
