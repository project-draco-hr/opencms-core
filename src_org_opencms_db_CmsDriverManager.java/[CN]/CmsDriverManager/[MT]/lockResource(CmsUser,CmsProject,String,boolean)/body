{
  CmsResource cmsResource=null;
  if (resourcename.endsWith("/")) {
    cmsResource=(CmsFolder)readFolder(currentUser,currentProject,resourcename);
  }
 else {
    cmsResource=(CmsFile)readFileHeader(currentUser,currentProject,resourcename);
  }
  if (cmsResource == null)   throw new CmsException(CmsException.C_NOT_FOUND);
  if (cmsResource.getProjectId() != currentProject.getId()) {
    return (CmsResource)null;
  }
  getVfsAccessGuard(currentUser,currentProject).check(cmsResource,C_WRITE_ACCESS);
  if (cmsResource.isLocked()) {
    if (force == false) {
      throw new CmsException("[" + getClass().getName() + "] "+ resourcename,CmsException.C_LOCKED);
    }
  }
  cmsResource.setLocked(currentUser.getId());
  cmsResource.setLockedInProject(currentProject.getId());
  m_vfsDriver.updateLockstate(cmsResource,currentProject.getId());
  this.clearResourceCache(resourcename,currentProject,currentUser);
  if (cmsResource.isFolder()) {
    Vector files=getFilesInFolder(currentUser,currentProject,cmsResource.getResourceName());
    Vector folders=getSubFolders(currentUser,currentProject,cmsResource.getResourceName());
    CmsResource currentResource;
    for (int i=0; i < files.size(); i++) {
      currentResource=(CmsResource)files.elementAt(i);
      if (currentResource.getState() != C_STATE_DELETED) {
        lockResource(currentUser,currentProject,currentResource.getResourceName(),true);
      }
 else {
        changeLockedInProject(currentProject.getId(),currentResource.getResourceName(),currentUser);
      }
    }
    for (int i=0; i < folders.size(); i++) {
      currentResource=(CmsResource)folders.elementAt(i);
      if (currentResource.getState() != C_STATE_DELETED) {
        lockResource(currentUser,currentProject,currentResource.getResourceName(),true);
      }
 else {
        changeLockedInProject(currentProject.getId(),currentResource.getResourceName(),currentUser);
      }
    }
  }
  return cmsResource;
}
