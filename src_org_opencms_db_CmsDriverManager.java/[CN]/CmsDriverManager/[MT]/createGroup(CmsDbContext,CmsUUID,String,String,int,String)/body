{
  OpenCms.getValidationHandler().checkGroupName(CmsOrganizationalUnit.getSimpleName(name));
  name=name.trim();
  readOrganizationalUnit(dbc,CmsOrganizationalUnit.getParentFqn(name));
  if (CmsStringUtil.isNotEmpty(parent)) {
    CmsGroup parentGroup=readGroup(dbc,parent);
    if (!parentGroup.isRole() && !CmsOrganizationalUnit.getParentFqn(parent).equals(CmsOrganizationalUnit.getParentFqn(name))) {
      throw new CmsDataAccessException(Messages.get().container(Messages.ERR_PARENT_GROUP_MUST_BE_IN_SAME_OU_3,CmsOrganizationalUnit.getSimpleName(name),CmsOrganizationalUnit.getParentFqn(name),parent));
    }
  }
  CmsGroup group=getUserDriver(dbc).createGroup(dbc,id,name,description,flags,parent);
  if (group.isVirtual()) {
    String groupname=CmsRole.valueOf(group).getGroupName();
    Iterator<CmsUser> it=getUsersOfGroup(dbc,groupname,true,false,true).iterator();
    while (it.hasNext()) {
      CmsUser user=it.next();
      addUserToGroup(dbc,user.getName(),group.getName(),true);
    }
  }
  m_monitor.cacheGroup(group);
  if (!dbc.getProjectId().isNullUUID()) {
    return group;
  }
  Map<String,Object> eventData=new HashMap<String,Object>();
  eventData.put(I_CmsEventListener.KEY_GROUP_NAME,group.getName());
  eventData.put(I_CmsEventListener.KEY_GROUP_ID,group.getId().toString());
  eventData.put(I_CmsEventListener.KEY_USER_ACTION,I_CmsEventListener.VALUE_GROUP_MODIFIED_ACTION_CREATE);
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_GROUP_MODIFIED,eventData));
  return group;
}
