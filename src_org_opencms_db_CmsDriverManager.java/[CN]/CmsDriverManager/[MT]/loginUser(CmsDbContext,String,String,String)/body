{
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(password)) {
    throw new CmsDbEntryNotFoundException(Messages.get().container(Messages.ERR_UNKNOWN_USER_1,userName));
  }
  CmsUser newUser;
  try {
    newUser=m_userDriver.readUser(dbc,userName,password,remoteAddress);
  }
 catch (  CmsDbEntryNotFoundException e) {
    boolean userExists=true;
    try {
      readUser(dbc,userName);
    }
 catch (    CmsDataAccessException e2) {
      userExists=false;
    }
    if (userExists) {
      if (dbc.currentUser().isGuestUser()) {
        OpenCms.getLoginManager().addInvalidLogin(userName,remoteAddress);
      }
      OpenCms.getLoginManager().checkInvalidLogins(userName,remoteAddress);
      throw new CmsAuthentificationException(org.opencms.security.Messages.get().container(org.opencms.security.Messages.ERR_LOGIN_FAILED_2,userName,remoteAddress),e);
    }
 else {
      String userOu=CmsOrganizationalUnit.getParentFqn(userName);
      if (userOu != null) {
        String parentOu=CmsOrganizationalUnit.getParentFqn(userOu);
        if (parentOu != null) {
          String uName=CmsOrganizationalUnit.getSimpleName(userName);
          return loginUser(dbc,parentOu + uName,password,remoteAddress);
        }
      }
      throw new CmsAuthentificationException(org.opencms.security.Messages.get().container(org.opencms.security.Messages.ERR_LOGIN_FAILED_NO_USER_2,userName,remoteAddress),e);
    }
  }
  if (!newUser.isEnabled()) {
    throw new CmsAuthentificationException(org.opencms.security.Messages.get().container(org.opencms.security.Messages.ERR_LOGIN_FAILED_DISABLED_2,userName,remoteAddress));
  }
  if (dbc.currentUser().isGuestUser()) {
    OpenCms.getLoginManager().checkInvalidLogins(userName,remoteAddress);
    OpenCms.getLoginManager().removeInvalidLogins(userName,remoteAddress);
  }
  if (!m_securityManager.hasRole(dbc,newUser,CmsRole.ADMINISTRATOR.forOrgUnit(dbc.getRequestContext().getOuFqn()))) {
    OpenCms.getLoginManager().checkLoginAllowed();
  }
  newUser.setLastlogin(System.currentTimeMillis());
  m_userDriver.writeUser(dbc,newUser);
  OpenCms.getMemoryMonitor().cacheUser(newUser);
  OpenCms.getMemoryMonitor().flushACLs();
  OpenCms.getMemoryMonitor().flushGroups();
  OpenCms.getMemoryMonitor().flushOrgUnits();
  OpenCms.getMemoryMonitor().flushUserGroups();
  OpenCms.getMemoryMonitor().flushPermissions();
  OpenCms.getMemoryMonitor().flushResourceLists();
  return newUser;
}
