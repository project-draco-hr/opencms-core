{
  List tokens=CmsStringUtil.splitAsList(path,'/');
  int count=tokens.size() + 1;
  List pathList=new ArrayList(count);
  boolean lastResourceIsFile=false;
  int folderCount=count;
  if (!path.endsWith("/")) {
    folderCount--;
    lastResourceIsFile=true;
  }
  String currentResourceName="/";
  StringBuffer currentPath=new StringBuffer(64);
  currentPath.append('/');
  String cp=currentPath.toString();
  CmsUUID projectId=getProjectIdForContext(dbc);
  String cacheKey=getCacheKey(null,false,projectId,cp);
  CmsResource currentResource=OpenCms.getMemoryMonitor().getCachedResource(cacheKey);
  if (currentResource == null) {
    currentResource=m_vfsDriver.readFolder(dbc,projectId,cp);
    OpenCms.getMemoryMonitor().cacheResource(cacheKey,currentResource);
  }
  pathList.add(0,currentResource);
  if (count == 1) {
    return pathList;
  }
  Iterator it=tokens.iterator();
  currentResourceName=(String)it.next();
  int i=0;
  for (i=1; i < folderCount; i++) {
    currentPath.append(currentResourceName);
    currentPath.append('/');
    cp=currentPath.toString();
    cacheKey=getCacheKey(null,false,projectId,cp);
    currentResource=OpenCms.getMemoryMonitor().getCachedResource(cacheKey);
    if (currentResource == null) {
      currentResource=m_vfsDriver.readFolder(dbc,projectId,cp);
      OpenCms.getMemoryMonitor().cacheResource(cacheKey,currentResource);
    }
    pathList.add(i,currentResource);
    if (i < folderCount - 1) {
      currentResourceName=(String)it.next();
    }
  }
  if (lastResourceIsFile) {
    if (it.hasNext()) {
      currentResourceName=(String)it.next();
    }
    currentPath.append(currentResourceName);
    cp=currentPath.toString();
    cacheKey=getCacheKey(null,false,projectId,cp);
    currentResource=OpenCms.getMemoryMonitor().getCachedResource(cacheKey);
    if (currentResource == null) {
      currentResource=m_vfsDriver.readResource(dbc,projectId,cp,filter.includeDeleted());
      OpenCms.getMemoryMonitor().cacheResource(cacheKey,currentResource);
    }
    pathList.add(i,currentResource);
  }
  return pathList;
}
