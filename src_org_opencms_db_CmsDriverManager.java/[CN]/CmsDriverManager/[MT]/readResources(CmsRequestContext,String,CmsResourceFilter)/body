{
  String path=null;
  if (parentPath != null) {
    CmsResource parent=m_vfsDriver.readFileHeader(context.currentProject().getId(),parentPath,filter.includeDeleted());
    checkPermissions(context,parent,I_CmsConstants.C_READ_ACCESS,true,filter);
    if ((!filter.isValid(context,parent))) {
      return Collections.EMPTY_LIST;
    }
    path=parent.getRootPath();
  }
  String cacheKey=getCacheKey(context.currentUser().getName() + filter.getCacheId(),context.currentProject(),path);
  List subResources=(List)m_resourceListCache.get(cacheKey);
  if (subResources != null && subResources.size() > 0) {
    return setFullResourceNames(context,subResources,filter);
  }
  subResources=m_vfsDriver.readResources(context.currentProject().getId(),path,filter.getType(),filter.getState(),filter.getModifiedAfter(),filter.getModifiedBefore(),I_CmsConstants.C_READMODE_INCLUDE_TREE | (((filter.getMode() & CmsResourceFilter.C_FILTER_REQUIRE_CHILDS) > 0) ? I_CmsConstants.C_READMODE_EXCLUDE_TREE : 0) | (((filter.getMode() & CmsResourceFilter.C_FILTER_EXCLUDE_TYPE) > 0) ? I_CmsConstants.C_READMODE_EXCLUDE_TYPE : 0)| (((filter.getMode() & CmsResourceFilter.C_FILTER_EXCLUDE_STATE) > 0) ? I_CmsConstants.C_READMODE_EXCLUDE_STATE : 0));
  for (int i=0; i < subResources.size(); i++) {
    CmsResource currentResource=(CmsResource)subResources.get(i);
    int perms=hasPermissions(context,currentResource,I_CmsConstants.C_READ_OR_VIEW_ACCESS,true,filter);
    if (PERM_DENIED == perms) {
      subResources.remove(i--);
    }
  }
  m_resourceListCache.put(cacheKey,subResources);
  return setFullResourceNames(context,subResources,filter);
}
