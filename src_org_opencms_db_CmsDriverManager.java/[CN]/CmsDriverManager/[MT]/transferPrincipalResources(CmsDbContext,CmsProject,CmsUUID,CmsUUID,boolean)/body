{
  I_CmsUserDriver userDriver=getUserDriver(dbc);
  I_CmsVfsDriver vfsDriver=getVfsDriver(dbc);
  Set<CmsResource> resources=getResourcesForPrincipal(dbc,project,principalId,null,true);
  Iterator<CmsResource> it=resources.iterator();
  while (it.hasNext()) {
    CmsResource resource=it.next();
    boolean attrModified=false;
    CmsUUID createdUser=null;
    if (resource.getUserCreated().equals(principalId)) {
      createdUser=replacementId;
      attrModified=true;
    }
    CmsUUID lastModUser=null;
    if (resource.getUserLastModified().equals(principalId)) {
      lastModUser=replacementId;
      attrModified=true;
    }
    if (attrModified) {
      vfsDriver.transferResource(dbc,project,resource,createdUser,lastModUser);
      m_monitor.clearResourceCache();
    }
    boolean aceModified=false;
    if (withACEs) {
      Iterator<CmsAccessControlEntry> itAces=userDriver.readAccessControlEntries(dbc,project,resource.getResourceId(),false).iterator();
      while (itAces.hasNext()) {
        CmsAccessControlEntry ace=itAces.next();
        if (ace.getPrincipal().equals(principalId)) {
          CmsAccessControlEntry newAce=new CmsAccessControlEntry(ace.getResource(),replacementId,ace.getAllowedPermissions(),ace.getDeniedPermissions(),ace.getFlags());
          userDriver.writeAccessControlEntry(dbc,project,newAce);
          aceModified=true;
        }
      }
      if (aceModified) {
        m_monitor.clearAccessControlListCache();
      }
    }
    if (attrModified || aceModified) {
      Map<String,Object> data=new HashMap<String,Object>(2);
      data.put(I_CmsEventListener.KEY_RESOURCE,resource);
      data.put(I_CmsEventListener.KEY_CHANGE,new Integer(((attrModified) ? CHANGED_RESOURCE : 0) | ((aceModified) ? CHANGED_ACCESSCONTROL : 0)));
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_MODIFIED,data));
    }
  }
}
