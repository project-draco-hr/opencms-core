{
  String driverName=null;
  String driverPoolUrl=null;
  I_CmsVfsDriver vfsDriver=null;
  I_CmsUserDriver userDriver=null;
  I_CmsProjectDriver projectDriver=null;
  I_CmsWorkflowDriver workflowDriver=null;
  I_CmsBackupDriver backupDriver=null;
  CmsDriverManager driverManager=null;
  try {
    driverManager=new CmsDriverManager();
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver manager init  : phase 1 - initializing database");
    }
  }
 catch (  Exception exc) {
    String message="Critical error while loading driver manager";
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsDriverManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver manager init  : phase 2 - initializing pools");
  }
  String driverPoolNames[]=configurations.getStringArray(I_CmsConstants.C_CONFIGURATION_DB + ".pools");
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    String names="";
    for (int p=0; p < driverPoolNames.length; p++) {
      names+=driverPoolNames[p] + " ";
    }
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Resource pools       : " + names);
  }
  for (int p=0; p < driverPoolNames.length; p++) {
    driverManager.newPoolInstance(configurations,driverPoolNames[p]);
  }
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver manager init  : phase 3 - initializing drivers");
  }
  driverName=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".vfs.driver");
  driverPoolUrl=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".vfs.pool");
  vfsDriver=(I_CmsVfsDriver)driverManager.newDriverInstance(configurations,driverName,driverPoolUrl);
  driverName=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".user.driver");
  driverPoolUrl=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".user.pool");
  userDriver=(I_CmsUserDriver)driverManager.newDriverInstance(configurations,driverName,driverPoolUrl);
  driverName=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".project.driver");
  driverPoolUrl=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".project.pool");
  projectDriver=(I_CmsProjectDriver)driverManager.newDriverInstance(configurations,driverName,driverPoolUrl);
  driverName=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".workflow.driver");
  driverPoolUrl=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".workflow.pool");
  workflowDriver=(I_CmsWorkflowDriver)driverManager.newDriverInstance(configurations,driverName,driverPoolUrl);
  driverName=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".backup.driver");
  driverPoolUrl=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".backup.pool");
  backupDriver=(I_CmsBackupDriver)driverManager.newDriverInstance(configurations,driverName,driverPoolUrl);
  try {
    driverManager.init(configurations,vfsDriver,userDriver,projectDriver,workflowDriver,backupDriver);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver manager init  : phase 4 ok - finished");
    }
  }
 catch (  Exception exc) {
    String message="Critical error while loading driver manager";
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsDriverManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
  driverPoolUrl=configurations.getString(I_CmsConstants.C_CONFIGURATION_DB + ".cos.pool");
  A_OpenCms.setRuntimeProperty("cosPoolUrl",driverPoolUrl);
  CmsIdGenerator.setDefaultPool(driverPoolUrl);
  return driverManager;
}
