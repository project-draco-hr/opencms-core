{
  CmsResource newResource=null;
  if (resource.isFolder()) {
    resourcePath=CmsFileUtil.addTrailingSeparator(resourcePath);
  }
  try {
    String parentFolderName=CmsResource.getParentFolder(resourcePath);
    CmsResource parentFolder=readFolder(dbc,parentFolderName,CmsResourceFilter.IGNORE_EXPIRATION);
    CmsLock parentLock=getLock(dbc,parentFolder);
    if (!parentLock.isUnlocked() && !parentLock.isOwnedBy(dbc.currentUser())) {
      if (!CmsResource.getName(resourcePath).startsWith(TEMP_FILE_PREFIX) || !m_securityManager.hasRole(dbc,dbc.currentUser(),CmsRole.ROOT_ADMIN)) {
        throw new CmsLockException(Messages.get().container(Messages.ERR_CREATE_RESOURCE_PARENT_LOCK_1,dbc.removeSiteRoot(resourcePath)));
      }
    }
    if (CmsResourceTypeJsp.isJSP(resource)) {
      m_securityManager.checkRoleForResource(dbc,CmsRole.DEVELOPER,parentFolder);
    }
    boolean useLostAndFound=importCase && !OpenCms.getImportExportManager().overwriteCollidingResources();
    CmsResource currentResourceByName=null;
    try {
      currentResourceByName=readResource(dbc,resourcePath,CmsResourceFilter.ALL);
    }
 catch (    CmsVfsResourceNotFoundException e) {
    }
    try {
      CmsResource currentResourceById=readResource(dbc,resource.getStructureId(),CmsResourceFilter.ALL);
      if (!currentResourceById.getRootPath().equals(resourcePath)) {
        throw new CmsVfsResourceAlreadyExistsException(Messages.get().container(Messages.ERR_RESOURCE_WITH_ID_ALREADY_EXISTS_3,dbc.removeSiteRoot(resourcePath),dbc.removeSiteRoot(currentResourceById.getRootPath()),currentResourceById.getStructureId()));
      }
    }
 catch (    CmsVfsResourceNotFoundException e) {
    }
    if (currentResourceByName == null) {
      m_securityManager.checkPermissions(dbc,parentFolder,CmsPermissionSet.ACCESS_WRITE,false,CmsResourceFilter.IGNORE_EXPIRATION);
    }
 else {
      m_securityManager.checkPermissions(dbc,currentResourceByName,CmsPermissionSet.ACCESS_WRITE,!importCase,CmsResourceFilter.ALL);
    }
    if (currentResourceByName != null) {
      boolean overwrite=true;
      if (currentResourceByName.getState().isDeleted()) {
        if (!currentResourceByName.isFolder()) {
          overwrite=false;
        }
      }
 else {
        if (!importCase) {
          throw new CmsVfsResourceAlreadyExistsException(org.opencms.db.generic.Messages.get().container(org.opencms.db.generic.Messages.ERR_RESOURCE_WITH_NAME_ALREADY_EXISTS_1,dbc.removeSiteRoot(resource.getRootPath())));
        }
        if (!resource.isFolder() && useLostAndFound && (!currentResourceByName.getResourceId().equals(resource.getResourceId()))) {
          moveToLostAndFound(dbc,currentResourceByName,false);
        }
      }
      if (!overwrite) {
        lockResource(dbc,currentResourceByName,CmsLockType.EXCLUSIVE);
        currentResourceByName=null;
      }
    }
    CmsResource overwrittenResource=currentResourceByName;
    String targetName=CmsResource.getName(resourcePath);
    int contentLength;
    if (resource.isFolder()) {
      contentLength=-1;
      if (CmsResource.isFolder(targetName)) {
        targetName=targetName.substring(0,targetName.length() - 1);
      }
    }
 else {
      if (content != null) {
        contentLength=content.length;
      }
 else       if (overwrittenResource != null) {
        contentLength=overwrittenResource.getLength();
      }
 else {
        contentLength=resource.getLength();
      }
    }
    CmsResource.checkResourceName(targetName);
    CmsUUID structureId=resource.getStructureId();
    CmsUUID resourceId=resource.getResourceId();
    if (overwrittenResource != null) {
      structureId=overwrittenResource.getStructureId();
    }
    if (structureId.isNullUUID()) {
      structureId=new CmsUUID();
    }
    if (overwrittenResource != null) {
      resourceId=overwrittenResource.getResourceId();
    }
    if (resourceId.isNullUUID()) {
      resourceId=new CmsUUID();
    }
    try {
      CmsResource onlineResource=m_vfsDriver.readResource(dbc,CmsProject.ONLINE_PROJECT_ID,resourcePath,true);
      try {
        CmsResource offlineResource=m_vfsDriver.readResource(dbc,dbc.currentProject().getUuid(),onlineResource.getStructureId(),true);
        if (!offlineResource.getRootPath().equals(onlineResource.getRootPath())) {
          throw new CmsVfsOnlineResourceAlreadyExistsException(Messages.get().container(Messages.ERR_ONLINE_RESOURCE_EXISTS_2,dbc.removeSiteRoot(resourcePath),dbc.removeSiteRoot(offlineResource.getRootPath())));
        }
      }
 catch (      CmsVfsResourceNotFoundException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(e.getLocalizedMessage(),e);
        }
      }
    }
 catch (    CmsVfsResourceNotFoundException e) {
    }
    newResource=new CmsResource(structureId,resourceId,resourcePath,resource.getTypeId(),resource.isFolder(),resource.getFlags(),dbc.currentProject().getUuid(),resource.getState(),resource.getDateCreated(),resource.getUserCreated(),resource.getDateLastModified(),resource.getUserLastModified(),resource.getDateReleased(),resource.getDateExpired(),1,contentLength,resource.getDateContent(),resource.getVersion());
    if (resource.isTouched()) {
      newResource.setDateLastModified(resource.getDateLastModified());
    }
    if (resource.isFile()) {
      if (labelResource(dbc,resource,resourcePath,2)) {
        int flags=resource.getFlags();
        flags|=CmsResource.FLAG_LABELED;
        resource.setFlags(flags);
      }
      if (content == null) {
        newResource.setState(CmsResource.STATE_KEEP);
      }
    }
    m_vfsDriver.deleteRelations(dbc,dbc.currentProject().getUuid(),newResource,CmsRelationFilter.TARGETS);
    if (overwrittenResource == null) {
      CmsLock lock=getLock(dbc,newResource);
      if (lock.getEditionLock().isExclusive()) {
        unlockResource(dbc,newResource,true,false);
      }
      newResource=m_vfsDriver.createResource(dbc,dbc.currentProject().getUuid(),newResource,content);
    }
 else {
      int updateStates=(overwrittenResource.getState().isNew() ? CmsDriverManager.NOTHING_CHANGED : CmsDriverManager.UPDATE_ALL);
      m_vfsDriver.writeResource(dbc,dbc.currentProject().getUuid(),newResource,updateStates);
      if ((content != null) && resource.isFile()) {
        m_vfsDriver.writeContent(dbc,newResource.getResourceId(),content);
      }
    }
    writePropertyObjects(dbc,newResource,properties,false);
    try {
      lockResource(dbc,newResource,CmsLockType.EXCLUSIVE);
    }
 catch (    CmsLockException cle) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.ERR_CREATE_RESOURCE_LOCK_1,new Object[]{dbc.removeSiteRoot(newResource.getRootPath())}));
      }
    }
    if (!importCase) {
      log(dbc,new CmsLogEntry(dbc,newResource.getStructureId(),CmsLogEntryType.RESOURCE_CREATED,new String[]{resource.getRootPath()}),false);
    }
 else {
      log(dbc,new CmsLogEntry(dbc,newResource.getStructureId(),CmsLogEntryType.RESOURCE_IMPORTED,new String[]{resource.getRootPath()}),false);
    }
  }
  finally {
    m_monitor.clearAccessControlListCache();
    m_monitor.flushCache(CmsMemoryMonitor.CacheType.PROPERTY,CmsMemoryMonitor.CacheType.PROPERTY_LIST);
    if (newResource != null) {
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_CREATED,Collections.<String,Object>singletonMap(I_CmsEventListener.KEY_RESOURCE,newResource)));
    }
  }
  return newResource;
}
