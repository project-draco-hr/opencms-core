{
  CmsResource res=readFileHeader(currentUser,currentProject,resource);
  checkPermissions(currentUser,currentProject,res,I_CmsConstants.C_WRITE_ACCESS);
  I_CmsResourceType resType=getResourceType(currentUser,currentProject,res.getType());
  CmsPropertydefinition metadef=readPropertydefinition(currentUser,currentProject,property,resType.getResourceTypeName());
  if ((metadef != null)) {
    m_vfsDriver.deleteProperty(property,currentProject.getId(),res,res.getType());
    if (res.isFile()) {
      m_vfsDriver.writeFileHeader(currentProject,(CmsFile)res,true,currentUser.getId());
      if (res.getState() == I_CmsConstants.C_STATE_UNCHANGED) {
        res.setState(I_CmsConstants.C_STATE_CHANGED);
      }
    }
 else {
      if (res.getState() == I_CmsConstants.C_STATE_UNCHANGED) {
        res.setState(I_CmsConstants.C_STATE_CHANGED);
      }
      m_vfsDriver.writeFolder(currentProject,readFolder(currentUser,currentProject,resource),true,currentUser.getId());
    }
    this.clearResourceCache(resource,currentProject,currentUser);
    m_propertyCache.clear();
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] "+ resource,CmsException.C_UNKNOWN_EXCEPTION);
  }
}
