{
  String folderName=null;
  String resourceName=null;
  CmsUUID newUuid=new CmsUUID();
  CmsUUID newUuidfile=new CmsUUID();
  CmsUUID newUuidresource=new CmsUUID();
  boolean isFolder=(resourceType == CmsResourceTypeFolder.C_RESOURCE_TYPE_ID);
  if (isFolder) {
    if (!newResourceName.endsWith(I_CmsConstants.C_FOLDER_SEPARATOR))     newResourceName+=I_CmsConstants.C_FOLDER_SEPARATOR;
    folderName=newResourceName.substring(0,newResourceName.lastIndexOf(I_CmsConstants.C_FOLDER_SEPARATOR,newResourceName.length() - 2) + 1);
    resourceName=newResourceName.substring(folderName.length(),newResourceName.length() - 1);
  }
 else {
    folderName=newResourceName.substring(0,newResourceName.lastIndexOf(I_CmsConstants.C_FOLDER_SEPARATOR,newResourceName.length()) + 1);
    resourceName=newResourceName.substring(folderName.length(),newResourceName.length());
  }
  validFilename(resourceName);
  CmsFolder parentFolder=readFolder(context,folderName);
  checkPermissions(context,parentFolder,I_CmsConstants.C_WRITE_ACCESS);
  if (filecontent == null) {
    filecontent=new byte[0];
  }
  if (uuid != null) {
    newUuid=new CmsUUID(uuid);
  }
  if (uuidfile != null) {
    newUuidfile=new CmsUUID(uuidfile);
  }
  if (uuidresource != null) {
    newUuidresource=new CmsUUID(uuidresource);
  }
  CmsResource newResource=new CmsResource(newUuid,newUuidresource,parentFolder.getId(),newUuidfile,resourceName,resourceType,0,context.currentProject().getId(),accessFlags,I_CmsConstants.C_STATE_NEW,context.currentUser().getId(),launcherType,launcherClassname,lastmodified,context.currentUser().getId(),lastmodified,context.currentUser().getId(),filecontent.length,context.currentProject().getId(),I_CmsConstants.C_VFS_LINK_TYPE_MASTER);
  newResource=m_vfsDriver.importResource(context.currentProject(),parentFolder.getId(),newResource,filecontent,context.currentUser().getId(),isFolder);
  clearResourceCache();
  m_vfsDriver.writeProperties(propertyinfos,context.currentProject().getId(),newResource,newResource.getType(),true);
  fileSystemChanged(true);
  return newResource;
}
