{
  checkPermissions(context,resource,I_CmsConstants.C_WRITE_ACCESS,true,CmsResourceFilter.ALL);
  int state=I_CmsConstants.C_STATE_CHANGED;
  CmsBackupResource backupFile=readBackupFile(context,tag,resource.getRootPath());
  if (resource.getState() == I_CmsConstants.C_STATE_NEW) {
    state=I_CmsConstants.C_STATE_NEW;
  }
  if (backupFile != null) {
    int flags=backupFile.getFlags();
    if (resource.isLabeled()) {
      flags|=I_CmsConstants.C_RESOURCEFLAG_LABELLINK;
    }
    CmsFile newFile=new CmsFile(resource.getStructureId(),resource.getResourceId(),resource.getParentStructureId(),backupFile.getContentId(),resource.getName(),backupFile.getTypeId(),flags,context.currentProject().getId(),state,backupFile.getLoaderId(),resource.getDateCreated(),backupFile.getUserCreated(),resource.getDateLastModified(),context.currentUser().getId(),backupFile.getDateReleased(),backupFile.getDateExpired(),backupFile.getSiblingCount(),backupFile.getLength(),backupFile.getContents());
    newFile.setRootPath(resource.getRootPath());
    writeFile(context,newFile);
    List backupProperties=m_backupDriver.readBackupProperties(backupFile);
    deleteAllProperties(context,newFile.getRootPath());
    writePropertyObjects(context,newFile,backupProperties);
    clearResourceCache();
  }
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_MODIFIED,Collections.singletonMap("resource",resource)));
}
