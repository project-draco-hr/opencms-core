{
  Class initParamClasses[]={Configurations.class,String.class,CmsDriverManager.class};
  Object initParams[]={configurations,driverPoolUrl,this};
  Class driverClass=null;
  Object driver=null;
  try {
    driverClass=Class.forName(driverName);
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INIT)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver init          : starting " + driverName);
    }
    driver=driverClass.newInstance();
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INIT)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver init          : initializing " + driverName);
    }
    driver.getClass().getMethod("init",initParamClasses).invoke(driver,initParams);
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INIT)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver init          : finished, assigned pool " + driverPoolUrl);
    }
  }
 catch (  Exception exc) {
    String message="Critical error while initializing " + driverName;
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsDriverManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
  return driver;
}
