{
  Vector retValue=new Vector();
  List resources=null;
  CmsResource currentResource=null;
  CmsLock currentLock=null;
  resources=readChangedResourcesInsideProject(context,projectId,I_CmsConstants.C_UNKNOWN_ID);
  Iterator i=resources.iterator();
  while (i.hasNext()) {
    currentResource=(CmsResource)i.next();
    if (hasPermissions(context,currentResource,I_CmsConstants.C_READ_ACCESS,false)) {
      if ("new".equalsIgnoreCase(filter) && currentResource.getState() == I_CmsConstants.C_STATE_NEW) {
        retValue.addElement(currentResource);
      }
 else       if ("changed".equalsIgnoreCase(filter) && currentResource.getState() == I_CmsConstants.C_STATE_CHANGED) {
        retValue.addElement(currentResource);
      }
 else       if ("deleted".equalsIgnoreCase(filter) && currentResource.getState() == I_CmsConstants.C_STATE_DELETED) {
        retValue.addElement(currentResource);
      }
 else       if ("locked".equalsIgnoreCase(filter)) {
        currentLock=getLock(context,currentResource);
        if (!currentLock.isNullLock()) {
          retValue.addElement(currentResource);
        }
      }
 else       if ("all".equalsIgnoreCase(filter) && currentResource.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
        retValue.addElement(currentResource);
      }
    }
  }
  resources.clear();
  resources=null;
  return retValue;
}
