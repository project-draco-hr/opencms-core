{
  Vector retValue=new Vector();
  List resources=null;
  CmsResource currentResource=null;
  CmsLock currentLock=null;
  int state=-1;
  if (filter.equals("new"))   state=I_CmsConstants.C_STATE_NEW;
 else   if (filter.equals("changed"))   state=I_CmsConstants.C_STATE_CHANGED;
 else   if (filter.equals("deleted"))   state=I_CmsConstants.C_STATE_DELETED;
 else   if (filter.equals("all"))   state=I_CmsConstants.C_STATE_UNCHANGED;
  if (filter.equals("locked")) {
    resources=m_vfsDriver.readResources(projectId,state,I_CmsConstants.C_READMODE_IGNORESTATE);
  }
 else {
    if ((state == I_CmsConstants.C_STATE_NEW) || (state == I_CmsConstants.C_STATE_CHANGED) || (state == I_CmsConstants.C_STATE_DELETED)) {
      resources=m_vfsDriver.readResources(projectId,state,I_CmsConstants.C_READMODE_MATCHSTATE);
    }
 else     if (state == I_CmsConstants.C_STATE_UNCHANGED) {
      resources=m_vfsDriver.readResources(projectId,state,I_CmsConstants.C_READMODE_UNMATCHSTATE);
    }
  }
  Iterator i=resources.iterator();
  while (i.hasNext()) {
    currentResource=(CmsResource)i.next();
    if (hasPermissions(context,currentResource,I_CmsConstants.C_READ_ACCESS,false)) {
      if (filter.equals("locked")) {
        currentLock=getLock(context,currentResource);
        if (!currentLock.isNullLock()) {
          retValue.addElement(currentResource);
        }
      }
 else {
        retValue.addElement(currentResource);
      }
    }
  }
  resources.clear();
  resources=null;
  return retValue;
}
