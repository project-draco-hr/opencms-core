{
  List allBackupFiles=m_backupDriver.readBackupFileHeaders(dbc);
  int counter=1;
  int size=allBackupFiles.size();
  int maxTag=m_backupDriver.readBackupProjectTag(dbc,timestamp);
  Iterator i=allBackupFiles.iterator();
  while (i.hasNext()) {
    CmsBackupResource res=(CmsBackupResource)i.next();
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,String.valueOf(counter),String.valueOf(size)),I_CmsReport.C_FORMAT_NOTE);
    report.print(Messages.get().container(Messages.RPT_CHECKING_0),I_CmsReport.C_FORMAT_NOTE);
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,res.getRootPath()));
    int resVersions=m_backupDriver.readBackupMaxVersion(dbc,res.getResourceId());
    int versionsToDelete=resVersions - versions;
    if (versionsToDelete > 0) {
      report.print(Messages.get().container(Messages.RPT_DELETE_VERSIONS_0),I_CmsReport.C_FORMAT_NOTE);
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
      m_backupDriver.deleteBackup(dbc,res,maxTag,versionsToDelete);
    }
 else {
      report.print(Messages.get().container(Messages.RPT_DELETE_NOTHING_0),I_CmsReport.C_FORMAT_NOTE);
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
    }
    report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.C_FORMAT_OK);
    counter++;
    int todo=0;
    m_projectDriver.deletePublishHistory(dbc,dbc.currentProject().getId(),maxTag);
  }
}
