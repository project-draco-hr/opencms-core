{
  Set projects=new HashSet();
  if (m_securityManager.hasRole(dbc,dbc.currentUser(),CmsRole.PROJECT_MANAGER.forOrgUnit(""))) {
    Iterator itOus=getOrgUnitsForRole(dbc,CmsRole.PROJECT_MANAGER,true).iterator();
    while (itOus.hasNext()) {
      CmsOrganizationalUnit ou=(CmsOrganizationalUnit)itOus.next();
      projects.addAll(m_projectDriver.readProjects(dbc,ou.getName()));
    }
  }
  projects.addAll(m_projectDriver.readProjectsForUser(dbc,dbc.currentUser()));
  List groups=getGroupsOfUser(dbc,dbc.currentUser().getName(),false);
  for (int i=0, n=groups.size(); i < n; i++) {
    projects.addAll(m_projectDriver.readProjectsForManagerGroup(dbc,(CmsGroup)groups.get(i)));
  }
  projects.remove(readProject(dbc,CmsProject.ONLINE_PROJECT_ID));
  Iterator itProjects=projects.iterator();
  while (itProjects.hasNext()) {
    CmsProject project=(CmsProject)itProjects.next();
    if (project.isHidden()) {
      itProjects.remove();
      continue;
    }
  }
  ArrayList manageableProjects=new ArrayList(projects);
  Collections.sort(manageableProjects);
  return manageableProjects;
}
