{
  if (dbc.getRequestContext().getOuFqn().equals(organizationalUnit.getName())) {
    throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_ORGUNIT_DELETE_IN_CONTEXT_1,organizationalUnit.getName()));
  }
  if (dbc.currentUser().getOuFqn().equals(organizationalUnit.getName())) {
    throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_ORGUNIT_DELETE_CURRENT_USER_1,organizationalUnit.getName()));
  }
  if (!getOrganizationalUnits(dbc,organizationalUnit,true).isEmpty()) {
    throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_ORGUNIT_DELETE_SUB_ORGUNITS_1,organizationalUnit.getName()));
  }
  List<CmsGroup> groups=getGroups(dbc,organizationalUnit,true,false);
  Iterator<CmsGroup> itGroups=groups.iterator();
  while (itGroups.hasNext()) {
    CmsGroup group=itGroups.next();
    if (!OpenCms.getDefaultUsers().isDefaultGroup(group.getName())) {
      throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_ORGUNIT_DELETE_GROUPS_1,organizationalUnit.getName()));
    }
  }
  if (!getUsers(dbc,organizationalUnit,true).isEmpty()) {
    throw new CmsDbConsistencyException(Messages.get().container(Messages.ERR_ORGUNIT_DELETE_USERS_1,organizationalUnit.getName()));
  }
  itGroups=groups.iterator();
  while (itGroups.hasNext()) {
    CmsGroup group=itGroups.next();
    deleteGroup(dbc,group,null);
  }
  Iterator<CmsProject> itProjects=m_projectDriver.readProjects(dbc,organizationalUnit.getName()).iterator();
  while (itProjects.hasNext()) {
    CmsProject project=itProjects.next();
    deleteProject(dbc,project);
  }
  Iterator<CmsGroup> itRoles=getGroups(dbc,organizationalUnit,true,true).iterator();
  while (itRoles.hasNext()) {
    CmsGroup role=itRoles.next();
    deleteGroup(dbc,role,null);
  }
  CmsResource resource=readResource(dbc,organizationalUnit.getId(),CmsResourceFilter.DEFAULT);
  CmsPublishList pl=new CmsPublishList(resource,false);
  pl.add(resource,false);
  m_userDriver.deleteOrganizationalUnit(dbc,organizationalUnit);
  m_projectDriver.writePublishHistory(dbc,pl.getPublishHistoryId(),new CmsPublishedResource(resource,-1,CmsResourceState.STATE_DELETED));
  m_monitor.clearPrincipalsCache();
  m_monitor.flushProperties();
  m_monitor.flushPropertyLists();
  Map<String,Object> eventData=new HashMap<String,Object>();
  eventData.put(I_CmsEventListener.KEY_PUBLISHID,pl.getPublishHistoryId().toString());
  eventData.put(I_CmsEventListener.KEY_PROJECTID,dbc.currentProject().getUuid());
  eventData.put(I_CmsEventListener.KEY_DBCONTEXT,dbc);
  CmsEvent afterPublishEvent=new CmsEvent(I_CmsEventListener.EVENT_PUBLISH_PROJECT,eventData);
  OpenCms.fireCmsEvent(afterPublishEvent);
  m_lockManager.removeDeletedResource(dbc,resource.getRootPath());
  if (!dbc.getProjectId().isNullUUID()) {
    return;
  }
  Map event2Data=new HashMap();
  event2Data.put(I_CmsEventListener.KEY_OU_NAME,organizationalUnit.getName());
  event2Data.put(I_CmsEventListener.KEY_USER_ACTION,I_CmsEventListener.VALUE_OU_MODIFIED_ACTION_DELETE);
  OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_OU_MODIFIED,event2Data));
}
