{
  CmsPublishList publishList;
  Map sortedFolderMap;
  List deletedFolders;
  List offlineFolders;
  List sortedFolderList;
  boolean directPublish=directPublishResource != null;
  boolean directPublishFile=directPublish && directPublishResource.isFile();
  if (directPublishFile) {
    return new CmsPublishList(directPublishResource);
  }
  if (directPublishResource != null) {
    publishList=new CmsPublishList(directPublishResource);
  }
 else {
    publishList=new CmsPublishList();
  }
  report.println(report.key("report.publish_prepare_folders"),I_CmsReport.C_FORMAT_HEADLINE);
  sortedFolderMap=new HashMap();
  deletedFolders=new ArrayList();
  report.print(report.key("report.publish_read_projectfolders") + report.key("report.dots"));
  offlineFolders=getVfsDriver().readFolders(context.currentProject().getId());
  report.println(report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
  report.print(report.key("report.publish_filter_folders") + report.key("report.dots"));
  Iterator i=offlineFolders.iterator();
  while (i.hasNext()) {
    boolean publishCurrentResource=false;
    CmsFolder currentFolder=(CmsFolder)i.next();
    String currentResourceName=currentFolder.getRootPath();
    CmsLock currentLock=getLock(context,currentResourceName);
    publishCurrentResource=currentFolder.getState() > I_CmsConstants.C_STATE_UNCHANGED;
    if (directPublishResource != null) {
      publishCurrentResource=publishCurrentResource && currentResourceName.startsWith(publishList.getDirectPublishResource().getRootPath());
    }
 else {
      publishCurrentResource=publishCurrentResource && currentFolder.getProjectLastModified() == context.currentProject().getId();
      publishCurrentResource=publishCurrentResource && CmsProject.isInsideProject(projectResources,currentFolder);
    }
    publishCurrentResource=publishCurrentResource && currentLock.isNullLock();
    if (publishCurrentResource) {
      sortedFolderMap.put(currentResourceName,currentFolder);
    }
  }
  sortedFolderList=new ArrayList(sortedFolderMap.keySet());
  Collections.sort(sortedFolderList);
  i=sortedFolderList.iterator();
  while (i.hasNext()) {
    String currentResourceName=(String)i.next();
    CmsFolder currentFolder=(CmsFolder)sortedFolderMap.get(currentResourceName);
    if (currentFolder.getState() == I_CmsConstants.C_STATE_DELETED) {
      deletedFolders.add(currentResourceName);
    }
 else {
      publishList.addFolder(currentFolder);
    }
  }
  if (deletedFolders.size() > 0) {
    Collections.sort(deletedFolders);
    Collections.reverse(deletedFolders);
    i=deletedFolders.iterator();
    while (i.hasNext()) {
      String currentResourceName=(String)i.next();
      CmsFolder currentFolder=(CmsFolder)sortedFolderMap.get(currentResourceName);
      publishList.addFolder(currentFolder);
    }
  }
  if (sortedFolderList != null) {
    sortedFolderList.clear();
    sortedFolderList=null;
  }
  if (sortedFolderMap != null) {
    sortedFolderMap.clear();
    sortedFolderMap=null;
  }
  if (offlineFolders != null) {
    offlineFolders.clear();
    offlineFolders=null;
  }
  if (deletedFolders != null) {
    deletedFolders.clear();
    deletedFolders=null;
  }
  report.println(report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
  report.println(report.key("report.publish_prepare_folders_finished"),I_CmsReport.C_FORMAT_HEADLINE);
  return publishList;
}
