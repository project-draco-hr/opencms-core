{
  ExtendedProperties config=(ExtendedProperties)configurationManager.getConfiguration();
  CmsDriverManager driverManager=null;
  try {
    driverManager=new CmsDriverManager();
    if (CmsLog.INIT.isInfoEnabled()) {
      CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DRIVER_MANAGER_START_PHASE1_0));
    }
    if (runtimeInfoFactory == null) {
      throw new CmsInitException(org.opencms.main.Messages.get().container(org.opencms.main.Messages.ERR_CRITICAL_NO_DB_CONTEXT_0));
    }
  }
 catch (  Exception exc) {
    CmsMessageContainer message=Messages.get().container(Messages.LOG_ERR_DRIVER_MANAGER_START_0);
    if (LOG.isFatalEnabled()) {
      LOG.fatal(message.key(),exc);
    }
    throw new CmsInitException(message,exc);
  }
  driverManager.m_propertyConfiguration=config;
  driverManager.m_securityManager=securityManager;
  driverManager.m_connectionPools=new ArrayList<PoolingDriver>();
  driverManager.m_lockManager=new CmsLockManager(driverManager);
  driverManager.m_sqlManager=new CmsSqlManager(driverManager);
  driverManager.m_publishEngine=publishEngine;
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DRIVER_MANAGER_START_PHASE2_0));
  }
  String[] driverPoolNames=config.getStringArray(CmsDriverManager.CONFIGURATION_DB + ".pools");
  if (CmsLog.INIT.isInfoEnabled()) {
    String names="";
    for (int p=0; p < driverPoolNames.length; p++) {
      names+=driverPoolNames[p] + " ";
    }
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DRIVER_MANAGER_START_POOLS_1,names));
  }
  for (int p=0; p < driverPoolNames.length; p++) {
    driverManager.newPoolInstance(CmsCollectionsGenericWrapper.<String,Object>map(config),driverPoolNames[p]);
  }
  runtimeInfoFactory.initialize(driverManager);
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DRIVER_MANAGER_START_PHASE3_0));
  }
  CmsDbContext dbc=runtimeInfoFactory.getDbContext();
  driverManager.m_vfsDriver=(I_CmsVfsDriver)driverManager.createDriver(dbc,configurationManager,config,CONFIGURATION_VFS,".vfs.driver");
  dbc.clear();
  dbc=runtimeInfoFactory.getDbContext();
  driverManager.m_userDriver=(I_CmsUserDriver)driverManager.createDriver(dbc,configurationManager,config,CONFIGURATION_USER,".user.driver");
  dbc.clear();
  dbc=runtimeInfoFactory.getDbContext();
  driverManager.m_projectDriver=(I_CmsProjectDriver)driverManager.createDriver(dbc,configurationManager,config,CONFIGURATION_PROJECT,".project.driver");
  dbc.clear();
  dbc=runtimeInfoFactory.getDbContext();
  driverManager.m_historyDriver=(I_CmsHistoryDriver)driverManager.createDriver(dbc,configurationManager,config,CONFIGURATION_HISTORY,".history.driver");
  dbc.clear();
  dbc=runtimeInfoFactory.getDbContext();
  driverManager.m_subscriptionDriver=(I_CmsSubscriptionDriver)driverManager.createDriver(dbc,configurationManager,config,CONFIGURATION_SUBSCRIPTION,".subscription.driver");
  dbc.clear();
  org.opencms.main.OpenCms.addCmsEventListener(driverManager,new int[]{I_CmsEventListener.EVENT_UPDATE_EXPORTS,I_CmsEventListener.EVENT_CLEAR_CACHES,I_CmsEventListener.EVENT_CLEAR_PRINCIPAL_CACHES,I_CmsEventListener.EVENT_USER_MODIFIED,I_CmsEventListener.EVENT_PUBLISH_PROJECT});
  return driverManager;
}
