{
  CmsProgressThread thread=null;
  if (Thread.currentThread() instanceof CmsProgressThread) {
    thread=(CmsProgressThread)Thread.currentThread();
  }
  Map<String,List<CmsRelation>> invalidResources=new HashMap<String,List<CmsRelation>>();
  boolean interProject=(publishList != null);
  if (report != null) {
    report.println(Messages.get().container(Messages.RPT_HTMLLINK_VALIDATOR_BEGIN_0),I_CmsReport.FORMAT_HEADLINE);
  }
  List<CmsResource> resources=new ArrayList<CmsResource>();
  if (publishList == null) {
    CmsResourceFilter filter=CmsResourceFilter.IGNORE_EXPIRATION;
    List<I_CmsResourceType> resTypes=OpenCms.getResourceManager().getResourceTypes();
    Iterator<I_CmsResourceType> itTypes=resTypes.iterator();
    int count=0;
    while (itTypes.hasNext()) {
      count++;
      if (thread != null) {
        if (thread.isInterrupted()) {
          throw new CmsIllegalStateException(org.opencms.workplace.commons.Messages.get().container(org.opencms.workplace.commons.Messages.ERR_PROGRESS_INTERRUPTED_0));
        }
        thread.setProgress((count * 10) / resTypes.size());
      }
      I_CmsResourceType type=itTypes.next();
      if (type instanceof I_CmsLinkParseable) {
        filter=filter.addRequireType(type.getTypeId());
        try {
          resources.addAll(m_driverManager.readResources(dbc,m_driverManager.readResource(dbc,"/",filter),filter,true));
        }
 catch (        CmsException e) {
          LOG.error(Messages.get().getBundle().key(Messages.LOG_RETRIEVAL_RESOURCES_1,type.getTypeName()),e);
        }
      }
    }
  }
 else {
    resources.addAll(publishList.getAllResources());
  }
  Map<String,CmsResource> offlineFilesLookup=new HashMap<String,CmsResource>();
  Iterator<CmsResource> itResources=resources.iterator();
  int count=0;
  while (itResources.hasNext()) {
    count++;
    if (thread != null) {
      if (thread.isInterrupted()) {
        throw new CmsIllegalStateException(org.opencms.workplace.commons.Messages.get().container(org.opencms.workplace.commons.Messages.ERR_PROGRESS_INTERRUPTED_0));
      }
      thread.setProgress(((count * 10) / resources.size()) + 10);
    }
    CmsResource resource=itResources.next();
    offlineFilesLookup.put(resource.getRootPath(),resource);
  }
  CmsProject project=dbc.currentProject();
  if (interProject) {
    try {
      project=m_driverManager.readProject(dbc,CmsProject.ONLINE_PROJECT_ID);
    }
 catch (    CmsException e) {
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
  boolean foundBrokenLinks=false;
  for (int index=0, size=resources.size(); index < size; index++) {
    if (thread != null) {
      if (thread.isInterrupted()) {
        throw new CmsIllegalStateException(org.opencms.workplace.commons.Messages.get().container(org.opencms.workplace.commons.Messages.ERR_PROGRESS_INTERRUPTED_0));
      }
      thread.setProgress(((index * 20) / resources.size()) + 20);
    }
    CmsResource resource=resources.get(index);
    String resourceName=resource.getRootPath();
    if (report != null) {
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,new Integer(index + 1),new Integer(size)),I_CmsReport.FORMAT_NOTE);
      report.print(Messages.get().container(Messages.RPT_HTMLLINK_VALIDATING_0),I_CmsReport.FORMAT_NOTE);
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,dbc.removeSiteRoot(resourceName)));
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
    }
    List<CmsRelation> brokenLinks=validateLinks(dbc,resource,offlineFilesLookup,project,report);
    if (brokenLinks.size() > 0) {
      invalidResources.put(resourceName,brokenLinks);
      foundBrokenLinks=true;
    }
 else {
      if (report != null) {
        report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
      }
    }
  }
  if (foundBrokenLinks) {
    if (report != null) {
      report.println(Messages.get().container(Messages.RPT_HTMLLINK_VALIDATOR_ERROR_0),I_CmsReport.FORMAT_ERROR);
    }
  }
  if (report != null) {
    report.println(Messages.get().container(Messages.RPT_HTMLLINK_VALIDATOR_END_0),I_CmsReport.FORMAT_HEADLINE);
  }
  return invalidResources;
}
