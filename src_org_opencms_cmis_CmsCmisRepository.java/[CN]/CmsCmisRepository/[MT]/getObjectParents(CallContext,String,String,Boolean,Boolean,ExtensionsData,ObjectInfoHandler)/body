{
  try {
    Set<String> filterCollection=splitFilter(filter);
    boolean iaa=(includeAllowableActions == null ? false : includeAllowableActions.booleanValue());
    boolean irps=(includeRelativePathSegment == null ? false : includeRelativePathSegment.booleanValue());
    CmsObject cms=getCmsObject(context);
    CmsUUID structureId=new CmsUUID(objectId);
    CmsResource file=cms.readResource(structureId);
    if (m_root.equals(file)) {
      return Collections.emptyList();
    }
    if (context.isObjectInfoRequired()) {
      makeObjectData(context,cms,file,null,false,false,objectInfos);
    }
    CmsResource parent=cms.readParentFolder(file.getStructureId());
    ObjectData object=makeObjectData(context,cms,parent,filterCollection,iaa,false,objectInfos);
    ObjectParentDataImpl result=new ObjectParentDataImpl();
    result.setObject(object);
    if (irps) {
      result.setRelativePathSegment(file.getName());
    }
    return Collections.singletonList((ObjectParentData)result);
  }
 catch (  CmsException e) {
    handleCmsException(e);
    return null;
  }
}
