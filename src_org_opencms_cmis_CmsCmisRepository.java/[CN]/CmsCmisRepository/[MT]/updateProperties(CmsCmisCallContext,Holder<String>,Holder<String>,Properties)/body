{
  checkWriteAccess();
  try {
    CmsObject cms=getCmsObject(context);
    CmsUUID structureId=new CmsUUID(objectId.getValue());
    CmsResource resource=cms.readResource(structureId);
    Map<String,PropertyData<?>> propertyMap=properties.getProperties();
    List<CmsProperty> cmsProperties=getOpenCmsProperties(propertyMap);
    boolean wasLocked=ensureLock(cms,resource);
    try {
      cms.writePropertyObjects(resource,cmsProperties);
      @SuppressWarnings("unchecked") PropertyData<String> nameProperty=(PropertyData<String>)propertyMap.get(PropertyIds.NAME);
      if (nameProperty != null) {
        String newName=nameProperty.getFirstValue();
        checkResourceName(newName);
        String parentFolder=CmsResource.getParentFolder(resource.getRootPath());
        String newPath=CmsStringUtil.joinPaths(parentFolder,newName);
        cms.moveResource(resource.getRootPath(),newPath);
        resource=cms.readResource(resource.getStructureId());
      }
      for (      String key : properties.getProperties().keySet()) {
        if (key.startsWith(CmsCmisTypeManager.PROPERTY_PREFIX_DYNAMIC)) {
          I_CmsPropertyProvider provider=getTypeManager().getPropertyProvider(key);
          try {
            String value=(String)(properties.getProperties().get(key).getFirstValue());
            provider.setPropertyValue(cms,resource,value);
          }
 catch (          CmsException e) {
            LOG.error(e.getLocalizedMessage(),e);
          }
        }
      }
    }
  finally {
      if (wasLocked) {
        cms.unlockResource(resource);
      }
    }
  }
 catch (  CmsException e) {
    handleCmsException(e);
  }
}
