{
  if ((addAces != null) || (removeAces != null)) {
    throw new CmisConstraintException("createDocument: ACEs not allowed");
  }
  try {
    CmsObject cms=getCmsObject(context);
    Map<String,PropertyData<?>> properties=propertiesObj.getProperties();
    String resTypeName=getResourceTypeFromProperties(properties,CmsResourceTypePlain.getStaticTypeName());
    I_CmsResourceType cmsResourceType=OpenCms.getResourceManager().getResourceType(resTypeName);
    List<CmsProperty> cmsProperties=getOpenCmsProperties(properties);
    String newDocName=(String)properties.get(PropertyIds.NAME).getFirstValue();
    checkResourceName(newDocName);
    CmsUUID parentFolderId=new CmsUUID(folderId);
    CmsResource parentFolder=cms.readResource(parentFolderId);
    String targetPath=CmsStringUtil.joinPaths(parentFolder.getRootPath(),newDocName);
    CmsUUID sourceUuid=new CmsUUID(sourceId);
    CmsResource source=cms.readResource(sourceUuid);
    String sourcePath=source.getRootPath();
    try {
      cms.copyResource(sourcePath,targetPath);
    }
 catch (    CmsVfsResourceAlreadyExistsException e) {
      throw new CmisNameConstraintViolationException(e.getLocalizedMessage(),e);
    }
    CmsResource targetResource=cms.readResource(targetPath);
    cms.unlockResource(targetResource);
    boolean wasLocked=ensureLock(cms,targetResource);
    cms.writePropertyObjects(targetResource,cmsProperties);
    if (wasLocked) {
      cms.unlockResource(targetResource);
    }
    return targetResource.getStructureId().toString();
  }
 catch (  CmsException e) {
    handleCmsException(e);
    return null;
  }
}
