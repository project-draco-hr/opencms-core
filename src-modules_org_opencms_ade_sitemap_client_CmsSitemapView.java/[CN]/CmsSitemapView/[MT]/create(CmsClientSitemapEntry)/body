{
  CmsListInfoBean infoBean=new CmsListInfoBean();
  infoBean.setTitle(entry.getTitle());
  infoBean.setSubTitle(entry.getSitePath());
  infoBean.addAdditionalInfo(Messages.get().key(Messages.GUI_NAME_0),entry.getName());
  String shownPath=entry.getVfsPath();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(shownPath)) {
    shownPath="-";
  }
  infoBean.addAdditionalInfo(Messages.get().key(Messages.GUI_VFS_PATH_0),shownPath);
  infoBean.setResourceType(CmsStringUtil.isNotEmptyOrWhitespaceOnly(entry.getDefaultFileType()) ? entry.getDefaultFileType() : entry.getResourceTypeName());
  CmsInfoLoadingListItemWidget itemWidget=new CmsInfoLoadingListItemWidget(infoBean);
  final CmsSitemapTreeItem treeItem=new CmsSitemapTreeItem(itemWidget,entry);
  itemWidget.setAdditionalInfoLoader(new I_CmsAdditionalInfoLoader(){
    public void load(    final AsyncCallback<List<AdditionalInfoItem>> callback){
      if (entry.getVfsPath() == null) {
        List<AdditionalInfoItem> infoItems=new ArrayList<AdditionalInfoItem>();
        AdditionalInfoItem item=createResourceStateInfo(CmsResourceState.STATE_NEW);
        infoItems.add(item);
        callback.onSuccess(infoItems);
      }
 else {
        m_controller.getService().getAdditionalEntryInfo(entry.getId(),new AsyncCallback<CmsAdditionalEntryInfo>(){
          /** 
 * @see com.google.gwt.user.client.rpc.AsyncCallback#onFailure(java.lang.Throwable)
 */
          public void onFailure(          Throwable caught){
          }
          /** 
 * @see com.google.gwt.user.client.rpc.AsyncCallback#onSuccess(Object o)
 */
          public void onSuccess(          CmsAdditionalEntryInfo result){
            List<AdditionalInfoItem> items=new ArrayList<AdditionalInfoItem>();
            items.add(createResourceStateInfo(result.getResourceState()));
            if ((result.getAdditional() != null) && !result.getAdditional().isEmpty()) {
              for (              Entry<String,String> infoEntry : result.getAdditional().entrySet()) {
                items.add(new AdditionalInfoItem(infoEntry.getKey(),infoEntry.getValue(),null));
              }
            }
            callback.onSuccess(items);
          }
        }
);
      }
    }
    /** 
 * Helper method for creating an additional info item from a resource state.<p>
 * @param state the resource state for creating the additional info item 
 * @return the additional info item 
 */
    protected AdditionalInfoItem createResourceStateInfo(    CmsResourceState state){
      final String label=org.opencms.gwt.client.Messages.get().key(org.opencms.gwt.client.Messages.GUI_RESOURCE_STATE_0);
      AdditionalInfoItem item=new AdditionalInfoItem(label,CmsResourceStateUtil.getStateName(state),CmsResourceStateUtil.getStateStyle(state));
      return item;
    }
  }
);
  CmsSitemapHoverbar.installOn(m_controller,treeItem);
  return treeItem;
}
