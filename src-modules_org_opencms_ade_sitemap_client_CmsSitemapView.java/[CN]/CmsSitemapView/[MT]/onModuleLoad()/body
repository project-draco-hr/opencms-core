{
  super.onModuleLoad();
  I_CmsLayoutBundle.INSTANCE.rootCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.pageCss().ensureInjected();
  I_CmsImageBundle.INSTANCE.buttonCss().ensureInjected();
  RootPanel.getBodyElement().addClassName(I_CmsLayoutBundle.INSTANCE.rootCss().root());
  final CmsSitemapController controller=new CmsSitemapController();
  final CmsSitemapTreeItemFactory factory=new CmsSitemapTreeItemFactory(controller);
  final CmsLazyTree<CmsSitemapTreeItem> tree=new CmsLazyTree<CmsSitemapTreeItem>(new A_CmsDeepLazyOpenHandler<CmsSitemapTreeItem>(){
    /** 
 * @see org.opencms.gwt.client.ui.tree.I_CmsLazyOpenHandler#load(org.opencms.gwt.client.ui.tree.CmsLazyTreeItem)
 */
    public void load(    final CmsSitemapTreeItem target){
      controller.getChildren(target.getEntry());
    }
  }
);
  final CmsSitemapToolbar toolbar=new CmsSitemapToolbar();
  toolbar.setHandler(new CmsSitemapToolbarHandler(controller));
  controller.setHandler(new CmsSitemapControllerHandler(toolbar,tree,factory));
  RootPanel.get().add(toolbar);
  RootPanel.get().add(new CmsToolbarPlaceHolder());
  CmsHeader title=new CmsHeader(Messages.get().key(Messages.GUI_EDITOR_TITLE_0),CmsSitemapProvider.get().getUri());
  title.addStyleName(I_CmsLayoutBundle.INSTANCE.rootCss().pageCenter());
  RootPanel.get().add(title);
  final CmsPage page=new CmsPage();
  RootPanel.get().add(page);
  final Label loadingLabel=new Label(Messages.get().key(Messages.GUI_LOADING_0));
  page.add(loadingLabel);
  controller.initialize(new Command(){
    /** 
 * @see com.google.gwt.user.client.Command#execute()
 */
    public void execute(){
      page.remove(loadingLabel);
      page.add(tree);
    }
  }
);
}
