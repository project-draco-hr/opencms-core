{
  super.onModuleLoad();
  m_instance=this;
  I_CmsLayoutBundle.INSTANCE.rootCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.pageCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.clipboardCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.sitemapItemCss().ensureInjected();
  I_CmsImageBundle.INSTANCE.buttonCss().ensureInjected();
  RootPanel.getBodyElement().addClassName(I_CmsLayoutBundle.INSTANCE.rootCss().root());
  m_controller=new CmsSitemapController();
  m_controller.addChangeHandler(this);
  m_controller.addLoadHandler(this);
  m_toolbar=new CmsSitemapToolbar(m_controller);
  RootPanel.get().add(m_toolbar);
  RootPanel.get().add(new CmsToolbarPlaceHolder());
  m_hoverbar=new CmsSitemapHoverbar(m_controller);
  CmsHeader title=new CmsHeader(Messages.get().key(Messages.GUI_EDITOR_TITLE_0),CmsCoreProvider.get().getUri());
  title.addStyleName(I_CmsLayoutBundle.INSTANCE.rootCss().pageCenter());
  RootPanel.get().add(title);
  final CmsPage page=new CmsPage();
  RootPanel.get().add(page);
  final Label loadingLabel=new Label(org.opencms.gwt.client.Messages.get().key(org.opencms.gwt.client.Messages.GUI_LOADING_0));
  page.add(loadingLabel);
  CmsClientSitemapEntry root=m_controller.getData().getRoot();
  CmsSitemapTreeItem rootItem=createSitemapItem(root);
  rootItem.onFinishLoading();
  rootItem.setOpen(true);
  m_tree=new CmsLazyTree<CmsSitemapTreeItem>(new A_CmsDeepLazyOpenHandler<CmsSitemapTreeItem>(){
    /** 
 * @see org.opencms.gwt.client.ui.tree.I_CmsLazyOpenHandler#load(org.opencms.gwt.client.ui.tree.CmsLazyTreeItem)
 */
    public void load(    final CmsSitemapTreeItem target){
      m_controller.getChildren(target.getOriginalPath(),target.getSitePath());
    }
  }
);
  if (m_controller.isEditable()) {
    m_tree.setDnDEnabled(true);
    m_tree.getDnDManager().addDropHandler(this);
    m_tree.setDropEnabled(false);
  }
  m_tree.truncate(TM_SITEMAP,920);
  m_tree.setAnimationEnabled(true);
  m_tree.addItem(rootItem);
  page.remove(loadingLabel);
  page.add(m_tree);
  Event.addNativePreviewHandler(this);
  Window.addWindowClosingHandler(this);
  if (!m_controller.isEditable()) {
    CmsNotification.get().sendSticky(CmsNotification.Type.WARNING,Messages.get().key(Messages.GUI_NO_EDIT_NOTIFICATION_1,m_controller.getData().getNoEditReason()));
    return;
  }
  String openPath=m_controller.getData().getOpenPath();
  if (openPath != null) {
    highlightPath(openPath);
  }
}
