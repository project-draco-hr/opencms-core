{
  CmsCategory selected=null;
  try {
    String name=param.getStringValue(cms);
    selected=CmsCategoryService.getInstance().getCategory(cms,name);
  }
 catch (  CmsException e) {
  }
  StringBuffer result=new StringBuffer(16);
  List levels=new ArrayList();
  try {
    result.append("<script language='javascript'>\n");
    String referencePath=null;
    try {
      referencePath=cms.getSitePath(getResource(cms,param));
    }
 catch (    Exception e) {
    }
    String startingCat=getStartingCategory(cms,referencePath);
    List cats=CmsCategoryService.getInstance().readCategories(cms,startingCat,true,referencePath);
    int baseLevel;
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(startingCat)) {
      baseLevel=0;
    }
 else {
      baseLevel=CmsResource.getPathLevel(startingCat);
      if (!(startingCat.startsWith("/") && startingCat.endsWith("/"))) {
        baseLevel++;
      }
    }
    int level;
    Set done=new HashSet();
    List options=new ArrayList();
    String jsId=CmsStringUtil.substitute(param.getId(),".","");
    for (level=baseLevel + 1; !cats.isEmpty(); level++) {
      if (level != (baseLevel + 1)) {
        result.append("var cat" + (level - baseLevel) + jsId+ " = new Array(\n");
      }
      Iterator itSubs=cats.iterator();
      while (itSubs.hasNext()) {
        CmsCategory cat=(CmsCategory)itSubs.next();
        if (CmsResource.getPathLevel(cat.getPath()) + 1 == level) {
          itSubs.remove();
          if (done.contains(cat.getPath())) {
            continue;
          }
          if (level != (baseLevel + 1)) {
            result.append("new Array('" + cat.getId() + "', '"+ CmsCategoryService.getInstance().readCategory(cms,CmsResource.getParentFolder(cat.getPath()),referencePath).getId()+ "', '"+ cat.getTitle()+ "'),\n");
          }
          if ((level == (baseLevel + 1)) || ((selected != null) && selected.getPath().startsWith(CmsResource.getParentFolder(cat.getPath())))) {
            if (levels.size() < (level - baseLevel)) {
              options=new ArrayList();
              levels.add(options);
              options.add(new CmsSelectWidgetOption("",true,Messages.get().getBundle(widgetDialog.getLocale()).key(Messages.GUI_CATEGORY_SELECT_0)));
            }
            options.add(new CmsSelectWidgetOption(cat.getId().toString(),false,cat.getTitle()));
          }
          done.add(cat.getPath());
        }
      }
      if (level != (baseLevel + 1)) {
        result.deleteCharAt(result.length() - 1);
        result.deleteCharAt(result.length() - 1);
        result.append(");\n");
      }
    }
    result.append("</script>\n");
    result.append("<td class=\"xmlTd\" >");
    result.append("<input id='" + param.getId() + "' name='"+ param.getId()+ "' type='hidden' value='"+ (selected != null ? selected.getId().toString() : "")+ "'>\n");
    for (int i=1; i < level - baseLevel; i++) {
      result.append("<span id='" + param.getId() + "cat"+ i+ "IdDisplay'");
      if (levels.size() >= i) {
        options=(List)levels.get(i - 1);
      }
 else {
        result.append(" style='display:none'");
        options=new ArrayList();
        options.add(new CmsSelectWidgetOption("",true,Messages.get().getBundle(widgetDialog.getLocale()).key(Messages.GUI_CATEGORY_SELECT_0)));
      }
      result.append(">");
      result.append(buildSelectBox(param.getId(),i,options,(selected != null ? CmsCategoryService.getInstance().readCategory(cms,CmsResource.getPathPart(selected.getPath(),i + baseLevel),referencePath).getId().toString() : ""),param.hasError(),(i == (level - baseLevel - 1))));
      result.append("</span>&nbsp;");
    }
    result.append("</td>");
  }
 catch (  CmsException e) {
    result.append(e.getLocalizedMessage());
  }
  return result.toString();
}
