{
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(m_category) && CmsStringUtil.isEmptyOrWhitespaceOnly(m_property)) {
    return "";
  }
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(m_property)) {
    if (m_category.startsWith("/")) {
      return m_category.substring(1);
    }
    return m_category;
  }
  I_CmsXmlContentValue value=(I_CmsXmlContentValue)param;
  CmsFile file=value.getDocument().getFile();
  String resourceName=cms.getSitePath(file);
  if (CmsWorkplace.isTemporaryFile(file)) {
    StringBuffer result=new StringBuffer(resourceName.length() + 2);
    result.append(CmsResource.getFolderPath(resourceName));
    result.append(CmsResource.getName(resourceName).substring(1));
    resourceName=result.toString();
  }
  try {
    List listsib=cms.readSiblings(resourceName,CmsResourceFilter.ALL);
    for (int i=0; i < listsib.size(); i++) {
      CmsResource resource=(CmsResource)listsib.get(i);
      Locale locale=CmsCategoryXmlContentHandler.getDefaultLocale(cms,cms.getSitePath(resource));
      if (locale.equals(value.getLocale())) {
        return cms.readPropertyObject(resource,m_property,true).getValue("");
      }
    }
  }
 catch (  CmsException ex) {
    if (LOG.isErrorEnabled()) {
      LOG.error(ex.getLocalizedMessage(),ex);
    }
  }
  return "";
}
