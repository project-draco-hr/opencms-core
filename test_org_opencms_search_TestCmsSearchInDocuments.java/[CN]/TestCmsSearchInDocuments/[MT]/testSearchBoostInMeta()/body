{
  CmsObject cms=getCmsObject();
  echo("Testing search boosting in meta information");
  CmsSearch searchBean=new CmsSearch();
  List searchResult;
  int expected=6;
  String path="/search/";
  String query="OpenCms by Alkacon";
  searchBean.init(cms);
  searchBean.setIndex(INDEX_OFFLINE);
  searchBean.setSearchRoot(path);
  searchBean.setQuery(query);
  searchBean.setField(new String[]{CmsSearchField.FIELD_META});
  searchResult=searchBean.getSearchResult();
  System.out.println("\n\n----- No results should be displayed below");
  TestCmsSearch.printResults(searchResult,cms);
  assertEquals(0,searchResult.size());
  CmsProperty descripion=new CmsProperty(CmsPropertyDefinition.PROPERTY_DESCRIPTION,query,null,true);
  CmsProperty delete=new CmsProperty(CmsPropertyDefinition.PROPERTY_SEARCH_PRIORITY,CmsProperty.DELETE_VALUE,CmsProperty.DELETE_VALUE);
  List resources=cms.getFilesInFolder(path);
  Iterator i=resources.iterator();
  while (i.hasNext()) {
    CmsResource res=(CmsResource)i.next();
    String sitePath=cms.getSitePath(res);
    System.out.println(sitePath);
    cms.lockResource(sitePath);
    cms.writePropertyObject(sitePath,descripion);
    cms.writePropertyObject(sitePath,delete);
    cms.unlockResource(sitePath);
  }
  assertEquals(expected,resources.size());
  OpenCms.getSearchManager().rebuildAllIndexes(new CmsShellReport(cms.getRequestContext().getLocale()));
  searchBean.setIndex(INDEX_ONLINE);
  searchBean.setQuery(query);
  searchResult=searchBean.getSearchResult();
  assertEquals(0,searchResult.size());
  searchBean.setIndex(INDEX_OFFLINE);
  searchBean.setQuery(query);
  List firstSearchResult=searchBean.getSearchResult();
  System.out.println("\n\n-----  Results searching 'meta' field in OFFLINE index");
  TestCmsSearch.printResults(searchResult,cms);
  assertEquals(expected,firstSearchResult.size());
  CmsSearchResult res1=(CmsSearchResult)firstSearchResult.get(firstSearchResult.size() - 1);
  CmsSearchResult res2=(CmsSearchResult)firstSearchResult.get(firstSearchResult.size() - 2);
  CmsSearchResult res3=(CmsSearchResult)firstSearchResult.get(0);
  String path1=cms.getRequestContext().removeSiteRoot(res1.getPath());
  String path2=cms.getRequestContext().removeSiteRoot(res2.getPath());
  String path3=cms.getRequestContext().removeSiteRoot(res3.getPath());
  CmsProperty maxBoost=new CmsProperty(CmsPropertyDefinition.PROPERTY_SEARCH_PRIORITY,A_CmsVfsDocument.SEARCH_PRIORITY_MAX_VALUE,null,true);
  CmsProperty highBoost=new CmsProperty(CmsPropertyDefinition.PROPERTY_SEARCH_PRIORITY,A_CmsVfsDocument.SEARCH_PRIORITY_HIGH_VALUE,null,true);
  CmsProperty lowBoost=new CmsProperty(CmsPropertyDefinition.PROPERTY_SEARCH_PRIORITY,A_CmsVfsDocument.SEARCH_PRIORITY_LOW_VALUE,null,true);
  cms.lockResource(path1);
  cms.writePropertyObject(path1,maxBoost);
  cms.unlockResource(path1);
  cms.lockResource(path2);
  cms.writePropertyObject(path2,highBoost);
  cms.unlockResource(path2);
  cms.lockResource(path3);
  cms.writePropertyObject(path3,lowBoost);
  cms.unlockResource(path3);
  OpenCms.getSearchManager().rebuildAllIndexes(new CmsShellReport(cms.getRequestContext().getLocale()));
  searchBean.setIndex(INDEX_ONLINE);
  searchBean.setQuery(query);
  searchResult=searchBean.getSearchResult();
  assertEquals(0,searchResult.size());
  System.out.println("\n\n-----  Results searching 'meta' field in ONLINE index (repeat)");
  TestCmsSearch.printResults(firstSearchResult,cms);
  searchBean.setIndex(INDEX_OFFLINE);
  searchBean.setQuery(query);
  searchResult=searchBean.getSearchResult();
  System.out.println("\n\n-----  Results searching 'meta' field in OFFLINE index (with changes)");
  TestCmsSearch.printResults(searchResult,cms);
  assertEquals(expected,searchResult.size());
  assertEquals(res1.getPath(),((CmsSearchResult)searchResult.get(0)).getPath());
  assertEquals(res2.getPath(),((CmsSearchResult)searchResult.get(1)).getPath());
  assertEquals(res3.getPath(),((CmsSearchResult)searchResult.get(searchResult.size() - 1)).getPath());
}
