{
  firstElement=docXml.getDocumentElement();
  Vector users=RB.getUsers(user,project);
  Enumeration enum=users.elements();
  while (enum.hasMoreElements()) {
    newElement=docXml.createElement(C_TUSEROBJ);
    firstElement.appendChild(newElement);
    parentElement=newElement;
    CmsUser u=(CmsUser)enum.nextElement();
    newElement=docXml.createElement(C_TLOGIN);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getName());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TPASSWD);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode("Kennwort");
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TNAME);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getLastname());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TFIRSTNAME);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getFirstname());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TDESC);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getDescription());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TEMAIL);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getEmail());
    newElement.appendChild(newNode);
    CmsGroup g=u.getDefaultGroup();
    newElement=docXml.createElement(C_TDGROUP);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(g.getName());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUSERGROUPS);
    parentElement.appendChild(newElement);
    grandparentElement=parentElement;
    parentElement=newElement;
    Vector ug=RB.getGroupsOfUser(user,project,u.getName());
    Enumeration ugenum=ug.elements();
    while (ugenum.hasMoreElements()) {
      CmsGroup ng=(CmsGroup)ugenum.nextElement();
      newElement=docXml.createElement(C_TGROUP);
      parentElement.appendChild(newElement);
      newNode=docXml.createTextNode(ng.getName());
      newElement.appendChild(newNode);
    }
    String help=null;
    if (u.getDisabled() == false) {
      help=new String("false");
    }
 else {
      help=new String("true");
    }
    newElement=docXml.createElement(C_TDISABLED);
    grandparentElement.appendChild(newElement);
    newNode=docXml.createTextNode(help);
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TFLAG);
    grandparentElement.appendChild(newElement);
    newNode=docXml.createTextNode(String.valueOf(u.getFlags()));
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TADDINFO);
    grandparentElement.appendChild(newElement);
    parentElement=newElement;
    Hashtable h=u.getAdditionalInfo();
    Enumeration enum2=h.keys();
    Enumeration enum3=h.elements();
    while (enum2.hasMoreElements()) {
      if (!((String)enum2.nextElement()).equals("USER_DEFAULTGROUP_ID")) {
        newElement=docXml.createElement(C_TINFOKEY);
        parentElement.appendChild(newElement);
        newNode=docXml.createTextNode((String)enum2.nextElement());
        newElement.appendChild(newNode);
        newElement=docXml.createElement(C_TINFOVALUE);
        parentElement.appendChild(newElement);
        newNode=docXml.createTextNode(enum3.nextElement().toString());
        newElement.appendChild(newNode);
      }
    }
  }
  parser.getXmlText(docXml,fUserStream);
  fUserStream.close();
}
