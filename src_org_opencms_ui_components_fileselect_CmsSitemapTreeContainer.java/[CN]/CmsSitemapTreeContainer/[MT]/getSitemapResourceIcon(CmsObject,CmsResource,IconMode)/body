{
  CmsResource defaultFile=null;
  List<CmsResource> resourcesForType=Lists.newArrayList();
  resourcesForType.add(resource);
  boolean skipDefaultFile=(iconMode == IconMode.sitemapSelect) && OpenCms.getResourceManager().matchResourceType(CmsResourceTypeFolderSubSitemap.TYPE_SUBSITEMAP,resource.getTypeId());
  if (resource.isFolder() && !skipDefaultFile) {
    try {
      defaultFile=cms.readDefaultFile(resource,CmsResourceFilter.IGNORE_EXPIRATION);
      if (defaultFile != null) {
        resourcesForType.add(0,defaultFile);
      }
    }
 catch (    Exception e) {
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
  if (CmsJspNavBuilder.isNavLevelFolder(cms,resource)) {
    return CmsWorkplace.getResourceUri(CmsWorkplace.RES_PATH_FILETYPES + CmsIconUtil.ICON_NAV_LEVEL_BIG);
  }
  CmsResource maybePage=resourcesForType.get(0);
  if (CmsResourceTypeXmlContainerPage.isContainerPage(maybePage)) {
    CmsADEConfigData config=OpenCms.getADEManager().lookupConfiguration(cms,maybePage.getRootPath());
    for (    CmsDetailPageInfo realInfo : config.getAllDetailPages(true)) {
      if (realInfo.getUri().equals(maybePage.getRootPath()) || realInfo.getUri().equals(CmsResource.getParentFolder(maybePage.getRootPath()))) {
        CmsExplorerTypeSettings settings=OpenCms.getWorkplaceManager().getExplorerTypeSetting(realInfo.getIconType());
        if (settings != null) {
          return CmsWorkplace.getResourceUri(CmsWorkplace.RES_PATH_FILETYPES + settings.getBigIconIfAvailable());
        }
      }
    }
  }
  String result=null;
  for (  CmsResource res : resourcesForType) {
    I_CmsResourceType type=OpenCms.getResourceManager().getResourceType(res);
    CmsExplorerTypeSettings settings=OpenCms.getWorkplaceManager().getExplorerTypeSetting(type.getTypeName());
    if (settings != null) {
      result=CmsWorkplace.RES_PATH_FILETYPES + settings.getBigIconIfAvailable();
      break;
    }
  }
  return CmsWorkplace.getResourceUri(result);
}
