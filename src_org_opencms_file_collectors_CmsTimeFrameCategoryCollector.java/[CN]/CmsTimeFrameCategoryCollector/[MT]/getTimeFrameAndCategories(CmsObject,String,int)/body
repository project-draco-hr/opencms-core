{
  List<CmsResource> result=null;
  CollectorDataPropertyBased data=new CollectorDataPropertyBased(param);
  String foldername=CmsResource.getFolderPath(data.getFileName());
  CmsResourceFilter filter=CmsResourceFilter.DEFAULT.addRequireType(data.getType()).addExcludeFlags(CmsResource.FLAG_TEMPFILE);
  if (data.isExcludeTimerange() && !cms.getRequestContext().getCurrentProject().isOnlineProject()) {
    filter=filter.addExcludeTimerange();
  }
  result=cms.readResources(foldername,filter,true);
  String timeProperty=data.getPropertyTime().getName();
  long start=data.getTimeFrameStart();
  long end=data.getTimeFrameEnd();
  long resTime;
  Iterator<CmsResource> itResults=result.iterator();
  CmsProperty prop;
  CmsResource res;
  while (itResults.hasNext()) {
    res=itResults.next();
    prop=cms.readPropertyObject(res,timeProperty,true);
    if (!prop.isNullProperty()) {
      resTime=Long.parseLong(prop.getValue());
      if ((resTime < start) || (resTime > end)) {
        itResults.remove();
      }
    }
  }
  List<String> categories=data.getCategories();
  if ((categories != null) && !categories.isEmpty()) {
    itResults=result.iterator();
    String categoriesProperty=data.getPropertyCategories().getName();
    List<String> categoriesFound;
    while (itResults.hasNext()) {
      res=itResults.next();
      prop=cms.readPropertyObject(res,categoriesProperty,true);
      if (prop.isNullProperty()) {
        itResults.remove();
      }
 else {
        categoriesFound=CmsStringUtil.splitAsList(prop.getValue(),'|');
        Iterator<String> itCategories=categories.iterator();
        String category;
        boolean contained=false;
        while (itCategories.hasNext()) {
          category=itCategories.next();
          if (categoriesFound.contains(category)) {
            contained=true;
            break;
          }
        }
        if (!contained) {
          itResults.remove();
        }
      }
    }
  }
  if (data.isSortDescending()) {
    Collections.sort(result,I_CmsResource.COMPARE_DATE_RELEASED);
  }
 else {
    Collections.sort(result,new ComparatorInverter(I_CmsResource.COMPARE_DATE_RELEASED));
  }
  return shrinkToFit(result,data.getCount(),numResults);
}
