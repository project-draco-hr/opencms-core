{
  if (m_isValidatedCorrect != null) {
    return m_isValidatedCorrect.booleanValue();
  }
  boolean allOk=true;
  List fields=getFormConfiguration().getFields();
  for (int i=0, n=fields.size(); i < n; i++) {
    I_CmsField currentField=(I_CmsField)fields.get(i);
    if (currentField == null) {
      continue;
    }
    if (CmsCaptchaField.class.isAssignableFrom(currentField.getClass())) {
      continue;
    }
    String validationError=currentField.validate(this);
    if (CmsStringUtil.isNotEmpty(validationError)) {
      getErrors().put(currentField.getName(),validationError);
      allOk=false;
    }
  }
  CmsCaptchaField captchaField=m_formConfiguration.getCaptchaField();
  if (captchaField != null) {
    boolean captchaFieldIsOnInputPage=getFormConfiguration().captchaFieldIsOnInputPage() && getFormConfiguration().isInputFormSubmitted();
    boolean captchaFieldIsOnCheckPage=getFormConfiguration().captchaFieldIsOnCheckPage() && getFormConfiguration().isCheckPageSubmitted();
    if (captchaFieldIsOnInputPage || captchaFieldIsOnCheckPage) {
      if (!captchaField.validateCaptchaPhrase(this,captchaField.getValue())) {
        getErrors().put(captchaField.getName(),ERROR_VALIDATION);
        allOk=false;
      }
    }
  }
  m_isValidatedCorrect=Boolean.valueOf(allOk);
  return allOk;
}
