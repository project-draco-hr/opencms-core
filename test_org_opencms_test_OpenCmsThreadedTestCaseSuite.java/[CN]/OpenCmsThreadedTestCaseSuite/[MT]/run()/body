{
  long startTime=System.currentTimeMillis();
  if (m_throwable == null) {
    try {
      for (int i=0; i < m_count; i++) {
        m_threads[i].start();
      }
      long runTime;
      int runCount;
      long loopTime=System.currentTimeMillis();
      do {
        runCount=0;
        for (int i=0; i < m_count; i++) {
          if (m_threads[i].isAlive()) {
            runCount++;
          }
        }
        if (runCount > 0) {
          Thread.sleep(50);
        }
        runTime=System.currentTimeMillis() - loopTime;
      }
 while ((runCount > 0) && (runTime < m_allowedRuntime));
      if ((runCount > 0) && (runTime >= m_allowedRuntime)) {
        throw new RuntimeException("There where " + runCount + " threads still running after "+ (m_allowedRuntime / 1000.0)+ " seconds");
      }
    }
 catch (    Throwable e) {
      m_throwable=e;
    }
  }
  m_runtime=System.currentTimeMillis() - startTime;
  return m_threads;
}
