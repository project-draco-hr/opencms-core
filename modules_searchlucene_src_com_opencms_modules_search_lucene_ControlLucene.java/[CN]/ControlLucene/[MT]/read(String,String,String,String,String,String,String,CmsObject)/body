{
  if (debug) {
    System.out.println("word=" + word + " method="+ method+ " sort="+ sort+ " page="+ page+ " conf="+ conf+ " restrict="+ restrict+ " matchPage="+ matchPage+ " cms="+ cms);
  }
  if (conf.equals("default"))   conf="Lucene";
  int x=0;
  int i=0;
  int size;
  int score;
  int last;
  int matches;
  int first;
  int setMatch;
  int pageNr;
  String url;
  String title;
  String description;
  String modified;
  m_searchword=word;
  SearchLucene s=new SearchLucene();
  Vector results=s.performSearch(m_url,m_searchword);
  matches=results.size();
  Vector result=new Vector();
  ControlLucene cdh;
  setMatch=Integer.valueOf(matchPage).intValue();
  if (debug) {
    System.out.println("setMatch=" + setMatch);
  }
  if (matches < 1) {
    String nomatch="nomatch";
    result.addElement(nomatch);
  }
 else {
    if (page == null) {
      pageNr=1;
    }
 else {
      pageNr=Integer.valueOf(page).intValue();
    }
    first=(pageNr - 1) * setMatch + 1;
    last=setMatch * pageNr;
    if (matches < last) {
      last=matches;
    }
    cdh=new ControlLucene(m_searchword,matches / setMatch + 1,first,last,matches);
    result.addElement(cdh);
    Hashtable oneHit=null;
    if (debug) {
      showSearchResults(results);
    }
    for (int j=first - 1; j <= last - 1; j++) {
      oneHit=(Hashtable)results.elementAt(j);
      url=(String)oneHit.get("url");
      title=(String)oneHit.get("title");
      description=(String)oneHit.get("description");
      modified=(String)oneHit.get("modified");
      size=77;
      score=Integer.valueOf((((String)oneHit.get("score")).substring(0,((String)oneHit.get("score")).length() - 2)).trim()).intValue();
      cdh=new ControlLucene(url,title,description,size,score,modified);
      result.addElement(cdh);
    }
  }
  return result;
}
