{
  String userId=getSelectedItem().getId();
  String userName=getSelectedItem().get(LIST_COLUMN_LOGIN).toString();
  Map params=new HashMap();
  params.put(CmsEditUserDialog.PARAM_USERNAME,userName);
  params.put(CmsEditUserDialog.PARAM_USERID,userId);
  params.put(CmsDialog.PARAM_ACTION,CmsDialog.DIALOG_INITIAL);
  if (getParamListAction().equals(LIST_DEFACTION_EDIT)) {
    getToolManager().jspForwardTool(this,"/accounts/users/edit",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_EDIT)) {
    getToolManager().jspForwardTool(this,"/accounts/users/edit/user",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_GROUPS)) {
    getToolManager().jspForwardTool(this,"/accounts/users/edit/groups",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_ROLES)) {
    getToolManager().jspForwardTool(this,"/accounts/users/edit/roles",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_DELETE)) {
    try {
      getCms().deleteUser(new CmsUUID(userId));
      getList().removeItem(userId,getLocale());
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DELETE_USER_1,userName),e);
    }
  }
 else   if (getParamListAction().equals(LIST_ACTION_ACTIVATE)) {
    try {
      CmsUser user=getCms().readUser(userName);
      user.setEnabled();
      getCms().writeUser(user);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_ACTIVATE_USER_1,userName),e);
    }
  }
 else   if (getParamListAction().equals(LIST_ACTION_DEACTIVATE)) {
    try {
      CmsUser user=getCms().readUser(userName);
      user.setDisabled();
      getCms().writeUser(user);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DEACTIVATE_USER_1,userName),e);
    }
  }
 else {
    throwListUnsupportedActionException();
  }
  listSave();
}
