{
  CmsObject cms=getCmsObject();
  echo("Testing stealing a lock");
  String source="/folder1/subfolder11/page1.html";
  String sibling1="/folder1/subfolder12/page1.html";
  String sibling2="/folder2/subfolder22/page1.html";
  storeResources(cms,source);
  CmsProject offlineProject=cms.readProject("Offline");
  cms.loginUser("test1","test1");
  cms.getRequestContext().setCurrentProject(offlineProject);
  cms.lockResource(source);
  assertLock(cms,source,CmsLockType.EXCLUSIVE);
  assertLock(cms,sibling1,CmsLockType.SHARED_EXCLUSIVE);
  assertLock(cms,sibling2,CmsLockType.SHARED_EXCLUSIVE);
  cms.loginUser("Admin","admin");
  cms.getRequestContext().setCurrentProject(offlineProject);
  cms.changeLock(sibling1);
  assertLock(cms,sibling1,CmsLockType.EXCLUSIVE);
  assertLock(cms,source,CmsLockType.SHARED_EXCLUSIVE);
  assertLock(cms,sibling2,CmsLockType.SHARED_EXCLUSIVE);
  cms.chacc(source,I_CmsPrincipal.PRINCIPAL_USER,"test2",0,CmsPermissionSet.PERMISSION_WRITE,CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE + CmsAccessControlEntry.ACCESS_FLAGS_INHERIT);
  cms.loginUser("test2","test2");
  cms.getRequestContext().setCurrentProject(offlineProject);
  Exception error=null;
  try {
    cms.changeLock(source);
  }
 catch (  CmsPermissionViolationException e) {
    error=e;
  }
  assertNotNull(error);
  try {
    cms.changeLock(sibling1);
  }
 catch (  CmsPermissionViolationException e) {
    error=e;
  }
  assertNotNull(error);
  try {
    cms.changeLock(sibling2);
  }
 catch (  CmsPermissionViolationException e) {
    error=e;
  }
  assertNotNull(error);
  cms.loginUser("Admin","admin");
  cms.getRequestContext().setCurrentProject(offlineProject);
  assertLock(cms,sibling1,CmsLockType.EXCLUSIVE);
  assertLock(cms,source,CmsLockType.SHARED_EXCLUSIVE);
  assertLock(cms,sibling2,CmsLockType.SHARED_EXCLUSIVE);
  cms.loginUser("test1","test1");
  cms.getRequestContext().setCurrentProject(offlineProject);
  cms.changeLock(sibling2);
  assertLock(cms,sibling2,CmsLockType.EXCLUSIVE);
  assertLock(cms,source,CmsLockType.SHARED_EXCLUSIVE);
  assertLock(cms,sibling1,CmsLockType.SHARED_EXCLUSIVE);
}
