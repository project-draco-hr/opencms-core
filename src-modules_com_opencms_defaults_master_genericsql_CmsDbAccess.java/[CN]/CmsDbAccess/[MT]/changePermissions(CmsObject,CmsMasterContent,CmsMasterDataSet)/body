{
  if (isOnlineProject(cms)) {
    throw new CmsSecurityException(Messages.get().container(Messages.ERR_SECURITY_NO_MODIFY_IN_ONLINE_PROJECT_0));
  }
  if (dataset.m_versionId != CmsDbUtil.UNKNOWN_ID) {
    throw new CmsLegacySecurityException("Can't change permissions of a backup cd ",CmsLegacySecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  readLockstate(dataset,content.getSubId());
  if (!dataset.m_lockedBy.equals(cms.getRequestContext().currentUser().getId())) {
    throw new CmsLegacySecurityException("Not locked by this user",CmsLegacySecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  if (dataset.m_lockedInProject != dataset.m_projectId) {
    throw new CmsLegacySecurityException("Not locked in this project",CmsLegacySecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  if (!content.isWriteable()) {
    throw new CmsLegacySecurityException("Not writeable",CmsLegacySecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  if (dataset.m_state != CmsResource.STATE_NEW) {
    dataset.m_state=CmsResource.STATE_CHANGED;
  }
  dataset.m_dateLastModified=System.currentTimeMillis();
  dataset.m_lastModifiedBy=cms.getRequestContext().currentUser().getId();
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection();
    stmt=m_sqlManager.getPreparedStatement(conn,"update_permissions_offline");
    stmt.setString(1,dataset.m_userId.toString());
    stmt.setString(2,dataset.m_groupId.toString());
    stmt.setInt(3,dataset.m_accessFlags);
    stmt.setInt(4,dataset.m_state);
    stmt.setString(5,dataset.m_lastModifiedBy.toString());
    stmt.setTimestamp(6,new Timestamp(dataset.m_dateLastModified));
    stmt.setString(7,dataset.m_masterId.toString());
    stmt.setInt(8,content.getSubId());
    stmt.executeUpdate();
  }
 catch (  SQLException exc) {
    throw new CmsLegacyException(CmsLegacyException.C_SQL_ERROR,exc);
  }
 finally {
    m_sqlManager.closeAll(null,conn,stmt,null);
  }
}
