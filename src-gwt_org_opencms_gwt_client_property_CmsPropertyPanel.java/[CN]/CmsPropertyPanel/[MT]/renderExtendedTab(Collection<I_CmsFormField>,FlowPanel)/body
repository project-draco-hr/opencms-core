{
  List<CmsFieldSet> result=new ArrayList<CmsFieldSet>();
  tab.clear();
  String used=Messages.get().key(Messages.GUI_PROPERTY_BLOCK_USED_0);
  CmsFieldSet usedFieldSet=new CmsFieldSet();
  usedFieldSet.addStyleName(I_CmsInputLayoutBundle.INSTANCE.inputCss().formGradientBackground());
  usedFieldSet.setLegend(used);
  usedFieldSet.setAnimationDuration(50);
  String unused=Messages.get().key(Messages.GUI_PROPERTY_BLOCK_UNUSED_0);
  CmsFieldSet unusedFieldSet=new CmsFieldSet();
  unusedFieldSet.setOpen(false);
  unusedFieldSet.setLegend(unused);
  unusedFieldSet.setAnimationDuration(50);
  for (  I_CmsFormField field : fields) {
    if (isTop(field)) {
      usedFieldSet.addContent(createRow(field));
    }
 else {
      unusedFieldSet.addContent(createRow(field));
    }
  }
  if (usedFieldSet.getWidgetCount() > 0) {
    result.add(usedFieldSet);
  }
  if (unusedFieldSet.getWidgetCount() > 0) {
    result.add(unusedFieldSet);
  }
  Iterator<CmsFieldSet> iter=result.iterator();
  while (iter.hasNext()) {
    CmsFieldSet fieldSet=iter.next();
    if (iter.hasNext()) {
      fieldSet.getElement().getStyle().setMarginTop(9,Unit.PX);
    }
 else {
      fieldSet.getElement().getStyle().setMarginTop(15,Unit.PX);
    }
    tab.add(fieldSet);
  }
  CmsDomUtil.resizeAncestor(tab.getParent());
}
