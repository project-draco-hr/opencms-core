{
  File configFile=new File(m_configPath);
  if (configFile.exists()) {
    if (configFile.canRead()) {
      BufferedReader configReader=null;
      try {
        configReader=new BufferedReader(new FileReader(configFile));
        String line=configReader.readLine();
        while (line != null) {
          if (line.startsWith(DEFAULT_MODULES_TO_EXPORT)) {
            String value=getValueFromLine(line);
            if (value.contains(",")) {
              m_configuredModules=Arrays.asList(value.split(","));
            }
 else {
              m_configuredModules=Arrays.asList(value.split(" "));
            }
          }
          if (line.startsWith(DEFAULT_PULL_MODE_BEFORE)) {
            String value=getValueFromLine(line);
            value=value.trim();
            if (value.equals("1")) {
              m_defaultPullModeBefore=true;
            }
          }
          if (line.startsWith(DEFAULT_PULL_MODE_AFTER)) {
            String value=getValueFromLine(line);
            value=value.trim();
            if (value.equals("1")) {
              m_defaultPullModeAfter=true;
            }
          }
          if (line.startsWith(DEFAULT_PUSH_MODE)) {
            String value=getValueFromLine(line);
            value=value.trim();
            if (value.equals("1")) {
              m_defaultPushMode=true;
            }
          }
          if (line.startsWith(DEFAULT_MODULE_EXPORT_PATH)) {
            String value=getValueFromLine(line);
            m_defaultModuleExportPath=value.trim();
          }
          if (line.startsWith(DEFAULT_REPOSITORY_PATH)) {
            String value=getValueFromLine(line);
            m_repositoryPath=value.trim();
          }
          if (line.startsWith(DEFAULT_EXPORT_MODE)) {
            String value=getValueFromLine(line);
            m_defaultExportMode=(value.trim().equals("1")) ? 1 : 0;
          }
          if (line.startsWith(DEFAULT_COMMIT_MESSAGE)) {
            String value=getValueFromLine(line);
            m_defaultCommitMessage=value;
          }
          if (line.startsWith(DEFAULT_EXCLUDE_LIBS)) {
            String value=getValueFromLine(line);
            m_defaultExcludeLibs=(value.trim().equals("1")) ? true : false;
          }
          if (line.startsWith(DEFAULT_COMMIT_MODE)) {
            String value=getValueFromLine(line);
            m_defaultCommitMode=(value.trim().equals("1")) ? true : false;
          }
          if (line.startsWith(DEFAULT_IGNORE_UNCLEAN)) {
            String value=getValueFromLine(line);
            m_defaultIgnoreUnclean=(value.trim().equals("1")) ? true : false;
          }
          line=configReader.readLine();
        }
        m_configFileReadable=true;
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
 finally {
        if (null != configReader) {
          try {
            configReader.close();
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
        }
      }
    }
  }
}
