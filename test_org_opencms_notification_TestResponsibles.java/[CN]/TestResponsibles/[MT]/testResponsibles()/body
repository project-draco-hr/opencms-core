{
  echo("Testing responsibles of resources");
  CmsObject cms=getCmsObject();
  CmsGroup tastycrats=cms.createGroup("tastycrats","A test group",0,null);
  CmsUser fry=cms.createUser("fry","password","First test user",null);
  CmsUser bender=cms.createUser("bender","password","Second test user, belonging to the tastycrats group.",null);
  CmsUser leela=cms.createUser("leela","password","Third test user, belonging to the tastycrats group.",null);
  CmsUser farnsworth=cms.createUser("farnsworth","password","Another test user, which is not responsible.",null);
  cms.addUserToGroup("bender","tastycrats");
  cms.addUserToGroup("leela","tastycrats");
  String resource1="/folder1/index.html";
  CmsPermissionSet permissions=new CmsPermissionSet(CmsPermissionSet.PERMISSION_WRITE,CmsPermissionSet.PERMISSION_READ);
  cms.lockResource(resource1);
  cms.chacc(resource1,I_CmsPrincipal.PRINCIPAL_USER,fry.getName(),permissions.getAllowedPermissions(),permissions.getDeniedPermissions(),CmsAccessControlEntry.ACCESS_FLAGS_RESPONSIBLE);
  cms.chacc(resource1,I_CmsPrincipal.PRINCIPAL_GROUP,tastycrats.getName(),permissions.getAllowedPermissions(),permissions.getDeniedPermissions(),CmsAccessControlEntry.ACCESS_FLAGS_RESPONSIBLE);
  cms.chacc(resource1,I_CmsPrincipal.PRINCIPAL_USER,farnsworth.getName(),permissions.getAllowedPermissions(),permissions.getDeniedPermissions(),0);
  cms.unlockResource(resource1);
  Set responsibles=cms.readResponsibleUsers(cms.readResource(resource1));
  Set expectedResponsibles=new HashSet();
  expectedResponsibles.add(fry);
  expectedResponsibles.add(leela);
  expectedResponsibles.add(bender);
  assertEquals(responsibles,expectedResponsibles);
}
