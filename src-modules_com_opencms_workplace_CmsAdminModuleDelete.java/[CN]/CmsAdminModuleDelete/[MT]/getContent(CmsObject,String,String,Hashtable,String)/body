{
  if (CmsLog.getLog(this).isDebugEnabled() && C_DEBUG) {
    CmsLog.getLog(this).debug("Getting content of element " + ((elementName == null) ? "<root>" : elementName));
    CmsLog.getLog(this).debug("Template file is: " + templateFile);
    CmsLog.getLog(this).debug("Selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  CmsRequestContext reqCont=cms.getRequestContext();
  I_CmsSession session=CmsXmlTemplateLoader.getSession(cms.getRequestContext(),true);
  String step=(String)parameters.get(C_STEP);
  String moduleName=(String)parameters.get(C_MODULE);
  if (step == null) {
    String moduleVersion=OpenCms.getModuleManager().getModule(moduleName).getVersion().toString();
    xmlTemplateDocument.setData("name",moduleName);
    xmlTemplateDocument.setData("version",moduleVersion);
  }
 else   if ("showResult".equals(step)) {
    A_CmsReportThread doTheWork=(A_CmsReportThread)session.getValue(C_MODULE_THREAD);
    if (doTheWork.isAlive()) {
      xmlTemplateDocument.setData("endMethod","");
      xmlTemplateDocument.setData("text","");
    }
 else {
      xmlTemplateDocument.setData("endMethod",xmlTemplateDocument.getDataValue("endMethod"));
      xmlTemplateDocument.setData("autoUpdate","");
      xmlTemplateDocument.setData("text",xmlTemplateDocument.getLanguageFile().getLanguageValue("module.lable.deleteend"));
      session.removeValue(C_MODULE_THREAD);
    }
    xmlTemplateDocument.setData("data",doTheWork.getReportUpdate());
    return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"updateReport");
  }
 else   if (C_DELETE.equals(step)) {
    CmsModule module=OpenCms.getModuleManager().getModule(moduleName);
    List dependencies=OpenCms.getModuleManager().checkDependencies(module,CmsModuleManager.DEPENDENCY_MODE_DELETE);
    if (!dependencies.isEmpty()) {
      xmlTemplateDocument.setData("name",module.getName());
      xmlTemplateDocument.setData("version",module.getVersion().toString());
      String depModules="";
      for (int i=0; i < dependencies.size(); i++) {
        depModules+=((CmsModuleDependency)dependencies.get(i)).toString() + "\n";
      }
      xmlTemplateDocument.setData("precondition",depModules);
      templateSelector=C_ERROR;
    }
 else {
      Vector filesWithProperty=new Vector();
      Vector missingFiles=new Vector();
      Vector wrongChecksum=new Vector();
      Vector filesInUse=new Vector();
      Vector resourcesForProject=new Vector();
      reqCont.setCurrentProject(cms.readProject(CmsProject.ONLINE_PROJECT_ID));
      session.putValue(C_SESSION_MODULENAME,moduleName);
      session.putValue(CmsWorkplaceDefault.C_SESSION_MODULE_PROJECTFILES,resourcesForProject);
      if (filesWithProperty.isEmpty() && missingFiles.isEmpty() && wrongChecksum.isEmpty()&& filesInUse.isEmpty()) {
        step="fromerrorpage";
      }
 else {
        session.putValue(CmsWorkplaceDefault.C_SESSION_MODULE_DELETE_STEP,"0");
        session.putValue(CmsWorkplaceDefault.C_SESSION_MODULE_CHECKSUM,wrongChecksum);
        session.putValue(CmsWorkplaceDefault.C_SESSION_MODULE_PROPFILES,filesWithProperty);
        session.putValue(CmsWorkplaceDefault.C_SESSION_MODULE_INUSE,filesInUse);
        session.putValue(CmsWorkplaceDefault.C_SESSION_MODULE_MISSFILES,missingFiles);
        templateSelector=C_WARNING;
      }
    }
  }
  if ("fromerrorpage".equals(step)) {
    moduleName=(String)session.getValue(C_SESSION_MODULENAME);
    List modules=new ArrayList();
    modules.add(moduleName);
    A_CmsReportThread doDelete=new CmsModuleDeleteThread(cms,modules,false,true);
    doDelete.start();
    session.putValue(C_MODULE_THREAD,doDelete);
    xmlTemplateDocument.setData("time","5");
    templateSelector="showresult";
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
