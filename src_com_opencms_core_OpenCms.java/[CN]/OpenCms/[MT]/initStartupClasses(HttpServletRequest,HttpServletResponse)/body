{
  if (isInitialized)   return;
  isInitialized=true;
  if (C_LOGGING && isLogging(C_OPENCMS_INIT))   log(C_OPENCMS_INIT,"[OpenCms] OpenCms init() starting.");
  String jspExportUrl=(String)getRuntimeProperty(CmsJspLoader.C_LOADER_JSPEXPORTURL);
  if (jspExportUrl == null) {
    StringBuffer url=new StringBuffer(256);
    url.append(req.getScheme());
    url.append("://");
    url.append(req.getServerName());
    url.append(":");
    url.append(req.getServerPort());
    url.append(req.getContextPath());
    url.append(req.getServletPath());
    String flexExportUrl=new String(url);
    if (flexExportUrl.endsWith(C_FOLDER_SEPARATOR)) {
      flexExportUrl=flexExportUrl.substring(0,flexExportUrl.length() - 1);
    }
    setRuntimeProperty(CmsJspLoader.C_LOADER_JSPEXPORTURL,flexExportUrl);
    CmsJspLoader.setJspExportUrl(flexExportUrl);
    if (C_LOGGING && isLogging(C_OPENCMS_INIT))     log(C_OPENCMS_INIT,"[OpenCms] Setting JSP export URL to value from first request: " + flexExportUrl);
  }
  try {
    Hashtable startupNode=getRegistry().getSystemValues("startup");
    if (startupNode != null) {
      for (int i=1; i <= startupNode.size(); i++) {
        String currentClass=(String)startupNode.get("class" + i);
        try {
          Class.forName(currentClass).newInstance();
          if (C_LOGGING && isLogging(C_OPENCMS_INIT))           log(C_OPENCMS_INIT,"[OpenCms] created instance of class " + currentClass);
        }
 catch (        Exception e1) {
          if (C_LOGGING && isLogging(C_OPENCMS_INIT))           log(C_OPENCMS_INIT,"[OpenCms] Exception creating instance of startup class " + currentClass + ": "+ e1.toString());
        }
      }
    }
  }
 catch (  Exception e2) {
    if (C_LOGGING && isLogging(C_OPENCMS_INIT))     log(C_OPENCMS_INIT,"[OpenCms] Exception creating startup classes: " + e2.toString());
  }
  if (C_LOGGING && isLogging(C_OPENCMS_INIT))   log(C_OPENCMS_INIT,"[OpenCms] OpenCms init() finished.");
}
