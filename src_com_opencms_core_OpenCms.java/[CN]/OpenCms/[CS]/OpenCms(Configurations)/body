{
  CmsObject cms=null;
  try {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] logging started");
      String jdkinfo=System.getProperty("java.vm.name") + " ";
      jdkinfo+=System.getProperty("java.vm.version") + " ";
      jdkinfo+=System.getProperty("java.vm.info") + " ";
      jdkinfo+=System.getProperty("java.vm.vendor") + " ";
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] JDK Info: " + jdkinfo);
      String osinfo=System.getProperty("os.name") + " ";
      osinfo+=System.getProperty("os.version") + " ";
      osinfo+=System.getProperty("os.arch") + " ";
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] OS Info: " + osinfo);
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] file.encoding: " + System.getProperty("file.encoding"));
    }
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] creating first cms-object");
    }
    cms=new CmsObject();
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] initializing the main resource-broker");
    }
    m_sessionFailover=conf.getBoolean("sessionfailover.enabled",false);
    c_rb=CmsRbManager.init(conf);
    printCopyrightInformation(cms);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] read mime types");
    }
    m_mt=c_rb.readMimeTypes(null,null);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] found " + m_mt.size() + " mime-type entrys");
    }
    m_streaming=conf.getBoolean("httpstreaming.enabled",true);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] HTTP streaming " + (m_streaming ? "en" : "dis") + "abled. ");
    }
    if (!new Boolean(System.getProperty("opencms.disableScheduler")).booleanValue()) {
      m_table=new CmsCronTable(c_rb.readCronTable(null,null));
      m_scheduler=new CmsCronScheduler(this,m_table);
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] initializing CmsCronScheduler... DONE");
      }
    }
 else {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCmsServlet] CmsCronScheduler is disabled!");
      }
    }
  }
 catch (  Exception e) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] " + e.getMessage());
    }
    throw e;
  }
  try {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] initialize launchers...");
    }
    m_launcherManager=new CmsLauncherManager(this);
  }
 catch (  Exception e) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] " + e.getMessage());
    }
  }
  m_enableElementCache=conf.getBoolean("elementcache.enabled",false);
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] element cache " + (m_enableElementCache ? "en" : "dis") + "abled. ");
  }
  if (m_enableElementCache) {
    try {
      c_elementCache=new CmsElementCache(conf.getInteger("elementcache.uri",10000),conf.getInteger("elementcache.elements",50000),conf.getInteger("elementcache.variants",100));
    }
 catch (    Exception e) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] " + e.getMessage());
      }
    }
    c_variantDeps=new Hashtable();
    c_elementCache.getElementLocator().setExternDependencies(c_variantDeps);
  }
  try {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] initializing link replace rules.");
    }
    String[] staticUrlPrefix=new String[4];
    staticUrlPrefix[0]=Utils.replace(conf.getString(C_URL_PREFIX_EXPORT,""),C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
    staticUrlPrefix[1]=Utils.replace(conf.getString(C_URL_PREFIX_HTTP,""),C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
    staticUrlPrefix[2]=Utils.replace(conf.getString(C_URL_PREFIX_HTTPS,""),C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
    staticUrlPrefix[3]=Utils.replace(conf.getString(C_URL_PREFIX_SERVERNAME,""),C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
    c_exportProperties.setUrlPrefixArray(staticUrlPrefix);
    String exportDefault=conf.getString("staticexport.default.export","true");
    c_exportProperties.setExportDefaultValue(exportDefault);
    String export=conf.getString("linkrules." + exportDefault + ".export");
    String[] linkRulesExport;
    if (export != null && !"".equals(export)) {
      linkRulesExport=conf.getStringArray("ruleset." + export);
      for (int i=0; i < linkRulesExport.length; i++) {
        linkRulesExport[i]=Utils.replace(linkRulesExport[i],C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
        linkRulesExport[i]=Utils.replace(linkRulesExport[i],"${" + C_URL_PREFIX_EXPORT + "}",staticUrlPrefix[0]);
        linkRulesExport[i]=Utils.replace(linkRulesExport[i],"${" + C_URL_PREFIX_HTTP + "}",staticUrlPrefix[1]);
        linkRulesExport[i]=Utils.replace(linkRulesExport[i],"${" + C_URL_PREFIX_HTTPS + "}",staticUrlPrefix[2]);
        linkRulesExport[i]=Utils.replace(linkRulesExport[i],"${" + C_URL_PREFIX_SERVERNAME + "}",staticUrlPrefix[3]);
      }
      c_exportProperties.setLinkRulesExport(linkRulesExport);
    }
    String online=conf.getString("linkrules." + exportDefault + ".online");
    String[] linkRulesOnline;
    if (online != null && !"".equals(online)) {
      linkRulesOnline=conf.getStringArray("ruleset." + online);
      for (int i=0; i < linkRulesOnline.length; i++) {
        linkRulesOnline[i]=Utils.replace(linkRulesOnline[i],C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
        linkRulesOnline[i]=Utils.replace(linkRulesOnline[i],"${" + C_URL_PREFIX_EXPORT + "}",staticUrlPrefix[0]);
        linkRulesOnline[i]=Utils.replace(linkRulesOnline[i],"${" + C_URL_PREFIX_HTTP + "}",staticUrlPrefix[1]);
        linkRulesOnline[i]=Utils.replace(linkRulesOnline[i],"${" + C_URL_PREFIX_HTTPS + "}",staticUrlPrefix[2]);
        linkRulesOnline[i]=Utils.replace(linkRulesOnline[i],"${" + C_URL_PREFIX_SERVERNAME + "}",staticUrlPrefix[3]);
      }
      c_exportProperties.setLinkRulesOnline(linkRulesOnline);
    }
    String offline=conf.getString("linkrules." + exportDefault + ".offline");
    String[] linkRulesOffline;
    if (offline != null && !"".equals(offline)) {
      linkRulesOffline=conf.getStringArray("ruleset." + offline);
      for (int i=0; i < linkRulesOffline.length; i++) {
        linkRulesOffline[i]=Utils.replace(linkRulesOffline[i],C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
        linkRulesOffline[i]=Utils.replace(linkRulesOffline[i],"${" + C_URL_PREFIX_EXPORT + "}",staticUrlPrefix[0]);
        linkRulesOffline[i]=Utils.replace(linkRulesOffline[i],"${" + C_URL_PREFIX_HTTP + "}",staticUrlPrefix[1]);
        linkRulesOffline[i]=Utils.replace(linkRulesOffline[i],"${" + C_URL_PREFIX_HTTPS + "}",staticUrlPrefix[2]);
        linkRulesOffline[i]=Utils.replace(linkRulesOffline[i],"${" + C_URL_PREFIX_SERVERNAME + "}",staticUrlPrefix[3]);
      }
      c_exportProperties.setLinkRulesOffline(linkRulesOffline);
    }
    String extern=conf.getString("linkrules." + exportDefault + ".extern");
    String[] linkRulesExtern;
    if (extern != null && !"".equals(extern)) {
      linkRulesExtern=conf.getStringArray("ruleset." + extern);
      for (int i=0; i < linkRulesExtern.length; i++) {
        linkRulesExtern[i]=Utils.replace(linkRulesExtern[i],C_WEB_APP_REPLACE_KEY,CmsBase.getWebAppName());
        linkRulesExtern[i]=Utils.replace(linkRulesExtern[i],"${" + C_URL_PREFIX_EXPORT + "}",staticUrlPrefix[0]);
        linkRulesExtern[i]=Utils.replace(linkRulesExtern[i],"${" + C_URL_PREFIX_HTTP + "}",staticUrlPrefix[1]);
        linkRulesExtern[i]=Utils.replace(linkRulesExtern[i],"${" + C_URL_PREFIX_HTTPS + "}",staticUrlPrefix[2]);
        linkRulesExtern[i]=Utils.replace(linkRulesExtern[i],"${" + C_URL_PREFIX_SERVERNAME + "}",staticUrlPrefix[3]);
      }
      c_exportProperties.setLinkRulesExtern(linkRulesExtern);
    }
    c_exportProperties.setStartRule(null);
    Vector staticExportStart=new Vector();
    staticExportStart.add("/");
    c_exportProperties.setStartPoints(staticExportStart);
    c_exportProperties.setExportPath(com.opencms.boot.CmsBase.getAbsoluteWebPath(CmsBase.getAbsoluteWebPath(conf.getString(C_STATICEXPORT_PATH))));
    c_exportProperties.setExportRelativeLinks(conf.getBoolean("relativelinks_in_export",false));
    String activCheck=conf.getString("staticexport.enabled","false");
    c_exportProperties.setStaticExportEnabledValue(activCheck);
    if ("true".equalsIgnoreCase(activCheck)) {
      c_exportProperties.setStaticExportEnabled(true);
    }
 else {
      c_exportProperties.setStaticExportEnabled(false);
    }
    if (c_exportProperties.isStaticExportEnabled()) {
      createDynamicLinkRules();
    }
 else {
      if ("false_ssl".equalsIgnoreCase(activCheck)) {
        c_exportProperties.setLinkRulesOffline(new String[]{"s#^#" + staticUrlPrefix[1] + "#"});
        c_exportProperties.setLinkRulesOnline(new String[]{"*dynamicRules*","s#^#" + staticUrlPrefix[1] + "#"});
        c_exportProperties.getUrlPrefixArray()[0]=staticUrlPrefix[1];
        createDynamicLinkRules();
      }
 else {
        c_exportProperties.setLinkRulesOffline(new String[]{"s#^#" + staticUrlPrefix[1] + "#"});
        c_exportProperties.setLinkRulesOnline(new String[]{"s#^#" + staticUrlPrefix[1] + "#"});
      }
    }
  }
 catch (  Exception e) {
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[OpenCms] " + e.toString());
    }
  }
}
