{
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  A_CmsTask task=cms.readTask(taskid);
  if (roleName.equals(C_ALL_ROLES)) {
    roleName=cms.readUser(agentName).getDefaultGroup().getName();
  }
  cms.setName(taskid,taskName);
  cms.reaktivateTask(taskid);
  int priority=Integer.parseInt(priorityString);
  cms.setPriority(taskid,priority);
  String splittetDate[]=Utils.split(timeoutString,".");
  GregorianCalendar cal=new GregorianCalendar(Integer.parseInt(splittetDate[2]),Integer.parseInt(splittetDate[1]) - 1,Integer.parseInt(splittetDate[0]),0,0,0);
  long timeout=cal.getTime().getTime();
  cms.setTimeout(taskid,timeout);
  cms.setTaskPar(taskid,C_TASKPARA_ACCEPTATION,paraAcceptation);
  cms.setTaskPar(taskid,C_TASKPARA_ALL,paraAll);
  cms.setTaskPar(taskid,C_TASKPARA_COMPLETION,paraCompletion);
  cms.setTaskPar(taskid,C_TASKPARA_DELIVERY,paraDelivery);
  cms.forwardTask(taskid,roleName,agentName);
  String comment=lang.getLanguageValue("task.label.forrole") + ": " + roleName+ "\n";
  comment+=lang.getLanguageValue("task.label.editor") + ": " + Utils.getFullName(cms.readUser(agentName))+ "\n";
  comment+=taskcomment;
  cms.writeTaskLog(task.getId(),comment,C_TASKLOGTYPE_REACTIVATED);
  StringBuffer contentBuf=new StringBuffer(lang.getLanguageValue("task.email.reakt.content"));
  contentBuf.append("\n");
  contentBuf.append(lang.getLanguageValue("task.label.project"));
  contentBuf.append(": ");
  String projectname="?";
  try {
    projectname=cms.readTask(task.getRoot()).getName();
  }
 catch (  Exception exc) {
  }
  contentBuf.append(projectname);
  contentBuf.append("\n");
  contentBuf.append(lang.getLanguageValue("task.label.task"));
  contentBuf.append(": ");
  contentBuf.append(task.getName());
  int projectid=cms.readProject(task).getId();
  String servletPath=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getServletPath();
  String serverName=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getServerName();
  CmsXmlWpConfigFile conf=new CmsXmlWpConfigFile(cms);
  String actionPath=conf.getWorkplaceActionPath();
  contentBuf.append("\n\n\nhttp://" + serverName + servletPath+ actionPath+ "login.html?startTaskId="+ taskid+ "&startProjectId="+ projectid);
  String subject=lang.getLanguageValue("task.email.reakt.subject");
  A_CmsUser[] users={cms.readAgent(task)};
  CmsMail mail;
  mail=new CmsMail(cms,cms.readOwner(task),users,subject,contentBuf.toString());
  if (cms.getTaskPar(task.getId(),C_TASKPARA_ALL) != null) {
    mail=new CmsMail(cms,cms.readOwner(task),cms.readGroup(task),subject,contentBuf.toString());
  }
  try {
    mail.start();
  }
 catch (  Exception exc) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,"[CmsTaskAction] error while sending mail " + exc.getMessage());
    }
  }
}
