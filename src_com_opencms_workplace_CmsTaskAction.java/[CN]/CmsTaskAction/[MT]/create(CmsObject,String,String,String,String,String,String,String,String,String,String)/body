{
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  if (roleName.equals(C_ALL_ROLES)) {
    roleName=cms.readUser(agentName).getDefaultGroup().getName();
  }
  int priority=Integer.parseInt(priorityString);
  String splittetDate[]=CmsStringUtil.split(timeoutString,".");
  GregorianCalendar cal=new GregorianCalendar(Integer.parseInt(splittetDate[2]),Integer.parseInt(splittetDate[1]) - 1,Integer.parseInt(splittetDate[0]),0,0,0);
  long timeout=cal.getTime().getTime();
  CmsTask task=cms.createTask(agentName,roleName,taskName,timeout,priority);
  cms.setTaskPar(task.getId(),C_TASKPARA_ACCEPTATION,paraAcceptation);
  cms.setTaskPar(task.getId(),C_TASKPARA_ALL,paraAll);
  cms.setTaskPar(task.getId(),C_TASKPARA_COMPLETION,paraCompletion);
  cms.setTaskPar(task.getId(),C_TASKPARA_DELIVERY,paraDelivery);
  String comment=lang.getLanguageValue("task.label.forrole") + ": " + roleName+ "\n";
  comment+=lang.getLanguageValue("task.label.editor") + ": " + CmsUser.getFullName(cms.readUser(task.getAgentUser()))+ "\n";
  comment+=taskcomment;
  cms.writeTaskLog(task.getId(),comment,C_TASKLOGTYPE_CREATED);
  StringBuffer contentBuf=new StringBuffer(lang.getLanguageValue("task.email.create.content"));
  contentBuf.append("\n");
  contentBuf.append(lang.getLanguageValue("task.label.project"));
  contentBuf.append(": ");
  String projectname="?";
  try {
    projectname=cms.readTask(task.getRoot()).getName();
  }
 catch (  Exception exc) {
  }
  contentBuf.append(projectname);
  contentBuf.append("\n");
  contentBuf.append(lang.getLanguageValue("task.label.task"));
  contentBuf.append(": ");
  contentBuf.append(task.getName());
  contentBuf.append("\n");
  contentBuf.append(lang.getLanguageValue("task.label.actuator"));
  contentBuf.append(": ");
  contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));
  int projectid=cms.readProject(task).getId();
  contentBuf.append("\n\n\n" + getTaskUrl(cms,task.getId(),projectid));
  String subject=lang.getLanguageValue("task.email.create.subject") + " " + CmsUser.getFullName(cms.readUser(task.getAgentUser()))+ " / "+ roleName;
  CmsUser[] users={cms.readAgent(task)};
  CmsSimpleMail mail=null;
  try {
    mail=createMail(cms.readOwner(task),users,subject,contentBuf.toString());
  }
 catch (  CmsException e) {
    if (OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {
      OpenCms.getLog(CmsTaskAction.class).warn("Could not generate mail while creating task for " + cms.readOwner(task).getName(),e);
    }
  }
  if (cms.getTaskPar(task.getId(),C_TASKPARA_ALL) != null) {
    if (cms.getTaskPar(task.getId(),C_TASKPARA_ALL).equals("checked")) {
      try {
        CmsGroup group=cms.readGroup(task);
        Vector groupUser=cms.getUsersOfGroup(group.getName());
        mail=createMail(cms.readOwner(task),groupUser,subject,contentBuf.toString(),true);
      }
 catch (      CmsException e) {
        if (OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {
          OpenCms.getLog(CmsTaskAction.class).warn("Could not generate mail while creating task for " + cms.readOwner(task).getName(),e);
        }
      }
    }
  }
  if (mail != null) {
    new CmsMailTransport(mail).send();
  }
}
