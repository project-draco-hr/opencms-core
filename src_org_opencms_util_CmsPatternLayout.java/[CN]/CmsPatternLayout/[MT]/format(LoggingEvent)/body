{
  String result=super.format(event);
  ThrowableInformation ti=event.getThrowableInformation();
  if (ti != null) {
    StringBuffer trace=new StringBuffer();
    StringBuffer minTrace=new StringBuffer();
    boolean exclFound=false;
    String[] elements=ti.getThrowableStrRep();
    for (int i=0; i < elements.length; i++) {
      String elem=elements[i];
      if (!elem.trim().startsWith("at ") && !elem.trim().startsWith("...")) {
        minTrace.append(elem);
        minTrace.append(Layout.LINE_SEP);
      }
      if (!matches(elem,m_filters) && !exclFound && i < m_maxLength) {
        trace.append(elem);
        trace.append(Layout.LINE_SEP);
      }
      if (matches(elem,m_excludes) && !exclFound) {
        exclFound=true;
      }
    }
    if (exclFound) {
      result+=minTrace.toString();
    }
 else {
      result+=trace.toString();
    }
  }
  return result;
}
