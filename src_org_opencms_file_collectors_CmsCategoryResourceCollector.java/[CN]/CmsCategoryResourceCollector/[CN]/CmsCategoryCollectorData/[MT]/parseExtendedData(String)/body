{
  String[] keyValueTokens=CmsStringUtil.splitAsArray(data,'|');
  setType(-1);
  for (int i=keyValueTokens.length - 1; i >= 0; i--) {
    String relation=keyValueTokens[i];
    String[] keyValuePair=CmsStringUtil.splitAsArray(relation,'=');
    String key=keyValuePair[0];
    String value=keyValuePair[1];
    if (PARAM_KEY_CATEGORY_TYPES.equals(key)) {
      m_categoryTypes=CmsStringUtil.splitAsList(value,',');
    }
 else     if (PARAM_KEY_RESOURCE.equals(key)) {
      setFileName(value);
    }
 else     if (PARAM_KEY_RESOURCE_TYPE.equals(key)) {
      I_CmsResourceType type=OpenCms.getResourceManager().getResourceType(value);
      if (type != null) {
        setType(type.getTypeId());
      }
    }
 else     if (PARAM_KEY_SORT_ASC.equals(key)) {
      m_sortAsc=Boolean.valueOf(value).booleanValue();
    }
 else     if (PARAM_KEY_SORT_BY.equals(key)) {
      m_sortBy=value;
    }
 else     if (PARAM_KEY_SUB_TREE.equals(key)) {
      m_subTree=Boolean.valueOf(value).booleanValue();
    }
 else     if (PARAM_KEY_COUNT.equals(key)) {
      int count=0;
      try {
        count=Integer.parseInt(value);
      }
 catch (      NumberFormatException e) {
      }
      setCount(count);
    }
 else {
      LOG.error("Unknow key found in collector parameters.");
    }
  }
}
