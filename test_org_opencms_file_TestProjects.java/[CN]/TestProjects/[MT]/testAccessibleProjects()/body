{
  CmsObject cms=getCmsObject();
  echo("Testing to read all accessible projects");
  cms.deleteProject(cms.readProject("UnitTest1").getUuid());
  cms.deleteProject(cms.readProject("UnitTest4").getUuid());
  List projects=OpenCms.getOrgUnitManager().getAllAccessibleProjects(cms,"",true);
  assertEquals(2,projects.size());
  assertTrue(projects.contains(cms.readProject(CmsProject.ONLINE_PROJECT_ID)));
  assertTrue(projects.contains(cms.readProject("Offline")));
  OpenCms.getOrgUnitManager().createOrganizationalUnit(cms,"/test/","test ou",0,"/folder1");
  projects=OpenCms.getOrgUnitManager().getAllAccessibleProjects(cms,"",true);
  assertEquals(3,projects.size());
  assertTrue(projects.contains(cms.readProject(CmsProject.ONLINE_PROJECT_ID)));
  assertTrue(projects.contains(cms.readProject("Offline")));
  assertTrue(projects.contains(cms.readProject("test/Offline")));
  cms.createUser("/test/user1","user1","my test user",null);
  cms.loginUser("/test/user1","user1");
  projects=OpenCms.getOrgUnitManager().getAllAccessibleProjects(cms,"",true);
  assertEquals(1,projects.size());
  assertTrue(projects.contains(cms.readProject(CmsProject.ONLINE_PROJECT_ID)));
  cms=getCmsObject();
  OpenCms.getRoleManager().addUserToRole(cms,CmsRole.WORKPLACE_USER.forOrgUnit("/test/"),"/test/user1");
  cms.loginUser("/test/user1","user1");
  projects=OpenCms.getOrgUnitManager().getAllAccessibleProjects(cms,"",true);
  assertEquals(2,projects.size());
  assertTrue(projects.contains(cms.readProject(CmsProject.ONLINE_PROJECT_ID)));
  assertTrue(projects.contains(cms.readProject("test/Offline")));
}
