{
  Tag ancestor=findAncestorWithClass(this,I_CmsJspTagContentContainer.class);
  if (ancestor == null) {
    String msg;
    CmsMessageContainer container=Messages.get().container(Messages.ERR_TAG_CONTENTINFO_WRONG_PARENT_0);
    msg=CmsJspTagLocaleUtil.getLocalizedMessage(container,pageContext);
    throw new JspTagException(msg);
  }
  I_CmsJspTagContentContainer contentContainer=(I_CmsJspTagContentContainer)ancestor;
  String tagContent="";
  if (CmsStringUtil.isNotEmpty(m_variable)) {
    int scope=getScopeAsInt(m_scope);
    storeContentInfoBean((CmsJspTagContentLoad)contentContainer,m_variable,scope);
  }
  if (CmsStringUtil.isNotEmpty(m_value)) {
    tagContent=resolveMacros(m_value);
  }
  try {
    pageContext.getOut().print(tagContent);
  }
 catch (  IOException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().key(Messages.LOG_ERR_PROCESS_CONTENTINFO_0,new Object[]{}),e);
    }
    throw new JspException(e);
  }
  return SKIP_BODY;
}
