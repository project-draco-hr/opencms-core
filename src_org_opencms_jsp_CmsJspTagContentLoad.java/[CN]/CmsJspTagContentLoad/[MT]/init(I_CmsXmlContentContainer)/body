{
  int pageAttribCount=0;
  pageAttribCount+=CmsStringUtil.isNotEmpty(m_pageSize) ? 1 : 0;
  pageAttribCount+=CmsStringUtil.isNotEmpty(m_pageIndex) ? 1 : 0;
  if ((pageAttribCount > 0) && (pageAttribCount < 2)) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_TAG_CONTENTLOAD_INDEX_SIZE_0));
  }
  I_CmsXmlContentContainer usedContainer;
  if (container == null) {
    usedContainer=this;
    if (CmsStringUtil.isEmpty(m_collector)) {
      throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_TAG_CONTENTLOAD_MISSING_COLLECTOR_0));
    }
    if (CmsStringUtil.isEmpty(m_param)) {
      throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_TAG_CONTENTLOAD_MISSING_PARAM_0));
    }
  }
 else {
    usedContainer=container;
  }
  if (isPreloader()) {
    m_directEditMode=CmsDirectEditMode.FALSE;
  }
 else   if (m_directEditMode == null) {
    m_directEditMode=CmsDirectEditMode.FALSE;
  }
  m_controller=CmsFlexController.getController(pageContext.getRequest());
  m_cms=m_controller.getCmsObject();
  String resourcename=getResourceName(m_cms,usedContainer);
  CmsMacroResolver resolver=CmsMacroResolver.newInstance().setCmsObject(m_cms).setJspPageContext(pageContext).setResourceName(resourcename).setKeepEmptyMacros(true);
  if (container == null) {
    m_collectorName=resolver.resolveMacros(getCollector());
    m_collectorParam=resolver.resolveMacros(getParam());
    m_collectorResult=null;
  }
 else {
    m_collectorName=usedContainer.getCollectorName();
    m_collectorParam=usedContainer.getCollectorParam();
    m_collectorResult=usedContainer.getCollectorResult();
    if (m_locale == null) {
      m_locale=usedContainer.getXmlDocumentLocale();
    }
  }
  if (m_locale == null) {
    m_locale=m_cms.getRequestContext().getLocale();
  }
  try {
    I_CmsResourceCollector collector=OpenCms.getResourceManager().getContentCollector(m_collectorName);
    if (collector == null) {
      throw new CmsException(Messages.get().container(Messages.ERR_COLLECTOR_NOT_FOUND_1,m_collectorName));
    }
    if (m_collectorResult == null) {
      m_collectorResult=collector.getResults(m_cms,m_collectorName,m_collectorParam);
    }
    m_contentInfoBean=new CmsContentInfoBean();
    m_contentInfoBean.setPageSizeAsString(resolver.resolveMacros(m_pageSize));
    m_contentInfoBean.setPageIndexAsString(resolver.resolveMacros(m_pageIndex));
    m_contentInfoBean.setPageNavLengthAsString(resolver.resolveMacros(m_pageNavLength));
    m_contentInfoBean.setResultSize(m_collectorResult.size());
    m_contentInfoBean.setLocale(m_locale.toString());
    m_contentInfoBean.initResultIndex();
    if (!isPreloader()) {
      m_collectorResult=CmsJspTagResourceLoad.limitCollectorResult(m_contentInfoBean,m_collectorResult);
      m_contentInfoBean.initPageNavIndexes();
      String createParam=collector.getCreateParam(m_cms,m_collectorName,m_collectorParam);
      if (createParam != null) {
        m_directEditLinkForNew=CmsEncoder.encode(m_collectorName + "|" + createParam);
      }
    }
 else     if (isScopeVarSet()) {
      CmsJspContentLoadBean bean=new CmsJspContentLoadBean(m_cms,m_locale,m_collectorResult);
      storeAttribute(bean);
    }
  }
 catch (  CmsException e) {
    m_controller.setThrowable(e,m_cms.getRequestContext().getUri());
    throw new JspException(e);
  }
  m_directEditOpen=false;
  m_directEditFollowButtons=null;
  m_isFirstLoop=true;
}
