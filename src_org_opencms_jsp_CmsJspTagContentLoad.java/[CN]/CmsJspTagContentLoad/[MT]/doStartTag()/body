{
  int pageAttribCount=0;
  pageAttribCount+=CmsStringUtil.isNotEmpty(m_pageSize) ? 1 : 0;
  pageAttribCount+=CmsStringUtil.isNotEmpty(m_pageIndex) ? 1 : 0;
  if (pageAttribCount > 0 && pageAttribCount < 2) {
    CmsMessageContainer errorMsgContainer=Messages.get().container(Messages.ERR_TAG_CONTENTLOAD_INDEX_SIZE_0);
    String msg=CmsJspTagLocaleUtil.getLocalizedMessage(errorMsgContainer,pageContext);
    throw new IllegalArgumentException(msg);
  }
  if (CmsStringUtil.isEmpty(m_collector)) {
    CmsMessageContainer errorMsgContainer=Messages.get().container(Messages.ERR_TAG_CONTENTLOAD_MISSING_COLLECTOR_0);
    String msg=CmsJspTagLocaleUtil.getLocalizedMessage(errorMsgContainer,pageContext);
    throw new IllegalArgumentException(msg);
  }
  if (CmsStringUtil.isEmpty(m_param)) {
    CmsMessageContainer errorMsgContainer=Messages.get().container(Messages.ERR_TAG_CONTENTLOAD_MISSING_PARAM_0);
    String msg=CmsJspTagLocaleUtil.getLocalizedMessage(errorMsgContainer,pageContext);
    throw new IllegalArgumentException(msg);
  }
  m_controller=(CmsFlexController)pageContext.getRequest().getAttribute(CmsFlexController.ATTRIBUTE_NAME);
  m_cms=m_controller.getCmsObject();
  String resourcename=getResourceName(m_cms,this);
  CmsMacroResolver resolver=CmsMacroResolver.newInstance().setCmsObject(m_cms).setJspPageContext(pageContext).setResourceName(resourcename).setKeepEmptyMacros(true);
  String collectorName=resolver.resolveMacros(getCollector());
  m_locale=m_cms.getRequestContext().getLocale();
  String param=resolver.resolveMacros(getParam());
  I_CmsResourceCollector collector=OpenCms.getResourceManager().getContentCollector(collectorName);
  try {
    if (collector == null) {
      throw new CmsException(Messages.get().container(Messages.ERR_COLLECTOR_NOT_FOUND_1,collectorName));
    }
    m_collectorResult=collector.getResults(m_cms,collectorName,param);
    m_contentInfoBean=new CmsContentInfoBean();
    m_contentInfoBean.setPageSizeAsString(resolver.resolveMacros(m_pageSize));
    m_contentInfoBean.setPageIndexAsString(resolver.resolveMacros(m_pageIndex));
    m_contentInfoBean.setPageNavLengthAsString(resolver.resolveMacros(m_pageNavLength));
    m_contentInfoBean.setResultSize(m_collectorResult.size());
    m_contentInfoBean.initResultIndex();
    m_collectorResult=CmsJspTagContentLoad.limitCollectorResult(m_contentInfoBean,m_collectorResult);
    m_contentInfoBean.initPageNavIndexes();
    String createParam=collector.getCreateParam(m_cms,collectorName,param);
    if (createParam != null) {
      m_directEditCreateLink=CmsEncoder.encode(collectorName + "|" + createParam);
    }
    if (m_collectorResult != null && m_collectorResult.size() > 0) {
      doLoadNextFile();
    }
  }
 catch (  CmsException e) {
    m_controller.setThrowable(e,m_cms.getRequestContext().getUri());
    throw new JspException(e);
  }
  if (m_editable) {
    String directEditOptions;
    if (m_directEditCreateLink != null) {
      directEditOptions=CmsJspTagEditable.createEditOptions(true,true,true);
      m_directEditFollowOptions=CmsJspTagEditable.createEditOptions(true,true,false);
    }
 else {
      directEditOptions=CmsJspTagEditable.createEditOptions(true,false,false);
      m_directEditFollowOptions=directEditOptions;
    }
    m_directEditPermissions=CmsJspTagEditable.includeDirectEditElement(pageContext,I_CmsEditorActionHandler.C_DIRECT_EDIT_AREA_START,m_resourceName,null,directEditOptions,null,m_directEditCreateLink);
  }
  return EVAL_BODY_INCLUDE;
}
