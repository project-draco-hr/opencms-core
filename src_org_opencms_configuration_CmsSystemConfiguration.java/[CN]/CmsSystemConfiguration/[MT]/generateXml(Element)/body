{
  Element systemElement=parent.addElement(N_SYSTEM);
  if (OpenCms.getRunLevel() > 1) {
    m_localeManager=OpenCms.getLocaleManager();
    m_mailSettings=OpenCms.getSystemInfo().getMailSettings();
    m_configuredJobs=OpenCms.getScheduleManager().getJobs();
    m_versionHistoryEnabled=OpenCms.getSystemInfo().isVersionHistoryEnabled();
    m_versionHistoryMaxCount=OpenCms.getSystemInfo().getVersionHistoryMaxCount();
  }
  Element i18nElement=systemElement.addElement(N_I18N);
  i18nElement.addElement(N_LOCALEHANDLER).addAttribute(A_CLASS,m_localeManager.getLocaleHandler().getClass().getName());
  Iterator i;
  Element localesElement;
  localesElement=i18nElement.addElement(N_LOCALESCONFIGURED);
  i=m_localeManager.getAvailableLocales().iterator();
  while (i.hasNext()) {
    Locale locale=(Locale)i.next();
    localesElement.addElement(N_LOCALE).addText(locale.toString());
  }
  localesElement=i18nElement.addElement(N_LOCALESDEFAULT);
  i=m_localeManager.getDefaultLocales().iterator();
  while (i.hasNext()) {
    Locale locale=(Locale)i.next();
    localesElement.addElement(N_LOCALE).setText(locale.toString());
  }
  Element mailElement=systemElement.addElement(N_MAIL);
  mailElement.addElement(N_MAILFROM).setText(m_mailSettings.getMailFromDefault());
  i=m_mailSettings.getMailHosts().iterator();
  while (i.hasNext()) {
    CmsMailHost host=(CmsMailHost)i.next();
    Element hostElement=mailElement.addElement(N_MAILHOST).addAttribute(A_NAME,host.getHostname()).addAttribute(A_ORDER,host.getOrder().toString()).addAttribute(A_PROTOCOL,host.getProtocol());
    if (host.isAuthenticating()) {
      hostElement.addAttribute(A_USER,host.getUsername()).addAttribute(A_PASSWORD,host.getPassword());
    }
  }
  Element schedulerElement=systemElement.addElement(N_SCHEDULER);
  i=m_configuredJobs.iterator();
  while (i.hasNext()) {
    CmsScheduledJobInfo jobInfo=(CmsScheduledJobInfo)i.next();
    Element jobElement=schedulerElement.addElement(N_JOB);
    jobElement.addElement(N_NAME).addText(jobInfo.getJobName());
    jobElement.addElement(N_CLASS).addText(jobInfo.getClassName());
    jobElement.addElement(N_REUSEINSTANCE).addText(String.valueOf(jobInfo.isReuseInstance()));
    jobElement.addElement(N_CRONEXPRESSION).addCDATA(jobInfo.getCronExpression());
    Element contextElement=jobElement.addElement(N_CONTEXT);
    contextElement.addElement(N_USERNAME).setText(jobInfo.getContextInfo().getUserName());
    contextElement.addElement(N_PROJECT).setText(jobInfo.getContextInfo().getProjectName());
    contextElement.addElement(N_SITEROOT).setText(jobInfo.getContextInfo().getSiteRoot());
    contextElement.addElement(N_REQUESTEDURI).setText(jobInfo.getContextInfo().getRequestedUri());
    contextElement.addElement(N_LOCALE).setText(jobInfo.getContextInfo().getLocaleName());
    contextElement.addElement(N_ENCODING).setText(jobInfo.getContextInfo().getEncoding());
    contextElement.addElement(N_REMOTEADDR).setText(jobInfo.getContextInfo().getRemoteAddr());
    Element parameterElement=jobElement.addElement(N_PARAMETERS);
    ExtendedProperties jobParameters=jobInfo.getConfiguration();
    if (jobParameters != null) {
      Iterator it=jobParameters.getKeys();
      while (it.hasNext()) {
        String name=(String)it.next();
        String value=jobParameters.get(name).toString();
        Element paramNode=parameterElement.addElement(N_PARAM);
        paramNode.addAttribute(A_NAME,name);
        paramNode.addText(value);
      }
    }
  }
  systemElement.addElement(N_VERSIONHISTORY).addAttribute(A_ENABLED,new Boolean(m_versionHistoryEnabled).toString()).addAttribute(A_COUNT,new Integer(m_versionHistoryMaxCount).toString());
  Element resourceinitElement=systemElement.addElement(N_RESOURCEINIT);
  i=m_resourceInitHandlers.iterator();
  while (i.hasNext()) {
    I_CmsResourceInit clazz=(I_CmsResourceInit)i.next();
    Element handlerElement=resourceinitElement.addElement(N_RESOURCEINITHANDLER);
    handlerElement.addAttribute(A_CLASS,clazz.getClass().getName());
  }
  Element requesthandlersElement=systemElement.addElement(N_REQUESTHANDLERS);
  i=m_requestHandlers.iterator();
  while (i.hasNext()) {
    I_CmsRequestHandler clazz=(I_CmsRequestHandler)i.next();
    Element handlerElement=requesthandlersElement.addElement(N_REQUESTHANDLER);
    handlerElement.addAttribute(A_CLASS,clazz.getClass().getName());
  }
  return systemElement;
}
