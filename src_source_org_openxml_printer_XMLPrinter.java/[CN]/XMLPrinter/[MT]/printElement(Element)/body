{
  Attr attr;
  NamedNodeMap attrMap;
  int i;
  Node child;
  ElementState state;
  boolean preserveSpace;
  String name;
  String value;
  state=getElementState();
  if (state == null) {
    if (!_started)     startDocument(elem.getTagName());
    preserveSpace=_format.getPreserveSpace();
  }
 else {
    if (state.empty)     printText(">");
    preserveSpace=state.preserveSpace;
    if (_format.getIndenting() && !state.preserveSpace && (state.empty || state.afterElement))     breakLine();
  }
  printText('<' + elem.getTagName());
  indent();
  attrMap=elem.getAttributes();
  for (i=0; i < attrMap.getLength(); ++i) {
    attr=(Attr)attrMap.item(i);
    name=attr.getName();
    value=attr.getValue();
    if (value == null)     value="";
    if (attr.getSpecified()) {
      printSpace();
      printText(name + "=\"" + escape(value)+ '"');
    }
    if (name.equals("xml:space")) {
      if (value.equals("preserve"))       preserveSpace=true;
 else       preserveSpace=_format.getPreserveSpace();
    }
  }
  if (elem.hasChildNodes()) {
    enterElementState(elem.getTagName(),preserveSpace);
    child=elem.getFirstChild();
    while (child != null) {
      printNode(child);
      child=child.getNextSibling();
    }
    endElement(elem.getTagName());
  }
 else {
    unindent();
    printText("/>");
    state.afterElement=true;
    state.empty=false;
  }
}
