{
  int top, left;
  if (m_isBody) {
    top=Window.getScrollTop();
    left=Window.getScrollLeft();
  }
 else {
    top=m_scrollParent.getScrollTop();
    left=m_scrollParent.getScrollLeft();
  }
  Element element=m_draggable.getElement();
  boolean abort=false;
switch (m_direction) {
case down:
    top+=m_scrollSpeed;
  element.getStyle().setTop(CmsDomUtil.getCurrentStyleInt(element,Style.top) + m_scrollSpeed,Unit.PX);
break;
case up:
if (top <= m_scrollSpeed) {
abort=true;
top=0;
element.getStyle().setTop(CmsDomUtil.getCurrentStyleInt(element,Style.top) - top,Unit.PX);
break;
}
top-=m_scrollSpeed;
element.getStyle().setTop(CmsDomUtil.getCurrentStyleInt(element,Style.top) - m_scrollSpeed,Unit.PX);
break;
case left:
if (left <= m_scrollSpeed) {
abort=true;
element.getStyle().setLeft(CmsDomUtil.getCurrentStyleInt(element,Style.left) - left,Unit.PX);
left=0;
break;
}
left-=m_scrollSpeed;
element.getStyle().setLeft(CmsDomUtil.getCurrentStyleInt(element,Style.left) - m_scrollSpeed,Unit.PX);
break;
case right:
left+=m_scrollSpeed;
element.getStyle().setLeft(CmsDomUtil.getCurrentStyleInt(element,Style.left) + m_scrollSpeed,Unit.PX);
break;
default :
break;
}
if (m_isBody) {
Window.scrollTo(left,top);
}
 else {
m_scrollParent.setScrollLeft(left);
m_scrollParent.setScrollTop(top);
}
if (abort) {
this.cancel();
m_scrollTimer=null;
}
}
