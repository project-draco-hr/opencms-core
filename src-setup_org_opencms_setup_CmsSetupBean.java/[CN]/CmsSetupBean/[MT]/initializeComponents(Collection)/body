{
  Iterator itGroups=new ArrayList(m_components.elementList()).iterator();
  while (itGroups.hasNext()) {
    CmsSetupComponent component=(CmsSetupComponent)itGroups.next();
    String errMsg="";
    String warnMsg="";
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(component.getName())) {
      errMsg+=Messages.get().container(Messages.ERR_COMPONENT_NAME_EMPTY_1,component.getId()).key();
      errMsg+="\n";
    }
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(component.getName())) {
      warnMsg+=Messages.get().container(Messages.LOG_WARN_COMPONENT_DESC_EMPTY_1,component.getId()).key();
      warnMsg+="\n";
    }
    if (component.getPosition() == DEFAULT_POSITION) {
      warnMsg+=Messages.get().container(Messages.LOG_WARN_COMPONENT_POS_EMPTY_1,component.getId()).key();
      warnMsg+="\n";
    }
    Iterator itDeps=component.getDependencies().iterator();
    while (itDeps.hasNext()) {
      String dependency=(String)itDeps.next();
      if (m_components.getObject(dependency) == null) {
        errMsg+=Messages.get().container(Messages.LOG_WARN_COMPONENT_DEPENDENCY_BROKEN_2,component.getId(),dependency).key();
        errMsg+="\n";
      }
    }
    boolean match=false;
    Iterator itModules=modules.iterator();
    while (itModules.hasNext()) {
      String module=(String)itModules.next();
      if (component.match(module)) {
        match=true;
        itModules.remove();
      }
    }
    if (!match) {
      errMsg+=Messages.get().container(Messages.ERR_COMPONENT_MODULES_EMPTY_1,component.getId()).key();
      errMsg+="\n";
    }
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(errMsg)) {
      m_components.removeObject(component.getId());
      if (LOG.isErrorEnabled()) {
        LOG.error(errMsg);
      }
    }
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(warnMsg)) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(warnMsg);
      }
    }
  }
  if (!modules.isEmpty()) {
    if (LOG.isWarnEnabled()) {
      LOG.warn(Messages.get().container(Messages.LOG_WARN_MODULES_LEFT_1,modules.toString()));
    }
  }
}
