{
  if (isInitialized()) {
    try {
      checkEthernetAddress();
      backupConfiguration(CmsImportExportConfiguration.DEFAULT_XML_FILE_NAME,CmsImportExportConfiguration.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      backupConfiguration(CmsModuleConfiguration.DEFAULT_XML_FILE_NAME,CmsModuleConfiguration.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      backupConfiguration(CmsSearchConfiguration.DEFAULT_XML_FILE_NAME,CmsSearchConfiguration.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      backupConfiguration(CmsSystemConfiguration.DEFAULT_XML_FILE_NAME,CmsSystemConfiguration.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      backupConfiguration(CmsVfsConfiguration.DEFAULT_XML_FILE_NAME,CmsVfsConfiguration.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      backupConfiguration(CmsWorkplaceConfiguration.DEFAULT_XML_FILE_NAME,CmsWorkplaceConfiguration.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      backupConfiguration(CmsConfigurationManager.DEFAULT_XML_FILE_NAME,CmsConfigurationManager.DEFAULT_XML_FILE_NAME + CmsConfigurationManager.POSTFIX_ORI);
      setDatabase(m_databaseKey);
      saveProperties(getProperties(),CmsSystemInfo.FILE_PROPERTIES,true);
      setSchemaGeneration(!isSqlSupported(m_databaseKey));
      m_peristenceConfigurator.save();
      CmsSetupTestResult testResult=new CmsSetupTestSimapi().execute(this);
      if (testResult.getResult().equals(I_CmsSetupTest.RESULT_FAILED)) {
        StringBuffer xp=new StringBuffer(256);
        xp.append("/").append(CmsConfigurationManager.N_ROOT);
        xp.append("/").append(CmsVfsConfiguration.N_VFS);
        xp.append("/").append(CmsVfsConfiguration.N_RESOURCES);
        xp.append("/").append(CmsVfsConfiguration.N_RESOURCELOADERS);
        xp.append("/").append(CmsVfsConfiguration.N_LOADER);
        xp.append("[@").append(I_CmsXmlConfiguration.A_CLASS);
        xp.append("='").append(CmsImageLoader.class.getName());
        xp.append("']/").append(I_CmsXmlConfiguration.N_PARAM);
        xp.append("[@").append(I_CmsXmlConfiguration.A_NAME);
        xp.append("='").append(CmsImageLoader.CONFIGURATION_SCALING_ENABLED).append("']");
        getXmlHelper().setValue(CmsVfsConfiguration.DEFAULT_XML_FILE_NAME,xp.toString(),Boolean.FALSE.toString());
      }
      StringBuffer xp=new StringBuffer(256);
      xp.append("/").append(CmsConfigurationManager.N_ROOT);
      xp.append("/").append(CmsSystemConfiguration.N_SYSTEM);
      xp.append("/").append(CmsSystemConfiguration.N_SITES);
      xp.append("/").append(CmsSystemConfiguration.N_WORKPLACE_SERVER);
      getXmlHelper().setValue(CmsSystemConfiguration.DEFAULT_XML_FILE_NAME,xp.toString(),getWorkplaceSite());
      xp=new StringBuffer(256);
      xp.append("/").append(CmsConfigurationManager.N_ROOT);
      xp.append("/").append(CmsSystemConfiguration.N_SYSTEM);
      xp.append("/").append(CmsSystemConfiguration.N_SITES);
      xp.append("/").append(I_CmsXmlConfiguration.N_SITE);
      xp.append("[@").append(I_CmsXmlConfiguration.A_URI);
      xp.append("='").append(CmsResource.VFS_FOLDER_SITES);
      xp.append("/default/']/@").append(CmsSystemConfiguration.A_SERVER);
      getXmlHelper().setValue(CmsSystemConfiguration.DEFAULT_XML_FILE_NAME,xp.toString(),getWorkplaceSite());
      if ((m_driverType == DRIVER_TYPE_JPA)) {
        xp=new StringBuffer(256);
        xp.append("/").append(CmsConfigurationManager.N_ROOT);
        xp.append("/").append(CmsSystemConfiguration.N_SYSTEM);
        xp.append("/").append(CmsSystemConfiguration.N_RUNTIMECLASSES);
        xp.append("/").append(CmsSystemConfiguration.N_RUNTIMEINFO);
        getXmlHelper().setAttribute(CmsSystemConfiguration.DEFAULT_XML_FILE_NAME,xp.toString(),"class",JPA_FACTOTY);
      }
      getXmlHelper().writeAll();
    }
 catch (    Exception e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
  }
  return true;
}
