{
  String content=null;
switch (getType().getMode()) {
case 0:
    if (extractionResult != null) {
      content=extractionResult.getContent();
    }
  break;
case 1:
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParam())) {
  content=CmsProperty.get(getParam(),properties).getValue();
}
break;
case 2:
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParam())) {
content=CmsProperty.get(getParam(),propertiesSearched).getValue();
}
break;
case 3:
if ((extractionResult != null) && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParam())) {
content=getContentItemForXPath(extractionResult.getContentItems(),getParam());
}
break;
case 5:
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParam())) {
I_CmsResource.CmsResourceAttribute attribute=null;
try {
attribute=I_CmsResource.CmsResourceAttribute.valueOf(getParam());
}
 catch (Exception e) {
}
if (attribute != null) {
switch (attribute) {
case dateContent:
content=DateTools.timeToString(res.getDateContent(),DateTools.Resolution.MILLISECOND);
break;
case dateCreated:
content=DateTools.timeToString(res.getDateCreated(),DateTools.Resolution.MILLISECOND);
break;
case dateExpired:
long expirationDate=res.getDateExpired();
if (expirationDate == CmsResource.DATE_EXPIRED_DEFAULT) {
content=DATE_EXPIRED_DEFAULT_STR;
}
 else {
content=DateTools.timeToString(expirationDate,DateTools.Resolution.MILLISECOND);
}
break;
case dateLastModified:
content=DateTools.timeToString(res.getDateLastModified(),DateTools.Resolution.MILLISECOND);
break;
case dateReleased:
content=DateTools.timeToString(res.getDateReleased(),DateTools.Resolution.MILLISECOND);
break;
case flags:
content=String.valueOf(res.getFlags());
break;
case length:
content=String.valueOf(res.getLength());
break;
case name:
content=res.getName();
break;
case projectLastModified:
try {
CmsProject project=cms.readProject(res.getProjectLastModified());
content=project.getName();
}
 catch (Exception e) {
}
break;
case resourceId:
content=res.getResourceId().toString();
break;
case rootPath:
content=res.getRootPath();
break;
case siblingCount:
content=String.valueOf(res.getSiblingCount());
break;
case state:
content=res.getState().toString();
break;
case structureId:
content=res.getStructureId().toString();
break;
case typeId:
content=String.valueOf(res.getTypeId());
break;
case userCreated:
try {
CmsUser user=cms.readUser(res.getUserCreated());
content=user.getName();
}
 catch (Exception e) {
}
break;
case userLastModified:
try {
CmsUser user=cms.readUser(res.getUserLastModified());
content=user.getName();
}
 catch (Exception e) {
}
break;
case version:
content=String.valueOf(res.getVersion());
break;
default :
}
}
}
break;
default :
}
if (content == null) {
content=getDefaultValue();
}
return content;
}
