{
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PUBLISH_JOB_FINISH_0));
  }
  for (Iterator it=iterator(); it.hasNext(); ) {
    I_CmsPublishEventListener listener=(I_CmsPublishEventListener)it.next();
    try {
      listener.onFinish(publishJob);
    }
 catch (    Throwable t) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.ERR_PUBLISH_JOB_FINISH_ERROR_1,listener.getClass().getName()),t);
      }
      if (publishJob.m_publishJob.getPublishReport() != null) {
        publishJob.m_publishJob.getPublishReport().println(t);
      }
    }
  }
  String msgText;
  if (!publishJob.getReport().hasError() && !publishJob.getReport().hasWarning()) {
    msgText=Messages.get().getBundle(publishJob.getLocale()).key(Messages.GUI_PUBLISH_JOB_FINISHED_1,new Long(publishJob.getEnqueueTime()));
  }
 else {
    Object[] params=new Object[]{new Long(publishJob.getEnqueueTime()),new Integer(publishJob.getReport().getErrors().size()),new Integer(publishJob.getReport().getWarnings().size())};
    msgText=Messages.get().getBundle(publishJob.getLocale()).key(Messages.GUI_PUBLISH_JOB_FINISHED_WITH_WARNS_3,params);
  }
  m_publishEngine.sendMessage(publishJob.getUserId(),msgText);
}
