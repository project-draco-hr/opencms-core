{
  StringBuffer content=new StringBuffer();
  content.append("# Properties for file ");
  content.append(res.getRootPath());
  content.append("\n");
  content.append("#\n");
  content.append("# ${property_name}.i : individual property\n");
  content.append("# ${property_name}.s :     shared property\n\n");
  List propertyDef=cms.readAllPropertyDefinitions();
  Map activeProperties=CmsPropertyAdvanced.getPropertyMap(cms.readPropertyObjects(res,false));
  Iterator i=propertyDef.iterator();
  while (i.hasNext()) {
    CmsPropertyDefinition currentPropertyDef=(CmsPropertyDefinition)i.next();
    String propName=currentPropertyDef.getName();
    CmsProperty currentProperty=(CmsProperty)activeProperties.get(propName);
    if (currentProperty == null) {
      currentProperty=new CmsProperty();
    }
    String individualValue=currentProperty.getStructureValue();
    String sharedValue=currentProperty.getResourceValue();
    if (individualValue == null) {
      individualValue="";
    }
    if (sharedValue == null) {
      sharedValue="";
    }
    content.append(propName);
    content.append(SUFFIX_INDIVIDUAL);
    content.append("=");
    content.append(individualValue);
    content.append("\n");
    content.append(propName);
    content.append(SUFFIX_SHARED);
    content.append("=");
    content.append(sharedValue);
    content.append("\n\n");
  }
  CmsFile ret=new CmsFile(setRootPath(res,res.getRootPath() + "/" + res.getName()+ "."+ EXTENSION_PROPERTIES,CmsResourceTypePlain.getStaticTypeId()));
  ret.setContents(content.toString().getBytes());
  return ret;
}
