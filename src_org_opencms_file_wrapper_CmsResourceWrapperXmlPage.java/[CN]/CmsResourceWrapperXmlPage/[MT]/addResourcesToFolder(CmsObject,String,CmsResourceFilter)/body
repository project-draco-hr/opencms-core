{
  CmsResource xmlPage=findXmlPage(cms,resourcename);
  if (xmlPage != null) {
    String path=getSubPath(cms,xmlPage,resourcename);
    String rootPath=cms.getRequestContext().removeSiteRoot(xmlPage.getRootPath());
    ArrayList<CmsResource> ret=new ArrayList<CmsResource>();
    CmsFile file=cms.readFile(xmlPage);
    CmsXmlPage xml=CmsXmlPageFactory.unmarshal(cms,file);
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(path)) {
      if (file.getLength() == 0) {
        return ret;
      }
      List<Locale> locales=xml.getLocales();
      Iterator<Locale> iter1=locales.iterator();
      while (iter1.hasNext()) {
        Locale locale=iter1.next();
        ret.add(getResourceForLocale(xmlPage,locale));
      }
      int plainId=OpenCms.getResourceManager().getResourceType(CmsResourceTypePlain.getStaticTypeName()).getTypeId();
      Iterator<String> iter2=getVirtualFiles().iterator();
      while (iter2.hasNext()) {
        String virtualFileName=iter2.next();
        String virtualFilePath=rootPath + "/" + virtualFileName;
        if (!TMP_FILE_TABLE.contains(virtualFilePath)) {
          if (virtualFileName.equals(NAME_ELEMENT_CONTROLCODE)) {
            CmsWrappedResource wrap=new CmsWrappedResource(xmlPage);
            wrap.setRootPath(xmlPage.getRootPath() + "/" + NAME_ELEMENT_CONTROLCODE);
            wrap.setTypeId(plainId);
            CmsFile tmpFile=wrap.getFile();
            tmpFile.setContents(file.getContents());
            ret.add(tmpFile);
          }
        }
      }
    }
 else {
      Locale locale=CmsLocaleManager.getLocale(path);
      List<String> names=xml.getNames(locale);
      Iterator<String> iter=names.iterator();
      while (iter.hasNext()) {
        String name=iter.next();
        String content=xml.getStringValue(cms,name,locale);
        String fullPath=xmlPage.getRootPath() + "/" + path+ "/"+ name+ "."+ EXTENSION_ELEMENT;
        content=prepareContent(content,cms,xmlPage,fullPath);
        int length=content.length();
        try {
          length=content.getBytes(CmsLocaleManager.getResourceEncoding(cms,xmlPage)).length;
        }
 catch (        UnsupportedEncodingException e) {
        }
        ret.add(getResourceForElement(xmlPage,fullPath,length));
      }
    }
    return ret;
  }
  return null;
}
