{
  List<CmsResource> siblings=null;
  CmsObject rootCms=null;
  Iterator<Map.Entry<String,List<String>>> allMappings=m_elementMappings.entrySet().iterator();
  while (allMappings.hasNext()) {
    Map.Entry<String,List<String>> e=allMappings.next();
    String path=e.getKey();
    List<String> mappings=e.getValue();
    if (mappings == null) {
      continue;
    }
    if ((siblings == null) || (rootCms == null)) {
      rootCms=OpenCms.initCmsObject(cms);
      rootCms.getRequestContext().setSiteRoot("/");
      siblings=rootCms.readSiblings(content.getFile().getRootPath(),CmsResourceFilter.IGNORE_EXPIRATION);
    }
    for (int v=mappings.size() - 1; v >= 0; v--) {
      String mapping=mappings.get(v);
      if (mapping.startsWith(MAPTO_PROPERTY_LIST) || mapping.startsWith(MAPTO_PROPERTY)) {
        for (int i=0; i < siblings.size(); i++) {
          String filename=siblings.get(i).getRootPath();
          Locale locale=OpenCms.getLocaleManager().getDefaultLocale(rootCms,filename);
          if (!content.hasLocale(locale)) {
            continue;
          }
          if (content.hasValue(path,locale)) {
            continue;
          }
          String property;
          if (mapping.startsWith(MAPTO_PROPERTY_LIST)) {
            property=mapping.substring(MAPTO_PROPERTY_LIST.length());
          }
 else {
            property=mapping.substring(MAPTO_PROPERTY.length());
          }
          rootCms.writePropertyObject(filename,new CmsProperty(property,CmsProperty.DELETE_VALUE,null));
        }
      }
 else       if (mapping.startsWith(MAPTO_PERMISSION)) {
        for (int i=0; i < siblings.size(); i++) {
          String filename=siblings.get(i).getRootPath();
          Locale locale=OpenCms.getLocaleManager().getDefaultLocale(rootCms,filename);
          if (!content.hasLocale(locale)) {
            continue;
          }
          if (content.hasValue(path,locale)) {
            continue;
          }
          List<CmsAccessControlEntry> aces=rootCms.getAccessControlEntries(filename,false);
          for (Iterator<CmsAccessControlEntry> j=aces.iterator(); j.hasNext(); ) {
            CmsAccessControlEntry ace=j.next();
            if (ace.getPrincipal().equals(CmsAccessControlEntry.PRINCIPAL_ALL_OTHERS_ID)) {
              rootCms.rmacc(filename,CmsAccessControlEntry.PRINCIPAL_ALL_OTHERS_NAME,CmsAccessControlEntry.PRINCIPAL_ALL_OTHERS_ID.toString());
            }
 else {
              I_CmsPrincipal principal=CmsPrincipal.readPrincipal(rootCms,ace.getPrincipal());
              if (principal.isGroup()) {
                rootCms.rmacc(filename,I_CmsPrincipal.PRINCIPAL_GROUP,principal.getName());
              }
 else               if (principal.isUser()) {
                rootCms.rmacc(filename,I_CmsPrincipal.PRINCIPAL_USER,principal.getName());
              }
            }
          }
        }
      }
    }
  }
}
