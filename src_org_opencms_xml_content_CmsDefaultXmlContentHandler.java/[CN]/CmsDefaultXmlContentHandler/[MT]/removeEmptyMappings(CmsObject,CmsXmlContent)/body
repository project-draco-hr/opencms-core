{
  String rootPath=null;
  List siblings=null;
  Iterator mappings=m_elementMappings.entrySet().iterator();
  while (mappings.hasNext()) {
    Map.Entry e=(Map.Entry)mappings.next();
    String path=e.getKey().toString();
    String mapping=e.getValue().toString();
    if (mapping.startsWith(MAPTO_PROPERTY_LIST) || mapping.startsWith(MAPTO_PROPERTY)) {
      if (rootPath == null) {
        rootPath=content.getFile().getRootPath();
      }
      String storedSiteRoot=cms.getRequestContext().getSiteRoot();
      try {
        cms.getRequestContext().setSiteRoot("/");
        if (siblings == null) {
          siblings=cms.readSiblings(rootPath,CmsResourceFilter.IGNORE_EXPIRATION);
        }
        for (int i=0; i < siblings.size(); i++) {
          String filename=((CmsResource)siblings.get(i)).getRootPath();
          Locale locale=OpenCms.getLocaleManager().getDefaultLocale(cms,filename);
          if (!content.hasLocale(locale)) {
            continue;
          }
          if (content.hasValue(path,locale)) {
            continue;
          }
          String property;
          if (mapping.startsWith(MAPTO_PROPERTY_LIST)) {
            property=mapping.substring(MAPTO_PROPERTY_LIST.length());
          }
 else {
            property=mapping.substring(MAPTO_PROPERTY.length());
          }
          cms.writePropertyObject(filename,new CmsProperty(property,CmsProperty.DELETE_VALUE,null));
        }
      }
  finally {
        cms.getRequestContext().setSiteRoot(storedSiteRoot);
      }
    }
  }
}
