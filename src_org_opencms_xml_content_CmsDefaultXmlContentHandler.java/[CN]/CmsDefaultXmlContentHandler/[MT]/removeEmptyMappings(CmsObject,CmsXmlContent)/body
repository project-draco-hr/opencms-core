{
  List siblings=null;
  CmsObject rootCms=null;
  Iterator mappings=m_elementMappings.entrySet().iterator();
  while (mappings.hasNext()) {
    Map.Entry e=(Map.Entry)mappings.next();
    String path=String.valueOf(e.getKey());
    String[] values=(String[])e.getValue();
    if (values == null) {
      continue;
    }
    if ((siblings == null) || (rootCms == null)) {
      rootCms=OpenCms.initCmsObject(cms);
      rootCms.getRequestContext().setSiteRoot("/");
      siblings=rootCms.readSiblings(content.getFile().getRootPath(),CmsResourceFilter.IGNORE_EXPIRATION);
    }
    for (int v=values.length - 1; v >= 0; v--) {
      String mapping=values[v];
      if (mapping.startsWith(MAPTO_PROPERTY_LIST) || mapping.startsWith(MAPTO_PROPERTY)) {
        for (int i=0; i < siblings.size(); i++) {
          String filename=((CmsResource)siblings.get(i)).getRootPath();
          Locale locale=OpenCms.getLocaleManager().getDefaultLocale(rootCms,filename);
          if (!content.hasLocale(locale)) {
            continue;
          }
          if (content.hasValue(path,locale)) {
            continue;
          }
          String property;
          if (mapping.startsWith(MAPTO_PROPERTY_LIST)) {
            property=mapping.substring(MAPTO_PROPERTY_LIST.length());
          }
 else {
            property=mapping.substring(MAPTO_PROPERTY.length());
          }
          rootCms.writePropertyObject(filename,new CmsProperty(property,CmsProperty.DELETE_VALUE,null));
        }
      }
    }
  }
}
