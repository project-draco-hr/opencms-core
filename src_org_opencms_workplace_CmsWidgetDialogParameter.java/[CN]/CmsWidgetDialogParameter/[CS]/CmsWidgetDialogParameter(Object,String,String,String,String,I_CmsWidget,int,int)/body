{
  if (htmlName == null) {
    htmlName=property;
  }
  if ((base instanceof List) || (base instanceof SortedMap)) {
    init(null,defaultValue,htmlName,widget,dialogPage,0,MAX_OCCURENCES,0);
    m_baseObject=null;
    m_baseObjectProperty=null;
    m_baseCollection=base;
  }
 else {
    init(null,defaultValue,htmlName,widget,dialogPage,minOccurs,maxOccurs,0);
    m_baseObject=base;
    m_baseObjectProperty=property;
    m_baseCollection=null;
    PropertyUtilsBean bean=new PropertyUtilsBean();
    if (!bean.isReadable(m_baseObject,m_baseObjectProperty) || !bean.isWriteable(m_baseObject,m_baseObjectProperty)) {
      throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_NO_PROPERTY_2,base.getClass().getName(),property));
    }
    Object value;
    try {
      value=bean.getNestedProperty(m_baseObject,m_baseObjectProperty);
    }
 catch (    Exception e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_PROPERTY_READ_2,property,base.getClass().getName()),e);
    }
    if (value != null) {
      if ((value instanceof List) || (value instanceof SortedMap)) {
        m_baseCollection=value;
        m_minOccurs=0;
        m_maxOccurs=MAX_OCCURENCES;
      }
 else {
        m_defaultValue=String.valueOf(value);
        m_value=m_defaultValue;
        if ((m_minOccurs == 0) && !m_value.equals(defaultValue)) {
          m_minOccurs=1;
        }
      }
    }
  }
}
