{
  final CmsScheduledJobInfo jobCopy=(CmsScheduledJobInfo)job.clone();
  jobCopy.setActive(job.isActive());
  final CmsJobEditView editPanel=new CmsJobEditView(jobCopy);
  editPanel.setTitle(caption);
  editPanel.loadFromBean(jobCopy);
  Button saveButton=new Button(CmsVaadinUtils.getMessageText(org.opencms.workplace.Messages.GUI_DIALOG_BUTTON_OK_0));
  Button cancelButton=new Button(CmsVaadinUtils.getMessageText(org.opencms.workplace.Messages.GUI_DIALOG_BUTTON_CANCEL_0));
  editPanel.setButtons(saveButton,cancelButton);
  m_appContext.setAppContent(editPanel);
  CmsAppWorkplaceUi.get().changeCurrentAppState("edit");
  saveButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings({"synthetic-access"}) public void buttonClick(    ClickEvent event){
      m_appContext.setAppContent(new CmsJobMainView(m_appContext));
      try {
        if (editPanel.trySaveToBean()) {
          OpenCms.getScheduleManager().scheduleJob(A_CmsUI.getCmsObject(),jobCopy);
          OpenCms.writeConfiguration(CmsSystemConfiguration.class);
          restoreMainView();
        }
      }
 catch (      CmsException e) {
        LOG.error(e.getLocalizedMessage(),e);
        CmsErrorDialog.showErrorDialog(e,new Runnable(){
          public void run(){
            restoreMainView();
          }
        }
);
      }
    }
  }
);
  cancelButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      restoreMainView();
    }
  }
);
}
