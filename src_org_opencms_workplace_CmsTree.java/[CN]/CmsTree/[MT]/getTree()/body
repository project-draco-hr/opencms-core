{
  String targetFolder=getTargetFolder();
  String startFolder=getStartFolder();
  boolean restoreSiteRoot=false;
  if ("channelselector".equals(getTreeType())) {
    restoreSiteRoot=true;
    getCms().getRequestContext().saveSiteRoot();
    getCms().getRequestContext().setSiteRoot(I_CmsConstants.VFS_FOLDER_COS);
  }
 else   if (getSettings().getTreeSite(getTreeType()) != null) {
    restoreSiteRoot=true;
    getCms().getRequestContext().saveSiteRoot();
    if (newTree() && targetFolder == null) {
      targetFolder="/";
    }
    getCms().getRequestContext().setSiteRoot(getSettings().getTreeSite(getTreeType()));
    try {
      getCms().readFolder(targetFolder);
    }
 catch (    CmsException e) {
      targetFolder="/";
    }
  }
  StringBuffer result=new StringBuffer(2048);
  try {
    CmsFolder folder;
    try {
      folder=getCms().readFolder(targetFolder);
    }
 catch (    CmsException e) {
      return printError(e);
    }
    List projectResources;
    try {
      projectResources=getCms().readProjectResources(getCms().getRequestContext().currentProject());
    }
 catch (    CmsException e) {
      projectResources=new ArrayList();
    }
    boolean grey;
    List resources;
    if ((startFolder == null) || (!targetFolder.startsWith(startFolder))) {
      try {
        if (includeFiles()) {
          resources=new ArrayList();
          resources.addAll(getCms().getResourcesInFolder(targetFolder));
        }
 else {
          resources=getCms().getSubFolders(targetFolder);
        }
      }
 catch (      CmsException e) {
        return printError(e);
      }
    }
 else {
      resources=new ArrayList();
      try {
        if (includeFiles()) {
          resources.addAll(getCms().getResourcesInFolder(startFolder));
        }
 else {
          resources.addAll(getCms().getSubFolders(startFolder));
        }
        StringTokenizer tok=new StringTokenizer(targetFolder.substring(startFolder.length()),"/");
        while (tok.hasMoreTokens()) {
          startFolder+=tok.nextToken() + "/";
          if (includeFiles()) {
            resources.addAll(getCms().getResourcesInFolder(startFolder));
          }
 else {
            resources.addAll(getCms().getSubFolders(startFolder));
          }
        }
      }
 catch (      CmsException e) {
        return printError(e);
      }
    }
    result.append("function init() {\n");
    if (newTree()) {
      result.append("parent.initTree();\n");
      result.append(getRootNode());
    }
    Iterator i=resources.iterator();
    while (i.hasNext()) {
      CmsResource resource=(CmsResource)i.next();
      grey=!CmsProject.isInsideProject(projectResources,resource);
      if ((!grey) && (!getSettings().getResourceTypes().containsKey(new Integer(resource.getType())))) {
        grey=true;
      }
      result.append(getNode(resource.getName(),resource.getType(),resource.getStructureId(),resource.getParentStructureId(),grey));
    }
    if (includeFiles()) {
      result.append("parent.setIncludeFiles(true);\n");
    }
    if (getTreeType() != null) {
      result.append("parent.setTreeType(\"");
      result.append(getTreeType());
      result.append("\");\n");
      if (getSettings().getTreeSite(getTreeType()) != null) {
        result.append("parent.setTreeSite(\"");
        result.append(getSettings().getTreeSite(getTreeType()));
        result.append("\");\n");
      }
    }
    if (newTree()) {
      result.append("parent.showTree(parent.tree_display.document, \"");
      result.append(folder.getStructureId().hashCode());
      result.append("\");\n");
    }
 else {
      if (resources.size() == 0) {
        result.append("parent.setNoChilds(\"");
        result.append(folder.getStructureId().hashCode());
        result.append("\");\n");
      }
      result.append("parent.showLoadedNodes(parent.tree_display.document,\"");
      result.append(folder.getStructureId().hashCode());
      result.append("\");\n");
    }
    result.append("}\n");
  }
  finally {
    if (restoreSiteRoot) {
      getCms().getRequestContext().restoreSiteRoot();
    }
  }
  return result.toString();
}
