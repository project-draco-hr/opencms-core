{
  if (header == null) {
    m_locales=new ArrayList();
    m_locales.add(defaultLocale);
  }
 else {
    List tokens=CmsStringUtil.splitAsList(header,LOCALE_SEPARATOR,true);
    Iterator it=tokens.iterator();
    while (it.hasNext()) {
      AcceptLanguage acceptLang=new AcceptLanguage();
      String element=(String)it.next();
      int index;
      index=element.indexOf(QUALITY_SEPARATOR);
      if (index != -1) {
        String q=element.substring(index);
        element=element.substring(0,index);
        index=q.indexOf('=');
        if (index != -1) {
          try {
            acceptLang.m_quality=Float.valueOf(q.substring(index + 1));
          }
 catch (          NumberFormatException useDefault) {
          }
        }
      }
      element=element.trim();
      index=element.indexOf('-');
      if (index == -1) {
        acceptLang.m_locale=new Locale(element,"");
      }
 else {
        acceptLang.m_locale=new Locale(element.substring(0,index),element.substring(index + 1));
      }
      m_acceptLanguage.add(acceptLang);
    }
    Collections.sort(m_acceptLanguage,Collections.reverseOrder());
    m_locales=new ArrayList(m_acceptLanguage.size());
    Iterator i=m_acceptLanguage.iterator();
    while (i.hasNext()) {
      AcceptLanguage lang=(AcceptLanguage)i.next();
      m_locales.add(lang.m_locale);
    }
  }
}
