{
  super();
  m_registeredFieldTypes=new HashMap();
  registerFieldType(CmsCheckboxField.getStaticType(),CmsCheckboxField.class.getName());
  registerFieldType(CmsEmailField.getStaticType(),CmsEmailField.class.getName());
  registerFieldType(CmsHiddenField.getStaticType(),CmsHiddenField.class.getName());
  registerFieldType(CmsRadioButtonField.getStaticType(),CmsRadioButtonField.class.getName());
  registerFieldType(CmsSelectionField.getStaticType(),CmsSelectionField.class.getName());
  registerFieldType(CmsTextField.getStaticType(),CmsTextField.class.getName());
  registerFieldType(CmsTextareaField.getStaticType(),CmsTextareaField.class.getName());
  File propertyFile=null;
  try {
    propertyFile=new File(CUSTOM_FORM_FIELD_PROPERTIES);
    if (propertyFile.exists()) {
      ExtendedProperties fieldProperties=new ExtendedProperties();
      fieldProperties.load(new FileInputStream(propertyFile));
      Iterator i=fieldProperties.keySet().iterator();
      while (i.hasNext()) {
        String key=(String)i.next();
        if (!"FIELDS".equalsIgnoreCase(key)) {
          continue;
        }
        String value=(String)fieldProperties.get(key);
        if (CmsStringUtil.isEmpty(value)) {
          continue;
        }
        List fields=CmsStringUtil.splitAsList(value,",",true);
        for (int j=0, n=fields.size(); j < n; j++) {
          String field=(String)fields.get(j);
          int index=-1;
          if ((index=field.indexOf(":")) == -1) {
            continue;
          }
          String fieldType=field.substring(0,index);
          String fieldClass=field.substring(index + 1,field.length());
          registerFieldType(fieldType,fieldClass);
        }
      }
    }
  }
 catch (  IOException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().container(Messages.LOG_ERR_READING_CUSTOM_FORM_FIELD_PROPERTIES_1,propertyFile.getAbsolutePath()),e);
    }
  }
}
