{
  Connection conn=null;
  PreparedStatement stmt=null;
  String key=null;
  CmsProperty property=null;
  int mappingType=-1;
  String value=null;
  CmsUUID id=null;
  CmsPropertydefinition propdef=null;
  try {
    conn=m_sqlManager.getConnection(runtimeInfo);
    Iterator dummy=properties.iterator();
    while (dummy.hasNext()) {
      property=(CmsProperty)dummy.next();
      key=property.getKey();
      propdef=readBackupPropertyDefinition(runtimeInfo,key,I_CmsConstants.C_PROPERYDEFINITION_RESOURCE);
      if (propdef == null) {
        throw new CmsException("[" + this.getClass().getName() + "] "+ key,CmsException.C_NOT_FOUND);
      }
 else {
        for (int i=0; i < 2; i++) {
          mappingType=-1;
          value=null;
          id=null;
          if (i == 0) {
            value=property.getStructureValue();
            mappingType=CmsProperty.C_STRUCTURE_RECORD_MAPPING;
            id=resource.getStructureId();
            if (value == null || "".equals(value)) {
              continue;
            }
          }
 else {
            value=property.getResourceValue();
            mappingType=CmsProperty.C_RESOURCE_RECORD_MAPPING;
            id=resource.getResourceId();
            if (value == null || "".equals(value)) {
              break;
            }
          }
          stmt=m_sqlManager.getPreparedStatement(conn,"C_PROPERTIES_CREATE_BACKUP");
          stmt.setString(1,backupId.toString());
          stmt.setString(2,new CmsUUID().toString());
          stmt.setString(3,propdef.getId().toString());
          stmt.setString(4,id.toString());
          stmt.setInt(5,mappingType);
          stmt.setString(6,m_sqlManager.validateEmpty(value));
          stmt.setInt(7,tagId);
          stmt.setInt(8,versionId);
          stmt.executeUpdate();
          m_sqlManager.closeAll(null,null,stmt,null);
        }
      }
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  Exception e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_UNKNOWN_EXCEPTION,e,false);
  }
 finally {
    m_sqlManager.closeAll(runtimeInfo,conn,stmt,null);
  }
}
