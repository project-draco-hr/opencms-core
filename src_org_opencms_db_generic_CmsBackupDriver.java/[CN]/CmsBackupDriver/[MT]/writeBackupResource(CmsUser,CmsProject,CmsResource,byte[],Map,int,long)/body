{
  Connection conn=null;
  PreparedStatement stmt=null;
  String lastModifiedName=null;
  String createdName=null;
  StringBuffer strBuf=null;
  try {
    strBuf=new StringBuffer();
    CmsUser lastModified=m_driverManager.readUser(currentUser,publishProject,resource.getResourceLastModifiedBy());
    strBuf.append(lastModified.getName());
    strBuf.append(" ");
    strBuf.append(lastModified.getFirstname());
    strBuf.append(" ");
    strBuf.append(lastModified.getLastname());
    lastModifiedName=strBuf.toString();
    strBuf=new StringBuffer();
    CmsUser created=m_driverManager.readUser(currentUser,publishProject,resource.getOwnerId());
    strBuf.append(created.getName());
    strBuf.append(" ");
    strBuf.append(created.getFirstname());
    strBuf.append(" ");
    strBuf.append(created.getLastname());
    createdName=strBuf.toString();
  }
 catch (  CmsException e) {
    lastModifiedName="";
    createdName="";
  }
  try {
    if (resource.getType() != I_CmsConstants.C_TYPE_FOLDER) {
      m_driverManager.getVfsDriver().createFileContent(resource.getFileId(),content,versionId,publishProject.getId(),true);
    }
    conn=m_sqlManager.getConnectionForBackup();
    stmt=m_sqlManager.getPreparedStatement(conn,"C_RESOURCES_WRITE_BACKUP");
    stmt.setString(1,resource.getId().toString());
    stmt.setInt(2,resource.getType());
    stmt.setInt(3,resource.getFlags());
    stmt.setString(4,resource.getFileId().toString());
    stmt.setInt(5,resource.getLauncherType());
    stmt.setString(6,resource.getLauncherClassname());
    stmt.setTimestamp(7,new Timestamp(publishDate));
    stmt.setTimestamp(8,new Timestamp(resource.getDateLastModified()));
    stmt.setInt(9,resource.getLength());
    stmt.setInt(10,versionId);
    stmt.setString(11,new CmsUUID().toString());
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_STRUCTURE_WRITE_BACKUP");
    stmt.setString(1,resource.getId().toString());
    stmt.setString(2,CmsUUID.getNullUUID().toString());
    stmt.setString(3,resource.getResourceId().toString());
    stmt.setInt(4,publishProject.getId());
    stmt.setString(5,resource.getResourceName());
    stmt.setInt(6,0);
    stmt.setInt(7,resource.getState());
    stmt.setString(8,resource.isLockedBy().toString());
    stmt.setString(9,resource.getResourceLastModifiedBy().toString());
    stmt.setString(10,resource.getOwnerId().toString());
    stmt.setString(11,lastModifiedName);
    stmt.setString(12,createdName);
    stmt.setInt(13,versionId);
    stmt.setString(14,new CmsUUID().toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  Exception e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_UNKNOWN_EXCEPTION,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
}
