{
  Connection conn=null;
  PreparedStatement stmt=null;
  CmsUUID backupPkId=new CmsUUID();
  int versionId=-1;
  String lastModifiedName="";
  String createdName="";
  try {
    CmsUser lastModified=m_driverManager.getUserDriver().readUser(dbc,resource.getUserLastModified());
    lastModifiedName=lastModified.getName();
    CmsUser created=m_driverManager.getUserDriver().readUser(dbc,resource.getUserCreated());
    createdName=created.getName();
  }
 catch (  CmsDataAccessException e) {
    lastModifiedName=resource.getUserCreated().toString();
    createdName=resource.getUserLastModified().toString();
  }
  try {
    conn=m_sqlManager.getConnection(dbc);
    versionId=internalReadNextVersionId(dbc,resource);
    if (resource.isFile()) {
      if (!this.internalValidateBackupResource(dbc,resource,tagId)) {
        internalWriteBackupFileContent(dbc,backupPkId,resource,tagId,versionId);
        stmt=m_sqlManager.getPreparedStatement(conn,"C_RESOURCES_WRITE_BACKUP");
        stmt.setString(1,resource.getResourceId().toString());
        stmt.setInt(2,resource.getTypeId());
        stmt.setInt(3,resource.getFlags());
        stmt.setLong(4,publishDate);
        stmt.setString(5,resource.getUserCreated().toString());
        stmt.setLong(6,resource.getDateLastModified());
        stmt.setString(7,resource.getUserLastModified().toString());
        stmt.setInt(8,resource.getState());
        stmt.setInt(9,resource.getLength());
        stmt.setInt(10,dbc.currentProject().getId());
        stmt.setInt(11,1);
        stmt.setInt(12,tagId);
        stmt.setInt(13,versionId);
        stmt.setString(14,backupPkId.toString());
        stmt.setString(15,createdName);
        stmt.setString(16,lastModifiedName);
        stmt.executeUpdate();
        m_sqlManager.closeAll(dbc,null,stmt,null);
      }
    }
    stmt=m_sqlManager.getPreparedStatement(conn,"C_STRUCTURE_WRITE_BACKUP");
    stmt.setString(1,resource.getStructureId().toString());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.setString(3,resource.getRootPath());
    stmt.setInt(4,resource.getState());
    stmt.setLong(5,resource.getDateReleased());
    stmt.setLong(6,resource.getDateExpired());
    stmt.setInt(7,tagId);
    stmt.setInt(8,versionId);
    stmt.setString(9,backupPkId.toString());
    stmt.executeUpdate();
    writeBackupProperties(dbc,resource,properties,backupPkId,tagId,versionId);
    List existingBackups=readBackupFileHeaders(dbc,resource.getRootPath());
    if (existingBackups.size() > maxVersions) {
      deleteBackups(dbc,existingBackups,maxVersions);
    }
  }
 catch (  SQLException e) {
    throw new CmsSqlException(this,stmt,e);
  }
catch (  Exception ex) {
    throw new CmsDataAccessException(ex);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
