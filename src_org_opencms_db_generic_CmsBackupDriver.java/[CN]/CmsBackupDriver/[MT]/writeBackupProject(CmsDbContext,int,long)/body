{
  Connection conn=null;
  PreparedStatement stmt=null;
  String group=null;
  String managerGroup=null;
  CmsProject currentProject=dbc.currentProject();
  CmsUser currentUser=dbc.currentUser();
  CmsUser owner=m_driverManager.getUserDriver().readUser(dbc,currentProject.getOwnerId());
  StringBuffer buf=new StringBuffer();
  buf.append(owner.getName()).append(" ").append(owner.getFirstname()).append(" ").append(owner.getLastname());
  String ownerName=buf.toString();
  try {
    group=m_driverManager.getUserDriver().readGroup(dbc,currentProject.getGroupId()).getName();
  }
 catch (  CmsDbEntryNotFoundException e) {
    group="";
  }
  try {
    managerGroup=m_driverManager.getUserDriver().readGroup(dbc,currentProject.getManagerGroupId()).getName();
  }
 catch (  CmsDbEntryNotFoundException e) {
    managerGroup="";
  }
  List projectresources=m_driverManager.getProjectDriver().readProjectResources(dbc,currentProject);
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_PROJECTS_CREATE_BACKUP");
    stmt.setInt(1,tagId);
    stmt.setInt(2,currentProject.getId());
    stmt.setString(3,currentProject.getName());
    stmt.setTimestamp(4,new Timestamp(publishDate));
    stmt.setString(5,currentUser.getId().toString());
    stmt.setString(6,currentUser.getName() + " " + currentUser.getFirstname()+ " "+ currentUser.getLastname());
    stmt.setString(7,currentProject.getOwnerId().toString());
    stmt.setString(8,ownerName);
    stmt.setString(9,currentProject.getGroupId().toString());
    stmt.setString(10,group);
    stmt.setString(11,currentProject.getManagerGroupId().toString());
    stmt.setString(12,managerGroup);
    stmt.setString(13,currentProject.getDescription());
    stmt.setLong(14,currentProject.getCreateDate());
    stmt.setInt(15,currentProject.getType());
    stmt.setInt(16,currentProject.getTaskId());
    stmt.executeUpdate();
    m_sqlManager.closeAll(dbc,null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_PROJECTRESOURCES_CREATE_BACKUP");
    Iterator i=projectresources.iterator();
    while (i.hasNext()) {
      stmt.setInt(1,tagId);
      stmt.setInt(2,currentProject.getId());
      stmt.setString(3,(String)i.next());
      stmt.executeUpdate();
      stmt.clearParameters();
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
