{
  PreparedStatement stmt=null;
  CmsBackupProject project=null;
  ResultSet res=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_PROJECTS_READBYVERSION_BACKUP");
    stmt.setInt(1,tagId);
    res=stmt.executeQuery();
    if (res.next()) {
      List projectresources=readBackupProjectResources(dbc,tagId);
      project=new CmsBackupProject(res.getInt("PUBLISH_TAG"),res.getInt(m_sqlManager.readQuery("C_PROJECTS_PROJECT_ID")),res.getString(m_sqlManager.readQuery("C_PROJECTS_PROJECT_NAME")),res.getString(m_sqlManager.readQuery("C_PROJECTS_PROJECT_DESCRIPTION")),res.getInt(m_sqlManager.readQuery("C_PROJECTS_TASK_ID")),new CmsUUID(res.getString(m_sqlManager.readQuery("C_PROJECTS_USER_ID"))),new CmsUUID(res.getString(m_sqlManager.readQuery("C_PROJECTS_GROUP_ID"))),new CmsUUID(res.getString(m_sqlManager.readQuery("C_PROJECTS_MANAGERGROUP_ID"))),res.getLong(m_sqlManager.readQuery("C_PROJECTS_DATE_CREATED")),res.getInt(m_sqlManager.readQuery("C_PROJECTS_PROJECT_TYPE")),CmsDbUtil.getTimestamp(res,"PROJECT_PUBLISHDATE"),new CmsUUID(res.getString("PROJECT_PUBLISHED_BY")),res.getString("PROJECT_PUBLISHED_BY_NAME"),res.getString("USER_NAME"),res.getString("GROUP_NAME"),res.getString("MANAGERGROUP_NAME"),projectresources);
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "] version "+ tagId,CmsException.C_NOT_FOUND);
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  Exception e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_UNKNOWN_EXCEPTION,e,false);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,res);
  }
  return project;
}
