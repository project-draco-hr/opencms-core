{
  Connection conn=null;
  PreparedStatement stmt=null;
  String propDefName=null;
  CmsProperty property=null;
  int mappingType=-1;
  String value=null;
  CmsUUID id=null;
  CmsPropertyDefinition propDef=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    Iterator dummy=properties.iterator();
    while (dummy.hasNext()) {
      property=(CmsProperty)dummy.next();
      propDefName=property.getName();
      propDef=readBackupPropertyDefinition(dbc,propDefName);
      for (int i=0; i < 2; i++) {
        mappingType=-1;
        value=null;
        id=null;
        if (i == 0) {
          value=property.getStructureValue();
          mappingType=CmsProperty.C_STRUCTURE_RECORD_MAPPING;
          id=resource.getStructureId();
          if (value == null || "".equals(value)) {
            continue;
          }
        }
 else {
          value=property.getResourceValue();
          mappingType=CmsProperty.C_RESOURCE_RECORD_MAPPING;
          id=resource.getResourceId();
          if (value == null || "".equals(value)) {
            break;
          }
        }
        stmt=m_sqlManager.getPreparedStatement(conn,"C_PROPERTIES_CREATE_BACKUP");
        stmt.setString(1,backupId.toString());
        stmt.setString(2,new CmsUUID().toString());
        stmt.setString(3,propDef.getId().toString());
        stmt.setString(4,id.toString());
        stmt.setInt(5,mappingType);
        stmt.setString(6,m_sqlManager.validateEmpty(value));
        stmt.setInt(7,tagId);
        stmt.setInt(8,versionId);
        stmt.executeUpdate();
        m_sqlManager.closeAll(dbc,null,stmt,null);
      }
    }
  }
 catch (  SQLException e) {
    throw new CmsSqlException(this,stmt,e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
