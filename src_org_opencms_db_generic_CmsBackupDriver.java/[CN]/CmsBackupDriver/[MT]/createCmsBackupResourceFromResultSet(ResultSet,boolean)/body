{
  byte[] content=null;
  int versionId=res.getInt(m_sqlManager.get("C_RESOURCES_VERSION_ID"));
  CmsUUID structureId=new CmsUUID(res.getString(m_sqlManager.get("C_RESOURCES_STRUCTURE_ID")));
  CmsUUID resourceId=new CmsUUID(res.getString(m_sqlManager.get("C_RESOURCES_RESOURCE_ID")));
  CmsUUID parentId=new CmsUUID(res.getString(m_sqlManager.get("C_RESOURCES_PARENT_ID")));
  String resourceName=res.getString(m_sqlManager.get("C_RESOURCES_RESOURCE_NAME"));
  int resourceType=res.getInt(m_sqlManager.get("C_RESOURCES_RESOURCE_TYPE"));
  int resourceFlags=res.getInt(m_sqlManager.get("C_RESOURCES_RESOURCE_FLAGS"));
  int projectID=res.getInt(m_sqlManager.get("C_RESOURCES_PROJECT_ID"));
  CmsUUID fileId=new CmsUUID(res.getString(m_sqlManager.get("C_RESOURCES_FILE_ID")));
  int state=res.getInt(m_sqlManager.get("C_RESOURCES_STATE"));
  int loaderId=res.getInt(m_sqlManager.get("C_RESOURCES_LOADER_ID"));
  long dateCreated=SqlHelper.getTimestamp(res,m_sqlManager.get("C_RESOURCES_DATE_CREATED")).getTime();
  long dateLastModified=SqlHelper.getTimestamp(res,m_sqlManager.get("C_RESOURCES_DATE_LASTMODIFIED")).getTime();
  int resourceSize=res.getInt(m_sqlManager.get("C_RESOURCES_SIZE"));
  CmsUUID userLastModified=new CmsUUID(res.getString(m_sqlManager.get("C_RESOURCES_USER_LASTMODIFIED")));
  String userLastModifiedName=res.getString(m_sqlManager.get("C_RESOURCES_LASTMODIFIED_BY_NAME"));
  CmsUUID userCreated=new CmsUUID(res.getString(m_sqlManager.get("C_RESOURCES_USER_CREATED")));
  String userCreatedName=res.getString(m_sqlManager.get("C_RESOURCES_USER_CREATED_NAME"));
  if (hasContent) {
    content=m_sqlManager.getBytes(res,m_sqlManager.get("C_RESOURCES_FILE_CONTENT"));
  }
 else {
    content=new byte[0];
  }
  return new CmsBackupResource(versionId,structureId,resourceId,parentId,fileId,resourceName,resourceType,resourceFlags,projectID,state,loaderId,dateCreated,userCreated,userCreatedName,dateLastModified,userLastModified,userLastModifiedName,resourceSize,content);
}
