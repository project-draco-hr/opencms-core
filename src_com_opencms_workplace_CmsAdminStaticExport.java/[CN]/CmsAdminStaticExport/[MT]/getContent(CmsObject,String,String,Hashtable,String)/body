{
  if (com.opencms.boot.I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  I_CmsSession session=cms.getRequestContext().getSession(true);
  String action=(String)parameters.get("action");
  if (action == null) {
    Vector exportStartPoints=cms.getStaticExportStartPoints();
    String allStartPoints="";
    if (exportStartPoints != null) {
      for (int i=0; i < exportStartPoints.size(); i++) {
        xmlTemplateDocument.setData("entry",(String)exportStartPoints.elementAt(i));
        allStartPoints+=xmlTemplateDocument.getProcessedDataValue("exportpoint");
      }
    }
    xmlTemplateDocument.setData("exportpoints",allStartPoints);
    xmlTemplateDocument.setData("path",cms.getStaticExportPath());
  }
  if ((action != null) && ("regTest".equals(action))) {
    String sub=(String)parameters.get("sub");
    String link="";
    String regExpr="";
    String result="";
    if (sub != null && "true".equals(sub)) {
      link=(String)parameters.get("link");
      regExpr=(String)parameters.get("regExpr");
      try {
        Perl5Util subClass=new Perl5Util();
        result=subClass.substitute(regExpr,link);
      }
 catch (      Exception e) {
        result="error: " + e.getMessage();
      }
    }
    xmlTemplateDocument.setData("link",Encoder.escape(link));
    xmlTemplateDocument.setData("regExpr",Encoder.escape(regExpr));
    xmlTemplateDocument.setData("result",Encoder.escape(result));
    return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"regTest");
  }
  if ((action != null) && ("working".equals(action))) {
    Thread doTheWork=(Thread)session.getValue(C_STATICEXPORT_THREAD);
    if (doTheWork.isAlive()) {
      String time=(String)parameters.get("time");
      int wert=Integer.parseInt(time);
      wert+=20;
      xmlTemplateDocument.setData("time","" + wert);
      return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"wait");
    }
 else {
      String errordetails=(String)session.getValue(C_SESSION_THREAD_ERROR);
      session.removeValue(C_SESSION_THREAD_ERROR);
      if (errordetails == null) {
        return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"done");
      }
 else {
        xmlTemplateDocument.setData("details",errordetails);
        return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"error");
      }
    }
  }
  if ("export".equals(action)) {
    if (session.getValue(C_SESSION_THREAD_ERROR) != null) {
      session.removeValue(C_SESSION_THREAD_ERROR);
    }
    Thread doExport=new CmsAdminStaticExportThread(cms,session);
    doExport.start();
    session.putValue(C_STATICEXPORT_THREAD,doExport);
    xmlTemplateDocument.setData("time","10");
    templateSelector="wait";
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
