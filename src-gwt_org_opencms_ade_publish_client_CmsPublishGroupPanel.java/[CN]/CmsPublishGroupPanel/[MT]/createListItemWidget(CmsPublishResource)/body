{
  CmsListInfoBean info=new CmsListInfoBean();
  info.setTitle(getTitle(resourceBean));
  info.setSubTitle(resourceBean.getName());
  info.setResourceState(resourceBean.getState());
  if (resourceBean.getUserLastModified() != null) {
    String userLabel=org.opencms.ade.publish.client.Messages.get().key(org.opencms.ade.publish.client.Messages.GUI_LABEL_USER_LAST_MODIFIED_0);
    info.addAdditionalInfo(userLabel,resourceBean.getUserLastModified());
  }
  if (resourceBean.getDateLastModifiedString() != null) {
    String dateLabel=org.opencms.ade.publish.client.Messages.get().key(org.opencms.ade.publish.client.Messages.GUI_LABEL_DATE_LAST_MODIFIED_0);
    info.addAdditionalInfo(dateLabel,resourceBean.getDateLastModifiedString());
  }
  info.setMarkChangedState(false);
  CmsListItemWidget itemWidget=new CmsListItemWidget(info);
  String resourceUser=resourceBean.getUserLastModified();
  String currentUser=CmsCoreProvider.get().getUserInfo().getName();
  if (!resourceUser.equals(currentUser)) {
    itemWidget.setTopRightIcon(I_CmsLayoutBundle.INSTANCE.listItemWidgetCss().changed(),Messages.get().key(Messages.GUI_CHANGED_BY_USER_1,resourceBean.getUserLastModified()));
  }
  for (int i=0; i < NUM_BUTTON_SLOTS; i++) {
    SimplePanel panel=new SimplePanel();
    panel.getElement().getStyle().setWidth(20,Unit.PX);
    panel.getElement().getStyle().setHeight(20,Unit.PX);
    if (i == SLOT_WARNING) {
      panel.addStyleName(I_CmsLayoutBundle.INSTANCE.listItemWidgetCss().permaVisible());
    }
    itemWidget.addButton(panel);
  }
  if (CmsPublishDataModel.hasProblems(resourceBean)) {
    Image warningImage=new Image(I_CmsImageBundle.INSTANCE.warningSmallImage());
    warningImage.setTitle(resourceBean.getInfo().getValue());
    warningImage.addStyleName(I_CmsLayoutBundle.INSTANCE.listItemWidgetCss().permaVisible());
    fillButtonSlot(itemWidget,SLOT_WARNING,warningImage);
  }
  String noPreviewReason=resourceBean.getInfo() == null ? null : resourceBean.getInfo().getNoPreviewReason();
  CmsPushButton previewButton=new CmsPushButton();
  previewButton.setImageClass(I_CmsImageBundle.INSTANCE.style().previewIcon());
  previewButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  previewButton.setTitle(org.opencms.gwt.client.Messages.get().key(org.opencms.gwt.client.Messages.GUI_SHOW_PREVIEW_0));
  previewButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      CmsPushButton button=(CmsPushButton)event.getSource();
      button.clearHoverState();
      CmsPreviewDialog.showPreviewForResource(resourceBean.getId());
    }
  }
);
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(noPreviewReason)) {
    previewButton.disable(noPreviewReason);
  }
  fillButtonSlot(itemWidget,SLOT_PREVIEW,previewButton);
  itemWidget.setUnselectable();
  itemWidget.setIcon(CmsIconUtil.getResourceIconClasses(resourceBean.getResourceType(),false));
  return itemWidget;
}
