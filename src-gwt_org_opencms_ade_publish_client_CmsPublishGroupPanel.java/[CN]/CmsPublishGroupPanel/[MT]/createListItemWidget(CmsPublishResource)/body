{
  CmsListInfoBean info=new CmsListInfoBean();
  info.setTitle(getTitle(resourceBean));
  info.setSubTitle(resourceBean.getName());
  String stateLabel=org.opencms.gwt.client.Messages.get().key(org.opencms.gwt.client.Messages.GUI_RESOURCE_STATE_0);
  String stateName=CmsResourceStateUtil.getStateName(resourceBean.getState());
  if (stateName != null) {
    info.addAdditionalInfo(stateLabel,stateName,CmsResourceStateUtil.getStateStyle(resourceBean.getState()));
  }
  CmsListItemWidget itemWidget=new CmsListItemWidget(info);
  if (CmsPublishDataModel.hasProblems(resourceBean)) {
    Image warningImage=new Image(I_CmsImageBundle.INSTANCE.warningSmallImage());
    warningImage.setTitle(resourceBean.getInfo().getValue());
    warningImage.addStyleName(I_CmsLayoutBundle.INSTANCE.listItemWidgetCss().permaVisible());
    itemWidget.addButton(warningImage);
  }
  String noPreviewReason=resourceBean.getInfo() == null ? null : resourceBean.getInfo().getNoPreviewReason();
  CmsPushButton previewButton=new CmsPushButton();
  previewButton.setImageClass(I_CmsImageBundle.INSTANCE.style().searchIcon());
  previewButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  previewButton.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      CmsPushButton button=(CmsPushButton)event.getSource();
      CmsDomUtil.ensureMouseOut(button.getElement());
      CmsPreviewDialog.showPreviewForResource(resourceBean.getId());
    }
  }
);
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(noPreviewReason)) {
    previewButton.disable(noPreviewReason);
  }
  itemWidget.addButton(previewButton);
  itemWidget.setIcon(CmsIconUtil.getResourceIconClasses(resourceBean.getResourceType(),false));
  return itemWidget;
}
