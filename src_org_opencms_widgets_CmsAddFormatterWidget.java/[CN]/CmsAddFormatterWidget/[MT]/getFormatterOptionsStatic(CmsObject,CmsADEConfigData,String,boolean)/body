{
  Map<CmsUUID,I_CmsFormatterBean> inactiveFormatters=config.getInactiveFormatters();
  List<CmsSelectWidgetOption> result=Lists.newArrayList();
  List<I_CmsFormatterBean> formatters=Lists.newArrayList(inactiveFormatters.values());
  if (allRemoved) {
    Map<CmsUUID,I_CmsFormatterBean> activeFormatters=config.getActiveFormatters();
    formatters.addAll(Lists.newArrayList(activeFormatters.values()));
  }
  Collections.sort(formatters,new A_CmsFormatterWidget.FormatterSelectComparator());
  for (  I_CmsFormatterBean formatterBean : formatters) {
    if (formatterBean instanceof CmsMacroFormatterBean) {
      boolean systemOrShared=formatterBean.getLocation().startsWith(CmsResource.VFS_FOLDER_SYSTEM + "/") || formatterBean.getLocation().startsWith(OpenCms.getSiteManager().getSharedFolder());
      if (!systemOrShared) {
        String formatterSubSite=CmsResource.getParentFolder(CmsResource.getParentFolder(CmsResource.getParentFolder(formatterBean.getLocation())));
        String subSite=CmsResource.getParentFolder(CmsResource.getParentFolder(rootPath));
        if (subSite.equals(formatterSubSite) || !subSite.startsWith(formatterSubSite)) {
          continue;
        }
      }
    }
    CmsSelectWidgetOption option=getWidgetOptionForFormatter(cms,formatterBean);
    result.add(option);
  }
  return result;
}
