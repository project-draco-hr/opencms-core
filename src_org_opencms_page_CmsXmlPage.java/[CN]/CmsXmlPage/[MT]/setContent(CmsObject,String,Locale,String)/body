{
  Element element=getBookmark(name,locale);
  Element data=element.element(C_NODE_CONTENT);
  Element links=element.element(C_NODE_LINKS);
  CmsLinkTable linkTable=new CmsLinkTable();
  content=CmsEncoder.encodeForHtml(content,getEncoding());
  try {
    CmsLinkProcessor linkReplacer=new CmsLinkProcessor(linkTable);
    data.setContent(null);
    if (!m_allowRelativeLinks && m_file != null) {
      String relativeRoot=CmsResource.getParentFolder(cms.readAbsolutePath(m_file));
      data.addCDATA(linkReplacer.replaceLinks(cms,content,getEncoding(),relativeRoot));
    }
 else {
      data.addCDATA(linkReplacer.replaceLinks(cms,content,getEncoding(),null));
    }
  }
 catch (  Exception exc) {
    throw new CmsXmlPageException("HTML data processing failed",exc);
  }
  links.setContent(null);
  for (Iterator i=linkTable.iterator(); i.hasNext(); ) {
    CmsLink link=linkTable.getLink((String)i.next());
    Element linkElement=links.addElement(C_NODE_LINK).addAttribute(C_ATTRIBUTE_NAME,link.getName()).addAttribute(C_ATTRIBUTE_TYPE,link.getType()).addAttribute(C_ATTRIBUTE_INTERNAL,Boolean.toString(link.isInternal()));
    linkElement.addElement(C_NODE_TARGET).addCDATA(link.getTarget());
    if (link.getAnchor() != null) {
      linkElement.addElement(C_NODE_ANCHOR).addCDATA(link.getAnchor());
    }
    if (link.getQuery() != null) {
      linkElement.addElement(C_NODE_QUERY).addCDATA(link.getQuery());
    }
  }
}
