{
  for (  CmsAliasBean alias : aliases) {
    addAlias(alias);
  }
  final HorizontalPanel hp=new HorizontalPanel();
  final CmsTextBox textbox=createTextBox();
  textbox.setGhostMode(true);
  textbox.setGhostValue(aliasMessages.enterAlias(),true);
  textbox.setGhostModeClear(true);
  hp.add(textbox);
  final CmsSelectBox selectbox=createSelectBox();
  hp.add(selectbox);
  PushButton addButton=createAddButton();
  hp.add(addButton);
  final Runnable addAction=new Runnable(){
    public void run(){
      textbox.setErrorMessage(null);
      validateSingle(m_structureId,getAliasPaths(),textbox.getText(),new AsyncCallback<String>(){
        public void onFailure(        Throwable caught){
        }
        public void onSuccess(        String result){
          if (result == null) {
            CmsAliasMode mode=CmsAliasMode.valueOf(selectbox.getFormValueAsString());
            addAlias(new CmsAliasBean(textbox.getText(),mode));
            textbox.setFormValueAsString("");
          }
 else {
            textbox.setErrorMessage(result);
          }
        }
      }
);
    }
  }
;
  ClickHandler clickHandler=new ClickHandler(){
    public void onClick(    ClickEvent e){
      addAction.run();
    }
  }
;
  addButton.addClickHandler(clickHandler);
  textbox.addKeyPressHandler(new KeyPressHandler(){
    public void onKeyPress(    KeyPressEvent event){
      int keycode=event.getNativeEvent().getKeyCode();
      if ((keycode == 10) || (keycode == 13)) {
        addAction.run();
      }
    }
  }
);
  m_newBox.add(hp);
}
