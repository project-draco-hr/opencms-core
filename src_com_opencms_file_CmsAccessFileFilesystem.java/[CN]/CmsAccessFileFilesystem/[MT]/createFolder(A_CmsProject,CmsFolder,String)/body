{
  File discFolder=new File(absoluteName(foldername,project));
  if (!discFolder.exists()) {
    boolean success=discFolder.mkdir();
    if (!success) {
      throw new CmsException("[" + this.getClass().getName() + "] "+ foldername,CmsException.C_FILESYSTEM_ERROR);
    }
    String folderheadername=getFileHeaderName(absoluteName(foldername,project));
    CmsFolder newfolder=new CmsFolder(foldername,C_TYPE_FOLDER,folder.getFlags(),folder.getOwnerId(),folder.getGroupId(),project.getId(),folder.getAccessFlags(),C_STATE_NEW,C_UNKNOWN_ID,System.currentTimeMillis(),System.currentTimeMillis());
    byte[] value=getFileHeaderContent(newfolder);
    File diskFile=new File(folderheadername);
    try {
      OutputStream s=new FileOutputStream(diskFile);
      s.write(value);
      s.close();
    }
 catch (    Exception e) {
      throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage());
    }
  }
 else {
    if (foldername.equals(m_mountpoint.getMountpoint())) {
      String folderheadername=getFileHeaderName(absoluteName(foldername,project));
      CmsFolder newfolder=new CmsFolder(foldername,C_TYPE_FOLDER,folder.getFlags(),folder.getOwnerId(),folder.getGroupId(),project.getId(),folder.getAccessFlags(),C_STATE_NEW,C_UNKNOWN_ID,System.currentTimeMillis(),System.currentTimeMillis());
      byte[] value=getFileHeaderContent(newfolder);
      File diskFile=new File(folderheadername);
      try {
        OutputStream s=new FileOutputStream(diskFile);
        s.write(value);
        s.close();
      }
 catch (      Exception e) {
        throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage());
      }
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "] "+ foldername,CmsException.C_FILE_EXISTS);
    }
  }
  return readFolder(project,foldername);
}
