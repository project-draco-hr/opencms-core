{
  SolrCore core=null;
  LocalSolrQueryRequest solrQueryRequest=null;
  try {
    q.setRequestHandler("/spell");
    QueryResponse queryResponse=m_solr.query(q);
    List<CmsSearchResource> resourceDocumentList=new ArrayList<CmsSearchResource>();
    SolrDocumentList solrDocumentList=new SolrDocumentList();
    if (m_postProcessor != null) {
      for (int i=0; (i < queryResponse.getResults().size()); i++) {
        try {
          SolrDocument doc=queryResponse.getResults().get(i);
          CmsSolrDocument searchDoc=new CmsSolrDocument(doc);
          if (needsPermissionCheck(searchDoc)) {
            CmsResource resource=getResource(cms,searchDoc);
            if (resource != null) {
              if (m_postProcessor != null) {
                doc=m_postProcessor.process(cms,resource,(SolrInputDocument)searchDoc.getDocument());
              }
              resourceDocumentList.add(new CmsSearchResource(resource,searchDoc));
              solrDocumentList.add(doc);
            }
          }
        }
 catch (        Exception e) {
          LOG.warn(Messages.get().getBundle().key(Messages.LOG_SOLR_ERR_RESULT_ITERATION_FAILED_0),e);
        }
      }
      queryResponse.getResponse().setVal(queryResponse.getResponse().indexOf(QUERY_RESPONSE_NAME,0),solrDocumentList);
    }
    core=m_solr instanceof EmbeddedSolrServer ? ((EmbeddedSolrServer)m_solr).getCoreContainer().getCore(getName()) : null;
    SolrQueryResponse solrQueryResponse=new SolrQueryResponse();
    solrQueryResponse.setAllValues(queryResponse.getResponse());
    solrQueryResponse.setEndTime(queryResponse.getQTime());
    solrQueryRequest=new LocalSolrQueryRequest(core,solrQueryResponse.getResponseHeader());
    solrQueryRequest.setParams(q);
    writeResp(res,solrQueryRequest,solrQueryResponse);
  }
 catch (  Exception e) {
    throw new CmsSearchException(Messages.get().container(Messages.LOG_SOLR_ERR_SEARCH_EXECUTION_FAILD_1,q),e);
  }
 finally {
    if (solrQueryRequest != null) {
      solrQueryRequest.close();
    }
    if (core != null) {
      core.close();
    }
  }
}
