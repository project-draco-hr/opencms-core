{
  m_editButton.clearHoverState();
  m_popup=new CmsPopup(m_title,-1);
  m_popup.setModal(true);
  m_popup.setAutoHideEnabled(true);
  m_popup.removePadding();
  m_popup.addCloseHandler(new CloseHandler<PopupPanel>(){
    public void onClose(    CloseEvent<PopupPanel> event){
      onPopupClose();
    }
  }
);
  m_hasChanges=false;
  m_requireShowPopup=false;
  m_entityChangeHandlerRegistration=m_parentEntity.addValueChangeHandler(new ValueChangeHandler<CmsEntity>(){
    public void onValueChange(    ValueChangeEvent<CmsEntity> event){
      onEntityChange();
    }
  }
);
  CmsType type=CmsEntityBackend.getInstance().getType(m_parentEntity.getTypeName());
  FlowPanel formPanel=new FormPanel();
  formPanel.setStyleName(I_CmsLayoutBundle.INSTANCE.form().formParent());
  formPanel.getElement().getStyle().setMargin(0,Unit.PX);
  formPanel.getElement().getStyle().setBorderWidth(0,Unit.PX);
  formPanel.getElement().getStyle().setPropertyPx("minHeight",30);
  m_popup.add(formPanel);
  m_popup.addDialogClose(null);
  I_CmsLayoutBundle.INSTANCE.dialogCss().ensureInjected();
  m_popup.show();
  CmsAttributeHandler.setScrollElement(formPanel.getElement());
  CmsAttributeHandler.setResizeHandler(new ResizeHandler(){
    public void onResize(    ResizeEvent event){
      positionPopup();
    }
  }
);
  m_widgetService.getRendererForType(type).renderAttributeValue(m_parentEntity,m_attributeHandler,m_attributeIndex,formPanel);
  CmsInlineEditOverlay.addOverlayForElement(m_referenceElement);
  positionPopup();
  m_popup.getElement().getStyle().setZIndex(I_CmsLayoutBundle.INSTANCE.constants().css().zIndexPopup());
  m_popupClosed=false;
}
