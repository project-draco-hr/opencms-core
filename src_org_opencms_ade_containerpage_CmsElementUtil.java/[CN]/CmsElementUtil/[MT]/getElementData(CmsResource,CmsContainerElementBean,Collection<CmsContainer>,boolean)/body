{
  Locale requestLocale=m_cms.getRequestContext().getLocale();
  m_cms.getRequestContext().setLocale(m_locale);
  element.initResource(m_cms);
  if (element.getResource().isFolder()) {
    return null;
  }
  CmsContainerElementData elementData=getBaseElementData(page,element);
  CmsFormatterConfiguration formatterConfiguraton=getFormatterConfiguration(element.getResource());
  Map<String,String> contents=new HashMap<String,String>();
  if (element.isGroupContainer(m_cms)) {
    Map<String,CmsContainer> containersByName=new HashMap<String,CmsContainer>();
    for (    CmsContainer container : containers) {
      containersByName.put(container.getName(),container);
    }
    CmsXmlGroupContainer xmlGroupContainer=CmsXmlGroupContainerFactory.unmarshal(m_cms,element.getResource(),m_req);
    CmsGroupContainerBean groupContainer=xmlGroupContainer.getGroupContainer(m_cms);
    elementData.setTitle(groupContainer.getTitle());
    elementData.setTypes(groupContainer.getTypes());
    elementData.setDescription(groupContainer.getDescription());
    if (groupContainer.getTypes().isEmpty()) {
      if (groupContainer.getElements().isEmpty()) {
        String emptySub="<div>NEW AND EMPTY</div>";
        for (        CmsContainer cont : containersByName.values()) {
          if (formatterConfiguraton.hasFormatter(cont.getType(),cont.getWidth(),false)) {
            contents.put(cont.getName(),emptySub);
          }
        }
      }
 else {
        return null;
      }
    }
 else {
      for (      CmsContainer cnt : containersByName.values()) {
        String type=cnt.getType();
        if (checkGroupAllowed(type,groupContainer)) {
          contents.put(cnt.getName(),"<div>should not be used</div>");
        }
      }
    }
    List<String> subItems=new ArrayList<String>();
    for (    CmsContainerElementBean subElement : groupContainer.getElements()) {
      subItems.add(subElement.editorHash());
    }
    elementData.setSubItems(subItems);
  }
 else   if (element.isInheritedContainer(m_cms)) {
    CmsInheritanceReferenceParser parser=new CmsInheritanceReferenceParser(m_cms);
    parser.parse(element.getResource());
    CmsInheritanceReference ref=parser.getReference(m_locale);
    String name=null;
    if (ref != null) {
      name=ref.getName();
      elementData.setDescription(ref.getDescription());
      elementData.setTitle(ref.getTitle());
    }
    for (    CmsContainer container : containers) {
      if (formatterConfiguraton.hasFormatter(container.getType(),container.getWidth(),false)) {
        contents.put(container.getName(),"<div>should not be used</div>");
      }
    }
    List<CmsInheritanceInfo> inheritanceInfos=new ArrayList<CmsInheritanceInfo>();
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(name)) {
      CmsInheritedContainerState result=OpenCms.getADEManager().getInheritedContainerState(m_cms,m_cms.addSiteRoot(m_currentPageUri),name);
      for (      CmsContainerElementBean subElement : result.getElements(true)) {
        CmsInheritanceInfo inheritanceInfo=subElement.getInheritanceInfo();
        inheritanceInfo.setClientId(subElement.editorHash());
        inheritanceInfos.add(inheritanceInfo);
      }
    }
 else {
      name=element.getResource().getStructureId().toString();
    }
    elementData.setInheritanceInfos(inheritanceInfos);
    elementData.setInheritanceName(name);
  }
 else {
    for (    CmsContainer cnt : containers) {
      boolean missesFormatterSetting=!elementData.getSettings().containsKey(CmsFormatterConfig.getSettingsKeyForContainer(cnt.getName()));
      boolean allowNestedCnt=allowNested && checkContainerTreeLevel(cnt,containers);
      Map<String,I_CmsFormatterBean> formatterSelection=formatterConfiguraton.getFormatterSelection(cnt.getType(),cnt.getWidth(),allowNestedCnt);
      for (      Entry<String,I_CmsFormatterBean> formatterEntry : formatterSelection.entrySet()) {
        I_CmsFormatterBean formatter=formatterEntry.getValue();
        String id=formatterEntry.getKey();
        if (missesFormatterSetting && ((element.getFormatterId() == null) || element.getFormatterId().equals(formatter.getJspStructureId()))) {
          elementData.getSettings().put(CmsFormatterConfig.getSettingsKeyForContainer(cnt.getName()),id);
        }
      }
    }
    Map<String,String> contentsByName=getContentsByContainerName(element,containers,allowNested);
    contents=contentsByName;
  }
  elementData.setContents(contents);
  m_cms.getRequestContext().setLocale(requestLocale);
  return elementData;
}
