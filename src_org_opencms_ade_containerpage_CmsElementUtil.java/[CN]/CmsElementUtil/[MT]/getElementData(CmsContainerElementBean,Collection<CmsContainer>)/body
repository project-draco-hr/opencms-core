{
  Locale requestLocale=m_cms.getRequestContext().getLocale();
  m_cms.getRequestContext().setLocale(m_locale);
  element.initResource(m_cms);
  CmsResourceUtil resUtil=new CmsResourceUtil(m_cms,element.getResource());
  CmsUUID structureId=resUtil.getResource().getStructureId();
  CmsContainerElementData elementBean=new CmsContainerElementData();
  setElementInfo(element,elementBean);
  elementBean.setLastModifiedDate(element.getResource().getDateLastModified());
  elementBean.setLastModifiedByUser(m_cms.readUser(element.getResource().getUserLastModified()).getName());
  elementBean.setNavText(resUtil.getNavText());
  String title=resUtil.getTitle();
  if (!structureId.isNullUUID()) {
    CmsGallerySearchResult searchResult=CmsGallerySearch.searchById(m_cms,structureId,requestLocale);
    title=searchResult.getTitle();
  }
  elementBean.setTitle(title);
  Set<String> cssResources=new LinkedHashSet<String>();
  for (  String cssSitePath : CmsJspTagHeadIncludes.getCSSHeadIncludes(m_cms,element.getResource())) {
    cssResources.add(OpenCms.getLinkManager().getOnlineLink(m_cms,cssSitePath));
  }
  elementBean.setCssResources(cssResources);
  Map<String,CmsXmlContentProperty> settingConfig=CmsXmlContentPropertyHelper.getPropertyInfo(m_cms,element.getResource());
  elementBean.setSettings(CmsXmlContentPropertyHelper.convertPropertiesToClientFormat(m_cms,element.getIndividualSettings(),settingConfig));
  elementBean.setSettingConfig(new LinkedHashMap<String,CmsXmlContentProperty>(settingConfig));
  Map<String,String> contents=new HashMap<String,String>();
  if (element.isGroupContainer(m_cms)) {
    Set<String> types=new HashSet<String>();
    Map<String,CmsContainer> containersByName=new HashMap<String,CmsContainer>();
    for (    CmsContainer container : containers) {
      types.add(container.getType());
      containersByName.put(container.getName(),container);
    }
    CmsXmlGroupContainer xmlGroupContainer=CmsXmlGroupContainerFactory.unmarshal(m_cms,element.getResource(),m_req);
    CmsGroupContainerBean groupContainer=xmlGroupContainer.getGroupContainer(m_cms,m_locale);
    elementBean.setTitle(groupContainer.getTitle());
    elementBean.setTypes(groupContainer.getTypes());
    elementBean.setDescription(groupContainer.getDescription());
    if (groupContainer.getTypes().isEmpty()) {
      if (groupContainer.getElements().isEmpty()) {
        String emptySub="<div>NEW AND EMPTY</div>";
        for (        String name : containersByName.keySet()) {
          contents.put(name,emptySub);
        }
      }
 else {
        return null;
      }
    }
 else {
      for (      CmsContainer cnt : containersByName.values()) {
        String type=cnt.getType();
        if (groupContainer.getTypes().contains(type)) {
          contents.put(cnt.getName(),"<div>should not be used</div>");
        }
      }
    }
    List<String> subItems=new ArrayList<String>();
    for (    CmsContainerElementBean subElement : groupContainer.getElements()) {
      subItems.add(subElement.editorHash());
    }
    elementBean.setSubItems(subItems);
  }
 else   if (element.isInheritedContainer(m_cms)) {
    CmsInheritanceReferenceParser parser=new CmsInheritanceReferenceParser(m_cms);
    parser.parse(element.getResource());
    CmsInheritanceReference ref=parser.getReferences().get(m_locale);
    String name=null;
    if (ref != null) {
      name=ref.getName();
      elementBean.setDescription(ref.getDescription());
      elementBean.setTitle(ref.getTitle());
    }
    for (    CmsContainer container : containers) {
      contents.put(container.getName(),"<div>should not be used</div>");
    }
    List<CmsInheritanceInfo> inheritanceInfos=new ArrayList<CmsInheritanceInfo>();
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(name)) {
      CmsInheritedContainerState result=OpenCms.getADEManager().getInheritedContainerState(m_cms,m_cms.addSiteRoot(m_currentPageUri),name);
      for (      CmsContainerElementBean subElement : result.getElements(true)) {
        CmsInheritanceInfo inheritanceInfo=subElement.getInheritanceInfo();
        inheritanceInfo.setClientId(subElement.editorHash());
        inheritanceInfos.add(inheritanceInfo);
      }
    }
 else {
      name=new CmsUUID().toString();
    }
    elementBean.setInheritanceInfos(inheritanceInfos);
    elementBean.setInheritanceName(name);
  }
 else {
    Map<String,String> contentsByName=getContentsByContainerName(element,containers);
    contents=contentsByName;
  }
  elementBean.setContents(contents);
  m_cms.getRequestContext().setLocale(requestLocale);
  return elementBean;
}
