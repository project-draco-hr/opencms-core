{
  Locale wpLocale=OpenCms.getWorkplaceManager().getWorkplaceLocale(m_cms);
  elementBean.initResource(m_cms);
  boolean newEditorDisabled=!CmsWorkplaceEditorManager.checkAcaciaEditorAvailable(m_cms,elementBean.getResource());
  result.setNewEditorDisabled(newEditorDisabled);
  String typeName=OpenCms.getResourceManager().getResourceType(elementBean.getResource().getTypeId()).getTypeName();
  result.setResourceType(typeName);
  CmsPermissionInfo permissionInfo;
  String title;
  String subTitle;
  if (!elementBean.isInMemoryOnly()) {
    permissionInfo=OpenCms.getADEManager().getPermissionInfo(m_cms,elementBean.getResource(),m_page.getRootPath());
    if (CmsResourceTypeXmlContent.isXmlContent(elementBean.getResource())) {
      if (CmsStringUtil.isEmptyOrWhitespaceOnly(permissionInfo.getNoEditReason()) && elementBean.isInheritedContainer(m_cms)) {
        String requestUri=m_cms.getRequestContext().getUri();
        String folderPath=CmsResource.getFolderPath(requestUri);
        String configPath=CmsStringUtil.joinPaths(folderPath,CmsContainerConfigurationCache.INHERITANCE_CONFIG_FILE_NAME);
        if (m_cms.existsResource(configPath)) {
          permissionInfo.setNoEditReason(new CmsResourceUtil(m_cms,m_cms.readResource(configPath)).getNoEditReason(wpLocale,true));
        }
 else {
          if (!m_cms.getLock(folderPath).isLockableBy(m_cms.getRequestContext().getCurrentUser())) {
            permissionInfo.setNoEditReason(org.opencms.workplace.explorer.Messages.get().getBundle(wpLocale).key(org.opencms.workplace.explorer.Messages.GUI_NO_EDIT_REASON_LOCK_1,new CmsResourceUtil(m_cms,m_cms.readResource(folderPath)).getLockedByName()));
          }
        }
      }
    }
 else {
      permissionInfo.setNoEditReason(Messages.get().getBundle().key(Messages.GUI_ELEMENT_RESOURCE_CAN_NOT_BE_EDITED_0));
    }
    CmsGallerySearchResult searchResult=CmsGallerySearch.searchById(m_cms,elementBean.getResource().getStructureId(),m_locale);
    title=searchResult.getTitle();
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(title)) {
      elementBean.getResource().getName();
    }
    subTitle=searchResult.getUserLastModified();
    Date lastModDate=searchResult.getDateLastModified();
    if (lastModDate != null) {
      subTitle+=" / " + CmsDateUtil.getDateTime(lastModDate,DateFormat.MEDIUM,wpLocale);
    }
  }
 else {
    permissionInfo=new CmsPermissionInfo(true,true,"");
    title=CmsWorkplaceMessages.getResourceTypeName(wpLocale,typeName);
    subTitle=CmsWorkplaceMessages.getResourceTypeDescription(wpLocale,typeName);
  }
  result.setTitle(title);
  result.setSubTitle(subTitle);
  result.setClientId(elementBean.editorHash());
  result.setSitePath(elementBean.getSitePath());
  result.setCreateNew(elementBean.isCreateNew());
  CmsResourceTypeConfig typeConfig=getConfigData().getResourceType(typeName);
  if (typeConfig != null) {
    result.setElementView(typeConfig.getElementView());
  }
  if (elementBean.isCreateNew() && CmsStringUtil.isEmptyOrWhitespaceOnly(permissionInfo.getNoEditReason()) && ((typeConfig == null) || !typeConfig.checkCreatable(m_cms,CmsResource.getParentFolder(m_page.getRootPath())))) {
    String niceName=CmsWorkplaceMessages.getResourceTypeName(wpLocale,typeName);
    permissionInfo.setNoEditReason(Messages.get().getBundle().key(Messages.GUI_CONTAINERPAGE_TYPE_NOT_CREATABLE_1,niceName));
  }
  result.setHasSettings(hasSettings(m_cms,elementBean.getResource()));
  result.setPermissionInfo(permissionInfo);
  result.setReleasedAndNotExpired(elementBean.isReleasedAndNotExpired());
  result.setModelGroup(elementBean.getIndividualSettings().containsKey(CmsContainerElement.MODEL_GROUP_ID));
  result.setWasModelGroup(elementBean.getIndividualSettings().containsKey(CmsContainerElement.MODEL_GROUP_STATE) && (ModelGroupState.evaluate(elementBean.getIndividualSettings().get(CmsContainerElement.MODEL_GROUP_STATE)) == ModelGroupState.wasModelGroup));
  return result;
}
