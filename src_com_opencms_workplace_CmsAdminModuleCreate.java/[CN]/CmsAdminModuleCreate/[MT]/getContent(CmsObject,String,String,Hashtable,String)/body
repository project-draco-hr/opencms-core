{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlTemplateFile templateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  CmsRequestContext reqCont=cms.getRequestContext();
  I_CmsRegistry reg=cms.getRegistry();
  I_CmsSession session=cms.getRequestContext().getSession(true);
  String step=(String)parameters.get(C_STEP);
  if ((step == null) || "".equals(step)) {
    templateDocument.setData(C_PACKETNAME,"");
    templateDocument.setData(C_VERSION,"1");
    templateDocument.setData(C_MODULENAME,"");
    templateDocument.setData(C_DESCRIPTION,"");
    templateDocument.setData(C_VIEW,"");
    templateDocument.setData(C_ADMINPOINT,"");
    templateDocument.setData(C_MAINTENANCE,"");
    templateDocument.setData(C_AUTHOR,"");
    templateDocument.setData(C_EMAIL,"");
    templateDocument.setData(C_DATE,"");
  }
 else {
    if ("OK".equals(step)) {
      String packetname=(String)parameters.get(C_PACKETNAME);
      String modulename=(String)parameters.get(C_MODULENAME);
      String version=(String)parameters.get(C_VERSION);
      String description=(String)parameters.get(C_DESCRIPTION);
      String view=(String)parameters.get(C_VIEW);
      String adminpoint=(String)parameters.get(C_ADMINPOINT);
      String maintenance=(String)parameters.get(C_MAINTENANCE);
      String author=(String)parameters.get(C_AUTHOR);
      String email=(String)parameters.get(C_EMAIL);
      String createDate=(String)parameters.get(C_DATE);
      boolean moduleExists=reg.moduleExists(packetname);
      int v=-1;
      try {
        v=Integer.parseInt(version);
      }
 catch (      Exception e) {
      }
      if ((packetname == null) || ("".equals(packetname)) || (version == null)|| ("".equals(version))|| moduleExists|| (v == -1)) {
        Hashtable sessionData=new Hashtable();
        sessionData.put(C_MODULENAME,getStringValue(modulename));
        sessionData.put(C_VERSION,getStringValue(version));
        sessionData.put(C_DESCRIPTION,getStringValue(description));
        sessionData.put(C_VIEW,getStringValue(view));
        sessionData.put(C_ADMINPOINT,getStringValue(adminpoint));
        sessionData.put(C_MAINTENANCE,getStringValue(maintenance));
        sessionData.put(C_AUTHOR,getStringValue(author));
        sessionData.put(C_EMAIL,getStringValue(email));
        sessionData.put(C_DATE,getStringValue(createDate));
        session.putValue(C_SESSION_DATA,sessionData);
        if (moduleExists) {
          templateSelector="errorexists";
        }
 else {
          templateSelector="errornoname";
        }
      }
 else {
        reg.createModule(packetname,getStringValue(modulename),getStringValue(description),getStringValue(author),getStringValue(createDate),v);
        reg.setModuleAuthorEmail(packetname,getStringValue(email));
        reg.setModuleMaintenanceEventClass(packetname,getStringValue(maintenance));
        tryToCreateFolder(cms,"/system/","modules");
        tryToCreateFolder(cms,"/system/","classes");
        tryToCreateFolder(cms,"/","moduledemos");
        tryToCreateFolder(cms,"/moduledemos/",packetname);
        Vector cFolders=new Vector();
        String workString=packetname;
        while (workString.lastIndexOf('.') > -1) {
          cFolders.addElement(workString.substring(workString.lastIndexOf('.') + 1));
          workString=workString.substring(0,workString.lastIndexOf('.'));
        }
        tryToCreateFolder(cms,"/system/classes/",workString);
        workString="/system/classes/" + workString + "/";
        for (int i=cFolders.size() - 1; i >= 0; i--) {
          tryToCreateFolder(cms,workString,(String)cFolders.elementAt(i));
          workString=workString + (String)cFolders.elementAt(i) + "/";
        }
        tryToCreateFolder(cms,"/system/modules/",packetname);
        String modulePath="/system/modules/" + packetname + "/";
        tryToCreateFolder(cms,modulePath,"templates");
        tryToCreateFolder(cms,modulePath,"language");
        tryToCreateFolder(cms,modulePath + "language/","de");
        tryToCreateFolder(cms,modulePath + "language/","uk");
        if ("checked".equals(view)) {
          reg.setModuleView(packetname,packetname.replace('.','_'),modulePath + "view/index.html");
          tryToCreateFolder(cms,modulePath,"view");
        }
        if ("checked".equals(adminpoint)) {
          tryToCreateFolder(cms,modulePath,"administration");
        }
        try {
          cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceAdministrationPath() + "module/index.html");
        }
 catch (        Exception e) {
          throw new CmsException("Redirect fails :system/workplace/administration/module/index.html",CmsException.C_UNKNOWN_EXCEPTION,e);
        }
        return null;
      }
    }
 else     if ("fromerrorpage".equals(step)) {
      Hashtable sessionData=(Hashtable)session.getValue(C_SESSION_DATA);
      session.removeValue(C_SESSION_DATA);
      templateDocument.setData(C_PACKETNAME,"");
      templateDocument.setData(C_VERSION,(String)sessionData.get(C_VERSION));
      templateDocument.setData(C_MODULENAME,(String)sessionData.get(C_MODULENAME));
      templateDocument.setData(C_DESCRIPTION,(String)sessionData.get(C_DESCRIPTION));
      templateDocument.setData(C_VIEW,(String)sessionData.get(C_VIEW));
      templateDocument.setData(C_ADMINPOINT,(String)sessionData.get(C_ADMINPOINT));
      templateDocument.setData(C_MAINTENANCE,(String)sessionData.get(C_MAINTENANCE));
      templateDocument.setData(C_AUTHOR,(String)sessionData.get(C_AUTHOR));
      templateDocument.setData(C_EMAIL,(String)sessionData.get(C_EMAIL));
      templateDocument.setData(C_DATE,(String)sessionData.get(C_DATE));
      templateSelector="";
    }
  }
  return startProcessing(cms,templateDocument,elementName,parameters,templateSelector);
}
