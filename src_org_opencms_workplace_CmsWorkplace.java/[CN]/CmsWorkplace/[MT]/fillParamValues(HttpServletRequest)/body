{
  m_parameterMap=null;
  if (null == request.getAttribute(REQUEST_ATTRIBUTE_MULTIPART)) {
    m_multiPartFileItems=CmsRequestUtil.readMultipartFileItems(request);
    if (m_multiPartFileItems != null) {
      m_parameterMap=CmsRequestUtil.readParameterMapFromMultiPart(getCms().getRequestContext().getEncoding(),m_multiPartFileItems);
      request.setAttribute(REQUEST_ATTRIBUTE_MULTIPART,Boolean.TRUE);
    }
  }
  if (m_parameterMap == null) {
    m_parameterMap=request.getParameterMap();
  }
  List methods=paramSetMethods();
  Iterator i=methods.iterator();
  while (i.hasNext()) {
    Method m=(Method)i.next();
    String name=m.getName().substring(8).toLowerCase();
    String[] values=(String[])m_parameterMap.get(name);
    String value=null;
    if (values != null) {
      value=values[0];
    }
    if (CmsStringUtil.isEmpty(value)) {
      value=null;
    }
    value=decodeParamValue(name,value);
    try {
      if (LOG.isDebugEnabled() && (value != null)) {
        LOG.debug(Messages.get().key(Messages.LOG_SET_PARAM_2,m.getName(),value));
      }
      m.invoke(this,new Object[]{value});
    }
 catch (    InvocationTargetException ite) {
      if (LOG.isInfoEnabled()) {
        LOG.info(ite.getLocalizedMessage());
      }
    }
catch (    IllegalAccessException eae) {
      if (LOG.isInfoEnabled()) {
        LOG.info(eae.getLocalizedMessage());
      }
    }
  }
}
