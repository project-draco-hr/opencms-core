{
  final I_CmsXmlContentValue highlighter=m_xml.getValue(XML_ELEMENT_HIGHLIGHTER,m_locale);
  if (highlighter == null) {
    return null;
  }
 else {
    try {
      final String pathPrefix=highlighter.getPath() + "/";
      final String field=parseMandatoryStringValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_FIELD);
      final Integer snippets=parseOptionalIntValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_SNIPPETS);
      final Integer fragsize=parseOptionalIntValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_FRAGSIZE);
      final String alternateField=parseOptionalStringValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_ALTERNATE_FIELD);
      final Integer maxAlternateFieldLength=parseOptionalIntValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_MAX_LENGTH_ALTERNATE_FIELD);
      final String pre=parseOptionalStringValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_SIMPLE_PRE);
      final String post=parseOptionalStringValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_SIMPLE_POST);
      final String formatter=parseOptionalStringValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_FORMATTER);
      final String fragmenter=parseOptionalStringValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_FRAGMENTER);
      final Boolean useFastVectorHighlighting=parseOptionalBooleanValue(pathPrefix + XML_ELEMENT_HIGHLIGHTER_FASTVECTORHIGHLIGHTING);
      return new CmsSearchConfigurationHighlighting(field,snippets,fragsize,alternateField,maxAlternateFieldLength,pre,post,formatter,fragmenter,useFastVectorHighlighting);
    }
 catch (    final Exception e) {
      LOG.error("Mandatory highlighting field not given. Highlighting does not work.",e);
      return null;
    }
  }
}
