{
  Vector TokenList=new Vector();
  StringTokenizer ST=new StringTokenizer(SQL," '",true);
  boolean inquotes=false;
  StringBuffer QuotedString=null;
  while (ST.hasMoreTokens()) {
    String T=ST.nextToken();
    if (T.equals("'")) {
      if (inquotes == true) {
        inquotes=false;
        Token Tok=new Token(QuotedString.toString(),true);
        TokenList.addElement(Tok);
      }
 else {
        inquotes=true;
        QuotedString=new StringBuffer();
      }
    }
 else {
      if (inquotes) {
        QuotedString.append(T);
      }
 else {
        Token Tok=new Token(T,false);
        TokenList.addElement(Tok);
      }
    }
  }
  int pos=0;
  int length=TokenList.size();
  Stack ToDo=new Stack();
  while (pos < length) {
    Token T1=(Token)TokenList.elementAt(pos);
    if (T1.Value.equals("||")) {
      Token Pre=(Token)ToDo.pop();
      pos++;
      Token Post=(Token)TokenList.elementAt(pos);
      Token Concat=new Token(Pre.Value + Post.Value,true);
      ToDo.push(Concat);
      pos++;
    }
 else {
      ToDo.push(T1);
      pos++;
    }
  }
  length=ToDo.size();
  StringBuffer NewQuery=new StringBuffer();
  for (int i=0; i < length; i++) {
    Token T=(Token)ToDo.elementAt(i);
    if (T.quoted) {
      NewQuery.append("'");
      NewQuery.append(T.Value);
      NewQuery.append("'");
    }
 else {
      NewQuery.append(T.Value);
    }
  }
  return NewQuery.toString();
}
