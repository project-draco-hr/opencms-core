{
  JSONObject result=new JSONObject();
  Map<String,Object> reqAttributes=new HashMap<String,Object>();
  CmsResource resource=m_cms.readResource(resourcePath);
  I_CmsResourceType type=getResourceManager().getResourceType(resource.getTypeId());
  CmsGalleryItemBean reqItem=new CmsGalleryItemBean(resource);
  reqItem.setTypeId(resource.getTypeId());
  reqItem.setTypeName(type.getTypeName());
  reqAttributes.put(ReqParam.galleryitem.toString(),reqItem);
  reqAttributes.put(CmsADEManager.ATTR_CURRENT_ELEMENT,new CmsContainerElementBean(resource.getStructureId(),null,null));
  result.put(ItemKeys.itemhtml.toString(),type.getFormattedContent(m_cms,getRequest(),getResponse(),I_CmsResourceType.Formatter.GALLERY_PREVIEW,reqAttributes));
  result.put(ItemKeys.state.toString(),resource.getState().getState());
  JSONArray propertiesJSON=new JSONArray();
  CmsExplorerTypeSettings setting=OpenCms.getWorkplaceManager().getExplorerTypeSetting(type.getTypeName());
  List<String> properties=setting.getProperties();
  String reference=setting.getReference();
  while ((properties.size() == 0) && !CmsStringUtil.isEmptyOrWhitespaceOnly(reference)) {
    setting=OpenCms.getWorkplaceManager().getExplorerTypeSetting(reference);
    properties=setting.getProperties();
    reference=setting.getReference();
  }
  Iterator<String> propIt=properties.iterator();
  while (propIt.hasNext()) {
    String propertyName=propIt.next();
    CmsProperty property=m_cms.readPropertyObject(resource,propertyName,false);
    JSONObject propertyJSON=new JSONObject();
    propertyJSON.put(ItemKeys.name.toString(),propertyName);
    propertyJSON.put(ItemKeys.value.toString(),property.getValue());
    propertiesJSON.put(propertyJSON);
  }
  result.put(ItemKeys.properties.toString(),propertiesJSON);
  String linkpath=link(resourcePath);
  result.put(ItemKeys.linkpath.toString(),linkpath);
  return result;
}
