{
  JSONObject result=new JSONObject();
  if (query == null) {
    return result;
  }
  JSONArray types=query.getJSONArray(JsonKeys.TYPES.getName());
  JSONArray galleries=query.getJSONArray(JsonKeys.GALLERIES.getName());
  List<String> galleriesList=transformToStringList(galleries);
  JSONArray categories=query.getJSONArray(JsonKeys.CATEGORIES.getName());
  List<String> categoriesList=transformToStringList(categories);
  String queryStr=query.getString(JsonKeys.QUERY.getName());
  int matches=query.getInt(JsonKeys.MATCHESPERPAGE.getName());
  CmsGallerySearch.SortParam sortOrder=CmsGallerySearch.SortParam.DEFAULT;
  try {
    sortOrder=CmsGallerySearch.SortParam.valueOf(query.getString(JsonKeys.SORTORDER.getName()).toUpperCase());
  }
 catch (  Exception e) {
  }
  int page=query.getInt(JsonKeys.PAGE.getName());
  List<String> typeNames=new ArrayList<String>();
  try {
    typeNames=getTypeNames(types);
  }
 catch (  CmsLoaderException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
  CmsUser user=m_cms.getRequestContext().currentUser();
  String indexName=new CmsUserSettings(user).getWorkplaceSearchIndexName();
  CmsSearchParameters params=new CmsSearchParameters();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(queryStr)) {
    params.setIgnoreQuery(true);
  }
 else {
    params.setQuery(queryStr);
  }
  params.setSort(CmsSearchParameters.SORT_TITLE);
  params.setIndex(indexName);
  params.setMatchesPerPage(matches);
  params.setSearchPage(page);
  if (typeNames != null) {
    params.setResourceTypes(typeNames);
  }
  if (categoriesList != null) {
    params.setCategories(categoriesList);
  }
  if (galleriesList != null) {
    params.setRoots(galleriesList);
  }
  CmsSearch searchBean=new CmsSearch();
  searchBean.init(m_cms);
  searchBean.setParameters(params);
  List<CmsSearchResult> searchResults=searchBean.getSearchResult();
  result.put("sortorder",searchBean.getSortOrder());
  result.put("resultcount",searchBean.getSearchResultCount());
  result.put("resultpage",searchBean.getSearchPage());
  result.put("resultlist",buildJSONForSearchResult(searchResults));
  return result;
}
