{
  JSONObject result=new JSONObject();
  result.put(VfsTreeKey.name.name(),resource.getName());
  result.put(VfsTreeKey.path.name(),getCmsObject().getSitePath(resource));
  try {
    CmsFormatterInfoBean formatterInfo=new CmsFormatterInfoBean(OpenCms.getResourceManager().getResourceType(CmsResourceTypeFolder.RESOURCE_TYPE_NAME),false);
    formatterInfo.setTitleInfo(ItemKey.title.toString(),ItemKey.title.toString(),resource.getName());
    formatterInfo.setIcon(CmsWorkplace.getResourceUri(CmsWorkplace.RES_PATH_FILETYPES + OpenCms.getWorkplaceManager().getExplorerTypeSetting(CmsResourceTypeFolder.RESOURCE_TYPE_NAME).getIcon()));
    result.put(ItemKey.itemhtml.toString(),getFormattedListContent(formatterInfo));
  }
 catch (  Exception e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
  List<CmsResource> subFolders=getCmsObject().readResources(resource.getName(),CmsResourceFilter.ONLY_VISIBLE_NO_DELETED.addRequireFolder(),false);
  if (!subFolders.isEmpty()) {
    JSONArray subFoldersJSON=new JSONArray();
    Iterator<CmsResource> it=subFolders.iterator();
    while (it.hasNext()) {
      subFoldersJSON.put(buildJSONForVfsTreeEntry(it.next()));
    }
    result.put(VfsTreeKey.subFolders.name(),subFoldersJSON);
  }
  return result;
}
