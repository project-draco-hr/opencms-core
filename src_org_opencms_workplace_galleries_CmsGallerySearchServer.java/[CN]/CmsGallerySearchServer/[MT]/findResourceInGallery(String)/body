{
  CmsResource resource=null;
  try {
    resource=m_cms.readResource(resourceName);
  }
 catch (  CmsException e) {
    LOG.warn(e.getLocalizedMessage(),e);
  }
  if (resource == null) {
    return new JSONObject();
  }
  String rootPath=resource.getRootPath();
  JSONObject queryData=new JSONObject();
  JSONArray types=new JSONArray();
  types.put(resource.getTypeId());
  queryData.put(QueryKeys.types.toString(),types);
  JSONArray galleries=new JSONArray();
  galleries.put(CmsResource.getFolderPath(resourceName));
  queryData.put(QueryKeys.galleries.toString(),galleries);
  queryData.put(QueryKeys.categories.toString(),new JSONArray());
  queryData.put(QueryKeys.matchesperpage.toString(),MATCHES_PER_PAGE);
  queryData.put(QueryKeys.query.toString(),"");
  queryData.put(QueryKeys.sortorder.toString(),CmsGallerySearchParameters.CmsGallerySortParam.DEFAULT.toString());
  int currentPage=1;
  boolean found=false;
  queryData.put(QueryKeys.page.toString(),currentPage);
  CmsGallerySearchParameters params=prepareSearchParams(queryData);
  CmsGallerySearch searchBean=new CmsGallerySearch();
  searchBean.init(m_cms);
  searchBean.setIndex(ADVANCED_GALLERY_INDEX);
  CmsGallerySearchResultList searchResults=null;
  while (!found) {
    params.setResultPage(currentPage);
    searchResults=searchBean.getResult(params);
    Iterator<CmsGallerySearchResult> resultsIt=searchResults.listIterator();
    while (resultsIt.hasNext()) {
      CmsGallerySearchResult searchResult=resultsIt.next();
      if (searchResult.getPath().equals(rootPath)) {
        found=true;
        break;
      }
    }
    if (!found && (searchResults.getHitCount() / (currentPage * params.getMatchesPerPage()) >= 1)) {
      currentPage++;
    }
 else {
      break;
    }
  }
  JSONObject result=new JSONObject();
  if (found && (searchResults != null)) {
    JSONObject sResult=new JSONObject();
    sResult.put(QueryKeys.sortorder.toString(),params.getSortOrder());
    sResult.put(QueryKeys.resultcount.toString(),searchResults.getHitCount());
    sResult.put(QueryKeys.page.toString(),params.getResultPage());
    sResult.put(QueryKeys.resultlist.toString(),buildJSONForSearchResult(searchResults));
    queryData.put(QueryKeys.page.toString(),currentPage);
    queryData.put(QueryKeys.tabid.toString(),RESULT_TAB_ID);
    result.put(QueryKeys.querydata.toString(),queryData);
    result.put(ResponseKeys.searchresult.toString(),sResult);
  }
  return result;
}
