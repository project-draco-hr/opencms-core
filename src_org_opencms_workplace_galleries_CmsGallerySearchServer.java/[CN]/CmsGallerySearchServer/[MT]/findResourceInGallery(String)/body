{
  CmsResource resource=null;
  try {
    resource=m_cms.readResource(resourceName);
  }
 catch (  CmsException e) {
    LOG.warn(e.getLocalizedMessage(),e);
  }
  if (resource == null) {
    return new JSONObject();
  }
  String rootPath=resource.getRootPath();
  JSONObject queryData=new JSONObject();
  JSONArray types=new JSONArray();
  types.put(resource.getTypeId());
  queryData.put(JsonKeys.TYPES.getName(),types);
  JSONArray galleries=new JSONArray();
  galleries.put(CmsResource.getFolderPath(resourceName));
  queryData.put(JsonKeys.GALLERIES.getName(),galleries);
  queryData.put(JsonKeys.CATEGORIES.getName(),new JSONArray());
  queryData.put(JsonKeys.MATCHESPERPAGE.getName(),MATCHES_PER_PAGE);
  queryData.put(JsonKeys.QUERY.getName(),"");
  queryData.put(JsonKeys.SORTORDER.getName(),CmsGallerySearch.SortParam.DEFAULT.getName());
  int currentPage=1;
  boolean found=false;
  queryData.put(JsonKeys.PAGE.getName(),currentPage);
  CmsSearchParameters params=prepareSearchParams(queryData);
  CmsSearch searchBean=new CmsSearch();
  searchBean.init(m_cms);
  searchBean.setParameters(params);
  List<CmsSearchResult> searchResults=null;
  while (!found) {
    searchBean.setSearchPage(currentPage);
    searchResults=searchBean.getSearchResult();
    Iterator<CmsSearchResult> resultsIt=searchResults.iterator();
    while (resultsIt.hasNext()) {
      CmsSearchResult searchResult=resultsIt.next();
      if (searchResult.getPath().equals(rootPath)) {
        found=true;
        break;
      }
    }
    if (!found && (searchBean.getSearchResultCount() / (currentPage * searchBean.getMatchesPerPage()) >= 1)) {
      currentPage++;
    }
 else {
      break;
    }
  }
  JSONObject result=new JSONObject();
  if (found) {
    JSONObject sResult=new JSONObject();
    sResult.put(JsonKeys.SORTORDER.getName(),searchBean.getSortOrder());
    sResult.put(JsonKeys.RESULTCOUNT.getName(),searchBean.getSearchResultCount());
    sResult.put(JsonKeys.PAGE.getName(),searchBean.getSearchPage());
    sResult.put(JsonKeys.RESULTLIST.getName(),buildJSONForSearchResult(searchResults));
    queryData.put(JsonKeys.PAGE.getName(),currentPage);
    queryData.put(JsonKeys.TABID.getName(),RESULT_TAB_ID);
    result.put(JsonKeys.QUERYDATA.getName(),queryData);
    result.put(JsonKeys.SEARCHRESULT.getName(),sResult);
  }
  return result;
}
