{
  JSONObject result=new JSONObject();
  if (query == null) {
    return result;
  }
  JSONArray types=query.getJSONArray(JsonKeys.TYPES.getName());
  int[] typesArr=transformToIntArray(types);
  JSONArray galleries=query.getJSONArray(JsonKeys.GALLERIES.getName());
  String[] galleriesArr=transformToStringArray(galleries);
  JSONArray categories=query.getJSONArray(JsonKeys.CATEGORIES.getName());
  String[] categoriesArr=transformToStringArray(categories);
  String queryStr=query.getString(JsonKeys.QUERY.getName());
  CmsGallerySearch.SortParam sortOrder=CmsGallerySearch.SortParam.valueOf(query.getString(JsonKeys.SORTORDER.getName()));
  CmsGallerySearch.SortParam sortBy=CmsGallerySearch.SortParam.valueOf(query.getString(JsonKeys.SORTBY.getName()));
  int page=query.getInt(JsonKeys.PAGE.getName());
  List<String> typeNames=new ArrayList<String>();
  try {
    typeNames=getTypeNames(types);
  }
 catch (  CmsLoaderException e) {
    e.printStackTrace();
  }
  CmsUser user=cms.getRequestContext().currentUser();
  String indexName=new CmsUserSettings(user).getWorkplaceSearchIndexName();
  CmsSearchParameters params=new CmsSearchParameters(queryStr);
  params.setIndex(indexName);
  params.setMatchesPerPage(20);
  params.setSearchPage(page);
  params.setResourceTypes(typeNames);
  CmsSearch searchBean=new CmsSearch();
  searchBean.init(cms);
  searchBean.setParameters(params);
  searchBean.setSearchRoot(((galleriesArr != null) && (galleriesArr.length > 0)) ? galleriesArr[0] : "");
  List<CmsSearchResult> searchResults=searchBean.getSearchResult();
  result.put("sortorder",searchBean.getSortOrder());
  result.put("resultcount",searchBean.getSearchResultCount());
  result.put("resultpage",searchBean.getSearchPage());
  result.put("resultlist",buildJSONForSearchResult(searchResults));
  return result;
}
