{
  JSONObject result=new JSONObject();
  result.put(SitemapKey.title.name(),entry.getTitle());
  result.put(SitemapKey.sitemapUri.name(),entry.getUri());
  I_CmsResourceType resType=m_resourceManager.getResourceType(getCmsObject().readResource(entry.getResourceId()));
  String iconPath=CmsWorkplace.RES_PATH_FILETYPES;
  iconPath+=OpenCms.getWorkplaceManager().getExplorerTypeSetting(resType.getTypeName()).getIcon();
  result.put(SitemapKey.icon.name(),iconPath);
  try {
    CmsFormatterInfoBean formatterInfo=new CmsFormatterInfoBean(resType,false);
    formatterInfo.setTitleInfo(ItemKey.title.toString(),ItemKey.title.toString(),entry.getTitle());
    formatterInfo.setIcon(iconPath);
    result.put(ItemKey.itemhtml.toString(),getFormattedListContent(formatterInfo));
  }
 catch (  Exception e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
  if (!entry.getSubEntries().isEmpty()) {
    result.put(SitemapKey.hasSubEntries.name(),true);
    if (targetUri.startsWith(entry.getUri(),0)) {
      JSONArray subEntries=new JSONArray();
      Iterator<CmsSiteEntryBean> it=entry.getSubEntries().iterator();
      while (it.hasNext()) {
        subEntries.put(buildJSONForSitemapEntry(it.next(),targetUri));
      }
      result.put(SitemapKey.subEntries.name(),subEntries);
    }
  }
  return result;
}
