{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  if (checkParameters(request,result,ReqParam.ACTION.getName(),ReqParam.DATA.getName())) {
    String actionParam=request.getParameter(ReqParam.ACTION.getName());
    String localeParam=request.getParameter(ReqParam.LOCALE.getName());
    String dataParam=request.getParameter(ReqParam.DATA.getName());
    Action action=Action.valueOf(actionParam.toUpperCase());
    m_cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));
    JSONObject data=new JSONObject(dataParam);
    if (action.equals(Action.ALL)) {
      JSONArray resourceTypesParam=data.getJSONArray(JsonKeys.TYPES.getName());
      List<I_CmsResourceType> resourceTypes=readContentTypes(resourceTypesParam);
      result.put(JsonKeys.TYPES.getName(),buildJSONForTypes(resourceTypes));
      Map<String,CmsGalleryTypeInfo> galleryTypes=readGalleryTypes(resourceTypes);
      result.put(JsonKeys.GALLERIES.getName(),buildJSONForGalleries(galleryTypes));
      List<CmsResource> galleryFolders=new ArrayList<CmsResource>();
      Iterator<Entry<String,CmsGalleryTypeInfo>> iGalleryTypes=galleryTypes.entrySet().iterator();
      while (iGalleryTypes.hasNext()) {
        galleryFolders.addAll(iGalleryTypes.next().getValue().getGalleries());
      }
      result.put(JsonKeys.CATEGORIES.getName(),buildJSONForCategories(readCategories(galleryFolders)));
    }
 else     if (action.equals(Action.CATEGORIES)) {
      result.put(JsonKeys.CATEGORIES.getName(),readSystemCategories());
    }
 else     if (action.equals(Action.CONTAINERS)) {
    }
 else     if (action.equals(Action.GALLERIES)) {
      JSONArray resourceTypesParam=data.getJSONArray(JsonKeys.TYPES.getName());
      List<I_CmsResourceType> resourceTypes=readContentTypes(resourceTypesParam);
      Map<String,CmsGalleryTypeInfo> galleryTypes=readGalleryTypes(resourceTypes);
      result.put(JsonKeys.GALLERIES.getName(),buildJSONForGalleries(galleryTypes));
    }
 else     if (action.equals(Action.SEARCH)) {
      JSONObject query=data.getJSONObject(JsonKeys.QUERYDATA.getName());
      result.put(JsonKeys.SEARCHRESULT.getName(),search(query));
    }
 else     if (action.equals(Action.PREVIEW)) {
      String resourcePath=data.getString(JsonKeys.PATH.getName());
      result.put(JsonKeys.PREVIEWDATA.getName(),getPreviewData(resourcePath));
    }
  }
  return result;
}
