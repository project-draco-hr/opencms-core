{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  if (checkParameters(request,result,ReqParam.action.toString(),ReqParam.data.toString())) {
    String actionParam=request.getParameter(ReqParam.action.toString());
    String localeParam=request.getParameter(ReqParam.locale.toString());
    String dataParam=request.getParameter(ReqParam.data.toString());
    Action action=Action.valueOf(actionParam.toUpperCase());
    m_locale=CmsLocaleManager.getLocale(localeParam);
    getCmsObject().getRequestContext().setLocale(m_locale);
    JSONObject data=new JSONObject(dataParam);
    String resourcePath;
    String siteRoot;
switch (action) {
case ALL:
      result.merge(getAllLists(null,getTabs()),true,true);
    break;
case CATEGORIES:
  result.put(ResponseKey.categories.toString(),readSystemCategories());
break;
case CONTAINERS:
break;
case GALLERIES:
JSONArray resourceTypesParam=data.getJSONArray(ResponseKey.types.toString());
List<I_CmsResourceType> resourceTypes=readContentTypes(resourceTypesParam);
Map<String,CmsGalleryTypeInfo> galleryTypes=readGalleryTypes(resourceTypes);
result.put(ResponseKey.galleries.toString(),buildJSONForGalleries(galleryTypes));
break;
case SEARCH:
JSONObject query=data.getJSONObject(QueryKey.querydata.toString());
result.put(ResponseKey.searchresult.toString(),search(query));
break;
case PREVIEW:
siteRoot=data.optString(SitemapKey.siteRoot.name());
resourcePath=data.getString(ItemKey.path.toString());
CmsObject cms=getCmsObject();
CmsRequestContext context=cms.getRequestContext();
boolean switchSites=false;
String currentSiteRoot=context.getSiteRoot();
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(siteRoot) && !currentSiteRoot.equals(siteRoot)) {
switchSites=true;
context.setSiteRoot(siteRoot);
}
try {
result.put(ResponseKey.previewdata.toString(),getPreviewData(resourcePath));
}
  finally {
if (switchSites) {
context.setSiteRoot(currentSiteRoot);
}
}
break;
case SETPROPERTIES:
resourcePath=data.getString(ItemKey.path.toString());
JSONArray properties=data.getJSONArray(ItemKey.properties.toString());
result.put(ResponseKey.previewdata.toString(),setProperties(resourcePath,properties));
break;
case VFSPATH:
String path=data.getString(ItemKey.linkpath.toString());
if (path.startsWith(OpenCms.getSystemInfo().getOpenCmsContext())) {
path=path.substring(OpenCms.getSystemInfo().getOpenCmsContext().length());
}
result.put(ResponseKey.path.toString(),path);
break;
case VFSTREE:
siteRoot=data.getString(SitemapKey.siteRoot.name());
result.put(ResponseKey.vfstree.name(),buildJSONForVfsTree(siteRoot));
break;
case SITEMAPENTRY:
case SITEMAPTREE:
siteRoot=data.getString(SitemapKey.siteRoot.name());
String locale=data.getString(SitemapKey.locale.name());
String targetUri=data.getString(SitemapKey.sitemapUri.name());
result.put(ResponseKey.sitemap.name(),buildJSONForSitemap(targetUri,siteRoot,CmsLocaleManager.getLocale(locale),action.equals(Action.SITEMAPTREE)));
break;
default :
}
}
return result;
}
