{
  List ret=new ArrayList();
  int number=1;
  if (OpenCms.getPublishManager().isRunning()) {
    CmsPublishJobRunning currentJob=OpenCms.getPublishManager().getCurrentPublishJob();
    if (currentJob != null) {
      CmsListItem item=getList().newItem(currentJob.getPublishList().getPublishHistoryId().toString());
      item.set(LIST_COLUMN_STATE,new Integer(STATE_PROCEED));
      item.set(LIST_COLUMN_NUMBER,new Integer(number));
      item.set(LIST_COLUMN_PROJECT,currentJob.getProjectName());
      item.set(LIST_COLUMN_STARTTIME,new Date(currentJob.getEnqueueTime()));
      item.set(LIST_COLUMN_USER,currentJob.getUserName(getCms()));
      item.set(LIST_COLUMN_RESCOUNT,new Integer(currentJob.getSize()));
      ret.add(item);
      number++;
    }
  }
  Iterator iter=OpenCms.getPublishManager().getPublishQueue().iterator();
  while (iter.hasNext()) {
    CmsPublishJobEnqueued publishJob=(CmsPublishJobEnqueued)iter.next();
    CmsListItem item=getList().newItem(publishJob.getPublishList().getPublishHistoryId().toString());
    int state=STATE_OWN;
    if (!publishJob.getUserId().equals(getCms().getRequestContext().currentUser().getId())) {
      state=STATE_OTHER;
    }
    item.set(LIST_COLUMN_STATE,new Integer(state));
    item.set(LIST_COLUMN_NUMBER,new Integer(number));
    item.set(LIST_COLUMN_PROJECT,publishJob.getProjectName());
    item.set(LIST_COLUMN_STARTTIME,new Date(publishJob.getEnqueueTime()));
    item.set(LIST_COLUMN_USER,publishJob.getUserName(getCms()));
    item.set(LIST_COLUMN_RESCOUNT,new Integer(publishJob.getSize()));
    ret.add(item);
    number++;
  }
  return ret;
}
