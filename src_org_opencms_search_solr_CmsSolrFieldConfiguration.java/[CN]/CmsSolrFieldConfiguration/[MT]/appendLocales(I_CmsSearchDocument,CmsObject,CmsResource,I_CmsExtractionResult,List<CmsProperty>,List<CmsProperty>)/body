{
  Collection<Locale> resourceLocales=new ArrayList<Locale>();
  if ((extraction != null) && (!extraction.getLocales().isEmpty())) {
    CmsResourceManager resMan=OpenCms.getResourceManager();
    resourceLocales=extraction.getLocales();
    boolean isGroup=false;
    for (    String groupType : Arrays.asList(CmsResourceTypeXmlContainerPage.GROUP_CONTAINER_TYPE_NAME,CmsResourceTypeXmlContainerPage.INHERIT_CONTAINER_TYPE_NAME)) {
      if (resMan.matchResourceType(groupType,resource.getTypeId())) {
        isGroup=true;
        break;
      }
    }
    if (isGroup) {
      m_contentLocales=OpenCms.getLocaleManager().getAvailableLocales();
    }
 else {
      m_contentLocales=resourceLocales;
    }
  }
 else {
    resourceLocales=OpenCms.getLocaleManager().getDefaultLocales(cms,resource);
    for (    final CmsProperty prop : propertiesSearched) {
      if (prop.getName().equals(CmsPropertyDefinition.PROPERTY_TITLE)) {
        final String value=prop.getValue();
        final List<Locale> availableLocales=OpenCms.getLocaleManager().getAvailableLocales();
        for (        final Locale locale : availableLocales) {
          final String lang=locale.getLanguage();
          if (!resourceLocales.contains(lang)) {
            final String effFieldName=CmsSearchFieldConfiguration.getLocaleExtendedName(CmsSearchField.FIELD_TITLE_UNSTORED,locale) + "_s";
            final CmsSolrField f=new CmsSolrField(effFieldName,null,null,null,0);
            document.addSearchField(f,value);
          }
        }
      }
    }
    m_contentLocales=getContentLocales(cms,resource,extraction);
  }
  document.addResourceLocales(resourceLocales);
  document.addContentLocales(m_contentLocales);
  if (hasLocaleDependencies()) {
    CmsDocumentDependency dep=CmsDocumentDependency.load(cms,resource);
    ((CmsSolrDocument)document).addDocumentDependency(cms,dep);
  }
  return document;
}
