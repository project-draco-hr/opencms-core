{
  String mimeType=OpenCms.getResourceManager().getMimeType(resource.getName(),null);
  if (mimeType != null) {
    document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_MIMETYPE),mimeType);
  }
  document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_FILENAME),resource.getName());
  document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_VERSION),"" + resource.getVersion());
  try {
    if (CmsResourceTypeXmlContent.isXmlContent(resource)) {
      I_CmsXmlContentHandler handler=CmsXmlContentDefinition.getContentHandlerForResource(cms,resource);
      if ((handler != null) && handler.isContainerPageOnly()) {
        if (document.getDocument() instanceof SolrInputDocument) {
          SolrInputDocument doc=(SolrInputDocument)document.getDocument();
          doc.removeField(CmsSearchField.FIELD_SEARCH_EXCLUDE);
        }
 else {
        }
        document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_SEARCH_EXCLUDE),"true");
      }
    }
  }
 catch (  CmsException e) {
    LOG.error(e.getMessage(),e);
  }
  List<String> searchExcludeOptions=document.getMultivaluedFieldAsStringList(CmsSearchField.FIELD_SEARCH_EXCLUDE);
  if ((searchExcludeOptions == null) || searchExcludeOptions.isEmpty()) {
    document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_SEARCH_EXCLUDE),"false");
  }
  if (resource.getRootPath().startsWith("/system") || (CmsResourceTypeJsp.getJSPTypeId() == resource.getTypeId())) {
    document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_SEARCH_CHANNEL),"gallery");
  }
 else {
    document.addSearchField(m_solrFields.get(CmsSearchField.FIELD_SEARCH_CHANNEL),"content");
  }
  return document;
}
