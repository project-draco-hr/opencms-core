{
  try {
    I_CmsResourceLoader loader=null;
    target=toAbsolute(target);
    try {
      CmsResource resource=getCmsObject().readFileHeader(target);
      loader=OpenCms.getLoaderManager().getLoader(resource.getLoaderId());
    }
 catch (    java.lang.ClassCastException e) {
      return "??? " + e.getMessage() + " ???";
    }
catch (    com.opencms.core.CmsException e) {
      return "??? " + e.getMessage() + " ???";
    }
    try {
      if (loader instanceof CmsJspLoader) {
        CmsJspTemplate template=new CmsJspTemplate();
        byte[] res=template.getContent(getCmsObject(),target,null,null);
        return new String(res,getRequestContext().getEncoding());
      }
 else       if (loader instanceof CmsXmlPageLoader) {
        CmsFile file=getCmsObject().readFile(target);
        CmsXmlPage page=CmsXmlPage.read(getCmsObject(),file);
        if (element == null) {
          element="body";
        }
        if (page.hasElement(element,locale)) {
          return page.getContent(getCmsObject(),element,locale);
        }
 else {
          return null;
        }
      }
 else       if (loader instanceof CmsXmlTemplateLoader) {
        CmsXmlTemplate template=new CmsXmlTemplate();
        byte[] res=template.getContent(getCmsObject(),target,element,null);
        return new String(res,getRequestContext().getEncoding());
      }
 else       if (loader instanceof CmsDumpLoader) {
        CmsFile file=getCmsObject().readFile(target);
        return new String(file.getContents(),getRequestContext().getEncoding());
      }
 else       if (loader instanceof CmsPointerLoader) {
        CmsFile file=getCmsObject().readFile(target);
        return new String(file.getContents());
      }
    }
 catch (    CmsException ce) {
      return "??? " + ce.getMessage() + " ???";
    }
catch (    UnsupportedEncodingException uee) {
      return "??? " + uee.getMessage() + " ???";
    }
  }
 catch (  Throwable t) {
    handleException(t);
    return "??? " + t.getMessage() + " ???";
  }
  return "";
}
