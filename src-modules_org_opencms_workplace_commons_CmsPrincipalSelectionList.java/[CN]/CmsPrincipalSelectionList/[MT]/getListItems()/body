{
  List<CmsListItem> ret=new ArrayList<CmsListItem>();
  boolean withOtherOus=hasPrincipalsInOtherOus() && getList().getMetadata().getItemDetailDefinition(LIST_DETAIL_OTHEROU).isVisible();
  Iterator<CmsPrincipal> itPrincipals=getPrincipals(withOtherOus).iterator();
  while (itPrincipals.hasNext()) {
    I_CmsPrincipal principal=itPrincipals.next();
    CmsListItem item=getList().newItem(principal.getId().toString());
    item.set(LIST_COLUMN_NAME,principal.getName());
    I_CmsGroupNameTranslation translation=OpenCms.getWorkplaceManager().getGroupNameTranslation();
    if (principal.isGroup()) {
      item.set(LIST_COLUMN_DISPLAY,translation.translateGroupName(principal.getName(),false));
    }
 else {
      item.set(LIST_COLUMN_DISPLAY,principal.getSimpleName());
    }
    if (principal.isUser()) {
      if (principal.getId().equals(CmsAccessControlEntry.PRINCIPAL_ALL_OTHERS_ID) || principal.getId().equals(CmsAccessControlEntry.PRINCIPAL_OVERWRITE_ALL_ID)) {
        item.set(LIST_COLUMN_DESCRIPTION,((CmsUser)principal).getDescription(getLocale()));
      }
 else {
        item.set(LIST_COLUMN_DESCRIPTION,((CmsUser)principal).getFullName());
      }
    }
 else {
      item.set(LIST_COLUMN_DESCRIPTION,((CmsGroup)principal).getDescription(getLocale()));
    }
    item.set(LIST_COLUMN_ORGUNIT,CmsOrganizationalUnit.SEPARATOR + principal.getOuFqn());
    ret.add(item);
  }
  return ret;
}
