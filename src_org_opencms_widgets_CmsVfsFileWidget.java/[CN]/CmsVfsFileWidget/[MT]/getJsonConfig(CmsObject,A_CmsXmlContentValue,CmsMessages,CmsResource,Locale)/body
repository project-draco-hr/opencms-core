{
  JSONObject config=new JSONObject();
  try {
    config.put(I_CmsGalleryProviderConstants.CONFIG_START_SITE,m_startSite);
    String tabIds=null;
    if (m_includeFiles) {
      tabIds=GalleryTabId.cms_tab_types.name() + "," + GalleryTabId.cms_tab_galleries.name()+ ","+ GalleryTabId.cms_tab_vfstree.name()+ ","+ GalleryTabId.cms_tab_sitemap.name()+ ","+ GalleryTabId.cms_tab_categories.name()+ ","+ GalleryTabId.cms_tab_search.name()+ ","+ GalleryTabId.cms_tab_results.name();
    }
 else {
      tabIds=GalleryTabId.cms_tab_vfstree.name();
    }
    config.put(I_CmsGalleryProviderConstants.CONFIG_TAB_IDS,tabIds);
    config.put(I_CmsGalleryProviderConstants.CONFIG_SHOW_SITE_SELECTOR,m_showSiteSelector);
    config.put(I_CmsGalleryProviderConstants.CONFIG_REFERENCE_PATH,cms.getSitePath(resource));
    config.put(I_CmsGalleryProviderConstants.CONFIG_LOCALE,contentLocale.toString());
    config.put(I_CmsGalleryProviderConstants.CONFIG_GALLERY_MODE,GalleryMode.widget.name());
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_selectableTypes)) {
      config.put(I_CmsGalleryProviderConstants.CONFIG_RESOURCE_TYPES,m_selectableTypes.trim());
    }
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_searchTypes)) {
      CmsMacroResolver resolver=CmsMacroResolver.newInstance();
      resolver.addDynamicMacro(DEFAULT_SEARCH_TYPES_MACRO,new SearchTypesFactory(cms,resource));
      String searchTypes=resolver.resolveMacros(m_searchTypes.trim());
      config.put(I_CmsGalleryProviderConstants.CONFIG_SEARCH_TYPES,searchTypes);
    }
 else     if (CmsStringUtil.isEmptyOrWhitespaceOnly(m_selectableTypes)) {
      config.put(I_CmsGalleryProviderConstants.CONFIG_SEARCH_TYPES,getDefaultSearchTypes(cms,resource));
    }
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_startFolder)) {
      config.put(I_CmsGalleryProviderConstants.CONFIG_START_FOLDER,m_startFolder);
    }
    String treeToken="" + Objects.hashCode(m_startSite,cms.getRequestContext().getSiteRoot(),"" + m_selectableTypes);
    config.put(I_CmsGalleryProviderConstants.CONFIG_TREE_TOKEN,treeToken);
  }
 catch (  JSONException e) {
    LOG.error(e.getLocalizedMessage(),e);
  }
  return config;
}
