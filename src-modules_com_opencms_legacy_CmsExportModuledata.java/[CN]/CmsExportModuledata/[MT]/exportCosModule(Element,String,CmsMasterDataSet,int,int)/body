{
  getReport().print(Messages.get().container(Messages.RPT_EXPORT_WITH_ID_2,dataset.m_title,dataset.m_masterId),I_CmsReport.FORMAT_NOTE);
  String dataSetFile="dataset_" + subId + "_"+ masterNr+ ".xml";
  CmsMasterContent content=getContentDefinition(classname,new Class[]{CmsObject.class,CmsMasterDataSet.class},new Object[]{getCms(),dataset});
  Element master=parent.addElement(C_EXPORT_TAG_MASTER);
  master.addElement(C_EXPORT_TAG_MASTER_SUBID).addText(Integer.toString(subId));
  master.addElement(C_EXPORT_TAG_MASTER_DATASET).addText(dataSetFile);
  exportCosModuleData(dataset,dataSetFile,masterNr,subId);
  Element channelrel=master.addElement(C_EXPORT_TAG_MASTER_CHANNELREL);
  Vector moduleChannels=content.getChannels();
  for (int i=0; i < moduleChannels.size(); i++) {
    String channelname=(String)moduleChannels.elementAt(i);
    channelrel.addElement(C_EXPORT_TAG_MASTER_CHANNELNAME).addText(channelname);
  }
  Element mediaset=master.addElement(C_EXPORT_TAG_MASTER_MEDIASET);
  Vector moduleMedia=content.getMedia();
  for (int i=0; i < moduleMedia.size(); i++) {
    String mediaFile="media_" + subId + "_"+ masterNr+ "_"+ i+ ".xml";
    mediaset.addElement(C_EXPORT_TAG_MASTER_MEDIA).addText(mediaFile);
    exportCosModuleMedia((CmsMasterMedia)moduleMedia.elementAt(i),mediaFile,masterNr,subId,i);
  }
  digestElement(parent,master);
  getReport().println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
}
