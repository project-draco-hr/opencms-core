{
  getReport().println(Messages.get().container(Messages.RPT_EXPORT_MODULE_BEGIN_1,classname),I_CmsReport.FORMAT_HEADLINE);
  Iterator keys=exportedChannelIds.iterator();
  int subId=getContentDefinition(classname,new Class[]{CmsObject.class},new Object[]{getCms()}).getSubId();
  int masterNr=1;
  Element masters=parent.addElement(C_EXPORT_TAG_MASTERS);
  getSaxWriter().writeOpen(masters);
  while (keys.hasNext()) {
    String channelId=(String)keys.next();
    try {
      Vector allDatasets=new Vector();
      allDatasets=(Vector)Class.forName(classname).getMethod("readAllByChannel",new Class[]{CmsObject.class,String.class,Integer.class}).invoke(null,new Object[]{getCms(),channelId,new Integer(subId)});
      for (int i=0; i < allDatasets.size(); i++) {
        CmsMasterDataSet curDataset=(CmsMasterDataSet)allDatasets.elementAt(i);
        if (!m_exportedMasters.contains("" + curDataset.m_masterId)) {
          exportCosModule(masters,classname,curDataset,masterNr,subId);
          m_exportedMasters.add("" + curDataset.m_masterId);
          masterNr++;
        }
      }
    }
 catch (    InvocationTargetException e) {
      getReport().println(e);
      if (CmsLog.getLog(this).isErrorEnabled()) {
        CmsLog.getLog(this).error("Error exporting COS data for channel id " + channelId,e);
      }
    }
catch (    NoSuchMethodException e) {
      getReport().println(e);
      if (CmsLog.getLog(this).isErrorEnabled()) {
        CmsLog.getLog(this).error("Error exporting COS data for channel id " + channelId,e);
      }
    }
catch (    IllegalArgumentException e) {
      getReport().println(e);
      if (CmsLog.getLog(this).isErrorEnabled()) {
        CmsLog.getLog(this).error("Error exporting COS data for channel id " + channelId,e);
      }
    }
catch (    SecurityException e) {
      getReport().println(e);
      if (CmsLog.getLog(this).isErrorEnabled()) {
        CmsLog.getLog(this).error("Error exporting COS data for channel id " + channelId,e);
      }
    }
catch (    IllegalAccessException e) {
      getReport().println(e);
      if (CmsLog.getLog(this).isErrorEnabled()) {
        CmsLog.getLog(this).error("Error exporting COS data for channel id " + channelId,e);
      }
    }
catch (    ClassNotFoundException e) {
      getReport().println(e);
      if (CmsLog.getLog(this).isErrorEnabled()) {
        CmsLog.getLog(this).error("Error exporting COS data for channel id " + channelId,e);
      }
    }
  }
  getSaxWriter().writeClose(masters);
  parent.remove(masters);
  getReport().println(Messages.get().container(Messages.RPT_EXPORT_MODULE_END_0,classname),I_CmsReport.FORMAT_HEADLINE);
}
