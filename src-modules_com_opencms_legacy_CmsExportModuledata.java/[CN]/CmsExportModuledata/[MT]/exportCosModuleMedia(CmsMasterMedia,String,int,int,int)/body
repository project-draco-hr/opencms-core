{
  Document doc=DocumentHelper.createDocument();
  Element data=doc.addElement(I_CmsConstants.C_EXPORT_TAG_MODULEXPORT);
  Element em=data.addElement(C_EXPORT_TAG_MASTER_MEDIA);
  em.addElement(C_EXPORT_TAG_MEDIA_POSITION).addText(Integer.toString(media.getPosition()));
  em.addElement(C_EXPORT_TAG_MEDIA_WIDTH).addText(Integer.toString(media.getWidth()));
  em.addElement(C_EXPORT_TAG_MEDIA_HEIGHT).addText(Integer.toString(media.getHeight()));
  em.addElement(C_EXPORT_TAG_MEDIA_SIZE).addText(Integer.toString(media.getSize()));
  em.addElement(C_EXPORT_TAG_MEDIA_MIMETYPE).addText(media.getMimetype() != null ? media.getMimetype() : "");
  em.addElement(C_EXPORT_TAG_MEDIA_TYPE).addText(Integer.toString(media.getType()));
  em.addElement(C_EXPORT_TAG_MEDIA_TITLE).addCDATA(media.getTitle() != null ? media.getTitle() : "");
  em.addElement(C_EXPORT_TAG_MEDIA_NAME).addCDATA(media.getName() != null ? media.getName() : "");
  em.addElement(C_EXPORT_TAG_MEDIA_DESCRIPTION).addCDATA(media.getDescription() != null ? media.getDescription() : "");
  String contentFilename="mediacontent_" + subId + "_"+ masterNr+ "_"+ mediaId+ ".dat";
  em.addElement(C_EXPORT_TAG_MEDIA_CONTENT).addText(contentFilename);
  writeExportFile(contentFilename,media.getMedia());
  try {
    ZipEntry entry=new ZipEntry(filename);
    getExportZipStream().putNextEntry(entry);
    CmsXmlSaxWriter saxHandler=new CmsXmlSaxWriter(new OutputStreamWriter(getExportZipStream()),OpenCms.getSystemInfo().getDefaultEncoding());
    (new SAXWriter(saxHandler,saxHandler)).write(doc);
    getExportZipStream().closeEntry();
  }
 catch (  SAXException e) {
    getReport().println(e);
    if (CmsLog.getLog(this).isErrorEnabled()) {
      CmsLog.getLog(this).error("Unable to write ZIP media content file " + contentFilename,e);
    }
    throw new CmsLegacyException(CmsLegacyException.C_UNKNOWN_EXCEPTION,e);
  }
catch (  IOException e) {
    getReport().println(e);
    if (CmsLog.getLog(this).isErrorEnabled()) {
      CmsLog.getLog(this).error("Unable to write ZIP media content file " + contentFilename,e);
    }
    throw new CmsLegacyException(CmsLegacyException.C_UNKNOWN_EXCEPTION,e);
  }
}
