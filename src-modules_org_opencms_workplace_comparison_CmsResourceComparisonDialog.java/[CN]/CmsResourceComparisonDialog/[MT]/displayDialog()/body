{
  CmsResourceInfoDialog fileInfo=new CmsResourceInfoDialog(getJsp()){
    @Override protected String defaultActionHtmlEnd(){
      return "";
    }
  }
;
  fileInfo.displayDialog(true);
  if (fileInfo.isForwarded()) {
    return;
  }
  CmsPropertyComparisonList propertyDiff=new CmsPropertyComparisonList(getJsp());
  CmsAttributeComparisonList attributeDiff=new CmsAttributeComparisonList(getJsp());
  List<A_CmsListDialog> lists=new ArrayList<A_CmsListDialog>();
  lists.add(attributeDiff);
  I_CmsResourceType resourceType=OpenCms.getResourceManager().getResourceType(propertyDiff.getResourceType());
  if ((resourceType instanceof CmsResourceTypeXmlContent) || (resourceType instanceof CmsResourceTypeXmlPage)) {
    CmsElementComparisonList contentDiff=new CmsElementComparisonList(getJsp());
    byte[] content1=readFile(getCms(),propertyDiff.getResource1().getStructureId(),getParamVersion1()).getContents();
    byte[] content2=readFile(getCms(),propertyDiff.getResource2().getStructureId(),getParamVersion2()).getContents();
    if ((content1.length > 0) && (content2.length > 0)) {
      lists.add(contentDiff);
    }
    lists.add(propertyDiff);
    CmsMultiListDialog threeLists=new CmsMultiListDialog(lists);
    threeLists.displayDialog(true);
    if (threeLists.isForwarded()) {
      return;
    }
    fileInfo.writeDialog();
    threeLists.writeDialog();
  }
 else   if (resourceType instanceof CmsResourceTypeImage) {
    lists.add(propertyDiff);
    CmsMultiListDialog twoLists=new CmsMultiListDialog(lists){
      /** 
 * @see org.opencms.workplace.list.CmsMultiListDialog#defaultActionHtmlEnd()
 */
      @Override public String defaultActionHtmlEnd(){
        return "";
      }
    }
;
    twoLists.displayDialog(true);
    if (twoLists.isForwarded()) {
      return;
    }
    CmsImageComparisonDialog images=new CmsImageComparisonDialog(getJsp());
    fileInfo.writeDialog();
    twoLists.writeDialog();
    images.displayDialog();
  }
 else   if (resourceType instanceof CmsResourceTypePointer) {
    lists.add(propertyDiff);
    CmsMultiListDialog twoLists=new CmsMultiListDialog(lists){
      /** 
 * @see org.opencms.workplace.list.CmsMultiListDialog#defaultActionHtmlEnd()
 */
      @Override public String defaultActionHtmlEnd(){
        return "";
      }
    }
;
    twoLists.displayDialog(true);
    if (twoLists.isForwarded()) {
      return;
    }
    CmsPointerComparisonDialog pointers=new CmsPointerComparisonDialog(getJsp());
    fileInfo.writeDialog();
    twoLists.writeDialog();
    pointers.displayDialog();
  }
 else   if (propertyDiff.getResource1().isFile()) {
    lists.add(propertyDiff);
    CmsMultiListDialog twoLists=new CmsMultiListDialog(lists);
    twoLists.displayDialog(true);
    if (twoLists.isForwarded()) {
      return;
    }
    CmsResource resource1=propertyDiff.getResource1();
    CmsResource resource2=propertyDiff.getResource2();
    String path1=resource1.getRootPath();
    String path2=resource2.getRootPath();
    byte[] content1=readFile(getCms(),resource1.getStructureId(),getParamVersion1()).getContents();
    byte[] content2=readFile(getCms(),resource2.getStructureId(),getParamVersion2()).getContents();
    String originalSource=null;
    String copySource=null;
    I_CmsTextExtractor textExtractor=null;
    if ((content1.length > 0) && (content2.length > 0)) {
      if (path1.endsWith(".pdf") && path2.endsWith(".pdf")) {
        textExtractor=CmsExtractorPdf.getExtractor();
      }
 else       if (path1.endsWith(".doc") && path2.endsWith(".doc")) {
        textExtractor=CmsExtractorMsOfficeOLE2.getExtractor();
      }
 else       if (path1.endsWith(".xls") && path2.endsWith(".xls")) {
        textExtractor=CmsExtractorMsOfficeOLE2.getExtractor();
      }
 else       if (path1.endsWith(".rtf") && path2.endsWith(".rtf")) {
        textExtractor=CmsExtractorRtf.getExtractor();
      }
 else       if (path1.endsWith(".ppt") && path2.endsWith(".ppt")) {
        textExtractor=CmsExtractorMsOfficeOLE2.getExtractor();
      }
    }
    if (textExtractor != null) {
      try {
        originalSource=textExtractor.extractText(content1).getContent();
        copySource=textExtractor.extractText(content2).getContent();
      }
 catch (      Exception e) {
        originalSource=null;
        copySource=null;
        LOG.error(e.getMessage(),e);
      }
    }
 else     if ((resourceType instanceof CmsResourceTypePlain) || (resourceType instanceof CmsResourceTypeJsp)) {
      originalSource=new String(content1);
      copySource=new String(content2);
    }
    fileInfo.writeDialog();
    twoLists.writeDialog();
    if (CmsStringUtil.isNotEmpty(originalSource) && CmsStringUtil.isNotEmpty(copySource)) {
      m_differenceDialog.setCopySource(copySource);
      m_differenceDialog.setOriginalSource(originalSource);
      m_differenceDialog.displayDialog();
    }
  }
 else {
    lists.add(propertyDiff);
    CmsMultiListDialog twoLists=new CmsMultiListDialog(lists);
    twoLists.displayDialog(true);
    if (twoLists.isForwarded()) {
      return;
    }
    fileInfo.writeDialog();
    twoLists.writeDialog();
  }
}
