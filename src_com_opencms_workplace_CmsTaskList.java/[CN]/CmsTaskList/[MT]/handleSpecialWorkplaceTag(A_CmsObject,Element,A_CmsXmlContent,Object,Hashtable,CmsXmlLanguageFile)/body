{
  CmsXmlWpTemplateFile listdef=getTaskListDefinitions(cms);
  String listMethod=n.getAttribute("method");
  Method callingMethod=null;
  Vector list=new Vector();
  try {
    callingMethod=callingObject.getClass().getMethod(listMethod,new Class[]{A_CmsObject.class,CmsXmlLanguageFile.class});
    list=(Vector)callingMethod.invoke(callingObject,new Object[]{cms,lang});
  }
 catch (  NoSuchMethodException exc) {
    throwException("Could not find method " + listMethod + " in calling class "+ callingObject.getClass().getName()+ " for generating lasklist content.",CmsException.C_NOT_FOUND);
  }
catch (  InvocationTargetException targetEx) {
    Throwable e=targetEx.getTargetException();
    if (!(e instanceof CmsException)) {
      throwException("User method " + listMethod + " in calling class "+ callingObject.getClass().getName()+ " throwed an exception. "+ e,CmsException.C_UNKNOWN_EXCEPTION);
    }
 else {
      throw (CmsException)e;
    }
  }
catch (  Exception exc2) {
    throwException("User method " + listMethod + " in calling class "+ callingObject.getClass().getName()+ " was found but could not be invoked. "+ exc2,CmsException.C_XML_NO_USER_METHOD);
  }
  try {
    System.err.println(">>>" + 1);
    StringBuffer result=new StringBuffer();
    System.err.println(">>>" + 2);
    for (int i=0; i < list.size(); i++) {
      System.err.println(">>>" + 3);
      A_CmsTask task=(A_CmsTask)list.elementAt(i);
      System.err.println(">>>" + 31 + " "+ task);
      System.err.println(">>>" + 311 + " "+ task.getName());
      System.err.println(">>>" + 312 + " "+ listdef);
      listdef.setXmlData("task",task.getName());
      System.err.println(">>>" + 32 + " "+ task.getAgentUser());
      listdef.setXmlData("foruser",task.getAgentUser() + "");
      System.err.println(">>>" + 33);
      listdef.setXmlData("forrole",task.getRole() + "");
      System.err.println(">>>" + 34);
      listdef.setXmlData("actuator",task.getInitiatorUser() + "");
      System.err.println(">>>" + 35);
      listdef.setXmlData("due",task.getTimeOut().toLocaleString());
      System.err.println(">>>" + 36);
      listdef.setXmlData("from",task.getStartTime().toLocaleString());
      System.err.println(">>>" + 37);
      listdef.setXmlData("project",task.getParent() + "");
      System.err.println(">>>" + 4);
      result.append(listdef.getProcessedXmlDataValue("defaulttasklist",callingObject,parameters));
      System.err.println(">>>" + 5);
    }
    return result.toString();
  }
 catch (  Exception exc) {
    exc.printStackTrace();
    return "";
  }
}
