{
  CmsXmlWpConfigFile conf=new CmsXmlWpConfigFile(cms);
  String fromAddress=from.getEmail();
  if (fromAddress == null || fromAddress.equals("")) {
    fromAddress=conf.getDefaultMailSender();
  }
  if (fromAddress == null || fromAddress.equals("")) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Error in sending email,Unknown sender email address.",CmsException.C_BAD_NAME);
  }
  if (fromAddress.indexOf("@") == -1 || fromAddress.indexOf(".") == -1) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Error in sending email,Unknown sender email address: "+ fromAddress,CmsException.C_BAD_NAME);
  }
  Vector vu=cms.getUsersOfGroup(to.getName());
  Vector v=new Vector(vu.size());
  for (int i=0; i < vu.size(); i++) {
    String address=((CmsUser)vu.elementAt(i)).getEmail();
    if (address == null) {
      continue;
    }
    if (address.equals("")) {
      continue;
    }
    if (address.indexOf("@") == -1 || address.indexOf(".") == -1) {
      throw new CmsException("[" + this.getClass().getName() + "] "+ "Error in sending email, Invalid recipient email address: "+ address,CmsException.C_BAD_NAME);
    }
    v.addElement(address);
  }
  String users[]=new String[v.size()];
  for (int i=0; i < v.size(); i++) {
    users[i]=(String)v.elementAt(i);
  }
  if (users.length == 0) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Error in sending email,Unknown recipient email address.",CmsException.C_BAD_NAME);
  }
  c_TO=users;
  c_FROM=fromAddress;
  c_SUBJECT=(subject == null ? "" : subject);
  c_CONTENT=(content == null ? "" : content);
  c_MAILSERVER=conf.getMailServer();
  c_TYPE=type;
  c_CMS=cms;
}
