{
  if (CmsLog.getLog(this).isDebugEnabled() && C_DEBUG) {
    CmsLog.getLog(this).debug("Getting content of element " + ((elementName == null) ? "<root>" : elementName));
    CmsLog.getLog(this).debug("Template file is: " + templateFile);
    CmsLog.getLog(this).debug("Selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  I_CmsSession session=CmsXmlTemplateLoader.getSession(cms.getRequestContext(),true);
  String step=(String)parameters.get(C_ACTION);
  String moduleName=(String)parameters.get(C_MODULENAME);
  if (step == null) {
    xmlTemplateDocument.setData("modulename",(String)parameters.get(C_MODULE));
  }
 else   if ("showResult".equals(step)) {
    if (DEBUG > 1)     System.out.println("showResult for export");
    A_CmsReportThread doTheWork=(A_CmsReportThread)session.getValue(C_MODULE_THREAD);
    if (doTheWork.isAlive()) {
      if (DEBUG > 1)       System.out.println("showResult: thread is still running");
      xmlTemplateDocument.setData("endMethod","");
      xmlTemplateDocument.setData("text","");
    }
 else {
      if (DEBUG > 1)       System.out.println("showResult: thread is finished");
      xmlTemplateDocument.setData("endMethod",xmlTemplateDocument.getDataValue("endMethod"));
      xmlTemplateDocument.setData("autoUpdate","");
      xmlTemplateDocument.setData("text",xmlTemplateDocument.getLanguageFile().getLanguageValue("module.lable.exportend"));
      session.removeValue(C_MODULE_THREAD);
    }
    xmlTemplateDocument.setData("data",doTheWork.getReportUpdate());
    return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"updateReport");
  }
 else   if ("ok".equals(step)) {
    String[] resourcen=null;
    List resList=OpenCms.getModuleManager().getModule(moduleName).getResources();
    ArrayList resListCopy=new ArrayList();
    for (Iterator it=resList.iterator(); it.hasNext(); ) {
      String res=(String)it.next();
      try {
        if (res != null) {
          if (DEBUG > 0) {
            System.err.println("reading file header of: " + res);
          }
          cms.readResource(res);
          resListCopy.add(res);
        }
      }
 catch (      CmsException e) {
        if (CmsLog.getLog(this).isErrorEnabled()) {
          CmsLog.getLog(this).error("Error exporting module: couldn't add " + res + " to Module",e);
        }
        if (DEBUG > 0) {
          System.err.println("couldn't add " + res);
        }
      }
    }
    resourcen=new String[resListCopy.size()];
    for (int count=0; count < resListCopy.size(); count++) {
      resourcen[count]=(String)resListCopy.get(count);
      if (DEBUG > 0) {
        System.err.println("exporting " + resourcen[count]);
      }
    }
    String filename=OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(OpenCms.getSystemInfo().getPackagesRfsPath() + CmsSystemInfo.FOLDER_MODULES + moduleName+ "_"+ OpenCms.getModuleManager().getModule(moduleName).getVersion().toString());
    CmsModuleImportExportHandler moduleExportHandler=new CmsModuleImportExportHandler();
    moduleExportHandler.setFileName(filename);
    moduleExportHandler.setModuleName(moduleName.replace('\\','/'));
    moduleExportHandler.setAdditionalResources(resourcen);
    moduleExportHandler.setDescription("Module export of " + moduleExportHandler.getModuleName());
    A_CmsReportThread doExport=new CmsExportThread(cms,moduleExportHandler,true);
    doExport.start();
    session.putValue(C_MODULE_THREAD,doExport);
    xmlTemplateDocument.setData("time","5");
    templateSelector="showresult";
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
