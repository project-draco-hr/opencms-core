{
  if (m_initialized && !m_externalValueChange) {
    Scheduler.get().scheduleDeferred(new ScheduledCommand(){
      public void execute(){
        try {
          fireValueChange(false);
        }
 catch (        @SuppressWarnings("unused") Throwable t) {
        }
      }
    }
);
  }
  m_externalValueChange=false;
}
