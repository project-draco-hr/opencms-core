{
  CmsMemoryObjectCache cache=CmsMemoryObjectCache.getInstance();
  CmsLinkManager linkMan=OpenCms.getLinkManager();
  String headerInclude=(String)cache.getCachedObject(CmsJspTagEnableAde.class,Uri.INCLUDE_FILE.getUri());
  if (headerInclude == null) {
    try {
      CmsFile file=cms.readFile(Uri.INCLUDE_FILE.getUri());
      CmsProperty property=cms.readPropertyObject(file,CmsPropertyDefinition.PROPERTY_CONTENT_ENCODING,true);
      String encoding=property.getValue(OpenCms.getSystemInfo().getDefaultEncoding());
      headerInclude=CmsEncoder.createString(file.getContents(),encoding);
      CmsMacroResolver resolver=CmsMacroResolver.newInstance();
      resolver.setKeepEmptyMacros(true);
      String editorUri=linkMan.substituteLink(cms,Uri.EDITOR.getUri());
      resolver.addMacro(Macro.editorUri.name(),editorUri);
      String serverUri=linkMan.substituteLink(cms,Uri.ADE_SERVER.getUri());
      resolver.addMacro(Macro.serverUri.name(),serverUri);
      String publishUri=linkMan.substituteLink(cms,Uri.PUBLISH_SERVER.getUri());
      resolver.addMacro(Macro.publishUri.name(),publishUri);
      String galleryServerUri=linkMan.substituteLink(cms,CmsGallerySearchServer.ADVANCED_GALLERY_PATH);
      resolver.addMacro(Macro.galleryServerUri.name(),galleryServerUri);
      resolver.addMacro(Macro.galleryServerPath.name(),CmsGallerySearchServer.ADVANCED_GALLERY_PATH);
      String skinUri=CmsWorkplace.getSkinUri();
      resolver.addMacro(Macro.skinUri.name(),skinUri);
      resolver.addMacro(Macro.messagesUri.name(),linkMan.substituteLink(cms,Uri.ADE_MESSAGES.getUri()));
      headerInclude=resolver.resolveMacros(headerInclude);
      cache.putCachedObject(CmsJspTagEnableAde.class,Uri.INCLUDE_FILE.getUri(),headerInclude);
    }
 catch (    CmsException e) {
      headerInclude="";
      LOG.error(Messages.get().getBundle().key(Messages.LOG_DIRECT_EDIT_NO_HEADER_1,Uri.INCLUDE_FILE.getUri()),e);
    }
  }
  CmsMacroResolver resolver=CmsMacroResolver.newInstance();
  try {
    String currentUri=cms.getRequestContext().getUri();
    Iterator<CmsResource> resIt=OpenCms.getADEManager().getSearchableResourceTypes(cms,currentUri,req).iterator();
    List<I_CmsResourceType> searchableTypes=new ArrayList<I_CmsResourceType>();
    while (resIt.hasNext()) {
      CmsResource resource=resIt.next();
      I_CmsResourceType type=OpenCms.getResourceManager().getResourceType(resource);
      searchableTypes.add(type);
    }
    resolver.addMacro(Macro.galleryAdditionalJavascript.name(),CmsGallerySearchServer.getAdditionalJavascriptForTypes(searchableTypes));
    boolean isDetailPage=false;
    CmsResource containerPage=cms.readResource(currentUri);
    CmsXmlSitemap sitemap=null;
    if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {
      String cntPagePath=cms.readPropertyObject(containerPage,CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,true).getValue("");
      try {
        containerPage=cms.readResource(cntPagePath);
      }
 catch (      CmsException e) {
        if (!LOG.isDebugEnabled()) {
          LOG.warn(e.getLocalizedMessage());
        }
        LOG.debug(e.getLocalizedMessage(),e);
      }
    }
 else {
      CmsSitemapEntry sitemapInfo=OpenCms.getSitemapManager().getRuntimeInfo(req);
      if (sitemapInfo != null) {
        CmsUUID id=sitemapInfo.getContentId();
        if (id != null) {
          currentUri=cms.getSitePath(cms.readResource(id));
          isDetailPage=true;
        }
        sitemap=OpenCms.getSitemapManager().getSitemapForUri(cms,sitemapInfo.getSitePath(cms),false);
      }
    }
    String sitemapUri=(sitemap == null) ? "" : linkMan.substituteLink(cms,sitemap.getFile());
    resolver.addMacro(Macro.sitemapUri.name(),sitemapUri);
    String containerPageUri=cms.getSitePath(containerPage);
    resolver.addMacro(Macro.currentUri.name(),currentUri);
    resolver.addMacro(Macro.currentContainerPage.name(),containerPageUri);
    String noEditReason=null;
    Locale workplaceLocale=OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);
    if (isDetailPage) {
      noEditReason=Messages.get().getBundle(workplaceLocale).key(Messages.GUI_NO_EDIT_REASON_DETAIL_PAGE_0);
    }
 else {
      noEditReason=new CmsResourceUtil(cms,containerPage).getNoEditReason(workplaceLocale);
    }
    resolver.addMacro(Macro.noEditReason.name(),CmsStringUtil.escapeJavaScript(noEditReason));
    JSONObject params=CmsRequestUtil.getJsonParameterMap(CmsCollectionsGenericWrapper.<String,String[]>map(req.getParameterMap()));
    resolver.addMacro(Macro.requestParams.name(),params.toString());
  }
 catch (  Exception e) {
    if (!LOG.isDebugEnabled()) {
      LOG.warn(e.getLocalizedMessage());
    }
    LOG.debug(e.getLocalizedMessage(),e);
  }
  resolver.addMacro(Macro.currentLocale.name(),cms.getRequestContext().getLocale().toString());
  try {
    resolver.addMacro(Macro.typeContainerPage.name(),"" + OpenCms.getResourceManager().getResourceType(CmsResourceTypeXmlContainerPage.getStaticTypeName()).getTypeId());
  }
 catch (  CmsLoaderException e) {
    LOG.error(e.getLocalizedMessage(),e);
  }
  headerInclude=resolver.resolveMacros(headerInclude);
  return headerInclude;
}
