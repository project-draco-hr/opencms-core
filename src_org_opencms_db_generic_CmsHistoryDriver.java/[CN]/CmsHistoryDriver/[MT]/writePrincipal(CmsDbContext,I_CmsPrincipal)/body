{
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    readPrincipal(dbc,principal.getId());
    return;
  }
 catch (  CmsDbEntryNotFoundException e) {
  }
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_HISTORY_PRINCIPAL_CREATE");
    stmt.setString(1,principal.getId().toString());
    stmt.setString(2,principal.getSimpleName());
    String desc=principal.getDescription();
    desc=CmsStringUtil.isEmptyOrWhitespaceOnly(desc) ? "-" : desc;
    stmt.setString(3,desc);
    stmt.setString(4,CmsOrganizationalUnit.SEPARATOR + principal.getOuFqn());
    if (principal instanceof CmsUser) {
      String email=((CmsUser)principal).getEmail();
      email=CmsStringUtil.isEmptyOrWhitespaceOnly(email) ? "-" : email;
      stmt.setString(5,email);
      stmt.setString(6,I_CmsPrincipal.PRINCIPAL_USER);
    }
 else {
      stmt.setString(5,"-");
      stmt.setString(6,I_CmsPrincipal.PRINCIPAL_GROUP);
    }
    stmt.setString(7,dbc.currentUser().getId().toString());
    stmt.setLong(8,System.currentTimeMillis());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
