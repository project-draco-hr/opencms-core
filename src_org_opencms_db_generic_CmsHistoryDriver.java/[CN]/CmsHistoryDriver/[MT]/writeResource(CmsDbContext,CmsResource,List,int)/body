{
  Map versions=m_driverManager.getVfsDriver().readVersions(dbc,resource.getState().isDeleted() ? dbc.currentProject().getUuid() : CmsProject.ONLINE_PROJECT_ID,resource.getStructureId());
  int structureVersion=((Integer)versions.get("structure")).intValue();
  int resourceVersion=((Integer)versions.get("resource")).intValue();
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    int sibCount=m_driverManager.getVfsDriver().countSiblings(dbc,dbc.currentProject().getUuid(),resource.getResourceId());
    if (!internalValidateResource(dbc,resource,publishTag)) {
      stmt=m_sqlManager.getPreparedStatement(conn,"C_RESOURCES_HISTORY_WRITE");
      stmt.setString(1,resource.getResourceId().toString());
      stmt.setInt(2,resource.getTypeId());
      stmt.setInt(3,resource.getFlags());
      stmt.setLong(4,resource.getDateCreated());
      stmt.setString(5,resource.getUserCreated().toString());
      stmt.setLong(6,resource.getDateLastModified());
      stmt.setString(7,resource.getUserLastModified().toString());
      stmt.setInt(8,resource.getState().getState());
      stmt.setInt(9,resource.getLength());
      stmt.setLong(10,resource.getDateContent());
      stmt.setString(11,dbc.currentProject().getUuid().toString());
      stmt.setInt(12,resource.getSiblingCount());
      stmt.setInt(13,resourceVersion);
      stmt.setInt(14,publishTag);
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
      if (resource instanceof CmsFile) {
        if (resource.getState().isDeleted()) {
          CmsResource onlineResource;
          try {
            onlineResource=m_driverManager.getVfsDriver().readResource(dbc,CmsProject.ONLINE_PROJECT_ID,resource.getStructureId(),true);
          }
 catch (          CmsDataAccessException e) {
            if (LOG.isErrorEnabled()) {
              LOG.error(e.getLocalizedMessage(),e);
            }
            throw e;
          }
          m_driverManager.getVfsDriver().createOnlineContent(dbc,resource.getResourceId(),((CmsFile)resource).getContents(),publishTag,(sibCount > 1),(onlineResource.getDateContent() < resource.getDateContent()));
        }
      }
    }
 else {
      if (resource instanceof CmsFile) {
        if (resource.getState().isDeleted()) {
          if (sibCount < 2) {
            m_driverManager.getVfsDriver().createOnlineContent(dbc,resource.getResourceId(),((CmsFile)resource).getContents(),publishTag,false,false);
          }
        }
      }
    }
    CmsUUID parentId=CmsUUID.getNullUUID();
    CmsFolder parent=m_driverManager.getVfsDriver().readParentFolder(dbc,CmsProject.ONLINE_PROJECT_ID,resource.getStructureId());
    if (parent != null) {
      parentId=parent.getStructureId();
    }
    stmt=m_sqlManager.getPreparedStatement(conn,"C_STRUCTURE_HISTORY_WRITE");
    stmt.setString(1,resource.getStructureId().toString());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.setString(3,resource.getRootPath());
    stmt.setInt(4,resource.getState().getState());
    stmt.setLong(5,resource.getDateReleased());
    stmt.setLong(6,resource.getDateExpired());
    stmt.setInt(7,structureVersion);
    stmt.setString(8,parentId.toString());
    stmt.setInt(9,publishTag);
    stmt.setInt(10,resource.getVersion());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
  writeProperties(dbc,resource,properties,publishTag);
}
