{
  Connection conn=null;
  PreparedStatement stmt=null;
  ResultSet res=null;
  CmsHistoryPrincipal historyPrincipal=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_HISTORY_PRINCIPAL_READ");
    stmt.setString(1,principalId.toString());
    res=stmt.executeQuery();
    if (res.next()) {
      String userName=res.getString(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_NAME"));
      String ou=CmsOrganizationalUnit.removeLeadingSeparator(res.getString(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_OU")));
      historyPrincipal=new CmsHistoryPrincipal(principalId,ou + userName,res.getString(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_DESCRIPTION")),res.getString(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_EMAIL")),res.getString(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_TYPE")),new CmsUUID(res.getString(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_USERDELETED"))),res.getLong(m_sqlManager.readQuery("C_PRINCIPALS_HISTORY_DATEDELETED")));
      while (res.next()) {
      }
    }
 else {
      throw new CmsDbEntryNotFoundException(Messages.get().container(Messages.ERR_HISTORY_PRINCIPAL_NOT_FOUND_1,principalId));
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,res);
  }
  return historyPrincipal;
}
