{
  Hashtable h_fMeta=new Hashtable();
  byte[] fContent=new byte[1];
  int nll=m_resourceElements.getLength();
  int i;
  for (i=0; i < nll; i++) {
    String help=m_resourceElements.item(i).getNodeName();
    if (help.equals(C_TFNAME)) {
      m_fName=m_resourceElements.item(i).getFirstChild().getNodeValue();
    }
    if (help.equals(C_TFTYPENAME)) {
      m_fTypename=m_resourceElements.item(i).getFirstChild().getNodeValue();
    }
    if (help.equals(C_TFUSER)) {
      m_fUser=m_resourceElements.item(i).getFirstChild().getNodeValue();
    }
    if (help.equals(C_TFGROUP)) {
      m_fGroup=m_resourceElements.item(i).getFirstChild().getNodeValue();
    }
    if (help.equals(C_TFACCESS)) {
      m_fAccess=m_resourceElements.item(i).getFirstChild().getNodeValue();
    }
    if ((help.equals(C_TFMETAINFO)) && (m_resourceElements.item(i).hasChildNodes())) {
      h_fMeta=writeMetaDef(m_resourceElements.item(i).getChildNodes(),m_fTypename);
    }
    if ((help.equals(C_FCONTENT)) && (!(m_fTypename.equals(C_TYPE_FOLDER_NAME))) && (m_resourceElements.item(i).hasChildNodes())) {
      m_fContent=m_resourceElements.item(i).getFirstChild().getNodeValue();
      fContent=readContent(m_fContent);
    }
  }
  if (m_fTypename.equals(C_TYPE_FOLDER_NAME)) {
    if ((!(m_fName.equals("/")))) {
      m_fName=m_fName.substring(1,(m_fName.length() - 1));
    }
 else {
      m_fName=m_fName.substring(0,(m_fName.length() - 1));
    }
  }
  if (m_fTypename.equals(C_TYPE_FOLDER_NAME)) {
    try {
      if (!(m_fName.equals(""))) {
        System.out.print("Importing: " + m_fName);
        System.out.flush();
        CmsFolder newFolder=m_RB.createFolder(m_user,m_project,m_importPath,m_fName,h_fMeta);
        m_RB.lockResource(m_user,m_project,newFolder.getAbsolutePath(),true);
        m_RB.chown(m_user,m_project,newFolder.getAbsolutePath(),m_fUser);
        m_RB.chgrp(m_user,m_project,newFolder.getAbsolutePath(),m_fGroup);
        m_RB.chmod(m_user,m_project,newFolder.getAbsolutePath(),Integer.parseInt(m_fAccess));
        m_RB.unlockResource(m_user,m_project,newFolder.getAbsolutePath());
        System.err.println("Folder access is " + m_fAccess);
        System.out.println(" ok");
      }
    }
 catch (    CmsException e) {
      System.out.println(" error: " + e.getMessage());
      m_errMsg.addElement(e.getMessage());
    }
  }
 else {
    String picimportPath=null;
    if (m_importPath.equals("/")) {
      picimportPath=m_fName.substring(0,m_fName.lastIndexOf("/") + 1);
    }
 else {
      picimportPath=m_importPath + m_fName.substring(1,m_fName.lastIndexOf("/") + 1);
    }
    m_fName=m_fName.substring((m_fName.lastIndexOf("/") + 1),m_fName.length());
    try {
      System.out.print("Importing: " + m_fName);
      System.out.flush();
      CmsFile newFile=m_RB.createFile(m_user,m_project,picimportPath,m_fName,fContent,m_fTypename,h_fMeta);
      m_RB.lockResource(m_user,m_project,newFile.getAbsolutePath(),true);
      m_RB.chown(m_user,m_project,newFile.getAbsolutePath(),m_fUser);
      m_RB.chgrp(m_user,m_project,newFile.getAbsolutePath(),m_fGroup);
      m_RB.chmod(m_user,m_project,newFile.getAbsolutePath(),Integer.parseInt(m_fAccess));
      m_RB.unlockResource(m_user,m_project,newFile.getAbsolutePath());
      System.err.println("File access is " + m_fAccess);
      System.out.println(" ok");
    }
 catch (    CmsException e) {
      System.out.println(" error: " + e.getMessage());
      m_errMsg.addElement(e.getMessage());
    }
  }
}
