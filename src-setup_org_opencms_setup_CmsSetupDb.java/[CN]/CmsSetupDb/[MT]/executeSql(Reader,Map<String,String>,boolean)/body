{
  String statement="";
  LineNumberReader reader=null;
  String line=null;
  try {
    reader=new LineNumberReader(inputReader);
    while (true) {
      line=reader.readLine();
      if (line == null) {
        break;
      }
      StringTokenizer st=new StringTokenizer(line);
      while (st.hasMoreTokens()) {
        String currentToken=st.nextToken();
        if (currentToken.startsWith("#")) {
          break;
        }
        if (currentToken.startsWith("prompt")) {
          break;
        }
        statement+=" " + currentToken;
        if (currentToken.endsWith(";")) {
          statement=statement.substring(0,(statement.length() - 1));
          try {
            if (replacers != null) {
              statement=replaceTokens(statement,replacers);
              executeStatement(statement);
            }
 else {
              executeStatement(statement);
            }
          }
 catch (          SQLException e) {
            if (!abortOnError) {
              if (m_errorLogging) {
                m_errors.add("Error executing SQL statement: " + statement);
                m_errors.add(CmsException.getStackTraceAsString(e));
              }
            }
 else {
              throw e;
            }
          }
          statement="";
        }
      }
      statement+=" \n";
    }
  }
 catch (  SQLException e) {
    if (m_errorLogging) {
      m_errors.add("Error executing SQL statement: " + statement);
      m_errors.add(CmsException.getStackTraceAsString(e));
    }
  }
catch (  Exception e) {
    if (m_errorLogging) {
      m_errors.add("Error parsing database setup SQL script in line: " + line);
      m_errors.add(CmsException.getStackTraceAsString(e));
    }
  }
 finally {
    try {
      if (reader != null) {
        reader.close();
      }
    }
 catch (    Exception e) {
    }
  }
}
