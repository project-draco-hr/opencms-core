{
  StringBuffer result=new StringBuffer(8);
  Iterator i=contentDefinition.getTypeSequence().iterator();
  while (i.hasNext()) {
    I_CmsXmlSchemaType type=(I_CmsXmlSchemaType)i.next();
    String name=pathPrefix + type.getElementName();
    int count=document.getIndexCount(name,locale);
    for (int j=0; j < count; j++) {
      I_CmsXmlContentValue value=document.getValue(name,locale,j);
      if (!type.isSimpleType()) {
        CmsXmlNestedContentDefinition nestedSchema=(CmsXmlNestedContentDefinition)type;
        StringBuffer xPath=new StringBuffer(pathPrefix.length() + 16);
        xPath.append(pathPrefix);
        xPath.append(CmsXmlUtils.createXpathElement(type.getElementName(),value.getIndex() + 1));
        xPath.append("/");
        result.append(getDialogInitMethod(nestedSchema.getNestedContentDefinition(),cms,document,locale,xPath.toString()));
      }
 else {
        I_CmsXmlWidget widget=contentDefinition.getContentHandler().getWidget(value);
        if (this.equals(widget)) {
          try {
            String id=getParameterName(value);
            String currValue=value.getStringValue(cms);
            currValue=CmsStringUtil.escapeJavaScript(currValue.trim());
            result.append("\tdocument.forms[\"EDITOR\"].elements[\"");
            result.append(id);
            result.append("\"].value = \"");
            result.append(currValue);
            result.append("\";\n");
          }
 catch (          CmsXmlException e) {
            if (OpenCms.getLog(this).isErrorEnabled()) {
              OpenCms.getLog(this).error("Error accessing XML content node '" + name + "'",e);
            }
          }
        }
      }
    }
  }
  return result.toString();
}
