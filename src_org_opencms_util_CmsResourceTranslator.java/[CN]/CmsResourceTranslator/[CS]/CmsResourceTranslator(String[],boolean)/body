{
  super();
  m_translations=translations;
  m_continueMatching=continueMatching;
  m_perlPatternCache=new PatternCacheFIFO(m_translations.length + 1);
  for (int i=0; i < m_translations.length; i++) {
    try {
      m_perlPatternCache.addPattern(m_translations[i]);
    }
 catch (    MalformedPatternException e) {
      LOG.error(Messages.get().getBundle().key(Messages.LOG_MALFORMED_TRANSLATION_RULE_1,m_translations[i]),e);
    }
  }
  m_perlUtil=new Perl5Util(m_perlPatternCache);
  if (LOG.isInfoEnabled()) {
    LOG.info(Messages.get().getBundle().key(Messages.LOG_NUM_TRANSLATION_RULES_INITIALIZED_1,new Integer(translations.length)));
  }
}
