{
  if (resourceName == null)   return null;
  if (DEBUG > 1)   System.out.println("[" + this.getClass().getName() + "] Resource Translation: Checking: "+ resourceName);
  StringBuffer result;
  for (int i=0; i < m_translations.length; i++) {
    result=new StringBuffer();
    try {
      if (m_perlUtil.substitute(result,m_translations[i],resourceName) != 0) {
        if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_DEBUG)) {
          OpenCms.log(I_CmsLogChannels.C_OPENCMS_DEBUG,"[" + this.getClass().getName() + "] Resource translation: "+ resourceName+ " --> "+ result);
        }
        if (DEBUG > 0) {
          System.out.println("Translation: " + resourceName + "\n        ---> "+ result+ "\n");
        }
        if (m_continueMatching) {
          resourceName=result.toString();
        }
 else {
          return result.toString();
        }
      }
    }
 catch (    MalformedPerl5PatternException e) {
      if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
        OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[" + this.getClass().getName() + "] Malformed resource translation rule:\""+ m_translations[i]+ "\"");
      }
    }
  }
  return resourceName;
}
