{
  String resourcename=resource.getRootPath();
  CmsLock lock=getLock(driverManager,dbc,resource);
  CmsResource sibling=null;
  if (lock.isNullLock()) {
    return null;
  }
  if (!forceUnlock && (!lock.getUserId().equals(dbc.currentUser().getId()) || lock.getProjectId() != dbc.currentProject().getId())) {
    throw new CmsLockException(Messages.get().container(Messages.ERR_RESOURCE_UNLOCK_1,dbc.removeSiteRoot(resourcename)));
  }
  if (!forceUnlock && (lock.getType() == CmsLock.C_TYPE_INHERITED || lock.getType() == CmsLock.C_TYPE_SHARED_INHERITED || (getParentFolderLock(resourcename) != null))) {
    throw new CmsLockException(Messages.get().container(Messages.ERR_UNLOCK_LOCK_INHERITED_1,dbc.removeSiteRoot(resourcename)));
  }
  if (lock.getType() == CmsLock.C_TYPE_EXCLUSIVE) {
    if (resource.isFolder()) {
      Iterator i=m_exclusiveLocks.keySet().iterator();
      String lockedPath=null;
      while (i.hasNext()) {
        lockedPath=(String)i.next();
        if (lockedPath.startsWith(resourcename) && !lockedPath.equals(resourcename)) {
          i.remove();
        }
      }
    }
    return (CmsLock)m_exclusiveLocks.remove(resourcename);
  }
  if (lock.getType() == CmsLock.C_TYPE_SHARED_EXCLUSIVE) {
    List siblings=internalReadSiblings(driverManager,dbc,resource);
    for (int i=0; i < siblings.size(); i++) {
      sibling=(CmsResource)siblings.get(i);
      if (m_exclusiveLocks.containsKey(sibling.getRootPath())) {
        m_exclusiveLocks.remove(sibling.getRootPath());
        break;
      }
    }
    return lock;
  }
  return lock;
}
