{
  if (isSuspended() && (m_bufferRedirect == null)) {
    return null;
  }
  if (m_cachingRequired) {
    m_cachedEntry=new CmsFlexCacheEntry();
    if (m_bufferRedirect != null) {
      m_cachedEntry.setRedirect(m_bufferRedirect);
    }
 else {
      m_cachedEntry.addHeaders(m_bufferHeaders);
      if (m_includeList != null) {
        processIncludeList();
      }
 else {
        m_cachedEntry.add(getWriterBytes());
      }
    }
    m_cachedEntry.complete();
  }
  if (m_writeOnlyToBuffer) {
    m_cachingRequired=false;
    if (m_bufferRedirect != null) {
      sendRedirect(m_bufferRedirect);
    }
 else {
      if (m_parentWritesOnlyToBuffer) {
        if (m_out != null) {
          try {
            m_out.clear();
          }
 catch (          Exception e) {
            if (LOG.isDebugEnabled()) {
              LOG.debug(Messages.get().key(Messages.LOG_FLEXRESPONSE_ERROR_FLUSHING_OUTPUT_STREAM_1,e));
            }
          }
        }
 else {
          if (LOG.isDebugEnabled()) {
            LOG.debug(Messages.get().key(Messages.LOG_FLEXRESPONSE_ERROR_OUTPUT_STREAM_NULL_0));
          }
        }
        writeCachedResultToStream(this);
      }
 else {
        processHeaders(m_headers,m_res);
        writeCachedResultToStream(m_res);
      }
    }
  }
  return m_cachedEntry;
}
