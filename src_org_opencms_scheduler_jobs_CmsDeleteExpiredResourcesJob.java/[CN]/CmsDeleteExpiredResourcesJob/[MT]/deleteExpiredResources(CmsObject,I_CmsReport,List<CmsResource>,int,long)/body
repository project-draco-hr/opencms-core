{
  int result=0;
  CmsResource resource;
  CmsLock lock;
  CmsProperty property;
  String propertyValue;
  long expirationdate;
  int expirationDaysPropertyOverride;
  Iterator<CmsResource> it=resources.iterator();
  String resourcePath;
  while (it.hasNext()) {
    resource=it.next();
    resourcePath=cms.getRequestContext().removeSiteRoot(resource.getRootPath());
    report.print(Messages.get().container(Messages.RPT_DELETE_EXPIRED_PROCESSING_1,new String[]{resourcePath}),I_CmsReport.FORMAT_DEFAULT);
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
    if (resource.getState() == CmsResourceState.STATE_UNCHANGED) {
      expirationdate=resource.getDateExpired();
      expirationDaysPropertyOverride=expirationdays;
      try {
        property=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_DELETE_EXPIRED,true);
        propertyValue=property.getValue();
        if (!property.isNullProperty()) {
          if (PROPERTY_VALUE_DELETE_EXPIRED_NEVER.equals(propertyValue) || PROPERTY_VALUE_DELETE_EXPIRED_NONE.equals(propertyValue) || Boolean.FALSE.toString().equals(propertyValue)) {
            report.println(Messages.get().container(Messages.RPT_DELETE_EXPIRED_PROPERTY_NEVER_0),I_CmsReport.FORMAT_NOTE);
            continue;
          }
 else {
            if (!Boolean.TRUE.toString().equals(propertyValue)) {
              expirationDaysPropertyOverride=Integer.parseInt(propertyValue);
            }
          }
        }
        if ((expirationdate != Long.MAX_VALUE) && ((currenttime - expirationdate) > (expirationDaysPropertyOverride * MILLIS_PER_DAY))) {
          lock=cms.getLock(resource);
          if (lock.isNullLock()) {
            cms.lockResource(resourcePath);
          }
 else {
            if (!lock.getUserId().equals(cms.getRequestContext().getCurrentUser().getId())) {
              report.println(Messages.get().container(Messages.RPT_DELETE_EXPIRED_LOCKED_0),I_CmsReport.FORMAT_WARNING);
              continue;
            }
          }
          cms.deleteResource(resourcePath,CmsResource.DELETE_PRESERVE_SIBLINGS);
          result++;
          report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
        }
 else {
          report.println(Messages.get().container(Messages.RPT_DELETE_EXPIRED_NOT_EXPIRED_1,new Integer[]{new Integer(expirationDaysPropertyOverride)}));
        }
      }
 catch (      Exception e) {
        report.println(Messages.get().container(Messages.RPT_DELETE_EXPIRED_FAILED_1,new String[]{CmsException.getStackTraceAsString(e)}),I_CmsReport.FORMAT_ERROR);
      }
    }
 else {
      report.println(Messages.get().container(Messages.RPT_DELETE_EXPIRED_UNPUBLISHED_0));
    }
  }
  return result;
}
