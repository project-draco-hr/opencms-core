{
  TypeOracle oracle=context.getTypeOracle();
  JClassType initClass=oracle.findType(MARKER_INTERFACE_NAME);
  List<JClassType> initTypes=new ArrayList<JClassType>();
  for (  JClassType subtype : initClass.getSubtypes()) {
    try {
      JMethod method=subtype.getMethod("initClass",new JType[]{});
      if (!method.isStatic()) {
        throw new NotFoundException();
      }
      initTypes.add(subtype);
    }
 catch (    NotFoundException e) {
      logger.log(TreeLogger.ERROR,"Could not find initClass() method in class " + subtype.getQualifiedSourceName());
      throw new UnableToCompleteException();
    }
  }
  generateClass(logger,context,initTypes);
  return PACKAGE_NAME + "." + CLASS_NAME;
}
