{
  List options=new ArrayList();
  List values=new ArrayList();
  int selectedValue=-1;
  String currentTemplate=null;
  TreeMap templates=null;
  try {
    currentTemplate=getCms().readPropertyObject(getParamResource(),CmsPropertyDefinition.PROPERTY_TEMPLATE,true).getValue();
    templates=CmsNewResourceXmlPage.getTemplates(getCms(),getParamResource());
  }
 catch (  CmsException e) {
    if (LOG.isInfoEnabled()) {
      LOG.info(Messages.get().getBundle().key(Messages.LOG_READ_TEMPLATE_FAILED_0),e);
    }
  }
  if (currentTemplate == null) {
    currentTemplate="";
  }
  if (templates == null) {
    addCurrentTemplate(currentTemplate,options,values);
  }
 else {
    boolean found=false;
    Iterator i=templates.entrySet().iterator();
    int counter=0;
    while (i.hasNext()) {
      Map.Entry entry=(Map.Entry)i.next();
      String key=(String)entry.getKey();
      String path=(String)entry.getValue();
      if (currentTemplate.equals(path)) {
        selectedValue=counter;
        found=true;
      }
      options.add(key);
      values.add(path);
      counter++;
    }
    if (!found) {
      addCurrentTemplate(currentTemplate,options,values);
      selectedValue=0;
    }
  }
  String hiddenField="<input type=\"hidden\" name=\"" + PREFIX_HIDDEN + CmsPropertyDefinition.PROPERTY_TEMPLATE+ "\" value=\""+ currentTemplate+ "\">";
  return buildSelect(attributes,options,values,selectedValue,false) + hiddenField;
}
