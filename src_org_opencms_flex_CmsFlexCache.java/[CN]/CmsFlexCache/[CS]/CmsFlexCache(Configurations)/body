{
  m_enabled=conf.getBoolean("flex.cache.enabled",true);
  m_cacheOffline=conf.getBoolean("flex.cache.offline",true);
  boolean forceGC=conf.getBoolean("flex.cache.forceGC",false);
  int maxCacheBytes=conf.getInteger("flex.cache.maxCacheBytes",2000000);
  int avgCacheBytes=conf.getInteger("flex.cache.avgCacheBytes",1500000);
  int maxEntryBytes=conf.getInteger("flex.cache.maxEntryBytes",400000);
  int maxVariations=conf.getInteger("flex.cache.maxEntries",4000);
  int maxKeys=conf.getInteger("flex.cache.maxKeys",4000);
  this.m_entryLruCache=new CmsLruCache(maxCacheBytes,avgCacheBytes,maxEntryBytes,forceGC);
  this.m_variationCache=new CmsLruCache(maxVariations,(int)(maxVariations * 0.75),-1,false);
  if (m_enabled) {
    this.m_resourceMap=java.util.Collections.synchronizedMap(new CmsLruHashMap(CmsFlexCache.C_INITIAL_CAPACITY_CACHE,maxKeys));
    OpenCms.addCmsEventListener(this,new int[]{I_CmsEventListener.EVENT_PUBLISH_PROJECT,I_CmsEventListener.EVENT_PUBLISH_BO_RESOURCE,I_CmsEventListener.EVENT_CLEAR_CACHES,I_CmsEventListener.EVENT_FLEX_PURGE_JSP_REPOSITORY,I_CmsEventListener.EVENT_FLEX_CACHE_CLEAR});
  }
  OpenCms.setRuntimeProperty(I_CmsResourceLoader.C_LOADER_CACHENAME,this);
  if (DEBUG > 0)   System.err.println("FlexCache: Initializing with parameters enabled=" + m_enabled + " cacheOffline="+ m_cacheOffline);
}
