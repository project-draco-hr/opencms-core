{
  if (!isEnabled())   return;
switch (event.getType()) {
case I_CmsEventListener.EVENT_PUBLISH_PROJECT:
case I_CmsEventListener.EVENT_CLEAR_CACHES:
    if (DEBUG > 0)     System.err.println("FlexCache: Recieved event, clearing cache!");
  clear();
break;
case I_CmsEventListener.EVENT_FLEX_PURGE_JSP_REPOSITORY:
if (DEBUG > 0) System.err.println("FlexCache: Recieved event, purging JSP repository!");
purgeJspRepository(event.getCmsObject());
break;
case I_CmsEventListener.EVENT_FLEX_CACHE_CLEAR:
if (DEBUG > 0) System.err.println("FlexCache: Recieved event, clearing part of cache!");
java.util.Map m=event.getData();
if (m == null) break;
Integer it=null;
try {
it=(Integer)m.get("action");
}
 catch (Exception e) {
}
if (it == null) break;
int i=it.intValue();
switch (i) {
case C_CLEAR_ALL:
clear(event.getCmsObject());
break;
case C_CLEAR_ENTRIES:
clearEntries(event.getCmsObject());
break;
case C_CLEAR_ONLINE_ALL:
clearOnline(event.getCmsObject());
break;
case C_CLEAR_ONLINE_ENTRIES:
clearOnlineEntries(event.getCmsObject());
break;
case C_CLEAR_OFFLINE_ALL:
clearOffline(event.getCmsObject());
break;
case C_CLEAR_OFFLINE_ENTRIES:
clearOfflineEntries(event.getCmsObject());
break;
case C_CLEAR_WORKPLACE_ALL:
clearWorkplace(event.getCmsObject());
break;
default :
}
default :
}
}
