{
  List ret=new ArrayList();
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROCESS_PROJECT_VIEW_START_1,new Integer(resources.size())));
  }
  CmsResourceUtil resUtil=getResourceUtil();
  applyColumnVisibilities();
  Iterator itRes=resources.iterator();
  while (itRes.hasNext()) {
    CmsResource resource=(CmsResource)itRes.next();
    if (!resource.getRootPath().startsWith(getJsp().getRequestContext().getSiteRoot()) && !resource.getRootPath().startsWith(CmsWorkplace.VFS_PATH_SYSTEM)) {
      continue;
    }
    resUtil.setResource(resource);
    CmsListItem item=getList().newItem(resource.getResourceId().toString());
    item.set(LIST_COLUMN_NAME,getCms().getSitePath(resource));
    item.set(LIST_COLUMN_TITLE,resUtil.getTitle());
    item.set(LIST_COLUMN_TYPE,resUtil.getResourceTypeName());
    item.set(LIST_COLUMN_SIZE,resUtil.getSizeString());
    item.set(LIST_COLUMN_PERMISSIONS,resUtil.getPermissions());
    item.set(LIST_COLUMN_DATELASTMOD,new Date(resource.getDateLastModified()));
    item.set(LIST_COLUMN_USERLASTMOD,resUtil.getUserLastModified());
    item.set(LIST_COLUMN_DATECREATE,new Date(resource.getDateCreated()));
    item.set(LIST_COLUMN_USERCREATE,resUtil.getUserCreated());
    item.set(LIST_COLUMN_DATEREL,new Date(resource.getDateReleased()));
    item.set(LIST_COLUMN_DATEEXP,new Date(resource.getDateExpired()));
    item.set(LIST_COLUMN_STATE,resUtil.getStateName());
    item.set(LIST_COLUMN_LOCKEDBY,resUtil.getLockedByName());
    ret.add(item);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROCESS_PROJECT_VIEW_END_1,new Integer(ret.size())));
  }
  return ret;
}
