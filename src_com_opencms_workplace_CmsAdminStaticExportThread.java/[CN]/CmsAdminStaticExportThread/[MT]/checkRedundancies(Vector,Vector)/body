{
  int i, j;
  if (folderNames == null) {
    return;
  }
  Vector redundant=new Vector();
  int n=folderNames.size();
  if (n > 1) {
    for (i=0; i < n; i++) {
      redundant.addElement(new Boolean(false));
    }
    for (i=0; i < n - 1; i++) {
      for (j=i + 1; j < n; j++) {
        if (((String)folderNames.elementAt(i)).length() < ((String)folderNames.elementAt(j)).length()) {
          if (((String)folderNames.elementAt(j)).startsWith((String)folderNames.elementAt(i))) {
            redundant.setElementAt(new Boolean(true),j);
          }
        }
 else {
          if (((String)folderNames.elementAt(i)).startsWith((String)folderNames.elementAt(j))) {
            redundant.setElementAt(new Boolean(true),i);
          }
        }
      }
    }
    for (i=n - 1; i >= 0; i--) {
      if (((Boolean)redundant.elementAt(i)).booleanValue()) {
        folderNames.removeElementAt(i);
      }
    }
  }
  for (i=fileNames.size() - 1; i >= 0; i--) {
    for (j=0; j < folderNames.size(); j++) {
      if (((String)fileNames.elementAt(i)).startsWith((String)folderNames.elementAt(j))) {
        fileNames.removeElementAt(i);
      }
    }
  }
}
