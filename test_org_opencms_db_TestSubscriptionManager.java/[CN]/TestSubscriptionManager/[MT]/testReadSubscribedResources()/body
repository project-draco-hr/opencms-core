{
  CmsObject cms=getCmsObject();
  CmsUser user=cms.getRequestContext().getCurrentUser();
  CmsGroup group=cms.readGroup("Users");
  echo("Testing reading subscribed resources");
  CmsSubscriptionManager subMan=OpenCms.getSubscriptionManager();
  subMan.subscribeResourceFor(cms,user,"/folder2/index.html");
  List<CmsResource> subscribedUserResources=subMan.readAllSubscribedResources(cms,user);
  assertEquals(1,subscribedUserResources.size());
  assertEquals("/folder2/index.html",cms.getSitePath(subscribedUserResources.get(0)));
  subMan.subscribeResourceFor(cms,group,"/folder2/index.html");
  CmsSubscriptionFilter filter=new CmsSubscriptionFilter();
  filter.addGroup(group);
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(1,subscribedUserResources.size());
  filter.setUser(user);
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(1,subscribedUserResources.size());
  subMan.subscribeResourceFor(cms,user,"/folder2/page1.html");
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(2,subscribedUserResources.size());
  subMan.markResourceAsVisitedBy(cms,"/folder2/page1.html",user);
  Thread.sleep(20);
  filter.setMode(CmsSubscriptionReadMode.VISITED);
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(1,subscribedUserResources.size());
  filter.setMode(CmsSubscriptionReadMode.UNVISITED);
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(1,subscribedUserResources.size());
  long beforeChangeTime=System.currentTimeMillis();
  Thread.sleep(20);
  cms.lockResource("/folder2/page1.html");
  CmsFile file=cms.readFile("/folder2/page1.html");
  cms.writeFile(file);
  cms.unlockResource("/folder2/page1.html");
  OpenCms.getPublishManager().publishResource(cms,"/folder2/page1.html");
  OpenCms.getPublishManager().waitWhileRunning();
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(2,subscribedUserResources.size());
  filter.setFromDate(beforeChangeTime);
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(1,subscribedUserResources.size());
  filter.setFromDate(System.currentTimeMillis());
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(0,subscribedUserResources.size());
  filter.setFromDate(beforeChangeTime);
  cms.lockResource("/folder2/page1.html");
  cms.deleteResource("/folder2/page1.html",CmsResource.DELETE_REMOVE_SIBLINGS);
  OpenCms.getPublishManager().publishResource(cms,"/folder2/page1.html");
  OpenCms.getPublishManager().waitWhileRunning();
  subscribedUserResources=subMan.readSubscribedResources(cms,filter);
  assertEquals(0,subscribedUserResources.size());
  List<I_CmsHistoryResource> subscribedDeletedResources=subMan.readSubscribedDeletedResources(cms,user,false,"/folder2/",false,0);
  assertEquals(1,subscribedDeletedResources.size());
  subMan.unsubscribeAllDeletedResources(cms,Long.MAX_VALUE);
  subscribedDeletedResources=subMan.readSubscribedDeletedResources(cms,user,false,null,false,0);
  assertEquals(0,subscribedDeletedResources.size());
}
