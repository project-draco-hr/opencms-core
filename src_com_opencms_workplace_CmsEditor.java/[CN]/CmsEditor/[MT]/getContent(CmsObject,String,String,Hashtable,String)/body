{
  I_CmsSession session=cms.getRequestContext().getSession(true);
  String saveerror="";
  String file=(String)parameters.get(C_PARA_RESOURCE);
  if ((file == null) || ("".equals(file))) {
    file=(String)session.getValue(C_PARA_RESOURCE);
    session.removeValue(C_PARA_RESOURCE);
  }
  if ((file != null) && (!"".equals(file))) {
    session.putValue("te_file",file);
  }
  String content=(String)parameters.get(C_PARA_CONTENT);
  if ((content == null) || ("".equals(content))) {
    content=(String)session.getValue(C_PARA_CONTENT);
    if (content != null) {
      parameters.put(C_PARA_CONTENT,content);
    }
    session.removeValue(C_PARA_CONTENT);
  }
  String action=(String)parameters.get(C_PARA_ACTION);
  String jsfile=(String)parameters.get(C_ROOT_TEMPLATE_NAME + "." + C_PARA_JSFILE);
  if ((jsfile == null) || ("".equals(jsfile))) {
    jsfile=(String)session.getValue(C_PARA_JSFILE);
    session.removeValue(C_PARA_JSFILE);
  }
  String editorframe=(String)parameters.get("root.editorframe");
  if ((editorframe == null) || ("".equals(editorframe))) {
    editorframe=(String)session.getValue("editorframe");
    session.removeValue("editorframe");
  }
  boolean checkit=false;
  boolean existsFileParam=((file != null) && (!"".equals(file)));
  boolean saveRequested=((action != null) && (C_EDIT_ACTION_SAVE.equals(action) || C_EDIT_ACTION_SAVEEXIT.equals(action)));
  boolean exitRequested=((action != null) && (C_EDIT_ACTION_EXIT.equals(action) || C_EDIT_ACTION_SAVEEXIT.equals(action)));
  CmsFile editFile=null;
  CmsLock lock=null;
  if (existsFileParam && (content == null || saveRequested)) {
    editFile=readFile(cms,file);
    lock=cms.getLock(file);
    if (lock.isNullLock()) {
      throw new CmsLockException("Resource is not locked",CmsLockException.C_RESOURCE_UNLOCKED);
    }
    if (lock.getType() == CmsLock.C_TYPE_INHERITED) {
      cms.lockResource(file);
      lock=cms.getLock(file);
    }
    if (lock.getType() != CmsLock.C_TYPE_EXCLUSIVE) {
      throw new CmsLockException("Insufficient lock to edit content of resource",CmsLockException.C_RESOURCE_LOCKED_NON_EXCLUSIVE);
    }
    if (!lock.getUserId().equals(cms.getRequestContext().currentUser().getId())) {
      throw new CmsLockException("Resource locked by another user",CmsLockException.C_RESOURCE_LOCKED_BY_OTHER_USER);
    }
    checkit=true;
    String encoding=cms.getRequestContext().getEncoding();
    encoding=cms.readProperty(file,C_PROPERTY_CONTENT_ENCODING,true,encoding);
    if (content == null) {
      try {
        content=new String(editFile.getContents(),encoding);
      }
 catch (      UnsupportedEncodingException e) {
        content=new String(editFile.getContents());
      }
      content=Encoder.escapeWBlanks(content,Encoder.C_UTF8_ENCODING);
      parameters.put(C_PARA_CONTENT,content);
    }
    if (saveRequested) {
      try {
        String decodedContent=Encoder.unescape(content,Encoder.C_UTF8_ENCODING);
        try {
          editFile.setContents(decodedContent.getBytes(encoding));
        }
 catch (        UnsupportedEncodingException e) {
          editFile.setContents(decodedContent.getBytes());
        }
        cms.writeFile(editFile);
      }
 catch (      CmsException e) {
        saveerror=e.getShortException();
      }
    }
  }
  if (exitRequested && ((saveerror == null) || ("".equals(saveerror)))) {
    try {
      cms.getRequestContext().getResponse().sendCmsRedirect(CmsWorkplaceAction.getWorkplaceUri(cms));
    }
 catch (    IOException e) {
      throwException("Could not send redirect to workplace main screen.",e);
    }
    return null;
  }
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  String sectionName=getBrowserSpecificSection(cms,xmlTemplateDocument,parameters);
  xmlTemplateDocument.setData(C_PARA_RESOURCE,file);
  xmlTemplateDocument.setData(C_PARA_JSFILE,jsfile);
  xmlTemplateDocument.setData("editorframe",editorframe);
  xmlTemplateDocument.setData("OpenCmsContext",OpenCms.getOpenCmsContext());
  if (checkit == true) {
    xmlTemplateDocument.setData("fileName",editFile.getName());
    String parent=CmsResource.getParentFolder(cms.readAbsolutePath(editFile));
    xmlTemplateDocument.setData("pathName",parent);
  }
  String lasturlname=null;
  if (!"".equals(saveerror)) {
    if (file != null) {
      session.putValue(C_PARA_RESOURCE,file);
    }
    if (content != null) {
      session.putValue(C_PARA_CONTENT,content);
    }
    if (jsfile != null) {
      session.putValue(C_PARA_JSFILE,jsfile);
    }
    if (editorframe != null) {
      session.putValue("editorframe",editorframe);
    }
    sectionName="errorsave";
    xmlTemplateDocument.setData("errordetail",saveerror);
    lasturlname=(String)parameters.get("editor._TEMPLATE_");
    if (lasturlname != null) {
      lasturlname=lasturlname.substring(lasturlname.lastIndexOf("/") + 1,lasturlname.length());
    }
    xmlTemplateDocument.setData("errorlasturl",lasturlname + ".html");
  }
  String userLanguage=CmsXmlLanguageFile.getCurrentUserLanguage(cms);
  xmlTemplateDocument.setData("LOCALE","" + userLanguage);
  try {
    cms.readFolder(C_VFS_PATH_HELP + userLanguage);
    xmlTemplateDocument.setData("HELP",xmlTemplateDocument.getProcessedDataValue("HELP_ENABLED",this));
  }
 catch (  CmsException e) {
    try {
      xmlTemplateDocument.setData("HELP",xmlTemplateDocument.getProcessedDataValue("HELP_DISABLED",this));
    }
 catch (    Exception ex) {
    }
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,sectionName);
}
