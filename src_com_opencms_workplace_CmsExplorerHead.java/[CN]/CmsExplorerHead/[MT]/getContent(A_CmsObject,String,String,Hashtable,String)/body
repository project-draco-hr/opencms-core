{
  String viewfile=null;
  String previous;
  String currentFilelist=null;
  ;
  String previousFilelist=null;
  String newFilelist=null;
  String template="template";
  Hashtable preferences=new Hashtable();
  HttpSession session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  viewfile=(String)parameters.get(C_PARA_VIEWFILE);
  if (viewfile != null) {
    template="viewfile";
  }
  previous=(String)parameters.get(C_PARA_PREVIOUSLIST);
  if (previous != null) {
    session.putValue(C_PARA_PREVIOUSLIST,previous);
  }
  previousFilelist=(String)session.getValue(C_PARA_PREVIOUSLIST);
  currentFilelist=(String)session.getValue(C_PARA_FILELIST);
  if (currentFilelist == null) {
    currentFilelist=cms.getRequestContext().currentFolder().getAbsolutePath();
  }
  if (!currentFilelist.equals("/")) {
    newFilelist=currentFilelist.substring(0,currentFilelist.length() - 1);
    int end=newFilelist.lastIndexOf("/");
    if (end > -1) {
      newFilelist=newFilelist.substring(0,end + 1);
      session.putValue(C_PARA_FILELIST,newFilelist);
    }
  }
 else {
    newFilelist=currentFilelist;
  }
  xmlTemplateDocument.setXmlData(C_FILELIST,newFilelist);
  xmlTemplateDocument.setXmlData(C_PREVIOUSLIST,previousFilelist);
  session.putValue(C_PARA_PREVIOUSLIST,currentFilelist);
  if (currentFilelist.equals("/")) {
    xmlTemplateDocument.setXmlData(C_PARENT,xmlTemplateDocument.getProcessedXmlDataValue(C_PARENT_DISABLED,this));
  }
 else {
    xmlTemplateDocument.setXmlData(C_PARENT,xmlTemplateDocument.getProcessedXmlDataValue(C_PARENT_ENABLED,this));
  }
  if (previousFilelist == null) {
    xmlTemplateDocument.setXmlData(C_PREVIOUS,xmlTemplateDocument.getProcessedXmlDataValue(C_PREVIOUS_DISABLED,this));
  }
 else {
    xmlTemplateDocument.setXmlData(C_PREVIOUS,xmlTemplateDocument.getProcessedXmlDataValue(C_PREVIOUS_ENABLED,this));
  }
  return startProcessing(cms,xmlTemplateDocument,"",parameters,template);
}
