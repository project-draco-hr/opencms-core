{
  CmsObject cms=getCmsObject();
  echo("Testing publishing process");
  String source="/folder2/subfolder21/image1.gif";
  String destination1="/folder2/image1_new.gif";
  String destination2="/folder2/image1_sibling1.gif";
  String destination3="/folder2/image1_sibling2.gif";
  String destination4="/folder2/image1_sibling3.gif";
  cms.copyResource(source,destination1,CmsResource.COPY_AS_NEW);
  cms.copyResource(source,destination2,CmsResource.COPY_AS_SIBLING);
  cms.copyResource(source,destination3,CmsResource.COPY_AS_SIBLING);
  cms.copyResource(source,destination4,CmsResource.COPY_AS_SIBLING);
  assertFalse(OpenCms.getPublishManager().isRunning());
  OpenCms.getPublishManager().stopPublishing();
  OpenCms.getPublishManager().publishProject(cms);
  assertFalse(OpenCms.getPublishManager().isRunning());
  assertLock(cms,destination1,CmsLockType.PUBLISH);
  try {
    cms.lockResource(destination1);
    fail("it should not be possible to lock a resource that is waiting to be published");
  }
 catch (  CmsLockException e) {
  }
  assertLock(cms,destination2,CmsLockType.PUBLISH);
  try {
    cms.lockResource(destination2);
    fail("it should not be possible to lock a resource that is waiting to be published");
  }
 catch (  CmsLockException e) {
  }
  assertLock(cms,destination3,CmsLockType.PUBLISH);
  try {
    cms.lockResource(destination3);
    fail("it should not be possible to lock a resource that is waiting to be published");
  }
 catch (  CmsLockException e) {
  }
  assertLock(cms,destination4,CmsLockType.PUBLISH);
  try {
    cms.lockResource(destination4);
    fail("it should not be possible to lock a resource that is waiting to be published");
  }
 catch (  CmsLockException e) {
  }
  OpenCms.getPublishManager().startPublishing();
  OpenCms.getPublishManager().waitWhileRunning();
  assertLock(cms,destination1,CmsLockType.UNLOCKED);
  assertLock(cms,destination2,CmsLockType.UNLOCKED);
  assertLock(cms,destination3,CmsLockType.UNLOCKED);
  assertLock(cms,destination4,CmsLockType.UNLOCKED);
}
