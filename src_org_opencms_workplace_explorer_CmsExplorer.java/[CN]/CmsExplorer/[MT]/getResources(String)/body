{
  if (getSettings().getExplorerShowLinks()) {
    try {
      return getCms().readSiblings(resource,CmsResourceFilter.ALL);
    }
 catch (    CmsException e) {
      if (LOG.isInfoEnabled()) {
        LOG.info(e);
      }
      return Collections.EMPTY_LIST;
    }
  }
 else   if (VIEW_PROJECT.equals(getSettings().getExplorerMode())) {
    String criteria=getSettings().getExplorerProjectFilter();
    int state;
    if (criteria.equals("new")) {
      state=CmsResource.STATE_NEW;
    }
 else     if (criteria.equals("changed")) {
      state=CmsResource.STATE_CHANGED;
    }
 else     if (criteria.equals("deleted")) {
      state=CmsResource.STATE_DELETED;
    }
 else {
      state=CmsResource.STATE_KEEP;
    }
    try {
      return getCms().readProjectView(getSettings().getExplorerProjectId(),state);
    }
 catch (    CmsException e) {
      if (LOG.isInfoEnabled()) {
        LOG.info(e);
      }
      return Collections.EMPTY_LIST;
    }
  }
 else   if (VIEW_GALLERY.equals(getSettings().getExplorerMode())) {
    A_CmsGallery gallery=A_CmsGallery.createInstance(getSettings().getGalleryType(),getJsp());
    return gallery.getGalleries();
  }
 else {
    try {
      return getCms().getResourcesInFolder(resource,CmsResourceFilter.ONLY_VISIBLE);
    }
 catch (    CmsException e) {
      if (LOG.isInfoEnabled()) {
        LOG.info(e);
      }
      return Collections.EMPTY_LIST;
    }
  }
}
