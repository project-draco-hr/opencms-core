{
  boolean galleryView=VIEW_GALLERY.equals(getSettings().getExplorerMode());
  boolean listView=VIEW_LIST.equals(getSettings().getExplorerMode());
  String currentFolder=getSettings().getExplorerResource();
  try {
    getCms().readResource(currentFolder,CmsResourceFilter.ALL);
  }
 catch (  CmsException e) {
    currentFolder="/";
  }
  StringBuffer content=new StringBuffer(2048);
  content.append(getInitializationHeader());
  List resources=getResources(getSettings().getExplorerResource());
  int startat=0;
  int stopat=resources.size();
  int selectedPage=1;
  int numberOfPages=0;
  int maxEntrys=getSettings().getUserSettings().getExplorerFileEntries();
  if (!galleryView) {
    selectedPage=getSettings().getExplorerPage();
    if (stopat > maxEntrys) {
      numberOfPages=(stopat / maxEntrys) + 1;
      if (selectedPage > numberOfPages) {
        selectedPage=1;
      }
      startat=(selectedPage - 1) * maxEntrys;
      if ((startat + maxEntrys) < stopat) {
        stopat=startat + maxEntrys;
      }
    }
  }
  int preferences=getUserPreferences();
  boolean showTitle=(preferences & CmsUserSettings.FILELIST_TITLE) > 0;
  boolean showNavText=(preferences & CmsUserSettings.FILELIST_NAVTEXT) > 0;
  boolean showPermissions=(preferences & CmsUserSettings.FILELIST_PERMISSIONS) > 0;
  boolean showDateLastModified=(preferences & CmsUserSettings.FILELIST_DATE_LASTMODIFIED) > 0;
  boolean showUserWhoLastModified=(preferences & CmsUserSettings.FILELIST_USER_LASTMODIFIED) > 0;
  boolean showDateCreated=(preferences & CmsUserSettings.FILELIST_DATE_CREATED) > 0;
  boolean showUserWhoCreated=(preferences & CmsUserSettings.FILELIST_USER_CREATED) > 0;
  boolean showDateReleased=(preferences & CmsUserSettings.FILELIST_DATE_RELEASED) > 0;
  boolean showDateExpired=(preferences & CmsUserSettings.FILELIST_DATE_EXPIRED) > 0;
  boolean fullPath=galleryView || listView;
  CmsProject referenceProject;
  try {
    if (!listView) {
      referenceProject=getCms().readProject(getSettings().getProject());
    }
 else {
      referenceProject=getCms().readProject(getSettings().getExplorerProjectId());
    }
  }
 catch (  CmsException ex) {
    referenceProject=getCms().getRequestContext().currentProject();
  }
  CmsResourceUtil resUtil=new CmsResourceUtil(getCms());
  resUtil.setReferenceProject(referenceProject);
  for (int i=startat; i < stopat; i++) {
    CmsResource res=(CmsResource)resources.get(i);
    resUtil.setResource(res);
    content.append(getInitializationEntry(resUtil,fullPath,showTitle,showNavText,showPermissions,showDateLastModified,showUserWhoLastModified,showDateCreated,showUserWhoCreated,showDateReleased,showDateExpired));
  }
  content.append(getInitializationFooter(numberOfPages,selectedPage));
  return content.toString();
}
