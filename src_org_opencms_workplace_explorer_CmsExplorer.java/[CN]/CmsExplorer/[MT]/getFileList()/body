{
  boolean galleryView=C_VIEW_GALLERY.equals(getSettings().getExplorerMode());
  boolean projectView=C_VIEW_PROJECT.equals(getSettings().getExplorerMode());
  boolean showVfsLinks=getSettings().getExplorerShowLinks();
  CmsResource currentResource=null;
  String currentFolder=getSettings().getExplorerResource();
  boolean found=true;
  try {
    currentResource=getCms().readResource(currentFolder,CmsResourceFilter.ALL);
  }
 catch (  CmsException e) {
    if (OpenCms.getLog(this).isInfoEnabled()) {
      OpenCms.getLog(this).info(e);
    }
    found=false;
  }
  if (found) {
    if (showVfsLinks) {
      currentFolder=C_LOCATION_VFSLINK + currentFolder;
    }
  }
 else {
    currentFolder="/";
    showVfsLinks=false;
    try {
      currentResource=getCms().readResource(currentFolder,CmsResourceFilter.ALL);
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error(e);
      }
      throw new RuntimeException(e);
    }
  }
  StringBuffer content=new StringBuffer(2048);
  content.append("function initialize() {\n");
  content.append("top.setRootFolder(\"");
  String rootFolder=getRootFolder();
  content.append(rootFolder);
  content.append("\");\n");
  content.append("top.mode=\"");
  content.append(getSettings().getExplorerMode());
  content.append("\";\n");
  content.append("top.showlinks=");
  content.append(showVfsLinks);
  content.append(";\n");
  content.append("top.plainresid=");
  content.append(CmsResourceTypePlain.getStaticTypeId());
  content.append(";\n");
  content.append("top.autolock=");
  content.append(OpenCms.getWorkplaceManager().autoLockResources());
  content.append(";\n");
  content.append("top.buttonType=");
  content.append(getSettings().getUserSettings().getExplorerButtonStyle());
  content.append(";\n");
  content.append("top.head.helpUrl='explorer/index.html';\n");
  content.append("top.setProject(");
  content.append(getSettings().getProject());
  content.append(");\n");
  content.append("top.setOnlineProject(");
  content.append(I_CmsConstants.C_PROJECT_ONLINE_ID);
  content.append(");\n");
  boolean writeAccess="explorerview".equals(getSettings().getExplorerMode());
  if (writeAccess && (!showVfsLinks)) {
    writeAccess=getCms().isInsideCurrentProject(currentFolder);
  }
  content.append("top.enableNewButton(");
  content.append(writeAccess);
  content.append(");\n");
  content.append("top.setDirectory(\"");
  content.append(CmsResource.getFolderPath(currentResource.getRootPath()));
  content.append("\",\"");
  if (showVfsLinks) {
    content.append("vfslink:");
    content.append(getSettings().getExplorerResource());
  }
 else {
    content.append(CmsResource.getFolderPath(getSettings().getExplorerResource()));
  }
  content.append("\");\n");
  content.append("top.rD();\n");
  List reloadTreeFolders=(List)getJsp().getRequest().getAttribute(C_REQUEST_ATTRIBUTE_RELOADTREE);
  if (reloadTreeFolders != null) {
    String reloadFolder="";
    for (int i=0; i < reloadTreeFolders.size(); i++) {
      reloadFolder=(String)reloadTreeFolders.get(i);
      if (getSettings().getUserSettings().getRestrictExplorerView()) {
        reloadFolder=reloadFolder.substring(rootFolder.length() - 1);
      }
      content.append("top.addNodeToLoad(\"" + reloadFolder + "\");\n");
    }
    content.append("top.reloadNodeList();\n");
  }
  content.append("\n");
  int preferences=getUserPreferences();
  boolean showTitle=(preferences & I_CmsWpConstants.C_FILELIST_TITLE) > 0;
  boolean showPermissions=(preferences & I_CmsWpConstants.C_FILELIST_PERMISSIONS) > 0;
  boolean showDateLastModified=(preferences & I_CmsWpConstants.C_FILELIST_DATE_LASTMODIFIED) > 0;
  boolean showUserWhoLastModified=(preferences & I_CmsWpConstants.C_FILELIST_USER_LASTMODIFIED) > 0;
  boolean showDateCreated=(preferences & I_CmsWpConstants.C_FILELIST_DATE_CREATED) > 0;
  boolean showUserWhoCreated=(preferences & I_CmsWpConstants.C_FILELIST_USER_CREATED) > 0;
  boolean showDateReleased=(preferences & I_CmsWpConstants.C_FILELIST_DATE_RELEASED) > 0;
  boolean showDateExpired=(preferences & I_CmsWpConstants.C_FILELIST_DATE_EXPIRED) > 0;
  List resources=getResources(getSettings().getExplorerResource());
  int startat=0;
  int stopat=resources.size();
  int selectedPage=1;
  int numberOfPages=0;
  int maxEntrys=getSettings().getUserSettings().getExplorerFileEntries();
  if (!(galleryView || projectView || showVfsLinks)) {
    selectedPage=getSettings().getExplorerPage();
    if (stopat > maxEntrys) {
      numberOfPages=(stopat / maxEntrys) + 1;
      if (selectedPage > numberOfPages) {
        selectedPage=1;
      }
      startat=(selectedPage - 1) * maxEntrys;
      if ((startat + maxEntrys) < stopat) {
        stopat=startat + maxEntrys;
      }
    }
  }
  List projectResources;
  try {
    projectResources=getCms().readProjectResources(getCms().getRequestContext().currentProject());
  }
 catch (  CmsException e) {
    if (OpenCms.getLog(this).isInfoEnabled()) {
      OpenCms.getLog(this).info(e);
    }
    projectResources=new ArrayList();
  }
  for (int i=startat; i < stopat; i++) {
    CmsResource res=(CmsResource)resources.get(i);
    CmsLock lock=null;
    String path=getCms().getSitePath(res);
    try {
      lock=getCms().getLock(res);
    }
 catch (    CmsException e) {
      lock=CmsLock.getNullLock();
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error("Error getting lock state for resource " + res,e);
      }
    }
    content.append("top.aF(");
    content.append("\"");
    content.append(res.getName());
    content.append("\",");
    if (projectView || showVfsLinks || galleryView) {
      content.append("\"");
      content.append(path);
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showTitle) {
      String title="";
      try {
        title=getCms().readPropertyObject(getCms().getSitePath(res),I_CmsConstants.C_PROPERTY_TITLE,false).getValue();
      }
 catch (      CmsException e) {
        if (OpenCms.getLog(this).isInfoEnabled()) {
          OpenCms.getLog(this).info(e);
        }
      }
      if (title == null) {
        title="";
      }
      content.append("\"");
      if (title != null) {
        content.append(CmsEncoder.escapeHtml(title));
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    content.append(res.getTypeId());
    content.append(",");
    if (res.getSiblingCount() > 1) {
      if (res.isLabeled()) {
        content.append("2");
      }
 else {
        content.append("1");
      }
    }
 else {
      content.append("0");
    }
    content.append(",");
    content.append(res.getLength());
    content.append(",");
    content.append(res.getState());
    content.append(",");
    int layoutstyle=I_CmsWpConstants.C_LAYOUTSTYLE_INRANGE;
    if (res.getDateReleased() > getCms().getRequestContext().getRequestTime()) {
      layoutstyle=I_CmsWpConstants.C_LAYOUTSTYLE_BEFORERELEASE;
    }
 else     if ((res.getDateExpired() < getCms().getRequestContext().getRequestTime())) {
      layoutstyle=I_CmsWpConstants.C_LAYOUTSTYLE_AFTEREXPIRE;
    }
    content.append(layoutstyle);
    content.append(',');
    int projectId=res.getProjectLastModified();
    if (!lock.isNullLock() && lock.getType() != CmsLock.C_TYPE_INHERITED && lock.getType() != CmsLock.C_TYPE_SHARED_INHERITED) {
      projectId=lock.getProjectId();
    }
    content.append(projectId);
    content.append(",");
    if (showDateLastModified) {
      content.append("\"");
      content.append(getSettings().getMessages().getDateTime(res.getDateLastModified()));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showUserWhoLastModified) {
      content.append("\"");
      try {
        content.append(getCms().readUser(res.getUserLastModified()).getName());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showDateCreated) {
      content.append("\"");
      content.append(getSettings().getMessages().getDateTime(res.getDateCreated()));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showUserWhoCreated) {
      content.append("\"");
      try {
        content.append(getCms().readUser(res.getUserCreated()).getName());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showDateReleased) {
      content.append("\"");
      long release=res.getDateReleased();
      if (release != CmsResource.DATE_RELEASED_DEFAULT) {
        content.append(getSettings().getMessages().getDateTime(release));
      }
 else {
        content.append(CmsTouch.C_RELEASE_EXPIRE_DEFAULT);
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showDateExpired) {
      content.append("\"");
      long expire=res.getDateExpired();
      if (expire != CmsResource.DATE_EXPIRED_DEFAULT) {
        content.append(getSettings().getMessages().getDateTime(expire));
      }
 else {
        content.append(CmsTouch.C_RELEASE_EXPIRE_DEFAULT);
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showPermissions) {
      content.append("\"");
      try {
        content.append(getCms().getPermissions(getCms().getSitePath(res)).getPermissionString());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (lock.isNullLock()) {
      content.append("\"\",");
    }
 else {
      content.append("\"");
      try {
        content.append(getCms().readUser(lock.getUserId()).getName());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
    content.append(lock.getType());
    content.append(",");
    int lockedInProject=I_CmsConstants.C_UNKNOWN_ID;
    if (lock.isNullLock() && res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
      lockedInProject=res.getProjectLastModified();
    }
 else {
      if (res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
        lockedInProject=projectId;
      }
 else {
        lockedInProject=lock.getProjectId();
      }
    }
    String lockedInProjectName;
    try {
      if (lockedInProject == I_CmsConstants.C_UNKNOWN_ID) {
        lockedInProjectName="";
      }
 else {
        lockedInProjectName=getCms().readProject(lockedInProject).getName();
      }
    }
 catch (    CmsException exc) {
      if (OpenCms.getLog(this).isInfoEnabled()) {
        OpenCms.getLog(this).info(exc);
      }
      lockedInProjectName="";
    }
    content.append("\"");
    content.append(lockedInProjectName);
    content.append("\",");
    content.append(lockedInProject);
    content.append(",\"");
    if (CmsProject.isInsideProject(projectResources,res)) {
      content.append("I");
    }
 else {
      content.append("O");
    }
    content.append("\"");
    content.append(");\n");
  }
  content.append("top.dU(document,");
  content.append(numberOfPages);
  content.append(",");
  content.append(selectedPage);
  content.append("); \n");
  content.append("}\n");
  return content.toString();
}
