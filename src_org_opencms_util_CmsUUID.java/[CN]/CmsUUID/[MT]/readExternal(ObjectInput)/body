{
  Object o=null;
  try {
    o=in.readObject();
  }
 catch (  Exception e) {
    if (in.readLong() == serialVersionUID) {
      m_uuid=new UUID((String)in.readObject());
    }
 else {
      throw new IOException("Cannot read externalized UUID because of a version mismatch.");
    }
  }
  if (o != null) {
    if (o instanceof String) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_READ_UUID_1,o));
      }
      m_uuid=new UUID((String)o);
    }
 else     if (o instanceof UUID) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_READ_UUID_OLD_1,o));
      }
      m_uuid=(UUID)o;
    }
  }
  if (m_uuid == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().getBundle().key(Messages.LOG_ERR_READ_UUID_0));
    }
    throw new IOException("Cannot read externalized UUID.");
  }
}
