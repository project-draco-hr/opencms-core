{
  try {
    OpenCmsTestResourceStorageEntry storedResource=m_currentResourceStrorage.get(resourceName);
    List excludeList=new ArrayList();
    if (permission != null) {
      excludeList.add(principal);
    }
    Map parents=getParents(cms,resourceName);
    Vector aceList=cms.getAccessControlEntries(resourceName);
    Iterator i=aceList.iterator();
    while (i.hasNext()) {
      CmsAccessControlEntry ace=(CmsAccessControlEntry)i.next();
      if (ace.getPrincipal().equals(principal)) {
        String parent=(String)parents.get(ace.getResource());
        if ((!parent.equals(modifiedResource)) && (parent.length() > modifiedResource.length())) {
          permission.setPermissions(ace.getAllowedPermissions(),ace.getDeniedPermissions());
        }
      }
    }
    String noMatches=compareAccessLists(cms,resourceName,storedResource,excludeList);
    if (noMatches.length() > 0) {
      fail("error comparing permission sets of resource " + resourceName + " with stored values: "+ noMatches);
    }
    if (permission != null) {
      CmsAccessControlList resAcls=cms.getAccessControlList(resourceName);
      Map permissionMap=resAcls.getPermissionMap();
      CmsPermissionSet resPermission=(CmsPermissionSet)permissionMap.get(principal);
      if (resPermission != null) {
        if (!resPermission.equals(permission)) {
          fail("[Permission set not equal " + principal + ":"+ permission+ " <-> "+ resPermission+ "]");
        }
      }
 else {
        fail("[Permission set not found " + principal + ":"+ permission+ "]");
      }
    }
  }
 catch (  CmsException e) {
    fail("cannot read resource " + resourceName + " "+ CmsException.getStackTraceAsString(e));
  }
}
