{
  ExtendedProperties dbConfiguration;
  ExtendedProperties configuration;
  try {
    String dbConfigFile=getSetupDataPath() + "setup/database/" + dbProduct+ "/database.properties";
    dbConfiguration=CmsPropertyUtils.loadProperties(dbConfigFile);
    String propertyFile=getTestDataPath() + "WEB-INF/config/opencms.properties";
    configuration=CmsPropertyUtils.loadProperties(propertyFile);
    configuration.setProperty("DATABASE_NAME",C_DATABASE_NAME);
  }
 catch (  IOException e) {
    fail(e.toString());
    return null;
  }
  String key="default";
  String jdbcDriver=configuration.getString(CmsDbPool.C_KEY_DATABASE_POOL + "." + key+ "."+ CmsDbPool.C_KEY_JDBC_DRIVER);
  String username=configuration.getString(CmsDbPool.C_KEY_DATABASE_POOL + "." + key+ "."+ CmsDbPool.C_KEY_USERNAME);
  String password=configuration.getString(CmsDbPool.C_KEY_DATABASE_POOL + "." + key+ "."+ CmsDbPool.C_KEY_PASSWORD);
  String jdbcUrl;
  String jdbcUrlParams;
  if (create) {
    jdbcUrl=dbConfiguration.getString(dbProduct + ".constr");
    jdbcUrlParams=dbConfiguration.getString(dbProduct + ".constr.params");
  }
 else {
    jdbcUrl=configuration.getString(CmsDbPool.C_KEY_DATABASE_POOL + "." + key+ "."+ CmsDbPool.C_KEY_JDBC_URL);
    jdbcUrlParams=configuration.getString(CmsDbPool.C_KEY_DATABASE_POOL + "." + key+ "."+ CmsDbPool.C_KEY_JDBC_URL_PARAMS);
  }
  CmsSetupDb setupDb=new CmsSetupDb(getSetupDataPath());
  setupDb.setConnection(jdbcDriver,jdbcUrl,jdbcUrlParams,username,password);
  checkErrors(setupDb);
  return setupDb;
}
