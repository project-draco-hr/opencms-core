{
  int fileNameLength=10;
  int propValueLength=10;
  if (maxDepth < 1) {
    return 0;
  }
  if (!vfsFolder.endsWith("/")) {
    vfsFolder+="/";
  }
  int writtenFiles=0;
  Random rnd=new Random();
  int width=rnd.nextInt(maxWidth) + 1;
  int depth=maxDepth - rnd.nextInt(2);
  for (int i=0; i < width; i++) {
    String vfsName=vfsFolder + generateName(fileNameLength) + i;
    List<CmsProperty> props=generateProperties(cms,maxProps,propValueLength,propertyDistribution);
    cms.createResource(vfsName,CmsResourceTypeFolder.getStaticTypeId(),new byte[0],props);
    cms.unlockResource(vfsName);
    int numberOfFiles=rnd.nextInt(maxNumberOfFiles) + 1;
    int numberOfBinaryFiles=(int)(numberOfFiles * fileTypeDistribution);
    writtenFiles+=generateResources(cms,"org/opencms/search/pdf-test-112.pdf",vfsName,numberOfBinaryFiles,CmsResourceTypeBinary.getStaticTypeId(),maxProps,propertyDistribution);
    writtenFiles+=generateResources(cms,"org/opencms/search/extractors/test1.html",vfsName,numberOfFiles - numberOfBinaryFiles,CmsResourceTypePlain.getStaticTypeId(),maxProps,propertyDistribution);
    writtenFiles+=generateContent(cms,vfsName,maxWidth,depth - 1,maxProps,propertyDistribution,maxNumberOfFiles,fileTypeDistribution);
    System.out.println("" + writtenFiles + " files written in Folder "+ vfsName);
  }
  return writtenFiles;
}
