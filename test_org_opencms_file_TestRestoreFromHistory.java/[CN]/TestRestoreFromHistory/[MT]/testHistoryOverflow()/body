{
  final int C_MAX_VERSIONS=10;
  CmsObject cms=getCmsObject();
  echo("Testing history overflow");
  String resourcename="/test-overflow1.txt";
  String contentStr="1";
  cms.createResource(resourcename,CmsResourceTypePlain.C_RESOURCE_TYPE_ID,contentStr.getBytes(),null);
  this.storeResources(cms,resourcename);
  cms.unlockProject(cms.getRequestContext().currentProject().getId());
  cms.publishProject();
  int version;
  for (version=1; version < 20; version++) {
    if (version == 10) {
      System.err.println("");
    }
    cms.lockResource(resourcename);
    List allFiles=cms.readAllBackupFileHeaders(resourcename);
    if (version <= C_MAX_VERSIONS) {
      if (allFiles.size() != version) {
        fail("Number of backup files found = " + allFiles.size() + " != "+ version+ " expected");
      }
    }
 else {
      if (allFiles.size() != C_MAX_VERSIONS) {
        fail("Number of backup files found = " + allFiles.size() + " != "+ C_MAX_VERSIONS+ " expected");
      }
    }
    if (version > 1) {
      CmsBackupResource backup=(CmsBackupResource)allFiles.get(1);
      cms.restoreResourceBackup(resourcename,backup.getTagId());
      assertContent(cms,resourcename,Integer.toString(version - 1).getBytes());
    }
    contentStr=Integer.toString(version + 1);
    CmsFile update=cms.readFile(resourcename);
    update.setContents(contentStr.getBytes());
    cms.writeFile(update);
    this.storeResources(cms,resourcename);
    cms.unlockProject(cms.getRequestContext().currentProject().getId());
    cms.publishProject();
  }
}
