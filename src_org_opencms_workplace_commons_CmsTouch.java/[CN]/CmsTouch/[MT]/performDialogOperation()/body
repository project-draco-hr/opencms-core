{
  if (!DIALOG_WAIT.equals(getParamAction())) {
    if (isMultiOperation()) {
      return false;
    }
 else {
      CmsResource sourceRes=getCms().readResource(getParamResource(),CmsResourceFilter.ALL);
      if (sourceRes.isFolder()) {
        return false;
      }
    }
  }
  long timeStamp=0;
  boolean correctDate=false;
  try {
    if (CmsStringUtil.isNotEmpty(getParamNewtimestamp())) {
      timeStamp=getCalendarDate(getParamNewtimestamp(),true);
      correctDate=true;
    }
  }
 catch (  ParseException e) {
    throw new CmsException(Messages.get().container(Messages.ERR_PARSE_TIMESTAMP_1,getParamNewtimestamp()),e);
  }
  boolean touchRecursive=Boolean.valueOf(getParamRecursive()).booleanValue();
  Iterator i=getResourceList().iterator();
  while (i.hasNext()) {
    String resName=(String)i.next();
    try {
      touchSingleResource(resName,timeStamp,touchRecursive,correctDate);
    }
 catch (    CmsException e) {
      addMultiOperationException(e);
    }
  }
  checkMultiOperationException(Messages.get(),Messages.ERR_TOUCH_MULTI_0);
  return true;
}
