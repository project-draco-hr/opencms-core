{
  m_publishOptions=publishOptions;
  m_actions=actions;
  m_actionButtons=new ArrayList<CmsPushButton>();
  initWidget(UI_BINDER.createAndBindUi(this));
  m_checkboxProblems.setVisible(false);
  List<CmsPair<String,String>> items=new ArrayList<CmsPair<String,String>>();
  CmsMessages messages=Messages.get();
  items.add(new CmsPair<String,String>(CmsUUID.getNullUUID().toString(),messages.key(Messages.GUI_PUBLISH_DIALOG_MY_CHANGES_0)));
  boolean foundOldProject=false;
  for (  CmsProjectBean project : projects) {
    items.add(new CmsPair<String,String>(project.getId().toString(),project.getName()));
    if (project.getId().equals(publishOptions.getProjectId())) {
      foundOldProject=true;
    }
  }
  m_projectSelector.setItems(items);
  m_projectSelector.addStyleName(CSS.selector());
  m_publishDialog=publishDialog;
  m_checkboxRelated.setChecked(publishOptions.isIncludeRelated());
  m_checkboxSiblings.setChecked(publishOptions.isIncludeSiblings());
  if (foundOldProject) {
    m_projectSelector.selectValue(publishOptions.getProjectId().toString());
  }
  m_projectSelector.addValueChangeHandler(new ValueChangeHandler<String>(){
    /** 
 * @see ValueChangeHandler#onValueChange(ValueChangeEvent)
 */
    public void onValueChange(    ValueChangeEvent<String> event){
      m_publishOptions.setProjectId(new CmsUUID(event.getValue()));
      m_publishDialog.onChangeOptions();
    }
  }
);
  m_projectSelector.truncate(TM_PUBLISH,200);
  m_checkboxRelated.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      m_publishOptions.setIncludeRelated(m_checkboxRelated.isChecked());
      m_publishDialog.onChangeOptions();
    }
  }
);
  m_checkboxSiblings.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      m_publishOptions.setIncludeSiblings(m_checkboxSiblings.isChecked());
      m_publishDialog.onChangeOptions();
    }
  }
);
  m_checkboxProblems.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      setProblemMode(m_checkboxProblems.isChecked());
    }
  }
);
  m_cancelButton.setText(messages.key(Messages.GUI_PUBLISH_DIALOG_CANCEL_BUTTON_0));
  m_cancelButton.setUseMinWidth(true);
  m_selectAll.setText(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_ALL_BUTTON_0));
  m_selectAll.setImageClass(I_CmsInputLayoutBundle.INSTANCE.inputCss().checkBoxImageChecked());
  m_selectAll.setUseMinWidth(true);
  m_selectNone.setText(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_NONE_BUTTON_0));
  m_selectNone.setImageClass(I_CmsInputLayoutBundle.INSTANCE.inputCss().checkBoxImageUnchecked());
  m_selectNone.setUseMinWidth(true);
  m_noResources.setText(messages.key(Messages.GUI_PUBLISH_DIALOG_NO_RES_0));
  m_selectAll.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      m_model.signalAll(Signal.publish);
      CmsPublishSelectPanel.this.onChangePublishSelection();
    }
  }
);
  m_selectNone.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      m_model.signalAll(Signal.unpublish);
      CmsPublishSelectPanel.this.onChangePublishSelection();
    }
  }
);
  m_checkboxSiblings.setText(messages.key(Messages.GUI_PUBLISH_CHECKBOXES_SIBLINGS_0));
  m_checkboxRelated.setText(messages.key(Messages.GUI_PUBLISH_CHECKBOXES_REL_RES_0));
  m_checkboxProblems.setText(messages.key(Messages.GUI_PUBLISH_CHECKBOXES_PROBLEMS_0));
  m_selectLabel.setText(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_LEFT_LABEL_0));
  m_selectorLabel.setText(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_RIGHT_LABEL_0));
  addScrollHandler();
}
