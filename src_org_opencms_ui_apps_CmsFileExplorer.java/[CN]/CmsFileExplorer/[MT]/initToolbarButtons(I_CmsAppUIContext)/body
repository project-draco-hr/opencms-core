{
  Button publishButton=CmsToolBar.createButton(FontOpenCms.PUBLISH);
  publishButton.addClickListener(new ClickListener(){
    /** 
 * Serial version id. 
 */
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      onClickPublish();
    }
  }
);
  context.addToolbarButton(publishButton);
  Button newButton=CmsToolBar.createButton(FontOpenCms.WAND);
  newButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void buttonClick(    ClickEvent event){
      try {
        CmsObject cms=A_CmsUI.getCmsObject();
        CmsResource folderRes=cms.readResource(m_currentFolder,CmsResourceFilter.IGNORE_EXPIRATION);
        I_CmsDialogContext newDialogContext=createDialogContext(null);
        CmsNewDialog newDialog=new CmsNewDialog(folderRes,newDialogContext);
        newDialogContext.start(CmsVaadinUtils.getMessageText(org.opencms.ui.Messages.GUI_NEWRESOURCEDIALOG_TITLE_0),newDialog);
      }
 catch (      Exception e) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
  }
);
  context.addToolbarButton(newButton);
  m_uploadButton=new CmsUploadButton(FontOpenCms.UPLOAD,"/");
  m_uploadButton.addStyleName(ValoTheme.BUTTON_BORDERLESS);
  m_uploadButton.addStyleName(OpenCmsTheme.TOOLBAR_BUTTON);
  m_uploadButton.addUploadListener(new I_UploadListener(){
    public void onUploadFinished(    List<String> uploadedFiles){
      updateAll();
    }
  }
);
  context.addToolbarButton(m_uploadButton);
}
