{
  try {
    CmsObject cms=OpenCmsCore.getInstance().initCmsObjectFromSession(req);
    if (cms == null) {
      res.setStatus(HttpServletResponse.SC_EXPECTATION_FAILED);
      String message=Messages.get().getBundle().key(Messages.GUI_SOLR_NOT_LOGGED_IN_0);
      res.getWriter().println(ERROR_HTML.replace("$content$",message));
    }
 else {
      String baseUri=getRequestUri(req,cms);
      if (baseUri != null) {
        cms.getRequestContext().setUri(baseUri);
      }
      Map<String,String[]> params=CmsRequestUtil.createParameterMap(req.getParameterMap());
      String indexName=params.get("core") != null ? params.get("core")[0] : (params.get("index") != null ? params.get("index")[0] : null);
      CmsSolrIndex index=OpenCms.getSearchManager().getIndexSolr(params);
      if (index != null) {
        CmsSolrQuery query=new CmsSolrQuery(cms,CmsRequestUtil.createParameterMap(req.getParameterMap()));
        index.writeResponse(res,index.search(cms,query));
      }
 else {
        res.setStatus(HttpServletResponse.SC_EXPECTATION_FAILED);
        String message=Messages.get().getBundle().key(Messages.GUI_SOLR_INDEX_NOT_FOUND_1,indexName);
        res.getWriter().println(ERROR_HTML.replace("$content$",message));
      }
    }
  }
 catch (  Exception e) {
    res.setStatus(HttpServletResponse.SC_EXPECTATION_FAILED);
    String message=Messages.get().getBundle().key(Messages.GUI_SOLR_UNEXPECTED_ERROR_0);
    String formattedException=CmsException.getStackTraceAsString(e).replace("\n","<br/>");
    res.getWriter().println(ERROR_HTML.replace("$content$",message + formattedException));
  }
 finally {
    res.getWriter().flush();
  }
}
