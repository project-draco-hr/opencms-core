{
  m_context=context;
  CmsVaadinUtils.readAndLocalizeDesign(this,OpenCms.getWorkplaceManager().getMessages(A_CmsUI.get().getLocale()),null);
  m_infoText.setValue(CmsVaadinUtils.getMessageText(org.opencms.workplace.commons.Messages.GUI_UNDO_CONFIRMATION_0));
  boolean hasFolders=false;
  boolean hasMoved=false;
  if (context.getResources().size() == 1) {
    CmsResource singleRes=context.getResources().get(0);
    CmsResourceUtil resUtil=new CmsResourceUtil(context.getCms(),singleRes);
    String fileName=CmsResource.getName(singleRes.getRootPath());
    String date=CmsVfsService.formatDateTime(context.getCms(),singleRes.getDateLastModified());
    String user=resUtil.getUserLastModified();
    String key=org.opencms.workplace.commons.Messages.GUI_UNDO_LASTMODIFIED_INFO_3;
    String message=CmsVaadinUtils.getMessageText(key,fileName,date,user);
    m_modifiedText.setVisible(true);
    m_modifiedText.setValue(message);
  }
  for (  CmsResource resource : context.getResources()) {
    if (resource.isFolder()) {
      hasFolders=true;
      break;
    }
 else {
      try {
        CmsObject cms=OpenCms.initCmsObject(context.getCms());
        cms.getRequestContext().setCurrentProject(cms.readProject(CmsProject.ONLINE_PROJECT_ID));
        CmsResource onlineres=cms.readResource(resource.getStructureId());
        hasMoved|=!onlineres.getRootPath().equals(resource.getRootPath());
      }
 catch (      CmsException e) {
        LOG.warn(e.getLocalizedMessage(),e);
      }
    }
  }
  boolean multi=context.getResources().size() > 1;
  String undoMessage=getUndoMessage(multi,hasFolders);
  m_infoText.setValue(undoMessage);
  m_modifySubresourcesField.setVisible(hasFolders);
  m_modifySubresourcesField.addItem("false");
  m_modifySubresourcesField.setItemCaption("false",getNonRecursiveMessage(multi,hasFolders));
  m_modifySubresourcesField.addItem("true");
  m_modifySubresourcesField.setItemCaption("true",getRecursiveMessage(multi,hasFolders));
  m_modifySubresourcesField.setValue("false");
  m_undoMoveField.setVisible(hasFolders || hasMoved);
  m_cancelButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      m_context.finish(null);
    }
  }
);
  m_okButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      undo();
    }
  }
);
  displayResourceInfo(m_context.getResources());
}
