{
  PreparedStatement stmt=null;
  PreparedStatement commit=null;
  PreparedStatement rollback=null;
  ResultSet res=null;
  Connection conn=null;
  try {
    byte[] value=internalSerializeObject(object);
    conn=m_sqlManager.getConnection();
    conn.setAutoCommit(false);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_ORACLE_SYSTEMPROPERTIES_UPDATE_BYNAME");
    stmt.setString(1,name);
    res=((DelegatingResultSet)stmt.executeQuery()).getInnermostDelegate();
    if (!res.next())     throw new CmsException("writeSystemProperty name=" + name + " system property not found",CmsException.C_NOT_FOUND);
    Blob propertyValue=res.getBlob("SYSTEMPROPERTY_VALUE");
    ((oracle.sql.BLOB)propertyValue).trim(0);
    OutputStream output=((oracle.sql.BLOB)propertyValue).getBinaryOutputStream();
    output.write(value);
    output.close();
    commit=m_sqlManager.getPreparedStatement(conn,"C_COMMIT");
    commit.execute();
    commit.close();
    commit=null;
    stmt.close();
    stmt=null;
    res=null;
    conn.setAutoCommit(true);
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,"writeSystemProperty name=" + name,CmsException.C_SQL_ERROR,e,false);
  }
catch (  IOException e) {
    throw m_sqlManager.getCmsException(this,"writeSystemProperty name=" + name,CmsException.C_SERIALIZATION,e,false);
  }
 finally {
    if (res != null) {
      try {
        res.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (commit != null) {
      try {
        commit.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (stmt != null) {
      try {
        rollback=m_sqlManager.getPreparedStatement(conn,"C_ROLLBACK");
        rollback.execute();
        rollback.close();
      }
 catch (      SQLException se) {
      }
      try {
        stmt.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (conn != null) {
      try {
        conn.setAutoCommit(true);
        conn.close();
      }
 catch (      SQLException se) {
      }
    }
  }
  return readSystemProperty(name);
}
