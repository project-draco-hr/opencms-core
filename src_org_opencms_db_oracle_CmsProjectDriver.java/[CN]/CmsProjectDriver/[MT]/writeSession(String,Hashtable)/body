{
  byte[] value=null;
  PreparedStatement stmt=null;
  PreparedStatement stmt2=null;
  PreparedStatement nextStmt=null;
  PreparedStatement trimStmt=null;
  Connection conn=null;
  int retValue;
  ResultSet res=null;
  try {
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    ObjectOutputStream oout=new ObjectOutputStream(bout);
    oout.writeObject(data);
    oout.close();
    value=bout.toByteArray();
    conn=m_sqlManager.getConnection();
    stmt=m_sqlManager.getPreparedStatement(conn,"C_ORACLE_SESSION_UPDATE");
    stmt.setTimestamp(1,new java.sql.Timestamp(System.currentTimeMillis()));
    stmt.setString(2,sessionId);
    retValue=stmt.executeUpdate();
    stmt.close();
    stmt2=m_sqlManager.getPreparedStatement(conn,"C_ORACLE_SESSION_FORUPDATE");
    stmt2.setString(1,sessionId);
    conn.setAutoCommit(false);
    res=((DelegatingResultSet)stmt2.executeQuery()).getInnermostDelegate();
    while (res.next()) {
      oracle.sql.BLOB blob=((OracleResultSet)res).getBLOB("SESSION_DATA");
      trimStmt=m_sqlManager.getPreparedStatement(conn,"C_TRIMBLOB");
      trimStmt.setBlob(1,blob);
      trimStmt.setInt(2,0);
      trimStmt.execute();
      ByteArrayInputStream instream=new ByteArrayInputStream(value);
      OutputStream outstream=blob.getBinaryOutputStream();
      byte[] chunk=new byte[blob.getChunkSize()];
      int i=-1;
      while ((i=instream.read(chunk)) != -1) {
        outstream.write(chunk,0,i);
      }
      instream.close();
      outstream.close();
    }
    stmt2.close();
    res.close();
    nextStmt=m_sqlManager.getPreparedStatement(conn,"C_COMMIT");
    nextStmt.execute();
    nextStmt.close();
    conn.setAutoCommit(true);
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  IOException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SERIALIZATION,e,false);
  }
 finally {
    if (stmt2 != null) {
      try {
        stmt2.close();
      }
 catch (      SQLException exc) {
      }
      try {
        nextStmt=m_sqlManager.getPreparedStatement(conn,"C_ROLLBACK");
        nextStmt.execute();
      }
 catch (      SQLException se) {
      }
    }
    m_sqlManager.closeAll(null,trimStmt,null);
    m_sqlManager.closeAll(null,nextStmt,null);
    m_sqlManager.closeAll(conn,stmt,res);
  }
  return retValue;
}
