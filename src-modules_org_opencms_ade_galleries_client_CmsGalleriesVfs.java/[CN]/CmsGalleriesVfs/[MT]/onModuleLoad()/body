{
  super.onModuleLoad();
  I_CmsLayoutBundle.INSTANCE.galleryDialogCss().ensureInjected();
  final CmsFlowPanel html=new CmsFlowPanel(CmsDomUtil.Tag.div.name());
  html.addStyleName(I_CmsLayoutBundle.INSTANCE.galleryDialogCss().galleryDialogSize());
  RootPanel.getBodyElement().addClassName(I_CmsLayoutBundle.INSTANCE.galleryDialogCss().galleriesDialog());
  RootPanel.get().add(html);
  final CmsGallerySearchObject searchObj=new CmsGallerySearchObject();
  ArrayList<String> galleries=new ArrayList<String>();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(CmsGalleryProvider.get().getGalleryPath())) {
    galleries.add(CmsGalleryProvider.get().getGalleryPath());
  }
  searchObj.setGalleries(galleries);
  searchObj.setSortOrder("");
  searchObj.setTabId(I_CmsGalleryProviderConstants.GalleryTabId.cms_tab_results.name());
  searchObj.setMachesPerPage(12);
  String[] tabs={I_CmsGalleryProviderConstants.GalleryTabId.cms_tab_types.name(),I_CmsGalleryProviderConstants.GalleryTabId.cms_tab_galleries.name(),I_CmsGalleryProviderConstants.GalleryTabId.cms_tab_categories.name(),I_CmsGalleryProviderConstants.GalleryTabId.cms_tab_search.name()};
  final ArrayList<String> tabsConfig=new ArrayList<String>();
  for (int i=0; tabs.length > i; i++) {
    tabsConfig.add(tabs[i]);
  }
  final String dialogMode="view";
  CmsRpcAction<CmsGalleryInfoBean> getInitialAction=new CmsRpcAction<CmsGalleryInfoBean>(){
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
    @Override public void execute(){
      getGalleryService().getInitialSettings(tabsConfig,searchObj,dialogMode,this);
    }
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
    @Override public void onResponse(    CmsGalleryInfoBean infoBean){
      CmsGalleryDialog galleryDialog=new CmsGalleryDialog(infoBean);
      html.add(galleryDialog);
    }
  }
;
  getInitialAction.execute();
}
