{
  if (getParamListAction().equals(LIST_MACTION_DELETE)) {
    List removedItems=new ArrayList();
    Iterator itItems=getSelectedItems().iterator();
    while (itItems.hasNext()) {
      CmsListItem listItem=(CmsListItem)itItems.next();
      try {
        OpenCms.getScheduleManager().unscheduleJob(getCms(),listItem.getId());
        removedItems.add(listItem.getId());
      }
 catch (      CmsException e) {
        throw new CmsRuntimeException(Messages.get().container(Messages.ERR_UNSCHEDULE_JOB_1,listItem.getId()),e);
      }
    }
    writeConfiguration(false);
  }
 else   if (getParamListAction().equals(LIST_MACTION_ACTIVATE) || getParamListAction().equals(LIST_MACTION_DEACTIVATE)) {
    Iterator itItems=getSelectedItems().iterator();
    boolean activate=getParamListAction().equals(LIST_MACTION_ACTIVATE);
    while (itItems.hasNext()) {
      CmsListItem listItem=(CmsListItem)itItems.next();
      try {
        CmsScheduledJobInfo job=(CmsScheduledJobInfo)OpenCms.getScheduleManager().getJob(listItem.getId()).clone();
        job.setActive(activate);
        OpenCms.getScheduleManager().scheduleJob(getCms(),job);
      }
 catch (      CmsException e) {
        throw new CmsRuntimeException(Messages.get().container(Messages.ERR_SCHEDULE_JOB_1,listItem.getId()),e);
      }
    }
    writeConfiguration(true);
  }
 else {
    throwListUnsupportedActionException();
  }
  listSave();
}
