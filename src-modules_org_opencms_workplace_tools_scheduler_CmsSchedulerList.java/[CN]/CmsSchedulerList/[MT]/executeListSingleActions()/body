{
  if (getParamListAction().equals(LIST_ACTION_EDIT) || getParamListAction().equals(LIST_DEFACTION_EDIT)) {
    String jobId=getSelectedItem().getId();
    Map<String,String[]> params=new HashMap<String,String[]>();
    params.put(CmsEditScheduledJobInfoDialog.PARAM_JOBID,new String[]{jobId});
    params.put(CmsDialog.PARAM_ACTION,new String[]{CmsDialog.DIALOG_INITIAL});
    getToolManager().jspForwardTool(this,"/scheduler/edit",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_COPY)) {
    String jobId=getSelectedItem().getId();
    Map<String,String[]> params=new HashMap<String,String[]>();
    params.put(CmsEditScheduledJobInfoDialog.PARAM_JOBID,new String[]{jobId});
    params.put(CmsDialog.PARAM_ACTION,new String[]{CmsEditScheduledJobInfoDialog.DIALOG_COPYJOB});
    getToolManager().jspForwardTool(this,"/scheduler/new",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_ACTIVATE)) {
    String jobId=getSelectedItem().getId();
    CmsScheduledJobInfo job=(CmsScheduledJobInfo)OpenCms.getScheduleManager().getJob(jobId).clone();
    job.setActive(true);
    try {
      OpenCms.getScheduleManager().scheduleJob(getCms(),job);
      writeConfiguration(true);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_SCHEDULE_JOB_1,jobId),e);
    }
  }
 else   if (getParamListAction().equals(LIST_ACTION_DEACTIVATE)) {
    String jobId=getSelectedItem().getId();
    CmsScheduledJobInfo job=(CmsScheduledJobInfo)OpenCms.getScheduleManager().getJob(jobId).clone();
    job.setActive(false);
    try {
      OpenCms.getScheduleManager().scheduleJob(getCms(),job);
      writeConfiguration(true);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_UNSCHEDULE_JOB_1,jobId),e);
    }
  }
 else   if (getParamListAction().equals(LIST_ACTION_DELETE)) {
    String jobId=getSelectedItem().getId();
    try {
      OpenCms.getScheduleManager().unscheduleJob(getCms(),jobId);
      writeConfiguration(false);
    }
 catch (    CmsRoleViolationException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DELETE_JOB_1,jobId),e);
    }
  }
 else {
    throwListUnsupportedActionException();
  }
  listSave();
}
