{
  if (!this.isInternalCacheable()) {
    return null;
  }
  if (parameters == null) {
    parameters=new Hashtable();
  }
  if ((m_dynamicParameter != null) && (!m_dynamicParameter.isEmpty())) {
    for (int i=0; i < m_dynamicParameter.size(); i++) {
      String testparameter=(String)m_dynamicParameter.elementAt(i);
      if (parameters.containsKey(testparameter)) {
        return null;
      }
    }
  }
  CmsRequestContext reqContext=cms.getRequestContext();
  String groupKey="";
  String scheme="http";
  try {
    scheme=(CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getOriginalRequest()).getScheme();
  }
 catch (  Exception e) {
  }
  String key="key_" + scheme + "_";
  if (m_uri) {
    key+=reqContext.getUri();
  }
  if (m_user) {
    key+=reqContext.currentUser().getName();
  }
  key+=groupKey;
  if ((m_cacheParameter != null) && (!m_cacheParameter.isEmpty())) {
    for (int i=0; i < m_cacheParameter.size(); i++) {
      String para=(String)m_cacheParameter.elementAt(i);
      if (parameters.containsKey(para)) {
        key+=(String)parameters.get(para);
      }
    }
  }
  if (key.equals("")) {
    return null;
  }
  String elementName=(String)parameters.get("_ELEMENT_");
  if (elementName == null) {
    elementName=I_CmsConstants.C_ROOT_TEMPLATE_NAME;
  }
  Enumeration paramKeys=parameters.keys();
  while (paramKeys.hasMoreElements()) {
    String paramKey=(String)paramKeys.nextElement();
    if (paramKey.startsWith(elementName)) {
      key+=paramKey + "=" + parameters.get(paramKey)+ ";";
    }
  }
  return key;
}
