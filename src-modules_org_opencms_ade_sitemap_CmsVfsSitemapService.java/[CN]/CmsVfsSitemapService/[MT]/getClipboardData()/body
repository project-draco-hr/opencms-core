{
  CmsSitemapClipboardData cache=(CmsSitemapClipboardData)getRequest().getSession().getAttribute(SESSION_ATTR_ADE_SITEMAP_CLIPBOARD_CACHE);
  if (cache == null) {
    cache=new CmsSitemapClipboardData();
    getRequest().getSession().setAttribute(SESSION_ATTR_ADE_SITEMAP_CLIPBOARD_CACHE,cache);
  }
 else {
    CmsObject cms=getCmsObject();
    Iterator<CmsClientSitemapEntry> modIt=cache.getModifications().values().iterator();
    while (modIt.hasNext()) {
      CmsClientSitemapEntry modEntry=modIt.next();
      try {
        CmsResource res=cms.readResource(modEntry.getId());
        modEntry.setSitePath(CmsResource.getFolderPath(cms.getSitePath(res)));
        if (!getNavBuilder().getNavigationForResource(modEntry.getSitePath()).isInNavigation()) {
          modIt.remove();
        }
      }
 catch (      CmsException e) {
        modIt.remove();
      }
    }
    Iterator<CmsClientSitemapEntry> delIt=cache.getDeletions().values().iterator();
    while (delIt.hasNext()) {
      CmsClientSitemapEntry delEntry=delIt.next();
      try {
        CmsResource res=cms.readResource(delEntry.getId(),CmsResourceFilter.ALL);
        if (!res.getState().isDeleted()) {
          delIt.remove();
        }
 else {
          delEntry.setSitePath(CmsResource.getFolderPath(cms.getSitePath(res)));
        }
      }
 catch (      CmsException e) {
        delIt.remove();
      }
    }
  }
  return cache;
}
