{
  CmsFile file=null;
  PreparedStatement statement=null;
  ResultSet res=null;
  try {
    if (projectId == onlineProjectId) {
      statement=m_pool.getPreparedStatement(C_FILE_READ_ONLINE_KEY);
      statement.setString(1,filename);
      statement.setInt(2,onlineProjectId);
      res=statement.executeQuery();
      if (res.next()) {
        int resId=res.getInt(C_RESOURCES_RESOURCE_ID);
        int parentId=res.getInt(C_RESOURCES_PARENT_ID);
        int resType=res.getInt(C_RESOURCES_RESOURCE_TYPE);
        int resFlags=res.getInt(C_RESOURCES_RESOURCE_FLAGS);
        int userId=res.getInt(C_RESOURCES_USER_ID);
        int groupId=res.getInt(C_RESOURCES_GROUP_ID);
        int fileId=res.getInt(C_RESOURCES_FILE_ID);
        int accessFlags=res.getInt(C_RESOURCES_ACCESS_FLAGS);
        int state=res.getInt(C_RESOURCES_STATE);
        int lockedBy=res.getInt(C_RESOURCES_LOCKED_BY);
        int launcherType=res.getInt(C_RESOURCES_LAUNCHER_TYPE);
        String launcherClass=res.getString(C_RESOURCES_LAUNCHER_CLASSNAME);
        long created=SqlHelper.getTimestamp(res,C_RESOURCES_DATE_CREATED).getTime();
        long modified=SqlHelper.getTimestamp(res,C_RESOURCES_DATE_LASTMODIFIED).getTime();
        int modifiedBy=res.getInt(C_RESOURCES_LASTMODIFIED_BY);
        int resSize=res.getInt(C_RESOURCES_SIZE);
        byte[] content=res.getBytes(C_RESOURCES_FILE_CONTENT);
        file=new CmsFile(resId,parentId,fileId,filename,resType,resFlags,userId,groupId,onlineProjectId,accessFlags,state,lockedBy,launcherType,launcherClass,created,modified,modifiedBy,content,resSize);
        res.close();
      }
 else {
        throw new CmsException("[" + this.getClass().getName() + "] "+ filename,CmsException.C_NOT_FOUND);
      }
    }
 else {
      file=readFileHeader(projectId,filename);
      if (file.getState() == C_STATE_DELETED) {
        throw new CmsException("[" + this.getClass().getName() + "] "+ CmsException.C_RESOURCE_DELETED);
      }
      statement=m_pool.getPreparedStatement(C_FILE_READ_KEY);
      statement.setInt(1,file.getFileId());
      res=statement.executeQuery();
      if (res.next()) {
        file.setContents(res.getBytes(C_FILE_CONTENT));
      }
 else {
        throw new CmsException("[" + this.getClass().getName() + "]"+ filename,CmsException.C_NOT_FOUND);
      }
      res.close();
    }
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
catch (  CmsException ex) {
    throw ex;
  }
catch (  Exception exc) {
    throw new CmsException("readFile " + exc.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
 finally {
    if (projectId == onlineProjectId) {
      if (statement != null) {
        m_pool.putPreparedStatement(C_FILE_READ_ONLINE_KEY,statement);
      }
    }
 else {
      if (statement != null) {
        m_pool.putPreparedStatement(C_FILE_READ_KEY,statement);
      }
    }
  }
  return file;
}
