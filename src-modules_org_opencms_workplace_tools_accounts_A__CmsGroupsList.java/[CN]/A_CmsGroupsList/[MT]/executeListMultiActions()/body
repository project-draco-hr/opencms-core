{
  if (getParamListAction().equals(LIST_MACTION_DELETE)) {
    Map<String,String[]> params=new HashMap<String,String[]>();
    params.put(A_CmsEditGroupDialog.PARAM_GROUPID,new String[]{getParamSelItems()});
    params.put(CmsDialog.PARAM_ACTION,new String[]{CmsDialog.DIALOG_INITIAL});
    try {
      getToolManager().jspForwardTool(this,getCurrentToolPath() + "/delete",params);
    }
 catch (    Exception e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DELETE_SELECTED_GROUPS_0),e);
    }
  }
 else   if (getParamListAction().equals(LIST_MACTION_ACTIVATE)) {
    try {
      Iterator<CmsListItem> itItems=getSelectedItems().iterator();
      while (itItems.hasNext()) {
        CmsListItem listItem=itItems.next();
        String groupName=listItem.get(LIST_COLUMN_NAME).toString();
        CmsGroup group=getCms().readGroup(groupName);
        if (!group.isEnabled()) {
          group.setEnabled(true);
          getCms().writeGroup(group);
        }
      }
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_ACTIVATE_SELECTED_GROUPS_0),e);
    }
  }
 else   if (getParamListAction().equals(LIST_MACTION_DEACTIVATE)) {
    try {
      Iterator<CmsListItem> itItems=getSelectedItems().iterator();
      while (itItems.hasNext()) {
        CmsListItem listItem=itItems.next();
        String groupName=listItem.get(LIST_COLUMN_NAME).toString();
        CmsGroup group=getCms().readGroup(groupName);
        if (group.isEnabled()) {
          group.setEnabled(false);
          getCms().writeGroup(group);
        }
      }
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DEACTIVATE_SELECTED_GROUPS_0),e);
    }
  }
 else {
    throwListUnsupportedActionException();
  }
  listSave();
}
