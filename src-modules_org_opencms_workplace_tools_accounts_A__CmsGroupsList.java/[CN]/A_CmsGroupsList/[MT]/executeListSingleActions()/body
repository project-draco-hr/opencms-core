{
  String groupId=getSelectedItem().getId();
  String groupName=getSelectedItem().get(LIST_COLUMN_NAME).toString();
  Map params=new HashMap();
  params.put(A_CmsEditGroupDialog.PARAM_GROUPID,groupId);
  params.put(A_CmsOrgUnitDialog.PARAM_OUFQN,m_paramOufqn);
  params.put(A_CmsEditGroupDialog.PARAM_GROUPNAME,groupName);
  params.put(CmsDialog.PARAM_ACTION,CmsDialog.DIALOG_INITIAL);
  if (getParamListAction().equals(LIST_DEFACTION_EDIT)) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit",params);
  }
 else   if (m_editActionIds.contains(getParamListAction())) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/group",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_USERS)) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/users",params);
  }
 else   if (m_deleteActionIds.contains(getParamListAction())) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/delete",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_ACTIVATE)) {
    try {
      CmsGroup group=getCms().readGroup(groupName);
      group.setEnabled(true);
      getCms().writeGroup(group);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_ACTIVATE_GROUP_1,groupName),e);
    }
  }
 else   if (getParamListAction().equals(LIST_ACTION_DEACTIVATE)) {
    try {
      CmsGroup group=getCms().readGroup(groupName);
      group.setEnabled(false);
      getCms().writeGroup(group);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DEACTIVATE_GROUP_1,groupName),e);
    }
  }
 else {
    throwListUnsupportedActionException();
  }
  listSave();
}
