{
  CmsObject cms=getCmsObject();
  CmsResource elementRes=cms.readResource(entry.getResourceId());
  CmsResource formatter=m_formatters.get(new Integer(elementRes.getTypeId()));
  if (formatter == null) {
    I_CmsResourceType type=OpenCms.getResourceManager().getResourceType(elementRes);
    String formatterPath=type.getConfiguration().get(CmsResourceTypeXmlSitemap.PARAM_SITEMAP_FORMATTER);
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatterPath)) {
      try {
        formatter=cms.readResource(formatterPath);
        m_formatters.put(new Integer(elementRes.getTypeId()),formatter);
      }
 catch (      CmsException e) {
        if (!LOG.isDebugEnabled()) {
          LOG.warn(e.getLocalizedMessage());
        }
        LOG.debug(e.getLocalizedMessage(),e);
      }
    }
  }
  if (formatter == null) {
    formatter=m_formatters.get(KEY_DEFAULT_FORMATTER);
    m_formatters.put(new Integer(elementRes.getTypeId()),formatter);
  }
  HttpServletRequest m_req=getRequest();
  HttpServletResponse m_res=getResponse();
  Object currentElement=m_req.getAttribute(CmsADEManager.ATTR_CURRENT_ELEMENT);
  m_req.setAttribute(CmsADEManager.ATTR_CURRENT_ELEMENT,new CmsSiteEntryBean(entry.getResourceId(),entry.getName(),entry.getTitle(),entry.getProperties(),null));
  try {
    return new String(OpenCms.getResourceManager().getLoader(formatter).dump(cms,formatter,null,cms.getRequestContext().getLocale(),m_req,m_res),CmsLocaleManager.getResourceEncoding(cms,elementRes));
  }
  finally {
    m_req.setAttribute(CmsADEManager.ATTR_CURRENT_ELEMENT,currentElement);
  }
}
