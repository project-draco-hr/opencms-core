{
  List<CmsSitemapEntry> result=new ArrayList<CmsSitemapEntry>(array.length());
  for (int i=0; i < array.length(); i++) {
    JSONObject json=array.optJSONObject(i);
    CmsUUID id;
    String entryId=json.optString(JsonSiteEntry.id.name());
    if (!CmsStringUtil.isEmptyOrWhitespaceOnly(entryId)) {
      try {
        id=new CmsUUID(entryId);
      }
 catch (      NumberFormatException e) {
        LOG.error(e.getLocalizedMessage());
        continue;
      }
    }
 else {
      id=new CmsUUID();
    }
    CmsUUID linkId;
    try {
      linkId=new CmsUUID(json.optString(JsonSiteEntry.linkId.name()));
    }
 catch (    NumberFormatException e) {
      LOG.error(e.getLocalizedMessage());
      continue;
    }
    if (json.has(JsonSiteEntry.path.name())) {
      String path=json.optString(JsonSiteEntry.path.name());
      try {
        CmsResource resource=getCmsObject().readResource(path);
        linkId=resource.getStructureId();
      }
 catch (      CmsException e) {
        LOG.error(e.getLocalizedMessage());
      }
    }
    CmsObject cms=getCmsObject();
    String name=json.optString(JsonSiteEntry.name.name());
    String title=json.optString(JsonSiteEntry.title.name());
    Map<String,String> properties=new HashMap<String,String>();
    JSONObject jsonProps=json.optJSONObject(JsonSiteEntry.properties.name());
    Iterator<String> itKeys=jsonProps.keys();
    while (itKeys.hasNext()) {
      String key=itKeys.next();
      CmsXmlContentProperty currentPropertyConf=propertyConf.get(key);
      String propType=CmsXmlContentProperty.PropType.string.name();
      if (currentPropertyConf != null) {
        propType=currentPropertyConf.getPropertyType();
      }
      properties.put(key,CmsXmlContentPropertyHelper.getPropValueIds(cms,propType,jsonProps.optString(key)));
    }
    JSONArray jsonSub=json.optJSONArray(JsonSiteEntry.subentries.name());
    CmsSitemapEntry entry=new CmsSitemapEntry(id,null,linkId,name,title,properties,recursive ? jsonToEntryList(jsonSub,propertyConf,true) : null,null);
    result.add(entry);
  }
  return result;
}
