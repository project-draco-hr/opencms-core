{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  CmsObject cms=getCmsObject();
  if (!checkParameters(request,result,ReqParam.ACTION.getName(),ReqParam.LOCALE.getName(),ReqParam.SITEMAP.getName())) {
    return result;
  }
  String actionParam=request.getParameter(ReqParam.ACTION.getName());
  Action action=Action.valueOf(actionParam.toUpperCase());
  String localeParam=request.getParameter(ReqParam.LOCALE.getName());
  cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));
  JSONObject data=new JSONObject();
  if (checkParameters(request,null,ReqParam.DATA.getName())) {
    String dataParam=request.getParameter(ReqParam.DATA.getName());
    data=new JSONObject(dataParam);
  }
  String sitemapParam=request.getParameter(ReqParam.SITEMAP.getName());
  if (action.equals(Action.ALL)) {
    CmsResource sitemapRes=CmsHistoryResourceHandler.getResourceWithHistory(cms,sitemapParam);
    CmsXmlSitemap xmlSitemap=CmsXmlSitemapFactory.unmarshal(cms,sitemapRes,request);
    result=getSitemap(sitemapRes,xmlSitemap);
  }
 else   if (action.equals(Action.GET)) {
    if (checkParameters(data,null,JsonRequest.FAV.getName())) {
      result.put(JsonResponse.FAVORITES.getName(),getFavoriteList());
    }
 else     if (checkParameters(data,result,JsonRequest.REC.getName())) {
      result.put(JsonResponse.RECENT.getName(),addContents(m_sessionCache.getRecentList()));
    }
 else {
      return result;
    }
  }
 else   if (action.equals(Action.SET)) {
    if (checkParameters(data,null,JsonRequest.FAV.getName())) {
      JSONArray list=data.optJSONArray(JsonRequest.FAV.getName());
      saveFavoriteList(cms,list);
    }
 else     if (checkParameters(data,result,JsonRequest.REC.getName())) {
      JSONArray list=data.optJSONArray(JsonRequest.REC.getName());
      m_sessionCache.setRecentList(list);
    }
 else {
      return result;
    }
  }
 else   if (action.equals(Action.VALIDATE)) {
    if (!checkParameters(data,result,JsonRequest.NAME.getName())) {
      return result;
    }
    String name=data.optString(JsonRequest.NAME.getName());
    result.put(JsonResponse.NAME.getName(),cms.getRequestContext().getFileTranslator().translateResource(name));
  }
 else   if (action.equals(Action.PROPS)) {
    CmsResource sitemapRes=cms.readResource(sitemapParam);
    result.put(JsonResponse.PROPERTIES.getName(),getPropertyInfo(sitemapRes));
  }
 else   if (action.equals(Action.SAVE)) {
    CmsResource sitemapRes=cms.readResource(sitemapParam);
    saveSitemap(sitemapRes,data);
  }
 else   if (action.equals(Action.STARTEDIT)) {
    try {
      cms.lockResourceTemporary(sitemapParam);
    }
 catch (    CmsException e) {
      error(result,e.getLocalizedMessage(getWorkplaceLocale()));
    }
  }
 else   if (action.equals(Action.STOPEDIT)) {
    try {
      cms.unlockResource(sitemapParam);
    }
 catch (    CmsException e) {
      error(result,e.getLocalizedMessage(getWorkplaceLocale()));
    }
  }
 else {
    error(result,Messages.get().getBundle(getWorkplaceLocale()).key(Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,ReqParam.ACTION.getName(),actionParam));
  }
  return result;
}
