{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  CmsObject cms=getCmsObject();
  if (!checkParameters(request,result,ReqParam.action.name(),ReqParam.locale.name(),ReqParam.sitemap.name())) {
    return result;
  }
  String actionParam=request.getParameter(ReqParam.action.name());
  Action action=Action.valueOf(actionParam.toUpperCase());
  String localeParam=request.getParameter(ReqParam.locale.name());
  cms.getRequestContext().setLocale(CmsLocaleManager.getLocale(localeParam));
  JSONObject data=new JSONObject();
  if (checkParameters(request,null,ReqParam.data.name())) {
    String dataParam=request.getParameter(ReqParam.data.name());
    data=new JSONObject(dataParam);
  }
  String sitemapParam=request.getParameter(ReqParam.sitemap.name());
  if (action.equals(Action.ALL)) {
    CmsResource sitemapRes=CmsHistoryResourceHandler.getResourceWithHistory(cms,sitemapParam);
    CmsXmlSitemap xmlSitemap=CmsXmlSitemapFactory.unmarshal(cms,sitemapRes,request);
    result=getSitemap(xmlSitemap);
    CmsSitemapManager manager=OpenCms.getSitemapManager();
    List<CmsResource> creatableElements=manager.getCreatableElements(cms,sitemapParam,request);
    JSONArray creatableTypes=new JSONArray();
    JSONArray models=new JSONArray();
    for (    CmsResource resource : creatableElements) {
      String typeName=OpenCms.getResourceManager().getResourceType(resource.getTypeId()).getTypeName();
      creatableTypes.put(typeName);
      CmsSiteEntryBean siteEntryData=resourceToSiteEntryBean(cms,resource);
      if (typeName.equals(CmsResourceTypeXmlContainerPage.getStaticTypeName())) {
        models.put(jsonifyEntry(siteEntryData,getPropertyConfig(sitemapRes)));
      }
    }
    addContents(models,getPropertyConfig(sitemapRes));
    result.put(JsonResponse.types.name(),creatableTypes);
    result.put(JsonResponse.models.name(),models);
    result.put(JsonTemplate.template.name(),getTemplates());
  }
 else   if (action.equals(Action.GET)) {
    if (checkParameters(data,null,JsonRequest.fav.name())) {
      result.put(JsonResponse.favorites.name(),getFavoriteList());
    }
 else     if (checkParameters(data,result,JsonRequest.rec.name())) {
      CmsResource sitemapRes=CmsHistoryResourceHandler.getResourceWithHistory(cms,sitemapParam);
      result.put(JsonResponse.recent.name(),addIds(addContents(m_sessionCache.getRecentList(),getPropertyConfig(sitemapRes))));
    }
 else {
      return result;
    }
  }
 else   if (action.equals(Action.SET)) {
    if (checkParameters(data,null,JsonRequest.fav.name())) {
      JSONArray list=data.optJSONArray(JsonRequest.fav.name());
      saveFavoriteList(cms,list);
    }
 else     if (checkParameters(data,result,JsonRequest.rec.name())) {
      JSONArray list=data.optJSONArray(JsonRequest.rec.name());
      m_sessionCache.setRecentList(list);
    }
 else {
      return result;
    }
  }
 else   if (action.equals(Action.VALIDATE)) {
    if (!checkParameters(data,result,JsonRequest.name.name())) {
      return result;
    }
    String name=data.optString(JsonRequest.name.name());
    result.put(JsonResponse.name.name(),cms.getRequestContext().getFileTranslator().translateResource(name));
  }
 else   if (action.equals(Action.PROPS)) {
    CmsResource sitemapRes=cms.readResource(sitemapParam);
    result.put(JsonResponse.properties.name(),CmsXmlContentPropertyHelper.getPropertyInfoJSON(cms,sitemapRes));
  }
 else   if (action.equals(Action.SAVE)) {
    CmsResource sitemapRes=cms.readResource(sitemapParam);
    saveSitemap(sitemapRes,data);
  }
 else   if (action.equals(Action.STARTEDIT)) {
    try {
      cms.lockResourceTemporary(sitemapParam);
    }
 catch (    CmsException e) {
      LOG.warn(e.getLocalizedMessage(),e);
      error(result,e.getLocalizedMessage(getWorkplaceLocale()));
    }
  }
 else   if (action.equals(Action.STOPEDIT)) {
    try {
      cms.unlockResource(sitemapParam);
    }
 catch (    CmsException e) {
      LOG.debug(e.getLocalizedMessage(),e);
    }
  }
 else   if (action.equals(Action.CONTENT)) {
    CmsResource sitemapRes=CmsHistoryResourceHandler.getResourceWithHistory(cms,sitemapParam);
    JSONArray entries=data.getJSONArray(JsonResponse.entries.name().toLowerCase());
    addContents(entries,getPropertyConfig(sitemapRes));
    result.put(JsonResponse.entries.name().toLowerCase(),entries);
  }
 else   if (action.equals(Action.NEW_ENTRY)) {
    CmsResource sitemapRes=CmsHistoryResourceHandler.getResourceWithHistory(cms,sitemapParam);
    CmsSitemapManager manager=OpenCms.getSitemapManager();
    String type=data.getString(JsonRequest.type.name());
    CmsResource newResource=manager.createNewElement(cms,sitemapParam,request,type);
    CmsProperty titleProp=cms.readPropertyObject(newResource,CmsPropertyDefinition.PROPERTY_TITLE,false);
    String title=titleProp.getValue();
    String name=newResource.getName();
    CmsSiteEntryBean entryBean=new CmsSiteEntryBean(new CmsUUID(),null,newResource.getStructureId(),name,title,new HashMap<String,String>(),new ArrayList<CmsSiteEntryBean>());
    Map<String,CmsXmlContentProperty> propertyConf=getPropertyConfig(sitemapRes);
    JSONObject jsonEntry=jsonifyEntry(entryBean,propertyConf);
    JSONArray entries=new JSONArray();
    entries.put(jsonEntry);
    result.put(JsonResponse.entry.name(),jsonEntry);
  }
 else   if (action.equals(Action.NEW_SITEMAP)) {
    CmsSitemapManager manager=OpenCms.getSitemapManager();
    CmsResource newSitemapRes=manager.createSitemap(cms,data.getString(JsonRequest.title.name()),sitemapParam,request);
    saveSitemap(newSitemapRes,data);
    result.put(JsonResponse.path.name(),cms.getSitePath(newSitemapRes));
  }
 else {
    error(result,Messages.get().getBundle(getWorkplaceLocale()).key(Messages.ERR_JSON_WRONG_PARAMETER_VALUE_2,ReqParam.action.name(),actionParam));
  }
  return result;
}
