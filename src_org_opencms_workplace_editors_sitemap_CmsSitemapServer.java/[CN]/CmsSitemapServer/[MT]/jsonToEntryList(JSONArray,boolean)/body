{
  List<CmsSiteEntryBean> result=new ArrayList<CmsSiteEntryBean>(array.length());
  for (int i=0; i < array.length(); i++) {
    JSONObject json=array.optJSONObject(i);
    CmsUUID id;
    if (json.has(JsonSiteEntry.ID.getName())) {
      try {
        id=new CmsUUID(json.optString(JsonSiteEntry.ID.getName()));
      }
 catch (      NumberFormatException e) {
        if (!LOG.isDebugEnabled()) {
          LOG.warn(e.getLocalizedMessage());
        }
        LOG.debug(e.getLocalizedMessage(),e);
        continue;
      }
    }
 else {
      id=new CmsUUID();
    }
    CmsUUID linkId;
    try {
      linkId=new CmsUUID(json.optString(JsonSiteEntry.LINK_ID.getName()));
    }
 catch (    NumberFormatException e) {
      if (!LOG.isDebugEnabled()) {
        LOG.warn(e.getLocalizedMessage());
      }
      LOG.debug(e.getLocalizedMessage(),e);
      continue;
    }
    String name=json.optString(JsonSiteEntry.NAME.getName());
    String title=json.optString(JsonSiteEntry.TITLE.getName());
    Map<String,String> properties=new HashMap<String,String>();
    JSONObject jsonProps=json.optJSONObject(JsonSiteEntry.PROPERTIES.getName());
    Iterator<String> itKeys=jsonProps.keys();
    while (itKeys.hasNext()) {
      String key=itKeys.next();
      String value=jsonProps.optString(key);
      properties.put(key,value);
    }
    JSONArray jsonSub=json.optJSONArray(JsonSiteEntry.SUBENTRIES.getName());
    CmsSiteEntryBean entry=new CmsSiteEntryBean(id,linkId,name,title,properties,recursive ? jsonToEntryList(jsonSub,true) : Collections.<CmsSiteEntryBean>emptyList());
    result.add(entry);
  }
  return result;
}
