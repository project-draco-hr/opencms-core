{
  CmsObject cms=getCmsObject();
  CmsSitemapBean sitemap=xmlSitemap.getSitemap(cms,cms.getRequestContext().getLocale());
  JSONObject result=new JSONObject();
  result.put(JsonResponse.TOOLBAR.getName(),Boolean.TRUE);
  JSONArray siteEntries=new JSONArray();
  for (  CmsSiteEntryBean entry : sitemap.getSiteEntries()) {
    JSONObject siteEntry=jsonifyEntry(entry);
    if (siteEntry != null) {
      siteEntries.put(siteEntry);
    }
  }
  result.put(JsonResponse.SITEMAP.getName(),siteEntries);
  boolean topLevel=true;
  CmsRelationFilter filter=CmsRelationFilter.SOURCES.filterType(CmsRelationType.XML_STRONG);
  for (  CmsRelation relation : cms.getRelationsForResource(resource,filter)) {
    if (CmsResourceTypeXmlSitemap.isSitemap(relation.getSource(cms,CmsResourceFilter.ALL))) {
      topLevel=false;
      break;
    }
  }
  result.put(JsonResponse.SUB_SITEMAP.getName(),!topLevel);
  Locale workplaceLocale=getWorkplaceLocale();
  if (xmlSitemap.getFile() instanceof I_CmsHistoryResource) {
    result.put(JsonResponse.NO_EDIT_REASON.getName(),Messages.get().getBundle(workplaceLocale).key(Messages.GUI_NO_EDIT_REASON_HISTORY_0));
    result.put(JsonResponse.TOOLBAR.getName(),Boolean.FALSE);
  }
 else   if (!cms.hasPermissions(resource,CmsPermissionSet.ACCESS_WRITE,false,CmsResourceFilter.DEFAULT)) {
    result.put(JsonResponse.NO_EDIT_REASON.getName(),Messages.get().getBundle(workplaceLocale).key(Messages.GUI_NO_EDIT_REASON_PERMISSION_0));
  }
 else {
    CmsLock lock=cms.getLock(resource);
    if (!lock.isUnlocked() && !lock.isOwnedBy(cms.getRequestContext().currentUser())) {
      result.put(JsonResponse.NO_EDIT_REASON.getName(),Messages.get().getBundle(workplaceLocale).key(Messages.GUI_NO_EDIT_REASON_LOCK_1,cms.readUser(lock.getUserId()).getName()));
    }
  }
  if (!result.has(JsonResponse.NO_EDIT_REASON.getName())) {
    result.put(JsonResponse.PROPERTIES.getName(),getPropertyInfo(resource));
  }
  return result;
}
