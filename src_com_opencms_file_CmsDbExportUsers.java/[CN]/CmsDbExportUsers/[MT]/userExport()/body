{
  newElement=docXml.createElement(C_TUSERS);
  firstElement.appendChild(newElement);
  sectionElement=newElement;
  Vector users=RB.getUsers(user,project);
  Enumeration enum=users.elements();
  while (enum.hasMoreElements()) {
    newElement=docXml.createElement(C_TUSEROBJ);
    sectionElement.appendChild(newElement);
    parentElement=newElement;
    A_CmsUser u=(A_CmsUser)enum.nextElement();
    newElement=docXml.createElement(C_TULOGIN);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getName());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUPASSWD);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode("Kennwort");
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUNAME);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getLastname());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUFIRSTNAME);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getFirstname());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUDESC);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getDescription());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUEMAIL);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(u.getEmail());
    newElement.appendChild(newNode);
    A_CmsGroup g=u.getDefaultGroup();
    newElement=docXml.createElement(C_TUDGROUP);
    parentElement.appendChild(newElement);
    newNode=docXml.createTextNode(g.getName());
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUSERGROUPS);
    parentElement.appendChild(newElement);
    grandparentElement=parentElement;
    parentElement=newElement;
    Vector ug=RB.getGroupsOfUser(user,project,u.getName());
    Enumeration ugenum=ug.elements();
    while (ugenum.hasMoreElements()) {
      A_CmsGroup ng=(A_CmsGroup)ugenum.nextElement();
      newElement=docXml.createElement(C_TUGROUP);
      parentElement.appendChild(newElement);
      newNode=docXml.createTextNode(ng.getName());
      newElement.appendChild(newNode);
    }
    String help=null;
    if (u.getDisabled() == false) {
      help=new String("false");
    }
 else {
      help=new String("true");
    }
    newElement=docXml.createElement(C_TUDISABLED);
    grandparentElement.appendChild(newElement);
    newNode=docXml.createTextNode(help);
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUFLAG);
    grandparentElement.appendChild(newElement);
    newNode=docXml.createTextNode(String.valueOf(u.getFlags()));
    newElement.appendChild(newNode);
    newElement=docXml.createElement(C_TUADDINFO);
    grandparentElement.appendChild(newElement);
    parentElement=newElement;
    Hashtable h=u.getAdditionalInfo();
    Enumeration enum2=h.keys();
    Enumeration enum3=h.elements();
    while (enum2.hasMoreElements()) {
      String keyhelp=(String)enum2.nextElement();
      if (!(keyhelp.equals(C_ADDITIONAL_INFO_DEFAULTGROUP_ID))) {
        newElement=docXml.createElement(C_TUINFOKEY);
        parentElement.appendChild(newElement);
        newNode=docXml.createTextNode(keyhelp);
        newElement.appendChild(newNode);
        newElement=docXml.createElement(C_TUINFOVALUE);
        parentElement.appendChild(newElement);
        newNode=docXml.createTextNode(enum3.nextElement().toString());
        newElement.appendChild(newNode);
      }
    }
  }
}
