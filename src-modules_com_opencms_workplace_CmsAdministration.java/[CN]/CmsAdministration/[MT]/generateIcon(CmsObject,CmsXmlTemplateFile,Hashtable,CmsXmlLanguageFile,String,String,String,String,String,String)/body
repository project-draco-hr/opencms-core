{
  boolean hasAccessVisible=(new Boolean(accessVisible)).booleanValue();
  String iconPicPath=(String)resourcesUri(cms,"",null,null);
  if (sender.startsWith(C_VFS_PATH_SYSTEM + "modules")) {
    if (picName.startsWith("/")) {
      iconPicPath=CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getServletUrl() + sender.substring(0,sender.indexOf("/administration/"));
    }
 else {
      iconPicPath=CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getServletUrl() + sender.substring(0,sender.indexOf("administration/")) + "pics/";
    }
  }
  boolean activate=true;
  if (iconActiveMethod != null && !"".equals(iconActiveMethod)) {
    String className=iconActiveMethod.substring(0,iconActiveMethod.lastIndexOf("."));
    iconActiveMethod=iconActiveMethod.substring(iconActiveMethod.lastIndexOf(".") + 1);
    Method groupsMethod=null;
    try {
      Object o=CmsTemplateClassManager.getClassInstance(className);
      groupsMethod=o.getClass().getMethod(iconActiveMethod,new Class[]{CmsObject.class,CmsXmlLanguageFile.class,Hashtable.class});
      activate=((Boolean)groupsMethod.invoke(o,new Object[]{cms,lang,parameters})).booleanValue();
    }
 catch (    NoSuchMethodException exc) {
      throwException("Could not find icon activation method " + iconActiveMethod + " in calling class "+ className+ " for generating icon.",CmsLegacyException.C_NOT_FOUND);
    }
catch (    InvocationTargetException targetEx) {
      Throwable e=targetEx.getTargetException();
      if (!(e instanceof CmsException)) {
        throwException("Icon activation method " + iconActiveMethod + " in calling class "+ className+ " throwed an exception. "+ e,CmsLegacyException.C_UNKNOWN_EXCEPTION);
      }
 else {
        throw (CmsException)e;
      }
    }
catch (    Exception exc2) {
      throwException("Icon activation method " + iconActiveMethod + " in calling class "+ className+ " was found but could not be invoked. "+ exc2,CmsLegacyException.C_UNKNOWN_EXCEPTION);
    }
  }
  boolean visible=true;
  if (iconVisibleMethod != null && !"".equals(iconVisibleMethod)) {
    String className=iconVisibleMethod.substring(0,iconVisibleMethod.lastIndexOf("."));
    iconVisibleMethod=iconVisibleMethod.substring(iconVisibleMethod.lastIndexOf(".") + 1);
    Method groupsMethod=null;
    try {
      Object o=CmsTemplateClassManager.getClassInstance(className);
      groupsMethod=o.getClass().getMethod(iconVisibleMethod,new Class[]{CmsObject.class,CmsXmlLanguageFile.class,Hashtable.class});
      visible=((Boolean)groupsMethod.invoke(o,new Object[]{cms,lang,parameters})).booleanValue();
    }
 catch (    NoSuchMethodException exc) {
      throwException("Could not find icon activation method " + iconVisibleMethod + " in calling class "+ className+ " for generating icon.",CmsLegacyException.C_NOT_FOUND);
    }
catch (    InvocationTargetException targetEx) {
      Throwable e=targetEx.getTargetException();
      if (!(e instanceof CmsException)) {
        throwException("Icon activation method " + iconVisibleMethod + " in calling class "+ className+ " throwed an exception. "+ e);
      }
 else {
        throw (CmsException)e;
      }
    }
catch (    Exception exc2) {
      throwException("Icon activation method " + iconVisibleMethod + " in calling class "+ className+ " was found but could not be invoked. "+ exc2);
    }
  }
  templateDocument.setData("linkTo",CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getServletUrl() + C_VFS_PATH_WORKPLACE + "action/administration_content_top.html?sender="+ sender);
  StringBuffer iconLabelBuffer=new StringBuffer(lang.getLanguageValue(languageKey));
  if (iconLabelBuffer.toString().indexOf("- ") != -1) {
    iconLabelBuffer.insert(iconLabelBuffer.toString().indexOf("- ") + 1,"<BR>");
  }
  templateDocument.setData("linkName",iconLabelBuffer.toString());
  if (visible && hasAccessVisible) {
    if (activate) {
      templateDocument.setData("picture",iconPicPath + picName + ".gif");
      return templateDocument.getProcessedDataValue("defaulticon");
    }
 else {
      templateDocument.setData("picture",iconPicPath + picName + "_in.gif");
      return templateDocument.getProcessedDataValue("deactivatedicon");
    }
  }
 else {
    return templateDocument.getProcessedDataValue("noicon");
  }
}
