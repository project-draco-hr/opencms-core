{
  if (DEBUG > 0)   System.err.println("FlexDispatcher: Include called with target=" + m_target + " (ext_target="+ m_ext_target+ ")");
  if (m_ext_target != null) {
    if (DEBUG > 0)     System.err.println("FlexDispatcher: Dispatching to external target " + m_ext_target);
    m_rd.include(req,res);
    return;
  }
  if (req.containsIncludeCall(m_target)) {
    throw new ServletException("FlexDispatcher: Dectected inclusion loop for target " + m_target);
  }
 else {
    req.addInlucdeCall(m_target);
  }
  if (res.isSuspended())   return;
  res.setCmsIncludeMode(true);
  CmsFlexRequest w_req=new CmsFlexRequest(req,m_target);
  CmsFlexResponse w_res=new CmsFlexResponse(res);
  CmsFlexCacheEntry entry=null;
  if (req.isCacheable()) {
    entry=m_cache.get(w_req.getCmsCacheKey());
    if (entry != null) {
      try {
        if (DEBUG > 0)         System.err.println("FlexDispatcher: Loading file from cache for " + m_target);
        entry.service(w_req,w_res);
      }
 catch (      com.opencms.core.CmsException e) {
        throw new ServletException("FlexDispatcher: Error while loading file from cache for " + m_target + "\n"+ e,e);
      }
    }
 else {
      CmsFlexCacheKey res_key=m_cache.getKey(CmsFlexCacheKey.getKeyName(m_target,w_req.isOnline()));
      if (res_key != null) {
        w_res.setCmsCacheKey(res_key);
      }
 else {
        String cache=null;
        try {
          cache=m_cms.readProperty(m_target,com.opencms.flex.I_CmsResourceLoader.C_LOADER_CACHEPROPERTY);
          m_cache.putKey(w_res.setCmsCacheKey(m_target,cache,req.isOnline()));
        }
 catch (        com.opencms.core.CmsException e) {
          if (e.getType() == e.C_FLEX_CACHE) {
            log("Invalid cache key for external resource \"" + m_target + "\": "+ cache);
            m_cache.putKey(w_res.getCmsCacheKey());
          }
 else {
            throw new ServletException("FlexDispatcher: Error while loading cache properties for " + m_target + "\n"+ e,e);
          }
        }
        if (DEBUG > 1)         System.err.println("FlexDispatcher: Cache properties for file " + m_target + " are: "+ cache);
      }
    }
  }
  if (entry == null) {
    com.opencms.launcher.CmsLauncherManager manager=m_cms.getLauncherManager();
    com.opencms.flex.I_CmsResourceLoader loader=null;
    String variation=null;
    if (w_req.isCacheable())     variation=w_res.getCmsCacheKey().matchRequestKey(w_req.getCmsCacheKey());
    w_res.setCmsCachingRequired(variation != null);
    com.opencms.file.CmsResource resource=null;
    try {
      resource=m_cms.readFileHeader(m_target);
      int type=resource.getLauncherType();
      if (DEBUG > 0)       System.err.println("FlexDispatcher: Loading resource type " + type);
      loader=(com.opencms.flex.I_CmsResourceLoader)manager.getLauncher(type);
    }
 catch (    java.lang.ClassCastException e) {
      throw new ServletException("FlexDispatcher: CmsResourceLoader interface not implemented for cms resource " + m_target + "\n"+ e,e);
    }
catch (    com.opencms.core.CmsException e) {
      throw new ServletException("FlexDispatcher: Error while reading header for cms resource " + m_target + "\n"+ e,e);
    }
    if (DEBUG > 0)     System.err.println("FlexDispatcher: Internal call, loading file using loader.service() for " + m_target);
    loader.service(m_cms,resource,w_req,w_res);
    entry=w_res.processCacheEntry();
    if ((entry != null) && (variation != null) && w_req.isCacheable()) {
      m_cache.put(w_res.getCmsCacheKey(),entry,variation);
    }
  }
  if (res.hasIncludeList()) {
    java.util.Map headers=w_res.getHeaders();
    byte[] result=w_res.getWriterBytes();
    if (DEBUG > 3)     System.err.println("Non-display include call - Result of include is:\n" + new String(result));
    res.processHeaders(headers,res);
    res.addToIncludeResults(result);
  }
  res.setCmsIncludeMode(false);
  req.removeIncludeCall(m_target);
}
