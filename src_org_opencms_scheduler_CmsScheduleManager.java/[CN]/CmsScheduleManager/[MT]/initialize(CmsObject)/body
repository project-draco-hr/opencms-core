{
  if ((OpenCms.getRunLevel() > OpenCms.RUNLEVEL_1_CORE_OBJECT) || (adminCms != null)) {
    if ((adminCms == null) || !adminCms.isAdmin()) {
      throw new CmsSecurityException(CmsSecurityException.C_SECURITY_ADMIN_PRIVILEGES_REQUIRED);
    }
  }
  m_jobs=new ArrayList();
  m_adminCms=adminCms;
  Properties properties=new Properties();
  properties.put(StdSchedulerFactory.PROP_SCHED_INSTANCE_NAME,"OpenCmsScheduler");
  properties.put(StdSchedulerFactory.PROP_SCHED_THREAD_NAME,"OpenCms: Scheduler");
  properties.put(StdSchedulerFactory.PROP_SCHED_RMI_EXPORT,String.valueOf(false));
  properties.put(StdSchedulerFactory.PROP_SCHED_RMI_PROXY,String.valueOf(false));
  properties.put(StdSchedulerFactory.PROP_THREAD_POOL_CLASS,CmsSchedulerThreadPool.class.getName());
  properties.put(StdSchedulerFactory.PROP_JOB_STORE_CLASS,"org.quartz.simpl.RAMJobStore");
  try {
    SchedulerFactory schedulerFactory=new StdSchedulerFactory(properties);
    m_scheduler=schedulerFactory.getScheduler();
  }
 catch (  Exception e) {
    LOG.error(Messages.get().key(Messages.LOG_NO_SCHEDULER_0),e);
    m_scheduler=null;
    return;
  }
  if (LOG.isInfoEnabled()) {
    LOG.info(Messages.get().key(Messages.INIT_SCHEDULER_INITIALIZED_0));
  }
  if (m_configuredJobs != null) {
    for (int i=0; i < m_configuredJobs.size(); i++) {
      scheduleJob(adminCms,(CmsScheduledJobInfo)m_configuredJobs.get(i));
    }
  }
  try {
    m_scheduler.start();
  }
 catch (  Exception e) {
    LOG.error(Messages.get().key(Messages.LOG_CANNOT_START_SCHEDULER_0),e);
    m_scheduler=null;
    return;
  }
  if (LOG.isInfoEnabled()) {
    LOG.info(Messages.get().key(Messages.INIT_SCHEDULER_STARTED_0));
    LOG.info(Messages.get().key(Messages.INIT_SCHEDULER_CONFIG_FINISHED_0));
  }
}
