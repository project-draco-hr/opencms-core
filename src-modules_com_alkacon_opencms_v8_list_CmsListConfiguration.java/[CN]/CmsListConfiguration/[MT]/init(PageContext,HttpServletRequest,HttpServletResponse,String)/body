{
  super.init(context,req,res);
  try {
    CmsObject cms=getCmsObject();
    CmsFile file=null;
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(configPath)) {
      CmsContainerElementBean element=OpenCms.getADEConfigurationManager().getCurrentElement(req);
      file=cms.readFile(cms.readResource(element.getId()));
    }
 else {
      file=cms.readFile(configPath);
    }
    m_content=CmsXmlContentFactory.unmarshal(cms,file);
    m_mapping=null;
    int mapsize=m_content.getValues(NODE_MAPPING,getRequestContext().getLocale()).size();
    if (mapsize > 0) {
      m_mapping=new CmsListContentMapping();
      for (int i=1; i <= mapsize; i++) {
        String basePath=CmsXmlUtils.createXpath(NODE_MAPPING,i);
        String field=m_content.getStringValue(cms,CmsXmlUtils.concatXpath(basePath,"Field"),getRequestContext().getLocale());
        String defaultValue=m_content.getStringValue(cms,CmsXmlUtils.concatXpath(basePath,"Default"),getRequestContext().getLocale());
        String maxLenghtStr=m_content.getStringValue(cms,CmsXmlUtils.concatXpath(basePath,"MaxLength"),getRequestContext().getLocale());
        List<I_CmsXmlContentValue> xmlNodes=m_content.getValues(CmsXmlUtils.concatXpath(basePath,"XmlNode"),getRequestContext().getLocale());
        List<String> nodes=new ArrayList<String>(xmlNodes.size());
        for (int j=0; j < xmlNodes.size(); j++) {
          nodes.add(xmlNodes.get(j).getStringValue(cms));
        }
        m_mapping.addListFieldMapping(nodes,field,maxLenghtStr,defaultValue);
      }
    }
  }
 catch (  Exception e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(e.getMessage(),e);
    }
  }
}
