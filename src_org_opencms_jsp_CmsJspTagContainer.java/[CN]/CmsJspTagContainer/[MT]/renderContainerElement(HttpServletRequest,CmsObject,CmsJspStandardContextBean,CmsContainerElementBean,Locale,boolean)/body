{
  CmsTemplateContext context=(CmsTemplateContext)(request.getAttribute(CmsTemplateContextManager.ATTR_TEMPLATE_CONTEXT));
  if ((context == null) && alreadyFull) {
    return false;
  }
  boolean showInContext=shouldShowInContext(element,context);
  boolean isOnline=cms.getRequestContext().getCurrentProject().isOnlineProject();
  if (isOnline && !showInContext) {
    return false;
  }
  element.initResource(cms);
  if (isOnline && !element.isReleasedAndNotExpired()) {
    return false;
  }
  ServletRequest req=pageContext.getRequest();
  ServletResponse res=pageContext.getResponse();
  String containerType=getType();
  int containerWidth=getContainerWidth();
  CmsADEConfigData adeConfig=OpenCms.getADEManager().lookupConfiguration(cms,cms.getRequestContext().getRootUri());
  boolean isGroupContainer=element.isGroupContainer(cms);
  boolean isInheritedContainer=element.isInheritedContainer(cms);
  I_CmsFormatterBean formatterConfig=null;
  if (!isOnline) {
    if (!isGroupContainer && !isInheritedContainer) {
      formatterConfig=ensureValidFormatterSettings(cms,element,adeConfig,getName(),containerType,containerWidth);
    }
    getSessionCache(cms).setCacheContainerElement(element.editorHash(),element);
  }
  if (isGroupContainer || isInheritedContainer) {
    if (alreadyFull) {
      return false;
    }
    List<CmsContainerElementBean> subElements;
    if (isGroupContainer) {
      subElements=getGroupContainerElements(cms,element,req,containerType);
    }
 else {
      subElements=getInheritedContainerElements(cms,element);
    }
    printElementWrapperTagStart(isOnline,cms,element,true);
    for (    CmsContainerElementBean subelement : subElements) {
      try {
        subelement.initResource(cms);
        boolean shouldShowSubElementInContext=shouldShowInContext(subelement,context);
        if (isOnline && (!shouldShowSubElementInContext || !subelement.isReleasedAndNotExpired())) {
          continue;
        }
        I_CmsFormatterBean subElementFormatterConfig=null;
        if (!isOnline) {
          subElementFormatterConfig=ensureValidFormatterSettings(cms,subelement,adeConfig,getName(),containerType,containerWidth);
          getSessionCache(cms).setCacheContainerElement(subelement.editorHash(),subelement);
        }
 else {
          String settingsKey=CmsFormatterConfig.getSettingsKeyForContainer(getName());
          if (subelement.getSettings().containsKey(settingsKey)) {
            String formatterConfigId=subelement.getSettings().get(settingsKey);
            if (CmsUUID.isValidUUID(formatterConfigId)) {
              subElementFormatterConfig=OpenCms.getADEManager().getCachedFormatters(cms.getRequestContext().getCurrentProject().isOnlineProject()).getFormatters().get(new CmsUUID(formatterConfigId));
            }
          }
        }
        if (subElementFormatterConfig == null) {
          CmsFormatterConfiguration subelementFormatters=adeConfig.getFormatters(cms,subelement.getResource());
          subElementFormatterConfig=subelementFormatters.getDefaultFormatter(containerType,containerWidth);
        }
        if (subElementFormatterConfig == null) {
          if (LOG.isErrorEnabled()) {
            LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,subelement.getSitePath(),OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),containerType)));
          }
          continue;
        }
        printElementWrapperTagStart(isOnline,cms,subelement,false);
        standardContext.setElement(subelement);
        try {
          String formatterSitePath=cms.getRequestContext().removeSiteRoot(subElementFormatterConfig.getJspRootPath());
          if (shouldShowSubElementInContext) {
            CmsJspTagInclude.includeTagAction(pageContext,formatterSitePath,null,locale,false,isOnline,null,CmsRequestUtil.getAtrributeMap(req),req,res);
          }
 else {
            pageContext.getOut().print(DUMMY_ELEMENT);
          }
        }
 catch (        Exception e) {
          if (LOG.isErrorEnabled()) {
            LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,subelement.getSitePath(),subElementFormatterConfig),e);
          }
          printElementErrorTag(isOnline,subelement.getSitePath(),subElementFormatterConfig.getJspRootPath(),e);
        }
        printElementWrapperTagEnd(isOnline,false);
      }
 catch (      Exception e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(e);
        }
      }
    }
    printElementWrapperTagEnd(isOnline,true);
    return true;
  }
 else {
    boolean result=true;
    if (alreadyFull) {
      result=false;
      if (!showInContext) {
        printElementWrapperTagStart(isOnline,cms,element,false);
        pageContext.getOut().print(DUMMY_ELEMENT);
        printElementWrapperTagEnd(isOnline,false);
      }
    }
 else {
      String formatter=null;
      try {
        if (formatterConfig != null) {
          formatter=cms.getRequestContext().removeSiteRoot(formatterConfig.getJspRootPath());
        }
 else {
          formatter=cms.getSitePath(cms.readResource(element.getFormatterId()));
        }
      }
 catch (      CmsException e) {
        CmsFormatterConfiguration elementFormatters=adeConfig.getFormatters(cms,element.getResource());
        I_CmsFormatterBean elementFormatterBean=elementFormatters.getDefaultFormatter(containerType,containerWidth);
        if (elementFormatterBean == null) {
          if (LOG.isErrorEnabled()) {
            LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,element.getSitePath(),OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),containerType)));
          }
          return false;
        }
        formatter=cms.getRequestContext().removeSiteRoot(elementFormatterBean.getJspRootPath());
      }
      printElementWrapperTagStart(isOnline,cms,element,false);
      standardContext.setElement(element);
      try {
        if (!showInContext) {
          pageContext.getOut().print(DUMMY_ELEMENT);
          result=false;
        }
 else {
          CmsJspTagInclude.includeTagAction(pageContext,formatter,null,locale,false,isOnline,null,CmsRequestUtil.getAtrributeMap(req),req,res);
        }
      }
 catch (      Exception e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,element.getSitePath(),formatter),e);
        }
        printElementErrorTag(isOnline,element.getSitePath(),formatter,e);
      }
      printElementWrapperTagEnd(isOnline,false);
    }
    return result;
  }
}
