{
  String containerName=getName();
  String containerType=getType();
  String width=getWidth();
  String tag=getTag();
  String tagClass=getTagClass();
  boolean detailView=m_detailView;
  ServletRequest req=pageContext.getRequest();
  CmsFlexController controller=CmsFlexController.getController(req);
  CmsObject cms=controller.getCmsObject();
  CmsResource containerPage=(CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);
  if (containerPage == null) {
    containerPage=cms.readResource(cms.getRequestContext().getUri());
  }
  boolean createTag=false;
  String tagName=CmsStringUtil.isEmptyOrWhitespaceOnly(tag) ? DEFAULT_TAG_NAME : tag;
  if (!CREATE_NO_TAG.equals(tag)) {
    createTag=true;
    pageContext.getOut().print(getTagOpen(tagName,containerName,tagClass));
  }
  CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,containerPage,req);
  CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
  Locale locale=cntPage.getLocale();
  int maxElements=getMaxElements(cms,containerPage,locale);
  CmsContainerBean container=cntPage.getContainers().get(containerName);
  boolean isOnline=cms.getRequestContext().currentProject().isOnlineProject();
  boolean isUsedAsDetailView=false;
  CmsSitemapEntry sitemapEntry=OpenCms.getSitemapManager().getRuntimeInfo(req);
  if (m_detailView && (sitemapEntry != null) && (sitemapEntry.getContentId() != null)) {
    isUsedAsDetailView=true;
  }
  if (container == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().container(Messages.LOG_CONTAINER_NOT_FOUND_3,cms.getSitePath(containerPage),locale,containerName).key());
    }
    if (!isOnline) {
      try {
        pageContext.getOut().print(getCntDataTag(new CmsContainerBean(containerName,containerType,maxElements,null),width,isUsedAsDetailView));
      }
 catch (      JSONException e) {
        throw new JspException(e);
      }
    }
    if (createTag) {
      pageContext.getOut().print(getTagClose(tagName));
    }
    return;
  }
  if (!containerType.equals(container.getType())) {
    throw new CmsIllegalStateException(Messages.get().container(Messages.LOG_WRONG_CONTAINER_TYPE_4,new Object[]{cms.getSitePath(containerPage),locale,containerName,containerType}));
  }
  container.setMaxElements(maxElements);
  List<CmsContainerElementBean> allElems=new ArrayList<CmsContainerElementBean>();
  allElems.addAll(container.getElements());
  if (detailView) {
    addDetailViewToElements(cms,allElems);
  }
  if (!isOnline) {
    try {
      pageContext.getOut().print(getCntDataTag(new CmsContainerBean(containerName,containerType,maxElements,allElems),width,isUsedAsDetailView));
    }
 catch (    JSONException e) {
      throw new JspException(e);
    }
    CmsADESessionCache sessionCache=(CmsADESessionCache)((HttpServletRequest)req).getSession().getAttribute(CmsADESessionCache.SESSION_ATTR_ADE_CACHE);
    if (sessionCache == null) {
      sessionCache=new CmsADESessionCache(cms);
      ((HttpServletRequest)req).getSession().setAttribute(CmsADESessionCache.SESSION_ATTR_ADE_CACHE,sessionCache);
    }
    for (    CmsContainerElementBean element : allElems) {
      sessionCache.setCacheContainerElement(element.getClientId(),element);
    }
  }
  int renderElems=allElems.size();
  if ((maxElements > 0) && (renderElems > maxElements)) {
    renderElems=maxElements;
  }
  for (  CmsContainerElementBean element : allElems) {
    if (renderElems < 1) {
      break;
    }
    renderElems--;
    renderContainerElement(cms,element);
  }
  if (createTag) {
    pageContext.getOut().print(getTagClose(tagName));
  }
}
