{
  ServletRequest req=pageContext.getRequest();
  ServletResponse res=pageContext.getResponse();
  String containerType=getType();
  int containerWidth=getContainerWidth();
  boolean isOnline=cms.getRequestContext().getCurrentProject().isOnlineProject();
  element.initResource(cms);
  if (element.getResource().getTypeId() == CmsResourceTypeXmlContainerPage.GROUP_CONTAINER_TYPE_ID) {
    CmsXmlGroupContainer xmlGroupContainer=CmsXmlGroupContainerFactory.unmarshal(cms,element.getResource(),req);
    CmsGroupContainerBean groupContainer=xmlGroupContainer.getGroupContainer(cms,cms.getRequestContext().getLocale());
    if (!groupContainer.getTypes().contains(containerType)) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,element.getResource().getRootPath(),OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),containerType));
    }
    printElementWrapperTagStart(isOnline,cms,element,true);
    for (    CmsContainerElementBean subelement : groupContainer.getElements()) {
      try {
        subelement.initResource(cms);
        CmsFormatterBean subelementFormatter=OpenCms.getADEManager().getFormatterForContainer(cms,subelement.getResource(),containerType,containerWidth);
        if (subelementFormatter == null) {
          if (LOG.isErrorEnabled()) {
            LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,subelement.getSitePath(),OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),containerType)));
          }
          continue;
        }
        printElementWrapperTagStart(isOnline,cms,subelement,false);
        standardContext.setElement(subelement);
        try {
          CmsJspTagInclude.includeTagAction(pageContext,subelementFormatter.getJspRootPath(),null,locale,false,isOnline,req.getParameterMap(),CmsRequestUtil.getAtrributeMap(req),req,res);
        }
 catch (        Exception e) {
          if (LOG.isErrorEnabled()) {
            LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,subelement.getSitePath(),subelementFormatter),e);
          }
          printElementErrorTag(isOnline,subelement.getSitePath(),subelementFormatter.getJspRootPath());
        }
        printElementWrapperTagEnd(isOnline,false);
      }
 catch (      Exception e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(e);
        }
      }
    }
    printElementWrapperTagEnd(isOnline,true);
  }
 else {
    String elementFormatter=cms.getSitePath(cms.readResource(element.getFormatterId()));
    printElementWrapperTagStart(isOnline,cms,element,false);
    standardContext.setElement(element);
    try {
      CmsJspTagInclude.includeTagAction(pageContext,elementFormatter,null,locale,false,isOnline,req.getParameterMap(),CmsRequestUtil.getAtrributeMap(req),req,res);
    }
 catch (    Exception e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,element.getSitePath(),elementFormatter),e);
      }
      printElementErrorTag(isOnline,element.getSitePath(),elementFormatter);
    }
    printElementWrapperTagEnd(isOnline,false);
  }
}
