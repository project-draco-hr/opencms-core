{
  ServletRequest req=pageContext.getRequest();
  ServletResponse res=pageContext.getResponse();
  String containerType=getType();
  int containerWidth=getContainerWidth();
  boolean isOnline=cms.getRequestContext().getCurrentProject().isOnlineProject();
  CmsResource resUri=cms.readResource(element.getElementId());
  if (resUri.getTypeId() == CmsResourceTypeXmlContainerPage.GROUP_CONTAINER_TYPE_ID) {
    CmsXmlGroupContainer xmlGroupContainer=CmsXmlGroupContainerFactory.unmarshal(cms,resUri,req);
    CmsGroupContainerBean groupContainer=xmlGroupContainer.getGroupContainer(cms,cms.getRequestContext().getLocale());
    if (!groupContainer.getTypes().contains(containerType)) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,resUri.getRootPath(),OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),containerType));
    }
    element.setSitePath(cms.getSitePath(resUri));
    printElementWrapperTagStart(isOnline,cms,resUri,element,true);
    for (    CmsContainerElementBean subelement : groupContainer.getElements()) {
      try {
        CmsResource subelementRes=cms.readResource(subelement.getElementId());
        String subelementUri=cms.getSitePath(subelementRes);
        String subelementFormatter=OpenCms.getADEManager().getFormatterForContainerTypeAndWidth(cms,subelementRes,containerType,containerWidth);
        if (CmsStringUtil.isEmptyOrWhitespaceOnly(subelementFormatter) && LOG.isErrorEnabled()) {
          LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,subelementUri,OpenCms.getResourceManager().getResourceType(subelementRes).getTypeName(),containerType)));
          continue;
        }
        subelement.setSitePath(subelementUri);
        printElementWrapperTagStart(isOnline,cms,subelementRes,subelement,false);
        standardContext.setElement(subelement);
        try {
          CmsJspTagInclude.includeTagAction(pageContext,subelementFormatter,null,locale,false,isOnline,null,null,req,res);
        }
 catch (        Exception e) {
          if (LOG.isErrorEnabled()) {
            LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,subelement.getSitePath(),subelementFormatter),e);
          }
          printElementErrorTag(isOnline,subelement.getSitePath(),subelementFormatter);
        }
 finally {
          printElementWrapperTagEnd(isOnline);
        }
      }
 catch (      Exception e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(e);
        }
      }
    }
    printElementWrapperTagEnd(isOnline);
  }
 else {
    String elementFormatter=cms.getSitePath(cms.readResource(element.getFormatterId()));
    element.setSitePath(cms.getSitePath(resUri));
    printElementWrapperTagStart(isOnline,cms,resUri,element,false);
    standardContext.setElement(element);
    try {
      CmsJspTagInclude.includeTagAction(pageContext,elementFormatter,null,locale,false,isOnline,null,null,req,res);
    }
 catch (    Exception e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,element.getSitePath(),elementFormatter),e);
      }
      printElementErrorTag(isOnline,element.getSitePath(),elementFormatter);
    }
 finally {
      printElementWrapperTagEnd(isOnline);
    }
  }
}
