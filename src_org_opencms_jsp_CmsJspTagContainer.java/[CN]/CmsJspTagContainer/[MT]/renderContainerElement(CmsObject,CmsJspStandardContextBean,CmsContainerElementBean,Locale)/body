{
  ServletRequest req=pageContext.getRequest();
  ServletResponse res=pageContext.getResponse();
  String containerType=getType();
  int containerWidth=getContainerWidth();
  boolean isOnline=cms.getRequestContext().getCurrentProject().isOnlineProject();
  element.initResource(cms);
  getSessionCache(cms).setCacheContainerElement(element.editorHash(),element);
  CmsADEConfigData adeConfig=OpenCms.getADEManager().lookupConfiguration(cms,cms.getRequestContext().getRootUri());
  boolean isGroupContainer=element.isGroupContainer(cms);
  boolean isInheritedContainer=element.isInheritedContainer(cms);
  if (isGroupContainer || isInheritedContainer) {
    List<CmsContainerElementBean> subElements;
    if (isGroupContainer) {
      subElements=getGroupContainerElements(cms,element,req,containerType);
    }
 else {
      subElements=getInheritedContainerElements(cms,element);
    }
    printElementWrapperTagStart(isOnline,cms,element,true);
    for (    CmsContainerElementBean subelement : subElements) {
      try {
        subelement.initResource(cms);
        getSessionCache(cms).setCacheContainerElement(subelement.editorHash(),subelement);
        CmsFormatterConfiguration subelementFormatters=adeConfig.getFormatters(cms,subelement.getResource());
        CmsFormatterBean subelementFormatter=subelementFormatters.getFormatter(containerType,containerWidth);
        if (subelementFormatter == null) {
          if (LOG.isErrorEnabled()) {
            LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,subelement.getSitePath(),OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),containerType)));
          }
          continue;
        }
        printElementWrapperTagStart(isOnline,cms,subelement,false);
        standardContext.setElement(subelement);
        try {
          CmsJspTagInclude.includeTagAction(pageContext,subelementFormatter.getJspRootPath(),null,locale,false,isOnline,null,CmsRequestUtil.getAtrributeMap(req),req,res);
        }
 catch (        Exception e) {
          if (LOG.isErrorEnabled()) {
            LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,subelement.getSitePath(),subelementFormatter),e);
          }
          printElementErrorTag(isOnline,subelement.getSitePath(),subelementFormatter.getJspRootPath(),e);
        }
        printElementWrapperTagEnd(isOnline,false);
      }
 catch (      Exception e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(e);
        }
      }
    }
    printElementWrapperTagEnd(isOnline,true);
  }
 else {
    String formatter=null;
    try {
      formatter=cms.getSitePath(cms.readResource(element.getFormatterId()));
    }
 catch (    CmsException e) {
      CmsFormatterConfiguration elementFormatters=adeConfig.getFormatters(cms,element.getResource());
      CmsFormatterBean elementFormatterBean=elementFormatters.getFormatter(containerType,containerWidth);
      if (elementFormatterBean == null) {
        if (LOG.isErrorEnabled()) {
          LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,element.getSitePath(),OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),containerType)));
        }
        return;
      }
      formatter=elementFormatterBean.getJspRootPath();
    }
    printElementWrapperTagStart(isOnline,cms,element,false);
    standardContext.setElement(element);
    try {
      CmsJspTagInclude.includeTagAction(pageContext,formatter,null,locale,false,isOnline,null,CmsRequestUtil.getAtrributeMap(req),req,res);
    }
 catch (    Exception e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,element.getSitePath(),formatter),e);
      }
      printElementErrorTag(isOnline,element.getSitePath(),formatter,e);
    }
    printElementWrapperTagEnd(isOnline,false);
  }
}
