{
  CmsFlexController controller=CmsFlexController.getController(req);
  CmsObject cms=controller.getCmsObject();
  boolean actAsTemplate=false;
  CmsResource containerPage=(CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);
  if (containerPage == null) {
    containerPage=cms.readResource(cms.getRequestContext().getUri());
  }
  if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {
    String cntPagePath=cms.readPropertyObject(containerPage,CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,true).getValue("");
    try {
      containerPage=cms.readResource(cntPagePath);
    }
 catch (    CmsException e) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,cms.getRequestContext().getUri(),CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,cntPagePath),e);
    }
    if (!CmsResourceTypeXmlContainerPage.isContainerPage(containerPage)) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,cms.getRequestContext().getUri(),CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,cntPagePath));
    }
    actAsTemplate=true;
  }
 else   if (req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {
    actAsTemplate=true;
  }
  boolean createTag=false;
  String tagName=CmsStringUtil.isEmptyOrWhitespaceOnly(tag) ? DEFAULT_TAG_NAME : tag;
  if (!CREATE_NO_TAG.equals(tag)) {
    createTag=true;
    pageContext.getOut().print(getTagOpen(tagName,containerName,tagClass));
  }
  CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,containerPage,req);
  CmsContainerPageBean cntPage=xmlCntPage.getCntPage(cms,cms.getRequestContext().getLocale());
  Locale locale=cntPage.getLocale();
  int maxElements=-1;
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(containerMaxElements)) {
    try {
      maxElements=Integer.parseInt(containerMaxElements);
    }
 catch (    NumberFormatException e) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.LOG_WRONG_CONTAINER_MAXELEMENTS_4,new Object[]{cms.getSitePath(containerPage),locale,containerName,containerMaxElements}),e);
    }
  }
 else {
    if (LOG.isWarnEnabled()) {
      LOG.warn(Messages.get().container(Messages.LOG_MAXELEMENTS_NOT_SET_3,new Object[]{containerName,locale,cms.getSitePath(containerPage)}));
    }
  }
  CmsContainerBean container=cntPage.getContainers().get(containerName);
  boolean isOnline=cms.getRequestContext().currentProject().isOnlineProject();
  if (container == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().container(Messages.LOG_CONTAINER_NOT_FOUND_3,cms.getSitePath(containerPage),locale,containerName).key());
    }
    if (!isOnline) {
      try {
        pageContext.getOut().print(getCntDataTag(new CmsContainerBean(containerName,containerType,maxElements,null)));
      }
 catch (      JSONException e) {
        throw new JspException(e);
      }
    }
    if (createTag) {
      pageContext.getOut().print(getTagClose(tagName));
    }
    return;
  }
  container.setMaxElements(maxElements);
  if (!isOnline) {
    try {
      pageContext.getOut().print(getCntDataTag(container));
    }
 catch (    JSONException e) {
      throw new JspException(e);
    }
  }
  if (!containerType.equals(container.getType())) {
    throw new CmsIllegalStateException(Messages.get().container(Messages.LOG_WRONG_CONTAINER_TYPE_4,new Object[]{cms.getSitePath(containerPage),locale,containerName,containerType}));
  }
  int renderElems=container.getElements().size();
  if ((maxElements > 0) && (renderElems > maxElements)) {
    renderElems=maxElements;
  }
  if (actAsTemplate) {
    if (!cntPage.getTypes().contains(CmsContainerPageBean.TYPE_TEMPLATE)) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_CONTAINER_PAGE_NO_TYPE_3,cms.getRequestContext().getUri(),cms.getSitePath(containerPage),CmsContainerPageBean.TYPE_TEMPLATE));
    }
    if (containerType.equals(CmsContainerPageBean.TYPE_TEMPLATE)) {
      renderElems--;
      CmsResource resUri;
      if (req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {
        CmsUUID id=new CmsUUID(req.getParameter(CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER));
        resUri=cms.readResource(id);
      }
 else {
        resUri=(CmsResource)CmsHistoryResourceHandler.getHistoryResource(req);
        if (resUri == null) {
          resUri=cms.readResource(cms.getRequestContext().getUri());
        }
      }
      String elementFormatter=OpenCms.getResourceManager().getResourceType(resUri).getFormatterForContainerType(cms,resUri,containerType);
      if (CmsStringUtil.isEmptyOrWhitespaceOnly(elementFormatter)) {
        throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,cms.getRequestContext().getUri(),OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),CmsContainerPageBean.TYPE_TEMPLATE));
      }
      CmsContainerElementBean element=new CmsContainerElementBean(resUri.getStructureId(),cms.readResource(elementFormatter).getStructureId(),null);
      CmsJspTagInclude.includeTagAction(pageContext,elementFormatter,null,false,null,Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT,(Object)element),req,res);
    }
  }
  for (  CmsContainerElementBean element : container.getElements()) {
    if (renderElems < 1) {
      break;
    }
    renderElems--;
    CmsResource resUri=cms.readResource(element.getElementId());
    if (resUri.getTypeId() == CmsResourceTypeXmlContainerPage.SUB_CONTAINER_TYPE_ID) {
      CmsXmlSubContainer xmlSubContainer=CmsXmlSubContainerFactory.unmarshal(cms,resUri,req);
      CmsSubContainerBean subContainer=xmlSubContainer.getSubContainer(cms,cms.getRequestContext().getLocale());
      if (!subContainer.getTypes().contains(containerType)) {
        throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,resUri.getRootPath(),OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),containerType));
      }
      for (      CmsContainerElementBean subelement : subContainer.getElements()) {
        CmsResource subelementRes=cms.readResource(subelement.getElementId());
        String subelementUri=cms.getSitePath(subelementRes);
        String subelementFormatter=OpenCms.getResourceManager().getResourceType(subelementRes).getFormatterForContainerType(cms,subelementRes,containerType);
        if (CmsStringUtil.isEmptyOrWhitespaceOnly(subelementFormatter) && LOG.isErrorEnabled()) {
          LOG.error(new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,subelementUri,OpenCms.getResourceManager().getResourceType(subelementRes).getTypeName(),containerType)));
          continue;
        }
        CmsJspTagInclude.includeTagAction(pageContext,subelementFormatter,null,false,null,Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT,(Object)subelement),req,res);
      }
    }
 else {
      String elementFormatter=cms.getSitePath(cms.readResource(element.getFormatterId()));
      CmsJspTagInclude.includeTagAction(pageContext,elementFormatter,null,false,null,Collections.singletonMap(CmsADEManager.ATTR_CURRENT_ELEMENT,(Object)element),req,res);
    }
  }
  if (createTag) {
    pageContext.getOut().print(getTagClose(tagName));
  }
}
