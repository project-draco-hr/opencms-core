{
  CmsFlexController controller=CmsFlexController.getController(req);
  CmsObject cms=controller.getCmsObject();
  boolean actAsTemplate=false;
  CmsResource containerPage=cms.readResource(cms.getRequestContext().getUri());
  if (containerPage.getTypeId() != CmsResourceTypeContainerPage.getStaticTypeId()) {
    String cntPagePath=cms.readPropertyObject(containerPage,CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,true).getValue("");
    try {
      containerPage=cms.readResource(cntPagePath);
    }
 catch (    CmsException e) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,cms.getRequestContext().getUri(),CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,cntPagePath),e);
    }
    if (containerPage.getTypeId() != CmsResourceTypeContainerPage.getStaticTypeId()) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_CONTAINER_PAGE_NOT_FOUND_3,cms.getRequestContext().getUri(),CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,cntPagePath));
    }
    actAsTemplate=true;
  }
 else   if (req.getParameter(I_CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {
    actAsTemplate=true;
  }
  CmsADEManager manager=OpenCms.getADEManager(cms,cms.getSitePath(containerPage),req);
  I_CmsContainerPageBean cntPage=manager.getCache(cms,containerPage,cms.getRequestContext().getLocale());
  Locale locale=cntPage.getLocale();
  if (!cntPage.getContainers().containsKey(containerName)) {
    throw new CmsIllegalStateException(Messages.get().container(Messages.LOG_CONTAINER_NOT_FOUND_3,cms.getSitePath(containerPage),locale,containerName));
  }
  I_CmsContainerBean container=cntPage.getContainers().get(containerName);
  if (!containerType.equals(container.getType())) {
    throw new CmsIllegalStateException(Messages.get().container(Messages.LOG_WRONG_CONTAINER_TYPE_4,new Object[]{cms.getSitePath(containerPage),locale,containerName,containerType}));
  }
  int maxElements=-1;
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(containerMaxElements)) {
    try {
      maxElements=Integer.parseInt(containerMaxElements);
    }
 catch (    NumberFormatException e) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.LOG_WRONG_CONTAINER_MAXELEMENTS_4,new Object[]{cms.getSitePath(containerPage),locale,containerName,containerMaxElements}),e);
    }
    ((CmsContainerBean)container).setMaxElements(maxElements);
  }
  int renderElems=container.getElements().size();
  if ((maxElements > -1) && (renderElems > maxElements)) {
    renderElems=maxElements;
  }
  if (actAsTemplate) {
    if (!cntPage.getTypes().contains(I_CmsContainerPageBean.TYPE_TEMPLATE)) {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_CONTAINER_PAGE_NO_TYPE_3,cms.getRequestContext().getUri(),cms.getSitePath(containerPage),I_CmsContainerPageBean.TYPE_TEMPLATE));
    }
    if (containerType.equals(I_CmsContainerPageBean.TYPE_TEMPLATE)) {
      renderElems--;
      CmsResource resUri;
      if (req.getParameter(I_CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER) != null) {
        CmsUUID id=new CmsUUID(req.getParameter(I_CmsContainerPageBean.TEMPLATE_ELEMENT_PARAMETER));
        resUri=cms.readResource(id);
      }
 else {
        resUri=cms.readResource(cms.getRequestContext().getUri());
      }
      CmsXmlContentDefinition contentDef=CmsXmlContentDefinition.getContentDefinitionForResource(cms,resUri);
      String elementFormatter=contentDef.getContentHandler().getFormatters().get(containerType);
      if (CmsStringUtil.isEmptyOrWhitespaceOnly(elementFormatter)) {
        throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,cms.getRequestContext().getUri(),contentDef.getSchemaLocation(),I_CmsContainerPageBean.TYPE_TEMPLATE));
      }
      I_CmsContainerElementBean element=new CmsContainerElementBean(cms,resUri,cms.readResource(elementFormatter),null);
      Object currentElement=req.getAttribute(ATTR_CURRENT_ELEMENT);
      req.setAttribute(ATTR_CURRENT_ELEMENT,element);
      try {
        CmsJspTagInclude.includeTagAction(pageContext,elementFormatter,null,false,null,req,res);
      }
  finally {
        req.setAttribute(ATTR_CURRENT_ELEMENT,currentElement);
      }
    }
  }
  for (  I_CmsContainerElementBean element : container.getElements()) {
    if (renderElems < 1) {
      break;
    }
    renderElems--;
    CmsResource resUri=element.getElement();
    if (resUri.getTypeId() == CmsResourceTypeContainerPage.getStaticTypeId()) {
      I_CmsContainerPageBean subcntPage=manager.getCache(cms,resUri,cms.getRequestContext().getLocale());
      I_CmsContainerBean subcontainer=subcntPage.getContainers().values().iterator().next();
      for (      I_CmsContainerElementBean subelement : subcontainer.getElements()) {
        String subelementUri=cms.getSitePath(subelement.getElement());
        CmsXmlContentDefinition contentDef=CmsXmlContentDefinition.getContentDefinitionForResource(cms,subelement.getElement());
        String subelementFormatter=contentDef.getContentHandler().getFormatters().get(containerType);
        if (CmsStringUtil.isEmptyOrWhitespaceOnly(subelementFormatter)) {
          subelementFormatter=cms.getSitePath(subelement.getFormatter());
        }
        if (CmsStringUtil.isEmptyOrWhitespaceOnly(subelementFormatter)) {
          throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,subelementUri,contentDef.getSchemaLocation(),containerType));
        }
        Object currentElement=req.getAttribute(ATTR_CURRENT_ELEMENT);
        req.setAttribute(ATTR_CURRENT_ELEMENT,subelement);
        try {
          CmsJspTagInclude.includeTagAction(pageContext,subelementFormatter,null,false,null,req,res);
        }
  finally {
          req.setAttribute(ATTR_CURRENT_ELEMENT,currentElement);
        }
      }
    }
 else {
      String elementFormatter=cms.getSitePath(element.getFormatter());
      Object currentElement=req.getAttribute(ATTR_CURRENT_ELEMENT);
      req.setAttribute(ATTR_CURRENT_ELEMENT,element);
      try {
        CmsJspTagInclude.includeTagAction(pageContext,elementFormatter,null,false,null,req,res);
      }
  finally {
        req.setAttribute(ATTR_CURRENT_ELEMENT,currentElement);
      }
    }
  }
}
