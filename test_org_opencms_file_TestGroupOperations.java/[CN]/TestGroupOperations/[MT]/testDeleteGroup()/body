{
  CmsObject cms=getCmsObject();
  echo("Testing group deletion");
  List groups=OpenCms.getOrgUnitManager().getGroups(cms,"",true);
  CmsGroup group=cms.createGroup("testDeleteGroup","group for deletion",0,null);
  assertTrue(cms.getUsersOfGroup(group.getName()).isEmpty());
  assertEquals(groups.size() + 1,OpenCms.getOrgUnitManager().getGroups(cms,"",true).size());
  assertTrue(OpenCms.getOrgUnitManager().getGroups(cms,"",true).contains(group));
  CmsUser user=cms.readUser("Guest");
  List userGroups=cms.getGroupsOfUser(user.getName(),true);
  cms.addUserToGroup(user.getName(),group.getName());
  assertEquals(1,cms.getUsersOfGroup(group.getName()).size());
  assertTrue(cms.getUsersOfGroup(group.getName()).contains(user));
  assertEquals(userGroups.size() + 1,cms.getGroupsOfUser(user.getName(),true).size());
  assertTrue(cms.getGroupsOfUser(user.getName(),true).contains(group));
  cms.deleteGroup(group.getName());
  try {
    cms.readGroup(group.getName());
    fail("should not be able to read a deleted group");
  }
 catch (  CmsDbEntryNotFoundException e) {
  }
  assertEquals(groups.size(),OpenCms.getOrgUnitManager().getGroups(cms,"",true).size());
  assertFalse(OpenCms.getOrgUnitManager().getGroups(cms,"",true).contains(group));
  assertEquals(userGroups.size(),cms.getGroupsOfUser(user.getName(),true).size());
  assertFalse(cms.getGroupsOfUser(user.getName(),true).contains(group));
}
