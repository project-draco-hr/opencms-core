{
  List<CmsSelectWidgetOption> retVal=new ArrayList<CmsSelectWidgetOption>();
  try {
    boolean inRootOu=CmsStringUtil.isEmptyOrWhitespaceOnly(getParamOufqn()) || CmsOrganizationalUnit.SEPARATOR.equals(getParamOufqn());
    List<CmsRole> roles=OpenCms.getRoleManager().getRolesOfUser(getCms(),getCms().getRequestContext().getCurrentUser().getName(),getParamOufqn(),false,false,false);
    Iterator<CmsRole> itRoles=roles.iterator();
    while (itRoles.hasNext()) {
      CmsRole role=itRoles.next();
      if (role.isOrganizationalUnitIndependent() && !inRootOu) {
        continue;
      }
      retVal.add(new CmsSelectWidgetOption(role.getGroupName(),false,role.getName(getLocale())));
    }
  }
 catch (  CmsException e) {
  }
  Collections.sort(retVal,new Comparator<CmsSelectWidgetOption>(){
    public int compare(    CmsSelectWidgetOption arg0,    CmsSelectWidgetOption arg1){
      return arg0.getOption().compareTo(arg1.getOption());
    }
  }
);
  return retVal;
}
