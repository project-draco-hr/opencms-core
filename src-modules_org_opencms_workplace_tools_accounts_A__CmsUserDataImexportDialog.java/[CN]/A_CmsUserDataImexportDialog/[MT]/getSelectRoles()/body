{
  List retVal=new ArrayList();
  try {
    boolean inRootOu=CmsStringUtil.isEmptyOrWhitespaceOnly(getParamOufqn()) || CmsOrganizationalUnit.SEPARATOR.equals(getParamOufqn());
    List roles=OpenCms.getRoleManager().getRolesOfUser(getCms(),getCms().getRequestContext().currentUser().getName(),getParamOufqn(),false,false,false);
    Iterator itRoles=roles.iterator();
    while (itRoles.hasNext()) {
      CmsRole role=(CmsRole)itRoles.next();
      if (role.isOrganizationalUnitIndependent() && !inRootOu) {
        continue;
      }
      retVal.add(new CmsSelectWidgetOption(role.getGroupName(),false,role.getName(getLocale())));
    }
  }
 catch (  CmsException e) {
  }
  Collections.sort(retVal,new Comparator(){
    public int compare(    Object arg0,    Object arg1){
      if (!(arg0 instanceof CmsSelectWidgetOption) || !(arg1 instanceof CmsSelectWidgetOption)) {
        return 0;
      }
      CmsSelectWidgetOption opt0=(CmsSelectWidgetOption)arg0;
      CmsSelectWidgetOption opt1=(CmsSelectWidgetOption)arg1;
      return opt0.getOption().compareTo(opt1.getOption());
    }
  }
);
  return retVal;
}
