{
  String dbName=null;
  String driverPools[]=null;
  Hashtable driverPool;
  String driverName=null;
  String driverPoolName=null;
  Class driverClass;
  CmsVfsDriver vfsDriver;
  CmsUserDriver userDriver;
  CmsProjectDriver projectDriver;
  CmsDriverManager driverManager=null;
  dbName=(String)configurations.getString(C_CONFIGURATION_RESOURCEBROKER);
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Database used        : " + dbName);
  }
  driverPools=configurations.getStringArray(C_CONFIGURATION_RESOURCEBROKER + "." + C_CONFIGURATIONS_POOL);
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Resource pools       : ");
  }
  driverPool=new Hashtable();
  for (int p=0; p < driverPools.length; p++) {
    try {
      String poolUrl=CmsDbPool.createConnectionPool(configurations,driverPools[p]);
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Initializing pool    : " + poolUrl);
      }
      driverPool.put(driverPools[p],poolUrl);
    }
 catch (    Exception exc) {
      String message="Critical error while initializing resource pool " + driverPools[p];
      if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsRbManager] " + message);
      }
      exc.printStackTrace(System.err);
      throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
    }
  }
  driverName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.vfs.class");
  driverPoolName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.vfs.pool");
  try {
    driverClass=Class.forName(driverName);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : starting " + driverName);
    }
    vfsDriver=(CmsVfsDriver)driverClass.newInstance();
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : initializing " + driverName);
    }
    driverPoolName=(String)driverPool.get(driverPoolName);
    vfsDriver.init(configurations,driverPoolName);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : finished, assigned pool " + driverPoolName);
    }
  }
 catch (  Exception exc) {
    String message="Critical error while initializing vfs access";
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsRbManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
  driverName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.user.class");
  driverPoolName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.user.pool");
  try {
    driverClass=Class.forName(driverName);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : starting " + driverName);
    }
    userDriver=(CmsUserDriver)driverClass.newInstance();
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : initializing " + driverName);
    }
    driverPoolName=(String)driverPool.get(driverPoolName);
    userDriver.init(configurations,driverPoolName);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : finished, assigned pool " + driverPoolName);
    }
  }
 catch (  Exception exc) {
    String message="Critical error while initializing user access";
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsRbManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
  driverName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.db.class");
  driverPoolName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.db.pool");
  try {
    driverClass=Class.forName(driverName);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : starting " + driverName);
    }
    projectDriver=(CmsProjectDriver)driverClass.newInstance();
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : initializing " + driverName);
    }
    driverPoolName=(String)driverPool.get(driverPoolName);
    projectDriver.init(configurations,driverPoolName);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Access class init    : finished, assigned pool " + driverPoolName);
    }
  }
 catch (  Exception exc) {
    String message="Critical error while initializing db access";
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsRbManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
  driverPoolName=configurations.getString(C_CONFIGURATION_RESOURCEBROKER + ".access.cos.pool");
  driverPoolName=(String)driverPool.get(driverPoolName);
  A_OpenCms.setRuntimeProperty("cosPoolUrl",driverPoolName);
  CmsIdGenerator.setDefaultPool(driverPoolName);
  try {
    driverManager=new CmsDriverManager();
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver manager init  : phase 1 ok - initializing database");
    }
    driverManager.init(configurations,vfsDriver,userDriver,projectDriver);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Driver manager init  : phase 3 ok - finished");
    }
    return (driverManager);
  }
 catch (  Exception exc) {
    String message="Critical error while loading driver manager";
    if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[CmsRbManager] " + message);
    }
    exc.printStackTrace(System.err);
    throw new CmsException(message,CmsException.C_RB_INIT_ERROR,exc);
  }
}
