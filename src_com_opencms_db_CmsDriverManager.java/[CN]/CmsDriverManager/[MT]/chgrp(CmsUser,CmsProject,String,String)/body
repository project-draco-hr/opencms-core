{
  CmsResource resource=null;
  if (filename.endsWith("/")) {
    resource=readFolder(currentUser,currentProject,filename);
  }
 else {
    resource=(CmsFile)readFileHeader(currentUser,currentProject,filename);
  }
  if (accessWrite(currentUser,currentProject,resource) && ((resource.getOwnerId().equals(currentUser.getId())) || isAdmin(currentUser,currentProject))) {
    CmsUUID oldGroupId=resource.getGroupId();
    CmsGroup group=readGroup(currentUser,newGroup);
    resource.setGroupId(group.getId());
    if (filename.endsWith("/")) {
      if (resource.getState() == C_STATE_UNCHANGED) {
        resource.setState(C_STATE_CHANGED);
      }
      m_vfsDriver.writeFolder(currentProject,(CmsFolder)resource,true,currentUser.getId());
      this.clearResourceCache(filename,currentProject,currentUser);
    }
 else {
      m_vfsDriver.writeFileHeader(currentProject,(CmsFile)resource,true,currentUser.getId());
      if (resource.getState() == C_STATE_UNCHANGED) {
        resource.setState(C_STATE_CHANGED);
      }
      this.clearResourceCache(filename,currentProject,currentUser);
    }
    CmsAccessControlEntry oldAce=readAccessControlEntry(resource,oldGroupId);
    CmsAccessControlEntry newAce=createAccessControlEntry(resource,group.getId(),oldAce.getAllowedPermissions(),oldAce.getDeniedPermissions(),oldAce.getFlags());
    removeAccessControlEntry(resource,oldGroupId);
    fileSystemChanged(false);
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] "+ filename,CmsException.C_NO_ACCESS);
  }
}
