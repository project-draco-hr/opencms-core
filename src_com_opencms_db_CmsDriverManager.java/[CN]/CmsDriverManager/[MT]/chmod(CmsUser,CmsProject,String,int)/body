{
  CmsResource resource=null;
  if (filename.endsWith("/")) {
    resource=readFolder(currentUser,currentProject,filename);
  }
 else {
    resource=(CmsFile)readFileHeader(currentUser,currentProject,filename);
  }
  if (accessWrite(currentUser,currentProject,resource) || ((resource.isLockedBy().equals(currentUser.getId()) && resource.getLockedInProject() == currentProject.getId()) && (resource.getOwnerId().equals(currentUser.getId()) || isAdmin(currentUser,currentProject)))) {
    resource.setAccessFlags(flags);
    if (filename.endsWith("/")) {
      if (resource.getState() == C_STATE_UNCHANGED) {
        resource.setState(C_STATE_CHANGED);
      }
      m_vfsDriver.writeFolder(currentProject,(CmsFolder)resource,true,currentUser.getId());
      this.clearResourceCache(filename,currentProject,currentUser);
    }
 else {
      m_vfsDriver.writeFileHeader(currentProject,(CmsFile)resource,true,currentUser.getId());
      if (resource.getState() == C_STATE_UNCHANGED) {
        resource.setState(C_STATE_CHANGED);
      }
      this.clearResourceCache(filename,currentProject,currentUser);
    }
    CmsAccessControlEntry ace;
    ace=readAccessControlEntry(resource,resource.getOwnerId());
    ace.setAllowedPermissions(flags & C_ACCESS_OWNER);
    writeAccessControlEntry(resource,ace);
    ace=readAccessControlEntry(resource,resource.getGroupId());
    ace.setAllowedPermissions(flags & C_ACCESS_GROUP);
    writeAccessControlEntry(resource,ace);
    m_accessCache.clear();
    fileSystemChanged(false);
  }
 else {
    throw new CmsException("[" + this.getClass().getName() + "] "+ filename,CmsException.C_NO_ACCESS);
  }
}
