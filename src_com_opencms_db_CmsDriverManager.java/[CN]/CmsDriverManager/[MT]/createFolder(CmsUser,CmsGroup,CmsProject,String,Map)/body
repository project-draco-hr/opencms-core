{
  if (!newFolderName.endsWith(C_FOLDER_SEPARATOR))   newFolderName+=C_FOLDER_SEPARATOR;
  String folderName=newFolderName.substring(0,newFolderName.lastIndexOf(C_FOLDER_SEPARATOR,newFolderName.length() - 2) + 1);
  String resourceName=newFolderName.substring(folderName.length(),newFolderName.length() - 1);
  validFilename(resourceName);
  CmsFolder cmsFolder=readFolder(currentUser,currentProject,folderName);
  if (accessCreate(currentUser,currentProject,(CmsResource)cmsFolder)) {
    CmsFolder newFolder=m_vfsDriver.createFolder(currentUser,currentProject,cmsFolder.getResourceId(),CmsUUID.getNullUUID(),newFolderName,0);
    Hashtable startSettings=null;
    Integer accessFlags=null;
    startSettings=(Hashtable)currentUser.getAdditionalInfo(C_ADDITIONAL_INFO_STARTSETTINGS);
    if (startSettings != null) {
      accessFlags=(Integer)startSettings.get(C_START_ACCESSFLAGS);
      if (accessFlags != null) {
        newFolder.setAccessFlags(accessFlags.intValue());
      }
    }
    if (currentGroup != null) {
      newFolder.setGroupId(currentGroup.getId());
    }
    newFolder.setState(C_STATE_NEW);
    m_vfsDriver.writeFolder(currentProject,newFolder,false);
    this.clearResourceCache(newFolderName,currentProject,currentUser);
    m_vfsDriver.writeProperties(propertyinfos,currentProject.getId(),newFolder,newFolder.getType());
    fileSystemChanged(true);
    return newFolder;
  }
 else {
    throw new CmsException("[" + getClass().getName() + "] "+ newFolderName,CmsException.C_NO_ACCESS);
  }
}
