{
  Map<I_CmsDropContainer,CmsPositionBean> containers=new HashMap<I_CmsDropContainer,CmsPositionBean>();
  for (  I_CmsDropTarget target : m_dragInfos.keySet()) {
    if ((target instanceof I_CmsDropContainer) && !Display.NONE.getCssName().equalsIgnoreCase(CmsDomUtil.getCurrentStyle(target.getElement(),CmsDomUtil.Style.display))) {
      if (initial && (target != m_initialDropTarget)) {
        ((I_CmsDropContainer)target).highlightContainer();
      }
 else {
        ((I_CmsDropContainer)target).updatePositionInfo();
      }
      containers.put((I_CmsDropContainer)target,((I_CmsDropContainer)target).getPositionInfo());
    }
  }
  int padding=4;
  List<I_CmsDropContainer> containersToMatch=new ArrayList<I_CmsDropContainer>(containers.keySet());
  for (  I_CmsDropContainer contA : containers.keySet()) {
    containersToMatch.remove(contA);
    for (    I_CmsDropContainer contB : containersToMatch) {
      CmsPositionBean posA=containers.get(contA);
      CmsPositionBean posB=containers.get(contB);
      if (CmsPositionBean.checkCollision(posA,posB,padding * 3)) {
        if (contA.hasDnDChildren() && contA.getDnDChildren().contains(contB)) {
          if (!posA.isInside(posB,padding)) {
            posA.ensureSurrounds(posB,padding);
          }
        }
 else         if (contB.hasDnDChildren() && contB.getDnDChildren().contains(contA)) {
          if (!posB.isInside(posA,padding)) {
            posB.ensureSurrounds(posA,padding);
          }
        }
 else {
          CmsPositionBean.avoidCollision(posA,posB,padding * 3);
        }
      }
    }
  }
  for (  Entry<I_CmsDropContainer,CmsPositionBean> containerEntry : containers.entrySet()) {
    containerEntry.getKey().refreshHighlighting(containerEntry.getValue());
  }
}
