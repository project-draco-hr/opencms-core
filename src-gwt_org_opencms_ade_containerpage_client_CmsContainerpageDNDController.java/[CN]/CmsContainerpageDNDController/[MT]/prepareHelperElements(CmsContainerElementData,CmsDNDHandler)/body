{
  if (!handler.isDragging()) {
    return;
  }
  if (elementData == null) {
    CmsDebugLog.getInstance().printLine("elementData == null!");
    handler.cancel();
    return;
  }
  if (!(handler.getDraggable() instanceof CmsContainerPageElementPanel)) {
  }
  if (m_controller.isGroupcontainerEditing()) {
    CmsGroupContainerElementPanel groupContainer=m_controller.getGroupcontainer();
    if ((groupContainer != m_initialDropTarget) && !(elementData.isGroupContainer() || elementData.isInheritContainer()) && elementData.getContents().containsKey(groupContainer.getContainerId())) {
      Element helper=null;
      Element placeholder=null;
      Set<String> cssResources=elementData.getCssResources(groupContainer.getContainerId());
      if ((cssResources != null) && !cssResources.isEmpty()) {
        for (        String cssResourceLink : cssResources) {
          CmsDomUtil.ensureStyleSheetIncluded(cssResourceLink);
        }
      }
      try {
        String htmlContent=elementData.getContents().get(groupContainer.getContainerId());
        helper=CmsDomUtil.createElement(htmlContent);
        CmsDomUtil.fixFlashZindex(helper);
        placeholder=CmsDomUtil.clone(helper);
        placeholder.addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragPlaceholder());
      }
 catch (      Exception e) {
        CmsDebugLog.getInstance().printLine(e.getMessage());
      }
      if (helper != null) {
        prepareDragInfo(helper,placeholder,groupContainer,handler);
        groupContainer.highlightContainer();
      }
    }
    return;
  }
  if (!m_controller.isEditingDisabled()) {
    for (    CmsContainerPageContainer container : m_controller.getContainerTargets().values()) {
      if ((container != m_initialDropTarget) && !container.isDetailView() && elementData.getContents().containsKey(container.getContainerId())) {
        Element helper=null;
        Element placeholder=null;
        if (elementData.isGroupContainer() || elementData.isInheritContainer()) {
          helper=DOM.createDiv();
          String content="";
          for (          String groupId : elementData.getSubItems()) {
            CmsContainerElementData subData=m_controller.getCachedElement(groupId);
            if ((subData != null) && subData.getContents().containsKey(container.getContainerId())) {
              content+=subData.getContents().get(container.getContainerId());
            }
          }
          if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(content)) {
            helper.setInnerHTML(content);
            CmsDomUtil.fixFlashZindex(helper);
          }
 else {
            helper.addClassName(I_CmsLayoutBundle.INSTANCE.containerpageCss().emptyGroupContainer());
          }
          placeholder=CmsDomUtil.clone(helper);
        }
 else {
          Set<String> cssResources=elementData.getCssResources(container.getContainerId());
          if ((cssResources != null) && !cssResources.isEmpty()) {
            for (            String cssResourceLink : cssResources) {
              CmsDomUtil.ensureStyleSheetIncluded(cssResourceLink);
            }
          }
          try {
            String htmlContent=elementData.getContents().get(container.getContainerId());
            helper=CmsDomUtil.createElement(htmlContent);
            CmsDomUtil.fixFlashZindex(helper);
            placeholder=CmsDomUtil.clone(helper);
            placeholder.addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragPlaceholder());
          }
 catch (          Exception e) {
            CmsDebugLog.getInstance().printLine(e.getMessage());
          }
        }
        if (helper != null) {
          prepareDragInfo(helper,placeholder,container,handler);
        }
      }
    }
    for (    I_CmsDropTarget target : m_dragInfos.keySet()) {
      if (target instanceof I_CmsDropContainer) {
        if (target == m_initialDropTarget) {
          ((I_CmsDropContainer)target).refreshHighlighting();
        }
 else {
          ((I_CmsDropContainer)target).highlightContainer();
        }
      }
    }
    initNestedContainers();
  }
}
