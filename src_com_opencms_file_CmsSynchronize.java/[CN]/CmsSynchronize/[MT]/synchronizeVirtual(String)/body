{
  File sfsFile=new File(m_synchronizePath + resourceName);
  String sfsAbsolutePath=resourceName;
  String[] diskFiles=sfsFile.list();
  File currentFile;
  CmsFile hashFile=null;
  CmsFolder hashFolder=null;
  for (int i=0; i < diskFiles.length; i++) {
    currentFile=new File(sfsFile,diskFiles[i]);
    if (currentFile.isDirectory()) {
      hashFolder=(CmsFolder)m_vfsFolders.get(m_synchronizePath + resourceName + currentFile.getName()+ "/");
      if (hashFolder == null) {
        try {
          m_cms.createFolder(sfsAbsolutePath,currentFile.getName());
          m_cms.lockResource(sfsAbsolutePath + currentFile.getName() + "/");
        }
 catch (        CmsException e) {
          if (e.getType() != CmsException.C_FILE_EXISTS) {
            throw e;
          }
        }
      }
      hashFolder=null;
      synchronizeVirtual(sfsAbsolutePath + currentFile.getName() + "/");
    }
 else {
      hashFile=(CmsFile)m_vfsFiles.get(m_synchronizePath + resourceName + currentFile.getName());
      if (hashFile == null) {
        try {
          byte[] content=getFileBytes(currentFile);
          String type=getFileType(currentFile.getName());
          if ((!currentFile.getName().startsWith("$")) && (!currentFile.getName().startsWith("~")) && (!currentFile.getName().equals(CmsSynchronizeList.C_SYNCLIST_FILE))) {
            try {
              CmsFile newFile=m_cms.createFile(sfsAbsolutePath,currentFile.getName(),content,type);
              m_cms.lockResource(sfsAbsolutePath + currentFile.getName());
              m_synchronizeList.putDates(sfsAbsolutePath + currentFile.getName(),newFile.getDateLastModified(),currentFile.lastModified());
            }
 catch (            CmsException e) {
              if (e.getType() == CmsException.C_FILE_EXISTS) {
              }
 else {
                throw e;
              }
            }
          }
        }
 catch (        Exception e) {
          throw new CmsException("[" + this.getClass().getName() + "]"+ " Cannot create file in virtual filesystem",e);
        }
      }
      hashFile=null;
    }
  }
}
