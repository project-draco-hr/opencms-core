{
  CmsGalleryDataBean data=new CmsGalleryDataBean();
  data.setMode(conf.getGalleryMode());
  boolean galleryShowInvalidDefault=Boolean.parseBoolean(getWorkplaceSettings().getUserSettings().getAdditionalPreference("galleryShowInvalidDefault",true));
  data.setIncludeExpiredDefault(galleryShowInvalidDefault);
  data.setGalleryStoragePrefix(conf.getGalleryStoragePrefix());
  data.setLocales(buildLocalesMap());
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(conf.getLocale())) {
    data.setLocale(conf.getLocale());
  }
 else {
    data.setLocale(getCmsObject().getRequestContext().getLocale().toString());
  }
  data.setVfsRootFolders(getRootEntries());
  data.setScope(getWorkplaceSettings().getLastSearchScope());
  List<CmsResourceTypeBean> types=null;
  data.setTabIds(conf.getGalleryMode().getTabs());
switch (conf.getGalleryMode()) {
case editor:
case view:
case adeView:
case widget:
    if (conf.getTabIds() != null) {
      data.setTabIds(conf.getTabIds());
    }
  data.setCurrentElement(conf.getCurrentElement());
String referencePath=conf.getReferencePath();
if (CmsStringUtil.isEmptyOrWhitespaceOnly(referencePath)) {
referencePath=conf.getGalleryPath();
}
data.setReferenceSitePath(referencePath);
types=getResourceTypeBeans(conf.getGalleryMode(),data.getReferenceSitePath(),conf.getResourceTypes(),conf.getSearchTypes());
data.setTypes(types);
Map<String,CmsGalleryTypeInfo> galleryTypeInfos=readGalleryInfosByTypeBeans(types);
if (conf.getGalleryTypes() != null) {
Map<String,CmsGalleryTypeInfo> infos=new HashMap<String,CmsGalleryTypeInfo>();
for (int i=0; i < conf.getGalleryTypes().length; i++) {
CmsGalleryTypeInfo typeInfo=galleryTypeInfos.get(conf.getGalleryTypes()[i]);
if (typeInfo != null) {
infos.put(conf.getGalleryTypes()[i],typeInfo);
}
}
galleryTypeInfos=infos;
}
data.setGalleries(buildGalleriesList(galleryTypeInfos));
String startGallery=conf.getGalleryPath();
boolean galleryAvailable=false;
for (CmsGalleryFolderBean folderBean : data.getGalleries()) {
if (folderBean.getPath().equals(startGallery)) {
galleryAvailable=true;
break;
}
}
data.setStartGallery(galleryAvailable ? startGallery : null);
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(conf.getStartFolder())) {
try {
CmsObject cloneCms=OpenCms.initCmsObject(getCmsObject());
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(conf.getStartSite())) {
cloneCms.getRequestContext().setSiteRoot(conf.getStartSite());
}
if (cloneCms.existsResource(conf.getStartFolder(),CmsResourceFilter.ONLY_VISIBLE_NO_DELETED)) {
data.setStartFolder(cloneCms.getRequestContext().addSiteRoot(conf.getStartFolder()));
}
}
 catch (CmsException e) {
log(e.getMessage(),e);
}
}
if (CmsStringUtil.isEmptyOrWhitespaceOnly(data.getStartGallery()) && !data.getGalleries().isEmpty()) {
String key="";
if (!types.isEmpty() && !CmsStringUtil.isEmptyOrWhitespaceOnly(conf.getReferencePath())) {
key=types.get(0).getType();
try {
CmsResource refResource=getCmsObject().readResource(conf.getReferencePath());
String referenceType=OpenCms.getResourceManager().getResourceType(refResource).getTypeName();
key=CmsGallerySearchBean.getGalleryStorageKey(data.getGalleryStoragePrefix(),referenceType);
}
 catch (Exception e) {
LOG.error("Could not read reference resource: " + conf.getReferencePath());
}
}
if (!data.getGalleries().isEmpty()) {
startGallery=getWorkplaceSettings().getLastUsedGallery(key);
if (CmsStringUtil.isEmptyOrWhitespaceOnly(startGallery)) {
String galleryTypeName=data.getGalleries().get(0).getType();
startGallery=getWorkplaceSettings().getUserSettings().getStartGallery(galleryTypeName,getCmsObject());
if (CmsPreferences.INPUT_DEFAULT.equals(startGallery)) {
startGallery=OpenCms.getWorkplaceManager().getDefaultUserSettings().getStartGallery(galleryTypeName);
}
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(startGallery)) {
startGallery=getCmsObject().getRequestContext().removeSiteRoot(startGallery);
}
}
}
if (!conf.hasResultsSelectable()) {
data.setStartGallery(null);
}
 else if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(startGallery)) {
boolean galleryExists=getCmsObject().existsResource(startGallery);
if (galleryExists) {
data.setStartGallery(startGallery);
}
 else {
LOG.error("Could not read start gallery: " + startGallery);
data.setStartGallery(null);
}
}
 else {
data.setStartGallery(null);
}
}
GalleryTabId defaultTab=conf.getTabConfiguration().getDefaultTab();
data.setTabConfiguration(conf.getTabConfiguration());
if (CmsStringUtil.isEmptyOrWhitespaceOnly(data.getStartGallery()) && CmsStringUtil.isEmptyOrWhitespaceOnly(data.getCurrentElement()) && CmsStringUtil.isEmptyOrWhitespaceOnly(data.getStartFolder())) {
data.setStartTab(defaultTab);
}
 else {
data.setStartTab(GalleryTabId.cms_tab_results);
}
break;
case ade:
data.setReferenceSitePath(getCmsObject().getRequestContext().getUri());
types=getResourceTypeBeans(conf.getGalleryMode(),data.getReferenceSitePath(),conf.getResourceTypes(),conf.getSearchTypes());
data.setTypes(types);
Map<String,CmsGalleryTypeInfo> adeGalleryTypeInfos=readGalleryInfosByTypeBeans(types);
data.setGalleries(buildGalleriesList(adeGalleryTypeInfos));
data.setStartTab(GalleryTabId.cms_tab_types);
break;
default :
break;
}
CmsSiteSelectorOptionBuilder optionBuilder=new CmsSiteSelectorOptionBuilder(getCmsObject());
optionBuilder.addNormalSites(true,getWorkplaceSettings().getUserSettings().getStartFolder());
optionBuilder.addSharedSite();
data.setVfsSiteSelectorOptions(optionBuilder.getOptions());
CmsSiteSelectorOptionBuilder sitemapOptionBuilder=new CmsSiteSelectorOptionBuilder(getCmsObject());
sitemapOptionBuilder.addNormalSites(false,null);
if (data.getReferenceSitePath() != null) {
sitemapOptionBuilder.addCurrentSubsite(getCmsObject().addSiteRoot(data.getReferenceSitePath()));
}
data.setSitemapSiteSelectorOptions(sitemapOptionBuilder.getOptions());
data.setDefaultScope(OpenCms.getWorkplaceManager().getGalleryDefaultScope());
return data;
}
