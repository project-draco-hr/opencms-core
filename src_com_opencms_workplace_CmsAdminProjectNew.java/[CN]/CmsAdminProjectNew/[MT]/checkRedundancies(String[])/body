{
  int n=resources.length;
  int i, j;
  boolean[] redundant;
  Vector ret=new Vector();
  if (n < 1) {
    return ret;
  }
  if (n < 2) {
    ret.addElement(resources[0]);
    return ret;
  }
  redundant=new boolean[n];
  for (i=0; i < n; i++) {
    redundant[i]=false;
  }
  for (i=0; i < n - 1; i++) {
    for (j=i + 1; j < n; j++) {
      if (resources[i].length() < resources[j].length()) {
        if (resources[j].startsWith(resources[i])) {
          redundant[j]=true;
        }
      }
 else {
        if (resources[i].startsWith(resources[j])) {
          redundant[i]=true;
        }
      }
    }
  }
  for (i=0; i < n; i++) {
    if (!redundant[i]) {
      ret.addElement(resources[i]);
    }
  }
  return ret;
}
