{
  if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  I_CmsSession session=cms.getRequestContext().getSession(true);
  CmsRequestContext reqCont=cms.getRequestContext();
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  String initial=(String)parameters.get(C_PARA_INITIAL);
  if (initial != null) {
    session.removeValue(C_NEWNAME);
    session.removeValue(C_NEWGROUP);
    session.removeValue(C_NEWDESCRIPTION);
    session.removeValue(C_NEWMANAGERGROUP);
    session.removeValue(C_NEWFOLDER);
    session.removeValue(C_NEWRESOURCES);
    session.removeValue(C_NEWTYPE);
    session.removeValue("lasturl");
    session.removeValue("newProjectCallingFrom");
    reqCont.setCurrentProject(cms.onlineProject().getId());
  }
  String newName, newGroup, newDescription, newManagerGroup, newFolder, projectType;
  String newType=new String();
  String action=new String();
  action=(String)parameters.get("action");
  CmsXmlTemplateFile xmlTemplateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  String fileToGo=(String)parameters.get("file");
  if (fileToGo == null) {
    fileToGo=(String)session.getValue("newProjectCallingFrom");
  }
  String lasturl=(String)parameters.get("lasturl");
  if (lasturl == null) {
    lasturl=(String)session.getValue("lasturl");
  }
  newName=(String)parameters.get(C_PROJECTNEW_NAME);
  if (newName == null) {
    newName=(String)session.getValue(C_NEWNAME);
  }
  String errorTemplateAddOn="";
  if (fileToGo != null) {
    if ((!cms.getRequestContext().isProjectManager()) && (!cms.isAdmin())) {
      return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"norigths");
    }
    errorTemplateAddOn="explorer";
    session.putValue("newProjectCallingFrom",fileToGo);
    xmlTemplateDocument.setData("pathCorrection","");
    xmlTemplateDocument.setData("backButton",lasturl);
    xmlTemplateDocument.setData("myUrl","resource_to_project.html");
    xmlTemplateDocument.setData("dontDoIt"," //");
    xmlTemplateDocument.setData("doThis","addFolder(document.PROJECTNEW.new_ressources,'" + fileToGo + "');");
    if (newName == null) {
      newName=getProjectName(cms,fileToGo);
    }
  }
 else {
    xmlTemplateDocument.setData("pathCorrection","../../");
    xmlTemplateDocument.setData("backButton","../../../action/administration_content_top.html?sender=/system/workplace/administration/project/");
    xmlTemplateDocument.setData("myUrl","index.html");
    xmlTemplateDocument.setData("dontDoIt","");
    xmlTemplateDocument.setData("doThis","");
  }
  xmlTemplateDocument.setData("onlineId","" + cms.onlineProject().getId());
  newGroup=(String)parameters.get(C_PROJECTNEW_GROUP);
  newDescription=(String)parameters.get(C_PROJECTNEW_DESCRIPTION);
  newManagerGroup=(String)parameters.get(C_PROJECTNEW_MANAGERGROUP);
  String allResources=(String)parameters.get(C_NEWRESOURCES);
  newType=(String)parameters.get(C_NEWTYPE);
  if (newGroup == null) {
    newGroup=(String)session.getValue(C_NEWGROUP);
  }
  if (newDescription == null) {
    newDescription=(String)session.getValue(C_NEWDESCRIPTION);
  }
  if (newManagerGroup == null) {
    newManagerGroup=(String)session.getValue(C_NEWMANAGERGROUP);
  }
  if (allResources == null) {
    allResources=(String)session.getValue(C_NEWRESOURCES);
  }
  if (newName == null) {
    newName="";
  }
  if (newGroup == null) {
    newGroup="";
  }
  if (newDescription == null) {
    newDescription="";
  }
  if (newManagerGroup == null) {
    newManagerGroup="";
  }
  if (allResources == null) {
    allResources="";
  }
  if (newType == null || "".equals(newType)) {
    projectType="" + I_CmsConstants.C_PROJECT_TYPE_NORMAL;
    newType="";
  }
 else {
    projectType="" + I_CmsConstants.C_PROJECT_TYPE_TEMPORARY;
  }
  if ((action != null) && ("working".equals(action))) {
    session.removeValue(C_NEWNAME);
    session.removeValue(C_NEWGROUP);
    session.removeValue(C_NEWDESCRIPTION);
    session.removeValue(C_NEWMANAGERGROUP);
    session.removeValue(C_NEWFOLDER);
    session.removeValue(C_NEWTYPE);
    session.removeValue("lasturl");
    session.removeValue("newProjectCallingFrom");
    return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"done");
  }
  if (parameters.get("submitform") != null) {
    session.putValue(C_NEWNAME,newName);
    session.putValue(C_NEWGROUP,newGroup);
    session.putValue(C_NEWDESCRIPTION,newDescription);
    session.putValue(C_NEWMANAGERGROUP,newManagerGroup);
    session.putValue(C_NEWTYPE,newType);
    if (newName.equals("") || newGroup.equals("") || newManagerGroup.equals("")|| allResources.equals("")) {
      templateSelector="datamissing" + errorTemplateAddOn;
    }
 else {
      session.putValue(C_NEWRESOURCES,allResources);
      templateSelector="wait";
      action="start";
    }
  }
  if ("start".equals(action)) {
    newName=(String)session.getValue(C_NEWNAME);
    newGroup=(String)session.getValue(C_NEWGROUP);
    newDescription=(String)session.getValue(C_NEWDESCRIPTION);
    newManagerGroup=(String)session.getValue(C_NEWMANAGERGROUP);
    allResources=(String)session.getValue(C_NEWRESOURCES);
    newType=(String)session.getValue(C_NEWTYPE);
    try {
      String picspath=getConfigFile(cms).getPicGalleryPath();
      String downloadpath=getConfigFile(cms).getDownGalleryPath();
      allResources=allResources + ";" + picspath+ ";"+ downloadpath;
      Vector folders=parseResources(allResources);
      int numRes=folders.size();
      for (int i=0; i < numRes; i++) {
        if (lang.getLanguageValue("title.rootfolder").equals(folders.elementAt(i))) {
          folders.setElementAt("/",i);
        }
      }
      checkRedundancies(folders);
      numRes=folders.size();
      CmsProject project=cms.createProject(newName,newDescription,newGroup,newManagerGroup,Integer.parseInt(projectType));
      reqCont.setCurrentProject(project.getId());
      templateSelector="wait";
      try {
        for (int i=0; i < folders.size(); i++) {
          cms.copyResourceToProject((String)folders.elementAt(i));
        }
      }
 catch (      CmsException e) {
        Vector projectResources=cms.readAllProjectResources(project.getId());
        if ((projectResources == null) || (projectResources.size() == 0)) {
          cms.deleteProject(project.getId());
          reqCont.setCurrentProject(C_PROJECT_ONLINE_ID);
        }
        if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
          A_OpenCms.log(A_OpenCms.C_OPENCMS_CRITICAL,e.getMessage());
        }
        throw e;
      }
    }
 catch (    CmsException exc) {
      xmlTemplateDocument.setData("details",Utils.getStackTrace(exc));
      templateSelector="errornewproject" + errorTemplateAddOn;
    }
  }
  xmlTemplateDocument.setData(C_NEWNAME,newName);
  xmlTemplateDocument.setData(C_NEWDESCRIPTION,newDescription);
  xmlTemplateDocument.setData(C_NEWTYPE,newType);
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
