{
  int x=0, i=0;
  int itemp1, itemp2, itemp3, itemp4, itemp5, setMatch;
  String query, temp1, temp2, temp3, temp4;
  Vector result=new Vector();
  CmsHtdig cdh;
  setMatch=(matchPage).intValue();
  String[] output=new String[((setMatch * C_PARAM_BODY_SIZE) + C_PARAM_ADD)];
  if (restrict.equals("restricttoall"))   restrict="";
  if (conf.equals("contentDefinitionSearchengineConfiguration"))   conf="htdig";
  if (page == null)   query="restrict=" + restrict + "&config="+ conf+ "&method="+ method+ "&format=long&sort="+ sort+ "&matchesperpage="+ setMatch+ "&words="+ word;
 else   query="restrict=" + restrict + "&config="+ conf+ "&method="+ method+ "&format=long&sort="+ sort+ "&matchesperpage="+ setMatch+ "&words="+ word+ "&page="+ page;
  try {
    URL url=new URL(setServerpath);
    URLConnection connection=url.openConnection();
    connection.setDoOutput(true);
    OutputStream connectionOutput=connection.getOutputStream();
    Writer writer=new OutputStreamWriter(connectionOutput,"latin1");
    writer.write(query);
    writer.close();
    InputStream in=connection.getInputStream();
    Reader reader=new InputStreamReader(in,"latin1");
    BufferedReader bufferedReader=new BufferedReader(reader);
    String line=new String();
    while ((line=bufferedReader.readLine()) != null) {
      output[i]=line;
      i++;
    }
    bufferedReader.close();
  }
 catch (  IOException e) {
    System.err.println(e.toString());
  }
  if (i <= 1) {
    if (output[0].equals("syntax"))     result.addElement(output[0]);
 else {
      String nomatch="nomatch";
      result.addElement(nomatch);
    }
  }
 else {
    temp1=output[x];
    itemp1=Integer.parseInt(output[x + 1]);
    itemp2=Integer.parseInt(output[x + 2]);
    itemp3=Integer.parseInt(output[x + 3]);
    itemp4=Integer.parseInt(output[x + 4]);
    cdh=new CmsHtdig(temp1,itemp1,itemp2,itemp3,itemp4);
    result.addElement(cdh);
    for (x=C_PARAM_ADD; x < i; x+=C_PARAM_BODY_SIZE) {
      temp1=output[x];
      temp2=output[x + 1];
      temp3=output[x + 2];
      itemp1=Integer.parseInt(output[x + 3]);
      itemp2=Integer.parseInt(output[x + 4]);
      cdh=new CmsHtdig(temp1,temp2,temp3,itemp1,itemp2);
      result.addElement(cdh);
    }
  }
  return result;
}
