{
  LinkedHashMap<String,String> sortList=getSortList();
  if (sortList != null) {
    m_sortSelectBox=new CmsSelectBox(sortList);
    m_sortSelectBox.addValueChangeHandler(this);
    m_sortSelectBox.addStyleName(DIALOG_CSS.selectboxWidth());
    m_sortSelectBox.truncate(TM_GALLERY_SORT,200);
    m_options.add(m_sortSelectBox);
    Label infoLabel=new Label();
    infoLabel.setStyleName(DIALOG_CSS.infoLabel());
    m_infoLabel=infoLabel;
    m_options.insert(infoLabel,0);
    if (hasQuickSearch() || hasQuickFilter()) {
      m_quickSearch=new CmsTextBox();
      m_quickSearch.addStyleName(DIALOG_CSS.quickFilterBox());
      m_quickSearch.setTriggerChangeOnKeyPress(true);
      m_quickSearch.setGhostValue(Messages.get().key(Messages.GUI_QUICK_FINDER_SEARCH_0),true);
      m_quickSearch.setGhostModeClear(true);
      m_options.insert(m_quickSearch,0);
      m_searchButton=new CmsPushButton();
      m_searchButton.setImageClass(I_CmsImageBundle.INSTANCE.style().searchIcon());
      m_searchButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
      m_searchButton.getElement().getStyle().setFloat(Style.Float.RIGHT);
      m_options.insert(m_searchButton,0);
      m_quickSearch.addValueChangeHandler(this);
      if (hasQuickFilter()) {
        m_filterTimer=new Timer(){
          @Override public void run(){
            getTabHandler().onSort(m_sortSelectBox.getFormValueAsString(),m_quickSearch.getFormValueAsString());
          }
        }
;
      }
 else {
        m_searchButton.addClickHandler(new ClickHandler(){
          public void onClick(          ClickEvent arg0){
            quickSearch();
          }
        }
);
        getTabHandler().addSearchChangeHandler(new ValueChangeHandler<CmsGallerySearchBean>(){
          public void onValueChange(          ValueChangeEvent<CmsGallerySearchBean> event){
            m_quickSearch.setFormValueAsString(event.getValue().getQuery());
          }
        }
);
      }
    }
  }
}
