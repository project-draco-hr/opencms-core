{
  I_CmsSession session=cms.getRequestContext().getSession(true);
  String template=null;
  String initial=(String)parameters.get(C_PARA_INITIAL);
  if (initial != null) {
    session.removeValue(C_PARA_FILE);
    session.removeValue(C_PARA_PROJECT);
    session.removeValue("lasturl");
  }
  String filename=(String)parameters.get(C_PARA_FILE);
  if (filename != null) {
    session.putValue(C_PARA_FILE,filename);
  }
  filename=(String)session.getValue(C_PARA_FILE);
  String versionId=(String)parameters.get(C_PARA_PROJECT);
  Integer id=null;
  CmsBackupResource backupFile=null;
  String theFileName="";
  if (versionId != null) {
    id=new Integer(Integer.parseInt(versionId));
    session.putValue(C_PARA_PROJECT,id);
    backupFile=(CmsBackupResource)cms.readFileHeaderForHist(filename,id.intValue());
    theFileName=backupFile.getName();
  }
 else {
    CmsFile offlineFile=(CmsFile)cms.readFileHeader(filename);
    theFileName=offlineFile.getName();
  }
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  if (id != null) {
    template="detail";
    CmsBackupProject project=cms.readBackupProject(id.intValue());
    xmlTemplateDocument.setData("PROJECT",project.getName());
    String title=cms.readProperty(filename,C_PROPERTY_TITLE);
    if (title == null) {
      title="";
    }
    String editedBy=backupFile.getLastModifiedByName();
    xmlTemplateDocument.setData("TITLE",title);
    xmlTemplateDocument.setData("SIZE",new Integer(backupFile.getLength()).toString());
    xmlTemplateDocument.setData("EDITEDBY",editedBy);
    xmlTemplateDocument.setData("EDITEDAT",Utils.getNiceDate(backupFile.getDateLastModified()));
    xmlTemplateDocument.setData("PUBLISHEDBY",project.getPublishedByName());
    xmlTemplateDocument.setData("PUBLISHEDAT",Utils.getNiceDate(project.getPublishingDate()));
    xmlTemplateDocument.setData("PROJECTDESCRIPTION",project.getDescription());
  }
  xmlTemplateDocument.setData("FILENAME",theFileName);
  return startProcessing(cms,xmlTemplateDocument,"",parameters,template);
}
