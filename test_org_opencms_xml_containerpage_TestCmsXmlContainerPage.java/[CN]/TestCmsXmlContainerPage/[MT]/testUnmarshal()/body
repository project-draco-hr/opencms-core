{
  CmsObject cms=getCmsObject();
  List<Locale> locales=new ArrayList<Locale>();
  locales.add(Locale.ENGLISH);
  Map<Locale,List<String>> typesMap=new HashMap<Locale,List<String>>();
  List<String> types=new ArrayList<String>();
  types.add("test");
  typesMap.put(Locale.ENGLISH,types);
  Map<String,String> namesMap=new HashMap<String,String>();
  namesMap.put(Locale.ENGLISH.toString() + "test","test");
  Map<String,List<CmsContainerElementBean>> elemMap=new HashMap<String,List<CmsContainerElementBean>>();
  List<CmsContainerElementBean> elems=new ArrayList<CmsContainerElementBean>();
  Map<String,String> props=new HashMap<String,String>();
  props.put("abc","abc");
  props.put("test",cms.readResource("/containerpage/content.html").getStructureId().toString());
  CmsContainerElementBean elem=new CmsContainerElementBean(cms.readResource("/containerpage/content.html").getStructureId(),cms.readResource("/containerpage/formatter.jsp").getStructureId(),props,false);
  elems.add(elem);
  elemMap.put(Locale.ENGLISH.toString() + "test",elems);
  CmsFile file=cms.readFile("containerpage/index.html");
  CmsXmlContainerPage xmlCntPage=CmsXmlContainerPageFactory.unmarshal(cms,file);
  assertEquals(locales,xmlCntPage.getLocales());
  for (  Locale locale : locales) {
    List<String> expectedTypes=typesMap.get(locale);
    for (int i=0; i < expectedTypes.size(); i++) {
      String expectedType=expectedTypes.get(i);
      I_CmsXmlContentValue cnt=xmlCntPage.getValue(CmsXmlContainerPage.XmlNode.Containers.name(),locale,i);
      String name=xmlCntPage.getStringValue(cms,CmsXmlUtils.concatXpath(cnt.getPath(),CmsXmlContainerPage.XmlNode.Name.name()),locale);
      assertEquals(namesMap.get(locale.toString() + expectedType),name);
      String type=xmlCntPage.getStringValue(cms,CmsXmlUtils.concatXpath(cnt.getPath(),CmsXmlContainerPage.XmlNode.Type.name()),locale);
      assertEquals(expectedType,type);
    }
  }
  for (  Locale locale : locales) {
    CmsContainerPageBean cntPage=xmlCntPage.getContainerPage(cms);
    types=typesMap.get(locale);
    assertEquals(new HashSet<String>(types),cntPage.getTypes());
    assertEquals(types.size(),cntPage.getContainers().size());
    for (    String type : types) {
      assertTrue(cntPage.getContainers().containsKey(type));
      CmsContainerBean cnt=cntPage.getContainers().get(type);
      assertEquals(-1,cnt.getMaxElements());
      assertEquals(type,cnt.getType());
      assertEquals(namesMap.get(locale.toString() + type),cnt.getName());
      assertEquals(elemMap.get(locale.toString() + type).size(),cnt.getElements().size());
      for (int i=0; i < cnt.getElements().size(); i++) {
        CmsContainerElementBean element=cnt.getElements().get(i);
        CmsContainerElementBean expected=elemMap.get(locale.toString() + type).get(i);
        assertEquals(expected.editorHash(),element.editorHash());
        assertEquals(expected.getId(),element.getId());
        assertEquals(expected.getFormatterId(),element.getFormatterId());
        assertEquals(expected.getIndividualSettings(),element.getIndividualSettings());
      }
    }
  }
}
