{
  if ((OpenCms.getSiteManager().getSites().size() > 1) && !OpenCms.getSiteManager().isWorkplaceRequest(getRequest())) {
    getResponse().sendError(HttpServletResponse.SC_NOT_FOUND);
    return null;
  }
  CmsObject cms=getCmsObject();
  if (shouldUseNewLogin() && (cms.getRequestContext().getCurrentUser().isGuestUser())) {
    if (getRequest().getParameter(PARAM_ACTION_LOGOUT) != null) {
      getResponse().sendRedirect(OpenCms.getLinkManager().substituteLink(cms,"/system/login"));
      return "";
    }
 else {
      return CmsLoginUI.displayVaadinLoginDialog(cms,getRequest());
    }
  }
  m_message=null;
  if (cms.getRequestContext().getCurrentUser().isGuestUser()) {
    m_action=ACTION_DISPLAY;
    m_username=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_USERNAME);
    if (m_username != null) {
      m_username=m_username.trim();
    }
    m_password=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_PASSWORD);
    m_actionLogin=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_ACTION_LOGIN);
    m_oufqn=getRequest().getParameter(PARAM_OUFQN);
    if (m_oufqn == null) {
      m_oufqn=getPreDefOuFqn();
    }
    if (OpenCms.getLoginManager().isEnableSecurity()) {
      m_pcType=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_PCTYPE);
    }
 else {
      m_pcType=PCTYPE_PRIVATE;
    }
    getCookieData();
    if (m_pcType == null) {
      m_pcType=PCTYPE_PUBLIC;
    }
  }
 else {
    m_oufqn=cms.getRequestContext().getOuFqn();
    m_action=ACTION_LOGIN;
    m_actionLogout=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_ACTION_LOGOUT);
  }
  if (m_oufqn == null) {
    m_oufqn=CmsOrganizationalUnit.SEPARATOR;
  }
  String actionGetOus=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_ACTION_GETOULIST);
  if (Boolean.TRUE.toString().equals(actionGetOus)) {
    return getJsonOrgUnitList();
  }
  m_ou=null;
  try {
    m_ou=OpenCms.getOrgUnitManager().readOrganizationalUnit(getCmsObject(),m_oufqn);
  }
 catch (  CmsException e) {
    m_oufqn=CmsOrganizationalUnit.SEPARATOR;
    try {
      m_ou=OpenCms.getOrgUnitManager().readOrganizationalUnit(getCmsObject(),m_oufqn);
    }
 catch (    CmsException exc) {
      LOG.error(exc.getLocalizedMessage(),exc);
    }
  }
  m_requestedResource=CmsRequestUtil.getNotEmptyParameter(getRequest(),CmsWorkplaceManager.PARAM_LOGIN_REQUESTED_RESOURCE);
  if (m_requestedResource == null) {
    m_requestedResource=CmsFrameset.JSP_WORKPLACE_URI;
  }
  if (Boolean.valueOf(m_actionLogin).booleanValue()) {
    CmsMessageContainer emptyValidation=validateUserAndPasswordNotEmpty(m_username,m_password);
    if (emptyValidation != null) {
      m_message=emptyValidation;
    }
 else {
      login((m_oufqn == null ? CmsOrganizationalUnit.SEPARATOR : m_oufqn) + m_username,m_password);
      if (getLoginException() == null) {
        m_action=ACTION_LOGIN;
        CmsWorkplaceSettings settings=initSiteAndProject(cms);
        getRequest().getSession().setAttribute(CmsWorkplaceManager.SESSION_WORKPLACE_SETTINGS,settings);
        m_directEditPath=getDirectEditPath(cms,settings.getUserSettings());
      }
 else {
        CmsException loginException=getLoginException();
        if (org.opencms.security.Messages.ERR_LOGIN_FAILED_DISABLED_2 == loginException.getMessageContainer().getKey()) {
          m_message=Messages.get().container(Messages.GUI_LOGIN_FAILED_DISABLED_0);
        }
 else         if (org.opencms.security.Messages.ERR_LOGIN_FAILED_TEMP_DISABLED_4 == loginException.getMessageContainer().getKey()) {
          m_message=Messages.get().container(Messages.GUI_LOGIN_FAILED_TEMP_DISABLED_0);
        }
 else         if (org.opencms.security.Messages.ERR_LOGIN_FAILED_WITH_MESSAGE_1 == loginException.getMessageContainer().getKey()) {
          CmsLoginMessage loginMessage=OpenCms.getLoginManager().getLoginMessage();
          if (loginMessage != null) {
            m_message=Messages.get().container(Messages.GUI_LOGIN_FAILED_WITH_MESSAGE_1,loginMessage.getMessage());
          }
        }
        if (m_message == null) {
          if (loginException instanceof CmsCustomLoginException) {
            m_message=loginException.getMessageContainer();
          }
 else {
            m_message=Messages.get().container(Messages.GUI_LOGIN_FAILED_0);
          }
        }
      }
    }
  }
 else   if (Boolean.valueOf(m_actionLogout).booleanValue()) {
    m_action=ACTION_LOGOUT;
    Cookie wpDataCookie=getCookie(getRequest(),COOKIE_WP_DATA);
    String wpData=CmsRequestUtil.getNotEmptyParameter(getRequest(),PARAM_WPDATA);
    if (wpData != null) {
      wpData=CmsEncoder.escapeXml(wpData);
      wpDataCookie.setValue(wpData);
      setCookie(wpDataCookie,false,getRequest(),getResponse());
    }
    logout();
    return null;
  }
  if (m_action == ACTION_LOGIN) {
    m_message=null;
    CmsUriSplitter splitter=new CmsUriSplitter(m_requestedResource,true);
    String resource=splitter.getPrefix();
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(resource)) {
      resource=CmsFrameset.JSP_WORKPLACE_URI;
    }
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(m_directEditPath) && !getCmsObject().existsResource(resource,CmsResourceFilter.ONLY_VISIBLE_NO_DELETED)) {
      if (CmsFrameset.JSP_WORKPLACE_URI.equals(resource)) {
        m_message=Messages.get().container(Messages.GUI_LOGIN_FAILED_NO_WORKPLACE_PERMISSIONS_0);
        m_action=ACTION_DISPLAY;
      }
 else       if (getCmsObject().existsResource(CmsFrameset.JSP_WORKPLACE_URI)) {
        m_message=Messages.get().container(Messages.GUI_LOGIN_UNKNOWN_RESOURCE_1,m_requestedResource);
        m_requestedResource=CmsFrameset.JSP_WORKPLACE_URI;
      }
 else {
        m_message=Messages.get().container(Messages.GUI_LOGIN_FAILED_NO_TARGET_PERMISSIONS_1,m_requestedResource);
        m_action=ACTION_DISPLAY;
      }
    }
    if (m_action == ACTION_DISPLAY) {
      m_requestedResource=null;
      HttpSession session=getRequest().getSession(false);
      if (session != null) {
        session.invalidate();
      }
      setCookieData(getRequest(),getResponse());
    }
 else {
      setCookieData(getRequest(),getResponse());
    }
  }
  return displayLoginForm();
}
