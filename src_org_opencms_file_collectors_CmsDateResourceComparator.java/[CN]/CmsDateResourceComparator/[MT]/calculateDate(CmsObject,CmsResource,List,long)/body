{
  long result=0;
  List properties=null;
  for (int i=0, size=dateIdentifiers.size(); i < size; i++) {
    String date=(String)dateIdentifiers.get(i);
    int pos=DATE_ATTRIBUTES_LIST.indexOf(date);
switch (pos) {
case 0:
      result=resource.getDateCreated();
    break;
case 1:
  result=resource.getDateLastModified();
break;
case 2:
if (resource.isFile()) {
result=resource.getDateContent();
}
break;
case 3:
long dr=resource.getDateReleased();
if (dr != CmsResource.DATE_RELEASED_DEFAULT) {
result=dr;
}
break;
case 4:
long de=resource.getDateExpired();
if (de != CmsResource.DATE_EXPIRED_DEFAULT) {
result=de;
}
break;
default :
if (properties == null) {
try {
properties=cms.readPropertyObjects(resource,false);
}
 catch (CmsException e) {
properties=Collections.EMPTY_LIST;
}
}
String propValue=CmsProperty.get(date,properties).getValue();
if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(propValue)) {
try {
result=Long.parseLong(propValue.trim());
}
 catch (NumberFormatException e) {
}
}
break;
}
if (result != 0) {
break;
}
}
if (result == 0) {
result=defaultValue;
}
return result;
}
