{
  HttpSession session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  String template=null;
  String lasturl=getLastUrl(cms,parameters);
  String initial=(String)parameters.get(C_PARA_INITIAL);
  if (initial != null) {
    session.removeValue(C_PARA_DELETE);
    session.removeValue(C_PARA_FILE);
  }
  String delete=(String)parameters.get(C_PARA_DELETE);
  if (delete != null) {
    session.putValue(C_PARA_DELETE,delete);
  }
  delete=(String)session.getValue(C_PARA_DELETE);
  String filename=(String)parameters.get(C_PARA_FILE);
  if (filename != null) {
    session.putValue(C_PARA_FILE,filename);
  }
  filename=(String)session.getValue(C_PARA_FILE);
  String action=(String)parameters.get("action");
  A_CmsResource file=(A_CmsResource)cms.readFileHeader(filename);
  if (file.isFile()) {
    template="file";
  }
 else {
    template="folder";
  }
  if (delete != null) {
    if (action == null) {
      template="wait";
    }
 else {
      if (file.isFile()) {
        deleteFile(cms,file);
        session.removeValue(C_PARA_DELETE);
        session.removeValue(C_PARA_FILE);
        try {
          if (lasturl == null || "".equals(lasturl)) {
            cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath() + C_WP_EXPLORER_FILELIST);
          }
 else {
            ((HttpServletResponse)(cms.getRequestContext().getResponse().getOriginalResponse())).sendRedirect(lasturl);
          }
        }
 catch (        Exception e) {
          throw new CmsException("Redirect fails :" + getConfigFile(cms).getWorkplaceActionPath() + C_WP_EXPLORER_FILELIST,CmsException.C_UNKNOWN_EXCEPTION,e);
        }
        return null;
      }
 else {
        Vector allFolders=new Vector();
        Vector allFiles=new Vector();
        getAllResources(cms,filename,allFiles,allFolders);
        for (int i=0; i < allFiles.size(); i++) {
          CmsFile newfile=(CmsFile)allFiles.elementAt(i);
          if (newfile.getState() != C_STATE_DELETED) {
            deleteFile(cms,newfile);
          }
        }
        for (int i=0; i < allFolders.size(); i++) {
          CmsFolder folder=(CmsFolder)allFolders.elementAt(allFolders.size() - i - 1);
          if (folder.getState() != C_STATE_DELETED) {
            cms.deleteFolder(folder.getAbsolutePath());
          }
        }
        cms.deleteFolder(filename);
        try {
          cms.deleteFolder(C_CONTENTBODYPATH + filename.substring(1));
        }
 catch (        CmsException e) {
        }
        session.removeValue(C_PARA_DELETE);
        session.removeValue(C_PARA_FILE);
        xmlTemplateDocument.setData("lasturl",lasturl);
        template="update";
      }
    }
  }
  if (action == null) {
    String title=cms.readProperty(file.getAbsolutePath(),C_PROPERTY_TITLE);
    if (title == null) {
      title="";
    }
    A_CmsUser owner=cms.readOwner(file);
    xmlTemplateDocument.setData("TITLE",title);
    xmlTemplateDocument.setData("STATE",getState(cms,file,new CmsXmlLanguageFile(cms)));
    xmlTemplateDocument.setData("OWNER",Utils.getFullName(owner));
    xmlTemplateDocument.setData("GROUP",cms.readGroup(file).getName());
    xmlTemplateDocument.setData("FILENAME",file.getName());
  }
  return startProcessing(cms,xmlTemplateDocument,"",parameters,template);
}
