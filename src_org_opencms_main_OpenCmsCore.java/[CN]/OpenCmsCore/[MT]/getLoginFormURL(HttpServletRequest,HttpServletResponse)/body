{
  CmsHttpAuthenticationSettings httpAuthenticationSettings=OpenCms.getSystemInfo().getHttpAuthenticationSettings();
  String loginFormURL=null;
  CmsObject adminCms;
  try {
    adminCms=initCmsObject(req,res,OpenCms.getDefaultUsers().getUserAdmin(),null,null);
  }
 catch (  CmsException e) {
    throw new IOException(Messages.get().getBundle().key(Messages.ERR_INVALID_INIT_USER_2,OpenCms.getDefaultUsers().getUserAdmin(),null),e);
  }
  String path=adminCms.getRequestContext().getUri();
  CmsProperty propertyLoginForm=null;
  try {
    propertyLoginForm=adminCms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_LOGIN_FORM,true);
  }
 catch (  Throwable t) {
    if (t instanceof CmsVfsResourceNotFoundException) {
      CmsResource alternativeResource=null;
      try {
        alternativeResource=initResource(adminCms,path,req,null);
        if (alternativeResource != null) {
          propertyLoginForm=adminCms.readPropertyObject(adminCms.getSitePath(alternativeResource),CmsPropertyDefinition.PROPERTY_LOGIN_FORM,true);
        }
      }
 catch (      Exception e) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
    if (propertyLoginForm == null) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.LOG_ERROR_READING_AUTH_PROP_2,CmsPropertyDefinition.PROPERTY_LOGIN_FORM,path),t);
      }
    }
  }
  String params=null;
  if ((propertyLoginForm != null) && (propertyLoginForm != CmsProperty.getNullProperty()) && CmsStringUtil.isNotEmpty(propertyLoginForm.getValue())) {
    loginFormURL=propertyLoginForm.getValue();
    params="__loginform=true";
  }
 else   if (!httpAuthenticationSettings.useBrowserBasedHttpAuthentication() && CmsStringUtil.isNotEmpty(httpAuthenticationSettings.getFormBasedHttpAuthenticationUri())) {
    loginFormURL=httpAuthenticationSettings.getFormBasedHttpAuthenticationUri();
  }
  String callbackURL=CmsRequestUtil.encodeParamsWithUri(path,req);
  if (loginFormURL != null) {
    if (!loginFormURL.startsWith("http")) {
      loginFormURL=m_linkManager.substituteLink(adminCms,loginFormURL,null,true);
    }
 else {
      callbackURL=m_linkManager.getServerLink(adminCms,path);
      callbackURL=CmsRequestUtil.encodeParamsWithUri(callbackURL,req);
    }
  }
  return m_authorizationHandler.getLoginFormURL(loginFormURL,params,callbackURL);
}
