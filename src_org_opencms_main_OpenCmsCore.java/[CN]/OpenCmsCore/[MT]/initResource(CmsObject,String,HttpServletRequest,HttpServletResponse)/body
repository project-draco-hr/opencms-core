{
  CmsResource resource=null;
  CmsException tmpException=null;
  try {
    resource=cms.readFileHeader(resourceName);
    if (resource.isFolder()) {
      try {
        String defaultFileName=cms.readPropertyObject(CmsResource.getFolderPath(cms.readAbsolutePath(resource)),I_CmsConstants.C_PROPERTY_DEFAULT_FILE,false).getValue();
        if (defaultFileName != null) {
          String tmpResourceName=CmsResource.getFolderPath(cms.readAbsolutePath(resource)) + defaultFileName;
          resource=cms.readFileHeader(tmpResourceName);
          cms.getRequestContext().setUri(tmpResourceName);
        }
      }
 catch (      CmsSecurityException se) {
        throw se;
      }
catch (      CmsException e) {
      }
      if (resource.isFolder()) {
        for (int i=0; i < m_defaultFilenames.length; i++) {
          String tmpResourceName=CmsResource.getFolderPath(cms.readAbsolutePath(resource)) + m_defaultFilenames[i];
          try {
            resource=cms.readFileHeader(tmpResourceName);
            cms.getRequestContext().setUri(tmpResourceName);
            break;
          }
 catch (          CmsSecurityException se) {
            throw se;
          }
catch (          CmsException e) {
          }
        }
      }
    }
    if (resource.isFolder()) {
      resource=null;
    }
  }
 catch (  CmsException e) {
    tmpException=e;
    resource=null;
  }
  if (resource != null) {
    if ((resource.getFlags() & I_CmsConstants.C_ACCESS_INTERNAL_READ) > 0) {
      throw new CmsException(CmsException.C_ERROR_DESCRIPTION[CmsException.C_INTERNAL_FILE] + cms.getRequestContext().getUri(),CmsException.C_INTERNAL_FILE);
    }
  }
  Iterator i=m_resourceInitHandlers.iterator();
  while (i.hasNext()) {
    try {
      resource=((I_CmsResourceInit)i.next()).initResource(resource,cms,req,res);
    }
 catch (    CmsResourceInitException e) {
      break;
    }
  }
  if (resource == null && tmpException != null) {
    throw tmpException;
  }
  return resource;
}
