{
  super(Integer.MAX_VALUE,(CellTable.Resources)GWT.create(I_CmsCellTableResources.class),new ProvidesKey<CmsAliasTableRow>(){
    public Object getKey(    CmsAliasTableRow item){
      return item.getKey();
    }
  }
);
  m_controller=controller;
  Column<CmsAliasTableRow,Boolean> selectCol=new CmsAliasSelectionColumn(this);
  Column<CmsAliasTableRow,String> aliasPathCol=new CmsAliasPathColumn(this);
  Column<CmsAliasTableRow,String> resourcePathCol=new CmsResourcePathColumn(this);
  Column<CmsAliasTableRow,String> modeCol=new CmsAliasModeColumn(this);
  m_errorColumn=new CmsAliasErrorColumn();
  m_dataProvider=new ListDataProvider<CmsAliasTableRow>();
  m_dataProvider.addDataDisplay(this);
  ColumnSortEvent.ListHandler<CmsAliasTableRow> sortHandler=new ColumnSortEvent.ListHandler<CmsAliasTableRow>(m_dataProvider.getList());
  sortHandler.setComparator(aliasPathCol,CmsAliasPathColumn.getComparator());
  sortHandler.setComparator(resourcePathCol,CmsResourcePathColumn.getComparator());
  sortHandler.setComparator(modeCol,CmsAliasModeColumn.getComparator());
  sortHandler.setComparator(m_errorColumn,CmsAliasErrorColumn.getComparator());
  addColumnSortHandler(sortHandler);
  final MultiSelectionModel<CmsAliasTableRow> selectionModel=new MultiSelectionModel<CmsAliasTableRow>(getKeyProvider());
  selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler(){
    public void onSelectionChange(    SelectionChangeEvent event){
      m_controller.changeSelection(selectionModel.getSelectedSet());
    }
  }
);
  setSelectionModel(selectionModel,DefaultSelectionEventManager.<CmsAliasTableRow>createCheckboxManager());
  addColumn(selectCol,CmsAliasMessages.messageColumnSelect());
  setColumnWidth(selectCol,50,Unit.PX);
  addColumn(aliasPathCol,CmsAliasMessages.messageColumnAlias());
  setColumnWidth(aliasPathCol,350,Unit.PX);
  addColumn(resourcePathCol,CmsAliasMessages.messageColumnPath());
  setColumnWidth(resourcePathCol,350,Unit.PX);
  addColumn(modeCol,CmsAliasMessages.messageColumnMode());
  setColumnWidth(modeCol,200,Unit.PX);
  addColumn(m_errorColumn,CmsAliasMessages.messageColumnError());
  setColumnWidth(m_errorColumn,50,Unit.PX);
  addLoadingStateChangeHandler(new LoadingStateChangeEvent.Handler(){
    public void onLoadingStateChanged(    LoadingStateChangeEvent event){
      Timer resizeTimer=new Timer(){
        @Override public void run(){
          CmsDomUtil.resizeAncestor(CmsAliasCellTable.this);
        }
      }
;
      resizeTimer.schedule(10);
    }
  }
);
  setWidth("100%");
}
