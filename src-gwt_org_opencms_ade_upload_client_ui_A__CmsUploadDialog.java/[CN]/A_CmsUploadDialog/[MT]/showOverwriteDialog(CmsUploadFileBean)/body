{
  m_selectionDone=true;
  m_okButton.enable();
  if (infoBean.getInvalidFileNames().isEmpty() && infoBean.getExistingDeletedFileNames().isEmpty()) {
    displayDialogInfo(Messages.get().key(Messages.GUI_UPLOAD_INFO_OVERWRITE_0),true);
  }
 else {
    displayDialogInfo(Messages.get().key(Messages.GUI_UPLOAD_INFO_INVALID_0),true);
  }
  if (m_uploadButton instanceof UIObject) {
    ((UIObject)m_uploadButton).getElement().getStyle().setDisplay(Display.NONE);
  }
  m_fileList.clearList();
  List<String> existings=new ArrayList<String>(infoBean.getExistingResourceNames());
  Collections.sort(existings,String.CASE_INSENSITIVE_ORDER);
  for (  String filename : existings) {
    addFileToList(m_filesToUpload.get(filename),false,false,false);
  }
  List<String> invalids=new ArrayList<String>(infoBean.getInvalidFileNames());
  Collections.sort(invalids,String.CASE_INSENSITIVE_ORDER);
  for (  String filename : invalids) {
    addFileToList(m_filesToUpload.get(filename),true,false,false);
    m_filesToUpload.remove(filename);
  }
  List<String> existingDeleted=new ArrayList<String>(infoBean.getExistingDeletedFileNames());
  Collections.sort(existingDeleted,String.CASE_INSENSITIVE_ORDER);
  for (  String filename : existingDeleted) {
    addFileToList(m_filesToUpload.get(filename),false,true,false);
    m_filesToUpload.remove(filename);
  }
  setHeight();
}
