{
  List<Throwable> errors=new ArrayList<Throwable>();
  try {
    Map<String,String[]> params=new HashMap<String,String[]>();
    params.put(CmsDialog.PARAM_ACTION,new String[]{A_CmsListDialog.LIST_SELECT_PAGE});
    params.put(A_CmsListDialog.PARAM_PAGE,new String[]{"1"});
    params.put(CmsToolDialog.PARAM_ROOT,new String[]{"explorer"});
    if (getSettings().getUserSettings().getWorkplaceSearchViewStyle() == CmsSearchResultStyle.STYLE_EXPLORER) {
      getSettings().setExplorerPage(1);
      params.put(A_CmsListExplorerDialog.PARAM_SHOW_EXPLORER,new String[]{Boolean.TRUE.toString()});
    }
 else {
      CmsListMetadata metadata=A_CmsListDialog.getMetadata(CmsSearchResultsList.class.getName());
      boolean withExcerpts=(getSettings().getUserSettings().getWorkplaceSearchViewStyle() == CmsSearchResultStyle.STYLE_LIST_WITH_EXCERPTS);
      if (metadata == null) {
        if (!withExcerpts) {
          params.put(CmsDialog.PARAM_ACTION,new String[]{A_CmsListDialog.LIST_INDEPENDENT_ACTION});
          params.put(A_CmsListDialog.PARAM_LIST_ACTION,new String[]{CmsSearchResultsList.LIST_DETAIL_EXCERPT});
        }
      }
 else {
        metadata.getItemDetailDefinition(CmsSearchResultsList.LIST_DETAIL_EXCERPT).setVisible(withExcerpts);
      }
      params.put(A_CmsListExplorerDialog.PARAM_SHOW_EXPLORER,new String[]{Boolean.FALSE.toString()});
    }
    getToolManager().jspForwardTool(this,"/search/results",params);
  }
 catch (  Exception e) {
    errors.add(e);
  }
  setCommitErrors(errors);
}
