{
  CmsObject cms=getCmsObject();
  String source="/testdeletesib1.html";
  String sibling="/testdeletesib2.html";
  echo("testing publishing of deleted siblings");
  CmsResource src=cms.createResource(source,CmsResourceTypePlain.getStaticTypeId());
  CmsFile file=CmsFile.upgrade(src,cms);
  file.setContents("test text".getBytes());
  cms.writeFile(file);
  cms.createSibling(source,sibling,null);
  OpenCms.getPublishManager().publishResource(cms,source,true,new CmsShellReport(cms.getRequestContext().getLocale()));
  OpenCms.getPublishManager().waitWhileRunning();
  CmsProject online=cms.readProject(CmsProject.ONLINE_PROJECT_ID);
  CmsProject offline=cms.getRequestContext().currentProject();
  cms.getRequestContext().setCurrentProject(online);
  storeResources(cms,source);
  storeResources(cms,sibling);
  cms.getRequestContext().setCurrentProject(offline);
  cms.lockResource(sibling);
  cms.deleteResource(sibling,CmsResource.DELETE_PRESERVE_SIBLINGS);
  cms.unlockResource(sibling);
  cms.getRequestContext().setCurrentProject(online);
  assertFilter(cms,source,OpenCmsTestResourceFilter.FILTER_EQUAL);
  assertFilter(cms,sibling,OpenCmsTestResourceFilter.FILTER_EQUAL);
  cms.getRequestContext().setCurrentProject(offline);
  OpenCms.getPublishManager().publishResource(cms,sibling,false,new CmsShellReport(cms.getRequestContext().getLocale()));
  OpenCms.getPublishManager().waitWhileRunning();
  cms.getRequestContext().setCurrentProject(online);
  assertFalse(cms.existsResource(sibling,CmsResourceFilter.ALL));
  assertTrue(cms.existsResource(source,CmsResourceFilter.ALL));
  assertEquals(new String("test text".getBytes()),new String(cms.readFile(source).getContents()));
  cms.getRequestContext().setCurrentProject(offline);
  List list=cms.readDeletedResources("/",false);
  CmsHistoryFile histFile=(CmsHistoryFile)list.get(0);
  assertEquals(cms.getRequestContext().addSiteRoot(sibling),histFile.getRootPath());
  assertEquals(2,histFile.getVersion());
  file=CmsFile.upgrade(histFile,cms);
  assertEquals(new String("test text".getBytes()),new String(file.getContents()));
  cms.lockResource(source);
  cms.deleteResource(source,CmsResource.DELETE_PRESERVE_SIBLINGS);
  cms.unlockResource(source);
  OpenCms.getPublishManager().publishResource(cms,source);
  OpenCms.getPublishManager().waitWhileRunning();
  cms.getRequestContext().setCurrentProject(online);
  assertFalse(cms.existsResource(sibling,CmsResourceFilter.ALL));
  assertFalse(cms.existsResource(source,CmsResourceFilter.ALL));
  cms.getRequestContext().setCurrentProject(offline);
  list=cms.readDeletedResources("/",false);
  assertEquals(2,list.size());
  histFile=(CmsHistoryFile)list.get(0);
  assertEquals(cms.getRequestContext().addSiteRoot(source),histFile.getRootPath());
  assertEquals(2,histFile.getVersion());
  file=CmsFile.upgrade(histFile,cms);
  assertEquals(new String("test text".getBytes()),new String(file.getContents()));
  CmsHistoryFile histFile2=(CmsHistoryFile)list.get(1);
  assertEquals(cms.getRequestContext().addSiteRoot(sibling),histFile2.getRootPath());
  assertEquals(2,histFile2.getVersion());
  file=CmsFile.upgrade(histFile2,cms);
  assertEquals(new String("test text".getBytes()),new String(file.getContents()));
}
