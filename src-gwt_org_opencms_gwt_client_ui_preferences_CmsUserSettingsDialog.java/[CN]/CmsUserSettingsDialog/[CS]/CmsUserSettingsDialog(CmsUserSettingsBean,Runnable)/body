{
  super("User settings",new CmsForm(false),1000);
  m_finishAction=finishAction;
  m_panel=new CmsUserSettingsFormFieldPanel(userSettings);
  getForm().setWidget(m_panel);
  for (  Map.Entry<String,CmsXmlContentProperty> entry : userSettings.getConfiguration().entrySet()) {
    String key=entry.getKey();
    CmsXmlContentProperty settingDef=entry.getValue();
    I_CmsFormWidgetMultiFactory factory=new I_CmsFormWidgetMultiFactory(){
      public I_CmsFormWidget createFormWidget(      String widgetKey,      Map<String,String> widgetParams){
        if (CmsSelectBox.WIDGET_TYPE.equals(widgetKey)) {
          widgetKey=CmsSelectBox.WIDGET_TYPE_NOTNULL;
        }
        return CmsWidgetFactoryRegistry.instance().createFormWidget(widgetKey,widgetParams);
      }
    }
;
    I_CmsFormField field=CmsBasicFormField.createField(settingDef,settingDef.getName(),factory,Collections.<String,String>emptyMap(),false);
    if (userSettings.isBasic(settingDef.getName())) {
      field.getLayoutData().put("basic","true");
    }
    getForm().addField(field,userSettings.getValue(key));
  }
  CmsDialogFormHandler handler=new CmsDialogFormHandler();
  handler.setDialog(this);
  handler.setSubmitHandler(this);
  getForm().setFormHandler(handler);
  getForm().render();
  m_panel.truncate("asdfasdfmjsdb",1000);
  getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dialogCss().hideCaption());
  setMainContent(m_panel);
  setModal(true);
  setHeight(600);
  setGlassEnabled(true);
  removePadding();
}
