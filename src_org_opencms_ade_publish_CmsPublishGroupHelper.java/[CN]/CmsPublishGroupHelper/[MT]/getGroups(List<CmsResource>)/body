{
  List<CmsResource> sortedResources=new ArrayList<CmsResource>(resources);
  Collections.sort(sortedResources,I_CmsResource.COMPARE_DATE_LAST_MODIFIED);
  Map<Long,Integer> daysMap=computeDaysForResources(sortedResources);
  Map<GroupAge,List<CmsResource>> resourcesByAge=partitionPublishResourcesByAge(sortedResources,daysMap);
  List<List<CmsResource>> youngGroups=partitionYoungResources(resourcesByAge.get(GroupAge.young));
  List<List<CmsResource>> mediumGroups=partitionMediumResources(resourcesByAge.get(GroupAge.medium),daysMap);
  List<CmsResource> oldGroup=resourcesByAge.get(GroupAge.old);
  List<CmsResourceGroup> resultGroups=new ArrayList<CmsResourceGroup>();
  for (  List<CmsResource> groupRes : youngGroups) {
    String name=getPublishGroupName(groupRes,GroupAge.young);
    resultGroups.add(new CmsResourceGroup(name,groupRes));
  }
  for (  List<CmsResource> groupRes : mediumGroups) {
    String name=getPublishGroupName(groupRes,GroupAge.medium);
    resultGroups.add(new CmsResourceGroup(name,groupRes));
  }
  if (!oldGroup.isEmpty()) {
    String oldName=getPublishGroupName(oldGroup,GroupAge.old);
    resultGroups.add(new CmsResourceGroup(oldName,oldGroup));
  }
  return resultGroups;
}
