{
  int targetWidth=m_scaler.getWidth();
  int targetHeight=m_scaler.getHeight();
  int originalWidth=originalScaler.getWidth();
  int originalHeight=originalScaler.getHeight();
  for (  String multiplierString : m_hiDpiVariantList) {
    if (!multiplierString.matches("^[0-9]+(.[0-9]+)?x$")) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(String.format("Illegal multiplier format: %s not usable for image scaling",multiplierString));
      }
      continue;
    }
    float multiplier=NumberUtils.createFloat(multiplierString.substring(0,multiplierString.length() - 1)).floatValue();
    int width=Math.round(targetWidth * multiplier);
    int height=Math.round(targetHeight * multiplier);
    if ((originalWidth >= width) && (originalHeight >= height)) {
      CmsImageScaler hiDpiScaler=(CmsImageScaler)scaler.clone();
      hiDpiScaler.setWidth(width);
      hiDpiScaler.setHeight(height);
      String imageSrc=cms.getSitePath(imageRes);
      if (hiDpiScaler.isValid()) {
        imageSrc+=hiDpiScaler.toRequestParam();
      }
      CmsJspImageBean image=new CmsJspImageBean();
      image.setSrcUrl(OpenCms.getLinkManager().substituteLink(cms,imageSrc));
      image.setWidth(width);
      image.setHeight(height);
      image.setScaler(hiDpiScaler);
      scaledImage.addHiDpiImage(multiplierString,image);
    }
  }
}
