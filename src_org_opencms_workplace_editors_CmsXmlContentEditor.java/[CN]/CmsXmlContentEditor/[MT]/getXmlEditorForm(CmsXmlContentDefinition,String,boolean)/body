{
  StringBuffer result=new StringBuffer(1024);
  boolean showErrors=(getAction() != ACTION_NEW) && (getAction() != ACTION_DEFAULT);
  try {
    boolean nested=CmsStringUtil.isNotEmpty(pathPrefix);
    result.append("<table class=\"xmlTable");
    if (nested) {
      result.append("Nested");
    }
    result.append("\">\n");
    if (!nested && showErrors && (getValidationHandler().hasErrors())) {
      result.append("<tr><td colspan=\"4\">&nbsp;</td></tr>\n");
      result.append("<tr><td colspan=\"2\">&nbsp;</td>");
      result.append("<td class=\"xmlTdErrorHeader\">");
      result.append(key(Messages.ERR_EDITOR_XMLCONTENT_VALIDATION_ERROR_TITLE_0));
      result.append("</td><td>&nbsp;");
      result.append("</td></tr>\n");
      if ((getValidationHandler().getErrors(getElementLocale()) == null) || (getValidationHandler().getErrors().size() > getValidationHandler().getErrors(getElementLocale()).size())) {
        Map locErrors=getValidationHandler().getErrors();
        Iterator locErrorsIter=locErrors.entrySet().iterator();
        while (locErrorsIter.hasNext()) {
          Map.Entry locEntry=(Map.Entry)locErrorsIter.next();
          Locale locale=(Locale)locEntry.getKey();
          if (getElementLocale().equals(locale)) {
            continue;
          }
          result.append("<tr><td colspan=\"2\">&nbsp;</td>");
          result.append("<td class=\"xmlTdError\">");
          result.append(key(Messages.ERR_EDITOR_XMLCONTENT_VALIDATION_ERROR_LANG_1,new Object[]{locale.getLanguage()}));
          result.append("</td><td>&nbsp;");
          result.append("</td></tr>\n");
          result.append("<tr><td colspan=\"2\">&nbsp;</td>");
          result.append("<td class=\"xmlTdError\">");
          result.append("<ul>");
          Map elErrors=(Map)locEntry.getValue();
          Iterator elErrorsIter=elErrors.entrySet().iterator();
          while (elErrorsIter.hasNext()) {
            Map.Entry elEntry=(Map.Entry)elErrorsIter.next();
            String nodeName=(String)elEntry.getKey();
            String errorMsg=(String)elEntry.getValue();
            result.append("<li>");
            result.append(nodeName);
            result.append(": ");
            result.append(errorMsg);
            result.append("</li>\n");
          }
          result.append("</ul>");
          result.append("</td><td>&nbsp;");
          result.append("</td></tr>\n");
        }
      }
    }
    Iterator i=contentDefinition.getTypeSequence().iterator();
    while (i.hasNext()) {
      I_CmsXmlSchemaType type=(I_CmsXmlSchemaType)i.next();
      CmsXmlContentDefinition nestedContentDefinition=contentDefinition;
      if (!type.isSimpleType()) {
        CmsXmlNestedContentDefinition nestedSchema=(CmsXmlNestedContentDefinition)type;
        nestedContentDefinition=nestedSchema.getNestedContentDefinition();
      }
      String name=pathPrefix + type.getName();
      CmsXmlContentValueSequence elementSequence=m_content.getValueSequence(name,getElementLocale());
      int elementCount=elementSequence.getElementCount();
      boolean addValue=false;
      if (elementCount < type.getMaxOccurs()) {
        addValue=true;
      }
      boolean removeValue=false;
      if (elementCount > type.getMinOccurs()) {
        removeValue=true;
      }
      boolean disabledElement=false;
      if (elementCount < 1) {
        elementCount=1;
        elementSequence.addValue(getCms(),0);
        disabledElement=true;
        m_optionalElementPresent=true;
      }
      for (int j=0; j < elementCount; j++) {
        I_CmsXmlContentValue value=elementSequence.getValue(j);
        I_CmsWidget widget=null;
        if (type.isSimpleType()) {
          widget=contentDefinition.getContentHandler().getWidget(value);
        }
        String key=value.getPath();
        if (showErrors && getValidationHandler().hasErrors(getElementLocale()) && getValidationHandler().getErrors(getElementLocale()).containsKey(key)) {
          result.append("<tr><td></td><td><img src=\"");
          result.append(getEditorResourceUri());
          result.append("error.png");
          result.append("\" border=\"0\" alt=\"\"></td><td class=\"xmlTdError\">");
          result.append(resolveMacros((String)getValidationHandler().getErrors(getElementLocale()).get(key)));
          result.append("</td><td></td></tr>\n");
        }
        if (showErrors && getValidationHandler().hasWarnings(getElementLocale()) && getValidationHandler().getWarnings(getElementLocale()).containsKey(key)) {
          result.append("<tr><td></td><td><img src=\"");
          result.append(getEditorResourceUri());
          result.append("warning.png");
          result.append("\" border=\"0\" alt=\"\"></td><td class=\"xmlTdWarning\">");
          result.append(resolveMacros((String)getValidationHandler().getWarnings(getElementLocale()).get(key)));
          result.append("</td><td></td></tr>\n");
        }
        result.append("<tr>");
        result.append("<td class=\"xmlLabel");
        if (disabledElement) {
          result.append("Disabled");
        }
        result.append("\">");
        result.append(keyDefault(A_CmsWidget.getLabelKey((I_CmsWidgetParameter)value),value.getName()));
        if (elementCount > 1) {
          result.append(" [").append(value.getIndex() + 1).append("]");
        }
        result.append(": </td>");
        if (showHelpBubble && (widget != null) && (value.getIndex() == 0)) {
          result.append(widget.getHelpBubble(getCms(),this,(I_CmsWidgetParameter)value));
        }
 else {
          result.append(buttonBarSpacer(16));
        }
        if (!disabledElement) {
          if (widget == null) {
            String newPath=CmsXmlUtils.createXpathElement(value.getName(),value.getIndex() + 1);
            result.append("<td class=\"maxwidth\">");
            boolean showHelp=(j == 0);
            result.append(getXmlEditorForm(nestedContentDefinition,pathPrefix + newPath + "/",showHelp));
            result.append("</td>");
          }
 else {
            result.append(widget.getDialogWidget(getCms(),this,(I_CmsWidgetParameter)value));
          }
        }
 else {
          result.append("<td class=\"xmlTdDisabled maxwidth\">");
          result.append(key(Messages.GUI_EDITOR_XMLCONTENT_OPTIONALELEMENT_0));
          result.append("</td>");
        }
        result.append(buildElementButtons(name,value.getIndex(),addValue,removeValue));
        result.append("</tr>\n");
      }
    }
    result.append("</table>\n");
  }
 catch (  Throwable t) {
    LOG.error(Messages.get().getBundle().key(Messages.ERR_XML_EDITOR_0),t);
  }
  return result;
}
