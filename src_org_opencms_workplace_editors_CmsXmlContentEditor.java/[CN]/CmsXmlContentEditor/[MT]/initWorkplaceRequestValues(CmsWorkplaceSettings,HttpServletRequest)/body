{
  fillParamValues(request);
  setParamDialogtype(EDITOR_TYPE);
  if (getParamNewLink() != null) {
    setParamAction(EDITOR_ACTION_NEW);
  }
 else {
    if ((getParamTempfile() != null) && !"null".equals(getParamTempfile())) {
      try {
        m_file=getCms().readFile(this.getParamTempfile(),CmsResourceFilter.ALL);
        m_content=CmsXmlContentFactory.unmarshal(getCloneCms(),m_file);
      }
 catch (      CmsException e) {
        try {
          showErrorPage(this,e);
        }
 catch (        JspException exc) {
          if (LOG.isInfoEnabled()) {
            LOG.info(exc);
          }
        }
      }
    }
  }
  if (EDITOR_SAVE.equals(getParamAction())) {
    setAction(ACTION_SAVE);
  }
 else   if (EDITOR_SAVEEXIT.equals(getParamAction())) {
    setAction(ACTION_SAVEEXIT);
  }
 else   if (EDITOR_EXIT.equals(getParamAction())) {
    setAction(ACTION_EXIT);
  }
 else   if (EDITOR_ACTION_SUBCHOICES.equals(getParamAction())) {
    setAction(ACTION_SUBCHOICES);
  }
 else   if (EDITOR_CLOSEBROWSER.equals(getParamAction())) {
    actionClear(true);
    return;
  }
 else   if (EDITOR_ACTION_CHECK.equals(getParamAction())) {
    setAction(ACTION_CHECK);
  }
 else   if (EDITOR_SAVEACTION.equals(getParamAction())) {
    setAction(ACTION_SAVEACTION);
    try {
      actionDirectEdit();
    }
 catch (    Exception e) {
      if (LOG.isInfoEnabled()) {
        LOG.info(e.getLocalizedMessage(),e);
      }
    }
    setAction(ACTION_EXIT);
  }
 else   if (EDITOR_COPYLOCALE.equals(getParamAction())) {
    setAction(ACTION_COPYLOCALE);
  }
 else   if (EDITOR_DELETELOCALE.equals(getParamAction())) {
    setAction(ACTION_DELETELOCALE);
  }
 else   if (EDITOR_SHOW.equals(getParamAction())) {
    setAction(ACTION_SHOW);
  }
 else   if (EDITOR_SHOW_ERRORMESSAGE.equals(getParamAction())) {
    setAction(ACTION_SHOW_ERRORMESSAGE);
  }
 else   if (EDITOR_CHANGE_ELEMENT.equals(getParamAction())) {
    setAction(ACTION_SHOW);
    actionChangeElementLanguage();
  }
 else   if (EDITOR_ACTION_ELEMENT_ADD.equals(getParamAction())) {
    setAction(ACTION_ELEMENT_ADD);
    try {
      actionToggleElement();
    }
 catch (    JspException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(org.opencms.workplace.Messages.get().getBundle().key(org.opencms.workplace.Messages.LOG_INCLUDE_ERRORPAGE_FAILED_0));
      }
    }
  }
 else   if (EDITOR_ACTION_ELEMENT_REMOVE.equals(getParamAction())) {
    setAction(ACTION_ELEMENT_REMOVE);
    try {
      actionToggleElement();
    }
 catch (    JspException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(org.opencms.workplace.Messages.get().getBundle().key(org.opencms.workplace.Messages.LOG_INCLUDE_ERRORPAGE_FAILED_0));
      }
    }
  }
 else   if (EDITOR_ACTION_ELEMENT_MOVE_DOWN.equals(getParamAction())) {
    setAction(ACTION_ELEMENT_MOVE_DOWN);
    try {
      actionMoveElement();
    }
 catch (    JspException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(org.opencms.workplace.Messages.get().getBundle().key(org.opencms.workplace.Messages.LOG_INCLUDE_ERRORPAGE_FAILED_0));
      }
    }
  }
 else   if (EDITOR_ACTION_ELEMENT_MOVE_UP.equals(getParamAction())) {
    setAction(ACTION_ELEMENT_MOVE_UP);
    try {
      actionMoveElement();
    }
 catch (    JspException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(org.opencms.workplace.Messages.get().getBundle().key(org.opencms.workplace.Messages.LOG_INCLUDE_ERRORPAGE_FAILED_0));
      }
    }
  }
 else   if (EDITOR_ACTION_NEW.equals(getParamAction())) {
    setAction(ACTION_NEW);
    return;
  }
 else   if (EDITOR_PREVIEW.equals(getParamAction())) {
    setAction(ACTION_PREVIEW);
  }
 else   if (EDITOR_CORRECTIONCONFIRMED.equals(getParamAction())) {
    setAction(ACTION_SHOW);
    try {
      correctXmlStructure();
    }
 catch (    CmsException e) {
      try {
        showErrorPage(this,e);
      }
 catch (      JspException exc) {
        if (LOG.isInfoEnabled()) {
          LOG.info(exc);
        }
      }
    }
  }
 else {
    setAction(ACTION_DEFAULT);
    try {
      if (Boolean.valueOf(getParamDirectedit()).booleanValue()) {
        checkLock(getParamResource(),CmsLockType.TEMPORARY);
      }
 else {
        checkLock(getParamResource());
      }
      setParamTempfile(createTempFile());
      m_file=getCms().readFile(this.getParamTempfile(),CmsResourceFilter.ALL);
      m_content=CmsXmlContentFactory.unmarshal(getCloneCms(),m_file);
      try {
        m_content.validateXmlStructure(new CmsXmlEntityResolver(getCms()));
      }
 catch (      CmsXmlException eXml) {
        if (OpenCms.getWorkplaceManager().isXmlContentAutoCorrect()) {
          correctXmlStructure();
        }
 else {
          setAction(ACTION_CONFIRMCORRECTION);
        }
      }
    }
 catch (    CmsException e) {
      try {
        showErrorPage(this,e);
      }
 catch (      JspException exc) {
        if (LOG.isInfoEnabled()) {
          LOG.info(exc);
        }
      }
    }
    if (getParamElementlanguage() == null) {
      initElementLanguage();
    }
 else {
      Locale locale=new Locale(getParamElementlanguage());
      ensureLocale(locale);
    }
  }
}
