{
  StringBuffer result=new StringBuffer(1024);
  boolean showErrors=(getAction() != ACTION_NEW) && (getAction() != ACTION_DEFAULT) && (getAction() != ACTION_ELEMENT_ADD)&& (getAction() != ACTION_ELEMENT_REMOVE)&& (getAction() != ACTION_ELEMENT_MOVE_DOWN)&& (getAction() != ACTION_ELEMENT_MOVE_UP);
  try {
    boolean nested=CmsStringUtil.isNotEmpty(pathPrefix);
    boolean useTabs=false;
    boolean tabOpened=false;
    StringBuffer selectedTabScript=new StringBuffer(64);
    boolean collapseLabel=false;
    boolean firstElement=true;
    if (!nested && showErrors && (getValidationHandler().hasErrors())) {
      result.append("<div class=\"ui-widget\">");
      result.append("<div class=\"ui-state-error ui-corner-all\" style=\"padding: 0pt 0.7em;\"><div style=\"padding: 3px 0;\">");
      result.append("<span class=\"ui-icon ui-icon-alert\" style=\"float: left; margin-right: 0.3em;\"></span>");
      boolean differentLocaleErrors=false;
      if ((getValidationHandler().getErrors(getElementLocale()) == null) || (getValidationHandler().getErrors().size() > getValidationHandler().getErrors(getElementLocale()).size())) {
        differentLocaleErrors=true;
        result.append("<span id=\"xmlerrordialogbutton\" class=\"ui-icon ui-icon-newwin\" style=\"float: left; margin-right: 0.3em;\"></span>");
      }
      result.append(key(Messages.ERR_EDITOR_XMLCONTENT_VALIDATION_ERROR_TITLE_0));
      result.append("</div>");
      if (differentLocaleErrors) {
        result.append("<div id=\"xmlerrordialog\" style=\"display: none;\">");
        Map<Locale,Map<String,String>> locErrors=getValidationHandler().getErrors();
        Iterator<Map.Entry<Locale,Map<String,String>>> locErrorsIter=locErrors.entrySet().iterator();
        while (locErrorsIter.hasNext()) {
          Map.Entry<Locale,Map<String,String>> locEntry=locErrorsIter.next();
          Locale locale=locEntry.getKey();
          if (getElementLocale().equals(locale)) {
            continue;
          }
          result.append("<div style=\"padding: 3px;\"><strong>");
          result.append(key(Messages.ERR_EDITOR_XMLCONTENT_VALIDATION_ERROR_LANG_1,new Object[]{locale.getLanguage()}));
          result.append("</strong></div>\n");
          result.append("<ul>");
          Map<String,String> elErrors=locEntry.getValue();
          Iterator<Map.Entry<String,String>> elErrorsIter=elErrors.entrySet().iterator();
          while (elErrorsIter.hasNext()) {
            Map.Entry<String,String> elEntry=elErrorsIter.next();
            String nodeName=elEntry.getKey();
            String errorMsg=elEntry.getValue();
            result.append("<li>");
            result.append(nodeName);
            result.append(": ");
            result.append(errorMsg);
            result.append("</li>\n");
          }
          result.append("</ul>");
        }
        result.append("</div>\n");
        result.append("<script type=\"text/javascript\">\n");
        result.append("$(\"#xmlerrordialog\").dialog({\n");
        result.append("\tautoOpen: true,\n");
        result.append("\tbgiframe: true,\n");
        result.append("\twidth: 500,\n");
        result.append("\tposition: 'center',\n");
        result.append("\tdialogClass: 'ui-state-error',\n");
        result.append("\ttitle: '").append(key(Messages.ERR_EDITOR_XMLCONTENT_VALIDATION_ERROR_TITLE_0)).append("',\n");
        result.append("\tmaxHeight: 600\n");
        result.append("});\n");
        result.append("$(\"#xmlerrordialogbutton\").bind(\"click\", function(e) {$(\"#xmlerrordialog\").dialog(\"open\");});\n");
        result.append("</script>");
      }
      result.append("</div></div>");
    }
    if (!nested) {
      useTabs=contentDefinition.getContentHandler().getTabs().size() > 0;
      if (useTabs) {
        result.append("<div id=\"xmltabs\" class=\"ui-tabs\">\n<ul>\n");
        for (Iterator<CmsXmlContentTab> i=contentDefinition.getContentHandler().getTabs().iterator(); i.hasNext(); ) {
          CmsXmlContentTab tab=i.next();
          result.append("\t<li id=\"OcmsTabTab").append(tab.getIdName()).append("\"><a href=\"#OcmsTab");
          result.append(tab.getIdName());
          result.append("\"><span>");
          result.append(keyDefault(A_CmsWidget.LABEL_PREFIX + contentDefinition.getInnerName() + "."+ tab.getTabName(),tab.getTabName()));
          result.append("</span></a></li>\n");
        }
        result.append("</ul>\n");
      }
    }
    Iterator<I_CmsXmlSchemaType> it=contentDefinition.getChoiceMaxOccurs() > 0 ? contentDefinition.getTypeSequence().subList(0,1).iterator() : contentDefinition.getTypeSequence().iterator();
    while (it.hasNext()) {
      I_CmsXmlSchemaType type=it.next();
      boolean tabCurrentlyOpened=false;
      if (useTabs) {
        for (int tabIndex=0; tabIndex < contentDefinition.getContentHandler().getTabs().size(); tabIndex++) {
          CmsXmlContentTab checkTab=contentDefinition.getContentHandler().getTabs().get(tabIndex);
          if (checkTab.getStartName().equals(type.getName())) {
            if (tabOpened) {
              result.append("</table>\n</div>\n");
            }
            result.append("<div id=\"OcmsTab");
            result.append(checkTab.getIdName());
            result.append("\" class=\"ui-tabs-hide\">\n");
            tabOpened=true;
            tabCurrentlyOpened=true;
            collapseLabel=checkTab.isCollapsed();
            m_currentTab=checkTab;
            m_currentTabIndex=tabIndex;
            break;
          }
        }
      }
      if (firstElement || tabCurrentlyOpened) {
        result.append("<table class=\"xmlTable");
        if (nested && !superTabOpened) {
          result.append("Nested");
        }
        result.append("\">\n");
        firstElement=false;
      }
      CmsXmlContentValueSequence elementSequence=m_content.getValueSequence(pathPrefix + type.getName(),getElementLocale());
      int elementCount=elementSequence.getElementCount();
      boolean addValue=elementCount < elementSequence.getMaxOccurs();
      boolean removeValue=elementCount > elementSequence.getMinOccurs();
      boolean disabledElement=false;
      if ((contentDefinition.getChoiceMaxOccurs() == 0) && (elementCount < 1)) {
        elementCount=1;
        elementSequence.addValue(getCms(),0);
        disabledElement=true;
        m_optionalElementPresent=true;
      }
      for (int j=0; j < elementCount; j++) {
        I_CmsXmlContentValue value=elementSequence.getValue(j);
        String key=value.getPath();
        if ((m_currentTab != null) && CmsStringUtil.isNotEmpty(getParamElementName())) {
          if (key.startsWith(getParamElementName()) && (selectedTabScript.length() == 0)) {
            selectedTabScript.append("<script type=\"text/javascript\">\n\txmlSelectedTab = ").append(m_currentTabIndex).append(";\n</script>\n");
          }
        }
        if (showErrors && getValidationHandler().hasErrors(getElementLocale()) && getValidationHandler().getErrors(getElementLocale()).containsKey(key)) {
          if (collapseLabel) {
            result.append("<tr><td class=\"xmlTdError\"><img src=\"");
            result.append(getEditorResourceUri());
            result.append("error.png\" border=\"0\" alt=\"\" align=\"left\" hspace=\"5\">");
            result.append(resolveMacros(getValidationHandler().getErrors(getElementLocale()).get(key)));
            result.append("</td><td></td></tr>\n");
          }
 else {
            result.append("<tr><td></td><td><img src=\"");
            result.append(getEditorResourceUri());
            result.append("error.png");
            result.append("\" border=\"0\" alt=\"\"></td><td class=\"xmlTdError\">");
            result.append(resolveMacros(getValidationHandler().getErrors(getElementLocale()).get(key)));
            result.append("</td><td></td></tr>\n");
          }
          String elemName=CmsXmlUtils.getFirstXpathElement(value.getPath());
          if (((m_currentTab != null) && !m_errorTabs.contains(m_currentTab)) && (elemName.equals(m_currentTab.getStartName()) || (!CmsXmlUtils.isDeepXpath(value.getPath()) && value.getName().equals(elemName)))) {
            m_errorTabs.add(m_currentTab);
          }
        }
        if (showErrors && getValidationHandler().hasWarnings(getElementLocale()) && getValidationHandler().getWarnings(getElementLocale()).containsKey(key)) {
          if (collapseLabel) {
            result.append("<tr><td class=\"xmlTdError\"><img src=\"");
            result.append(getEditorResourceUri());
            result.append("warning.png\" border=\"0\" alt=\"\" align=\"left\" hspace=\"5\">");
            result.append(resolveMacros(getValidationHandler().getWarnings(getElementLocale()).get(key)));
            result.append("</td><td></td></tr>\n");
          }
 else {
            result.append("<tr><td></td><td><img src=\"");
            result.append(getEditorResourceUri());
            result.append("warning.png");
            result.append("\" border=\"0\" alt=\"\"></td><td class=\"xmlTdWarning\">");
            result.append(resolveMacros(getValidationHandler().getWarnings(getElementLocale()).get(key)));
            result.append("</td><td></td></tr>\n");
          }
          String elemName=CmsXmlUtils.getFirstXpathElement(value.getPath());
          if (((m_currentTab != null) && !m_warningTabs.contains(m_currentTab)) && (elemName.equals(m_currentTab.getStartName()) || (!CmsXmlUtils.isDeepXpath(value.getPath()) && value.getName().equals(elemName)))) {
            m_warningTabs.add(m_currentTab);
          }
        }
        I_CmsWidget widget=value.isSimpleType() ? contentDefinition.getContentHandler().getWidget(value) : null;
        int index=value.getIndex();
        result.append("<tr>");
        if (!collapseLabel) {
          result.append("<td class=\"xmlLabel");
          if (disabledElement) {
            result.append("Disabled");
          }
          result.append("\">");
          result.append(keyDefault(A_CmsWidget.getLabelKey((I_CmsWidgetParameter)value),value.getName()));
          if (elementCount > 1) {
            result.append(" [").append(index + 1).append("]");
          }
          result.append(": </td>");
          if (showHelpBubble && (widget != null) && (CmsXmlUtils.getXpathIndexInt(value.getPath()) == 1)) {
            result.append(widget.getHelpBubble(getCms(),this,(I_CmsWidgetParameter)value));
          }
 else {
            result.append(buttonBarSpacer(16));
          }
        }
        if (disabledElement) {
          result.append("<td class=\"xmlTdDisabled maxwidth\">");
          result.append(key(Messages.GUI_EDITOR_XMLCONTENT_OPTIONALELEMENT_0));
          result.append("</td>");
        }
 else {
          if (value.isSimpleType()) {
            result.append(widget.getDialogWidget(getCms(),this,(I_CmsWidgetParameter)value));
          }
 else {
            result.append("<td class=\"maxwidth\">");
            boolean showHelp=(j == 0);
            superTabOpened=!nested && tabOpened && collapseLabel;
            result.append(getXmlEditorForm(((CmsXmlNestedContentDefinition)value).getNestedContentDefinition(),value.getPath() + "/",showHelp,superTabOpened));
            result.append("</td>");
          }
        }
        result.append(buildElementButtons(value,addValue,removeValue));
        result.append("</tr>\n");
        if (disabledElement) {
          elementSequence.removeValue(0);
        }
      }
    }
    result.append("</table>\n");
    if (tabOpened) {
      result.append("</div>\n");
    }
    if (!nested && useTabs) {
      result.append("</div>\n");
      result.append("<script type=\"text/javascript\">\n");
      for (Iterator<CmsXmlContentTab> i=m_warningTabs.iterator(); i.hasNext(); ) {
        CmsXmlContentTab checkTab=i.next();
        if (!m_errorTabs.contains(checkTab)) {
          result.append("\txmlWarningTabs[xmlWarningTabs.length] = \"").append(checkTab.getIdName()).append("\";\n");
        }
      }
      for (Iterator<CmsXmlContentTab> i=m_errorTabs.iterator(); i.hasNext(); ) {
        CmsXmlContentTab checkTab=i.next();
        result.append("\txmlErrorTabs[xmlErrorTabs.length] = \"").append(checkTab.getIdName()).append("\";\n");
      }
      result.append("</script>\n");
    }
    if (selectedTabScript.length() > 0) {
      result.append(selectedTabScript);
    }
  }
 catch (  Throwable t) {
    LOG.error(Messages.get().getBundle().key(Messages.ERR_XML_EDITOR_0),t);
  }
  return result;
}
