{
  try {
    Locale locale=getElementLocale();
    List typeSequence=m_contentDefinition.getTypeSequence();
    Iterator i=typeSequence.iterator();
    while (i.hasNext()) {
      I_CmsXmlSchemaType schemaType=(I_CmsXmlSchemaType)i.next();
      String name=schemaType.getNodeName();
      int count=m_content.getIndexCount(name,locale);
      for (int j=0; j < count; j++) {
        I_CmsXmlContentValue value=m_content.getValue(name,locale,j);
        I_CmsXmlWidget widget=OpenCms.getXmlContentTypeManager().getEditorWidget(value.getTypeName());
        widget.setEditorValue(getCms(),m_content,getJsp().getRequest().getParameterMap(),this,value);
      }
    }
    String decodedContent=m_content.toString();
    try {
      m_file.setContents(decodedContent.getBytes(getFileEncoding()));
    }
 catch (    UnsupportedEncodingException e) {
      throw new CmsException("Invalid content encoding encountered while editing file '" + getParamResource() + "'");
    }
    m_file=getCms().writeFile(m_file);
    m_content=CmsXmlContentFactory.unmarshal(getCms(),m_file);
    m_contentDefinition=m_content.getContentDefinition(new CmsXmlEntityResolver(getCms()));
    try {
      decodedContent=new String(m_file.getContents(),getFileEncoding());
    }
 catch (    UnsupportedEncodingException e) {
      throw new CmsException("Invalid content encoding encountered while editing file '" + getParamResource() + "'");
    }
  }
 catch (  CmsXmlException e) {
    showErrorPage(e,"xml");
  }
catch (  CmsException e) {
    showErrorPage(e,"save");
  }
  if (getAction() != ACTION_CANCEL) {
    setAction(ACTION_SAVE);
  }
}
