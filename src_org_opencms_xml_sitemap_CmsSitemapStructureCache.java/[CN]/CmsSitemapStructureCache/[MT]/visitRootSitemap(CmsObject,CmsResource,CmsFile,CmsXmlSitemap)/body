{
  Map<String,CmsXmlContentProperty> propDefs=getPropertyConfig(cms,sitemapFile);
  CmsSite site=OpenCms.getSiteManager().getSiteForRootPath(sitemapFile.getRootPath());
  CmsConfigurationParser conf=(new CmsADEDefaultConfiguration(CmsPropertyDefinition.PROPERTY_ADE_SITEMAP_CONFIG)).getConfigurationParser(cms,cms.getSitePath(sitemapFile));
  String exportName=conf.getExportName();
  if (exportName != null) {
    addExportName(site.getSiteRoot(),exportName);
  }
  m_rootSitemaps.put(site.getSiteRoot(),sitemapFile.getRootPath());
  for (  Locale locale : xmlSitemap.getLocales()) {
    CmsSitemapRuntimeInfo info=new CmsSitemapRuntimeInfo(entryPoint.getRootPath(),locale);
    m_rootInfo.addChildInfo(info);
    addActiveSitemap(cms,true,locale,entryPoint.getRootPath(),sitemapFile,info);
    CmsSitemapBean locSitemap=internalGetSitemap(cms,xmlSitemap,locale);
    CmsInternalSitemapEntry startEntry=locSitemap.getSiteEntries().get(0);
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(startEntry.getName())) {
      startEntry.removeName();
    }
    CmsPropertyInheritanceState propState=new CmsPropertyInheritanceState(propDefs);
    startEntry.setPropertyDefinitions(propDefs);
    visitEntry(cms,startEntry,locale,info,true,0,propState);
  }
}
