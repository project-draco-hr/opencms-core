{
  CmsObject cms=getCmsObject();
  CmsResource elementResource=cms.readResource(structureId,CmsResourceFilter.IGNORE_EXPIRATION);
  boolean hasWritePermissions=cms.hasPermissions(elementResource,CmsPermissionSet.ACCESS_WRITE,false,CmsResourceFilter.ALL);
  boolean isSystemResource=elementResource.getRootPath().startsWith(CmsResource.VFS_FOLDER_SYSTEM + "/");
  CmsRelationFilter relationFilter=CmsRelationFilter.relationsToStructureId(structureId);
  List<CmsRelation> relationsToElement=cms.readRelations(relationFilter);
  Iterator<CmsRelation> iter=relationsToElement.iterator();
  while (iter.hasNext()) {
    CmsRelation relation=iter.next();
    if ((containerpageId != null) && containerpageId.equals(relation.getSourceId()) && relation.getType().equals(CmsRelationType.XML_STRONG)) {
      iter.remove();
    }
  }
  boolean hasNoRelations=relationsToElement.isEmpty();
  boolean deletionCandidate=hasNoRelations && hasWritePermissions && !isSystemResource;
  CmsListInfoBean elementInfo=CmsVfsService.getPageInfo(cms,elementResource);
  return new CmsRemovedElementStatus(structureId,elementInfo,deletionCandidate);
}
