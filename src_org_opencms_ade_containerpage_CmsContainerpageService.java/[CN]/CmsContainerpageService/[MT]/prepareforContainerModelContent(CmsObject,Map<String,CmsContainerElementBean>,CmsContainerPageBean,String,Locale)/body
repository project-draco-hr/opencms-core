{
  for (  Entry<String,CmsContainerElementBean> entry : elements.entrySet()) {
    CmsContainerElementBean element=entry.getValue();
    CmsContainerPageBean modelPage=null;
    String modelInstanceId=null;
    boolean foundInstance=false;
    if (isContainerModelResource(cms,element.getResource())) {
      modelPage=getContainerModelPage(cms,element.getResource());
    }
 else {
      Map<String,String> settings=new HashMap<String,String>(element.getIndividualSettings());
      String source=settings.get(SOURCE_CONTAINERPAGE_ID_SETTING);
      settings.remove(SOURCE_CONTAINERPAGE_ID_SETTING);
      if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(source)) {
        try {
          CmsUUID sourceId=new CmsUUID(source);
          CmsResource sourcePage=cms.readResource(sourceId);
          if (CmsResourceTypeXmlContainerPage.isContainerPage(sourcePage)) {
            CmsXmlContainerPage xmlCnt=CmsXmlContainerPageFactory.unmarshal(cms,cms.readFile(sourcePage));
            modelPage=xmlCnt.getContainerPage(cms);
            modelInstanceId=element.getInstanceId();
          }
        }
 catch (        Exception e) {
          LOG.info(e.getLocalizedMessage(),e);
        }
        settings.remove(CmsContainerElementBean.ELEMENT_INSTANCE_ID);
        element=CmsContainerElementBean.cloneWithSettings(element,settings);
      }
    }
    if (modelPage != null) {
      Map<String,List<CmsContainerBean>> containerByParent=new HashMap<String,List<CmsContainerBean>>();
      for (      CmsContainerBean container : modelPage.getContainers().values()) {
        if (container.getParentInstanceId() != null) {
          if (!containerByParent.containsKey(container.getParentInstanceId())) {
            containerByParent.put(container.getParentInstanceId(),new ArrayList<CmsContainerBean>());
          }
          containerByParent.get(container.getParentInstanceId()).add(container);
        }
        if (!foundInstance) {
          for (          CmsContainerElementBean child : container.getElements()) {
            if (modelInstanceId == null) {
              if (child.getId().equals(element.getId())) {
                modelInstanceId=child.getInstanceId();
                foundInstance=true;
                Map<String,String> settings=new HashMap<String,String>(child.getIndividualSettings());
                settings.remove(CmsContainerElementBean.ELEMENT_INSTANCE_ID);
                element=CmsContainerElementBean.cloneWithSettings(element,settings);
                break;
              }
            }
 else {
              if (modelInstanceId.equals(child.getInstanceId())) {
                foundInstance=true;
                break;
              }
            }
          }
        }
      }
      if (foundInstance && containerByParent.containsKey(modelInstanceId)) {
        List<CmsContainerBean> modelContainers=collectModelStructure(modelInstanceId,element.getInstanceId(),containerByParent);
        modelContainers=createNewElementsForContainerModel(cms,modelContainers,uriParam,locale);
        modelContainers.addAll(page.getContainers().values());
        page=new CmsContainerPageBean(modelContainers);
      }
    }
    entry.setValue(element);
    getSessionCache().setCacheContainerElement(element.editorHash(),element);
  }
  return page;
}
