{
  Map<String,CmsClientProperty> ownProps=entry.getOwnInternalProperties();
  Map<String,CmsClientProperty> defaultFileProps=entry.getDefaultFileInternalProperties();
  String entryId=entry.getId().toString();
  String defaultFileId=toStringOrNull(entry.getDefaultFileId());
  List<String> keys=new ArrayList<String>(m_propertyDefs.keySet());
  keys.remove("NavText");
  keys.add(0,"NavText");
  for (  String propName : keys) {
    CmsXmlContentProperty propDef=m_propertyDefs.get(propName);
    CmsClientProperty fileProp=defaultFileProps.get(propName);
    CmsClientProperty ownProp=ownProps.get(propName);
    CmsPathValue pathValue;
    if (fileProp != null) {
      pathValue=fileProp.getPathValue().prepend(defaultFileId + "/" + propName);
    }
 else     if (ownProp != null) {
      pathValue=ownProp.getPathValue().prepend(entryId + "/" + propName);
    }
 else {
      pathValue=new CmsPathValue("",entryId + "/" + propName+ "/"+ CmsClientProperty.PATH_STRUCTURE_VALUE);
    }
    I_CmsFormWidget widget=createWidget(propDef);
    CmsBasicFormField field=CmsBasicFormField.createField(propDef,pathValue.getPath(),m_widgetFactory,new HashMap<String,String>());
    String inherited=CmsSitemapView.getInstance().getController().getInheritedProperty(entry,propName);
    I_CmsFormWidget w=field.getWidget();
    m_form.addField(CmsSitemapEntryEditor.TAB_1,field,pathValue.getValue());
    if (w instanceof I_CmsHasGhostValue) {
      ((I_CmsHasGhostValue)w).setGhostValue(inherited,CmsStringUtil.isEmptyOrWhitespaceOnly(pathValue.getValue()));
    }
  }
}
