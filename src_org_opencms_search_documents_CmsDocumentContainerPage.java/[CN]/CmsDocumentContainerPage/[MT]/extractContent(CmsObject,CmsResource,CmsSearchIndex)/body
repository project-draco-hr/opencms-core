{
  logContentExtraction(resource,index);
  try {
    CmsFile file=readFile(cms,resource);
    CmsXmlContainerPage containerPage=CmsXmlContainerPageFactory.unmarshal(cms,file);
    Locale locale=index.getLocaleForResource(cms,resource,null);
    StringBuffer content=new StringBuffer();
    Map<String,String> items=new HashMap<String,String>();
    CmsContainerPageBean containerBean=containerPage.getContainerPage(cms);
    for (    CmsContainerElementBean element : containerBean.getElements()) {
      element.initResource(cms);
      CmsADEConfigData adeConfig=OpenCms.getADEManager().lookupConfiguration(cms,file.getRootPath());
      CmsFormatterConfiguration formatters=adeConfig.getFormatters(cms,element.getResource());
      if (formatters.isSearchContent(element.getFormatterId())) {
        element.initResource(cms);
        CmsFile elementFile=readFile(cms,element.getResource());
        A_CmsXmlDocument elementContent=CmsXmlContentFactory.unmarshal(cms,elementFile);
        List<String> elementNames=elementContent.getNames(locale);
        for (        String xpath : elementNames) {
          I_CmsXmlContentValue value=elementContent.getValue(xpath,locale);
          if (value.getContentDefinition().getContentHandler().isSearchable(value)) {
            String extracted=value.getPlainText(cms);
            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
              items.put(elementFile.getRootPath() + "/" + xpath,extracted);
              content.append(extracted);
              content.append('\n');
            }
          }
        }
      }
    }
    return new CmsExtractionResult(content.toString(),items);
  }
 catch (  Exception e) {
    throw new CmsIndexException(Messages.get().container(Messages.ERR_TEXT_EXTRACTION_1,resource.getRootPath()),e);
  }
}
