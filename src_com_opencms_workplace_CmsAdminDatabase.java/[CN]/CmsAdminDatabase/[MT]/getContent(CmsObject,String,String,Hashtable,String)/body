{
  if (C_DEBUG && OpenCms.getLog(this).isDebugEnabled()) {
    OpenCms.getLog(this).debug("Getting content of element " + ((elementName == null) ? "<root>" : elementName));
    OpenCms.getLog(this).debug("Template file is: " + templateFile);
    OpenCms.getLog(this).debug("Delected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  I_CmsSession session=cms.getRequestContext().getSession(true);
  CmsXmlLanguageFile lang=xmlTemplateDocument.getLanguageFile();
  String fileName=(String)parameters.get("filename");
  String existingFile=(String)parameters.get("existingfile");
  String action=(String)parameters.get("action");
  String allResources=(String)parameters.get("ALLRES");
  String allModules=(String)parameters.get("ALLMOD");
  String step=(String)parameters.get("step");
  if ("showResult".equals(action)) {
    A_CmsReportThread doTheWork=(A_CmsReportThread)session.getValue(C_DATABASE_THREAD);
    if (doTheWork.isAlive()) {
      xmlTemplateDocument.setData("endMethod","");
      xmlTemplateDocument.setData("text","");
    }
 else {
      xmlTemplateDocument.setData("endMethod",xmlTemplateDocument.getDataValue("endMethod"));
      xmlTemplateDocument.setData("autoUpdate","");
      xmlTemplateDocument.setData("text",lang.getLanguageValue("database.label.importend"));
      session.removeValue(C_DATABASE_THREAD);
    }
    xmlTemplateDocument.setData("data",doTheWork.getReportUpdate());
    return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"updateReport");
  }
 else   if ("showExportResult".equals(action)) {
    A_CmsReportThread doTheWork=(A_CmsReportThread)session.getValue(C_DATABASE_THREAD);
    if (doTheWork.isAlive()) {
      xmlTemplateDocument.setData("endMethod","");
      xmlTemplateDocument.setData("text","");
    }
 else {
      xmlTemplateDocument.setData("endMethod",xmlTemplateDocument.getDataValue("endMethod"));
      xmlTemplateDocument.setData("autoUpdate","");
      xmlTemplateDocument.setData("text",lang.getLanguageValue("database.label.exportend"));
      session.removeValue(C_DATABASE_THREAD);
    }
    xmlTemplateDocument.setData("data",doTheWork.getReportUpdate());
    return startProcessing(cms,xmlTemplateDocument,elementName,parameters,"updateReport");
  }
  if (action == null) {
    if (!cms.getRequestContext().currentProject().isOnlineProject()) {
      xmlTemplateDocument.setData("nounchanged",xmlTemplateDocument.getProcessedDataValue("nounchangedbox",this,parameters));
    }
    if (cms.isAdmin()) {
      xmlTemplateDocument.setData("userdata",xmlTemplateDocument.getProcessedDataValue("userdatabox",this,parameters));
    }
    xmlTemplateDocument.setData("moduleselect",this.getModuleSelectbox(cms,xmlTemplateDocument));
  }
  try {
    if ("export".equals(action)) {
      Vector resourceNames=parseResources(allResources);
      String[] exportPaths=new String[resourceNames.size()];
      for (int i=0; i < resourceNames.size(); i++) {
        if (lang.getLanguageValue("title.rootfolder").equals(resourceNames.elementAt(i))) {
          resourceNames.setElementAt("/",i);
        }
        exportPaths[i]=(String)resourceNames.elementAt(i);
      }
      long contentAge=0;
      String contentAgePara=(String)parameters.get("contentage");
      if (contentAgePara != null && (!"".equals(contentAgePara)) && (!"(none)".equals(contentAgePara))) {
        try {
          contentAge=Long.parseLong(contentAgePara);
        }
 catch (        NumberFormatException numEx) {
          contentAge=0;
        }
      }
      boolean excludeSystem=false;
      if (parameters.get("nosystem") != null) {
        excludeSystem=true;
      }
      boolean excludeUnchanged=false;
      if (parameters.get("nounchanged") != null) {
        excludeUnchanged=true;
      }
      boolean exportUserdata=false;
      if (parameters.get("userdata") != null) {
        exportUserdata=true;
      }
      A_CmsReportThread doExport=new CmsDatabaseExportThread(cms,OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(cms.readPackagePath() + File.separator + fileName),exportPaths,excludeSystem,excludeUnchanged,exportUserdata,contentAge);
      doExport.start();
      session.putValue(C_DATABASE_THREAD,doExport);
      xmlTemplateDocument.setData("time","10");
      xmlTemplateDocument.setData("contentage","" + contentAge);
      xmlTemplateDocument.setData("currenttime","" + System.currentTimeMillis());
      templateSelector="showresult";
    }
 else     if ("exportmoduledata".equals(action)) {
      Vector channelNames=parseResources(allResources);
      String[] exportChannels=new String[channelNames.size()];
      for (int i=0; i < channelNames.size(); i++) {
        if (lang.getLanguageValue("title.rootfolder").equals(channelNames.elementAt(i))) {
          channelNames.setElementAt("/",i);
        }
        exportChannels[i]=(String)channelNames.elementAt(i);
      }
      Vector moduleNames=parseResources(allModules);
      String[] exportModules=new String[moduleNames.size()];
      for (int i=0; i < moduleNames.size(); i++) {
        exportModules[i]=(String)moduleNames.elementAt(i);
      }
      A_CmsReportThread doExport=new CmsDatabaseExportThread(cms,OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(cms.readPackagePath() + File.separator + fileName),exportChannels,exportModules);
      doExport.start();
      session.putValue(C_DATABASE_THREAD,doExport);
      xmlTemplateDocument.setData("time","10");
      xmlTemplateDocument.setData("currenttime","" + System.currentTimeMillis());
      templateSelector="showresult";
    }
 else     if ("import".equals(action)) {
      if ("local".equals(step) || "server".equals(step)) {
        templateSelector=step;
      }
 else       if ("localupload".equals(step)) {
        existingFile=copyFileToServer(cms,session);
        step="go";
      }
      if ("go".equals(step)) {
        A_CmsReportThread doImport=new CmsDatabaseImportThread(cms,OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(cms.readPackagePath() + File.separator + existingFile));
        doImport.start();
        session.putValue(C_DATABASE_THREAD,doImport);
        xmlTemplateDocument.setData("time","10");
        templateSelector="showresult";
      }
    }
  }
 catch (  CmsException exc) {
    xmlTemplateDocument.setData("details",CmsException.getStackTraceAsString(exc));
    templateSelector="error";
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
