{
  Hashtable parameters=(Hashtable)userObj;
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)doc;
  StringBuffer result=new StringBuffer();
  String pageText=(String)parameters.get(C_PARA_PAGE);
  String filter=(String)parameters.get(C_PARA_FILTER);
  Vector filteredPics=(Vector)parameters.get("_PICLIST_");
  int numPics=filteredPics.size();
  int page=new Integer(pageText).intValue();
  int from=(page - 1) * C_PICBROWSER_MAXIMAGES;
  int to=((from + C_PICBROWSER_MAXIMAGES) > numPics) ? numPics : (from + C_PICBROWSER_MAXIMAGES);
  String picsUrl=getConfigFile(cms).getCommonPictureUrl();
  HttpServletRequest req=(HttpServletRequest)(cms.getRequestContext().getRequest().getOriginalRequest());
  String hostName=req.getScheme() + "://" + req.getHeader("HOST");
  for (int i=from; i < to; i++) {
    CmsFile file=(CmsFile)filteredPics.elementAt(i);
    String filename=file.getName();
    if (inFilter(filename,filter) && isImage(filename)) {
      String title=cms.readProperty(file.getAbsolutePath(),"Title");
      int dotIndex=filename.lastIndexOf(".");
      if (title == null) {
        if (dotIndex > 0) {
          title=filename.substring(0,dotIndex);
        }
 else {
          title=filename;
        }
      }
      String type;
      if (dotIndex > 0) {
        type=filename.substring(filename.lastIndexOf(".") + 1).toUpperCase() + "-Bild";
      }
 else {
        type="unbekannt";
      }
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("picstartseq",this,userObj));
      result.append(hostName + picsUrl + file.getName());
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("picendseq",this,userObj));
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("titlestartseq",this,userObj));
      result.append(title);
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("titleendseq",this,userObj));
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("namestartseq",this,userObj));
      result.append(filename);
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("nameendseq",this,userObj));
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("sizestartseq",this,userObj));
      result.append(file.getLength() + " Byte");
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("sizeendseq",this,userObj));
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("typestartseq",this,userObj));
      result.append(type);
      result.append(xmlTemplateDocument.getProcessedXmlDataValue("typeendseq",this,userObj));
      if (i < (to - 1)) {
        result.append(xmlTemplateDocument.getProcessedXmlDataValue("part",this,userObj));
      }
    }
  }
  return result.toString();
}
