{
  if (data == null) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_COLLECTOR_PARAM_EMPTY_0));
  }
  List args=CmsStringUtil.splitAsList(data,'|',true);
  if (args.size() < 3) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_COLLECTOR_PARAM_INVALID_1,data));
  }
  setFileName((String)args.get(0));
  String type=(String)args.get(1);
  try {
    I_CmsResourceType resourceType=OpenCms.getResourceManager().getResourceType(type);
    setType(resourceType.getTypeId());
  }
 catch (  CmsLoaderException e1) {
    try {
      int typeInt=Integer.parseInt(type);
      I_CmsResourceType resourceType=OpenCms.getResourceManager().getResourceType(typeInt);
      setType(resourceType.getTypeId());
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.LOG_RESTYPE_INTID_2,resourceType.getTypeName(),new Integer(resourceType.getTypeId())));
      }
    }
 catch (    NumberFormatException e2) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_COLLECTOR_PARAM_INVALID_1,data),e2);
    }
catch (    CmsLoaderException e2) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_UNKNOWN_RESTYPE_1,type),e2);
    }
  }
  setCount(5);
  if (args.size() > 2) {
    String count=(String)args.get(2);
    if (CmsStringUtil.isNotEmpty(count)) {
      try {
        setCount(Integer.parseInt(count));
      }
 catch (      NumberFormatException e) {
        throw new CmsRuntimeException(Messages.get().container(Messages.ERR_COLLECTOR_PARAM_INVALID_1,data),e);
      }
    }
  }
  if (args.size() > 3) {
    m_additionalParams=args.subList(3,args.size());
  }
}
