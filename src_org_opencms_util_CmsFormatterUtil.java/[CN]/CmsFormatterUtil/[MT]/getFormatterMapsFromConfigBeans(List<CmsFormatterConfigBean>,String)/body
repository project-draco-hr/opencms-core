{
  Map<String,String> formattersByType=new HashMap<String,String>();
  Map<Integer,CmsPair<String,Integer>> formattersByWidth=new HashMap<Integer,CmsPair<String,Integer>>();
  for (  CmsFormatterConfigBean configBean : beans) {
    String type=configBean.getType();
    String uri=configBean.getJsp();
    String minWidthStr=configBean.getMinWidth();
    String maxWidthStr=configBean.getMaxWidth();
    String oldUri=null;
    Object key=null;
    if (type.equals("*") || CmsStringUtil.isEmptyOrWhitespaceOnly(type)) {
      int width=-1;
      int maxWidth=Integer.MAX_VALUE;
      try {
        width=Integer.parseInt(minWidthStr);
      }
 catch (      NumberFormatException e) {
      }
      try {
        maxWidth=Integer.parseInt(maxWidthStr);
      }
 catch (      NumberFormatException e) {
      }
      key=new Integer(width);
      CmsPair<String,Integer> fmt=formattersByWidth.get(key);
      oldUri=fmt != null ? fmt.getFirst() : null;
      formattersByWidth.put((Integer)key,CmsPair.create(uri,new Integer(maxWidth)));
    }
 else {
      key=type;
      oldUri=formattersByType.get(key);
      formattersByType.put((String)key,uri);
    }
    if (oldUri != null) {
      LOG.warn(Messages.get().getBundle().key(Messages.LOG_CONTENT_DEFINITION_DUPLICATE_FORMATTER_4,new Object[]{key,oldUri,uri,location}));
    }
  }
  return CmsPair.create(formattersByType,formattersByWidth);
}
