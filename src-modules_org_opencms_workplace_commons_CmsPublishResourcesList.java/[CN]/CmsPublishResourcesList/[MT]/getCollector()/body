{
  if (m_collector == null) {
    m_collector=new A_CmsListResourceCollector(this){
      /** 
 * Parameter of the default collector name. 
 */
      private static final String COLLECTOR_NAME="publishResources";
      /** 
 * @see org.opencms.file.collectors.I_CmsResourceCollector#getCollectorNames()
 */
      public List<String> getCollectorNames(){
        List<String> names=new ArrayList<String>();
        names.add(COLLECTOR_NAME);
        return names;
      }
      /** 
 * @see org.opencms.workplace.list.A_CmsListResourceCollector#getResources(org.opencms.file.CmsObject,java.util.Map)
 */
      @Override public List<CmsResource> getResources(      CmsObject cms,      Map<String,String> params){
        if (m_publishRelated && getSettings().getPublishList().isDirectPublish()) {
          try {
            CmsPublishList relatedPL=OpenCms.getPublishManager().getRelatedResourcesToPublish(cms,getSettings().getPublishList());
            CmsPublishList mergedPL=OpenCms.getPublishManager().mergePublishLists(cms,getSettings().getPublishList(),relatedPL);
            m_publishList=mergedPL;
          }
 catch (          CmsException e) {
            if (LOG.isErrorEnabled()) {
              LOG.error(e.getLocalizedMessage(getLocale()),e);
            }
          }
        }
 else {
          m_publishList=getSettings().getPublishList();
        }
        return m_publishList.getAllResources();
      }
      /** 
 * @see org.opencms.workplace.list.A_CmsListResourceCollector#setAdditionalColumns(org.opencms.workplace.list.CmsListItem,org.opencms.workplace.explorer.CmsResourceUtil)
 */
      @Override protected void setAdditionalColumns(      CmsListItem item,      CmsResourceUtil resUtil){
        item.set(LIST_COLUMN_IS_RELATED,Boolean.valueOf(!getSettings().getPublishList().getAllResources().contains(resUtil.getResource())));
      }
    }
;
  }
  return m_collector;
}
