{
  StringBuffer output=new StringBuffer();
  String foldername;
  String currentFolder;
  String title=null;
  int contextNumber=0;
  String servlets=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getServletPath();
  CmsXmlWpTemplateFile template=(CmsXmlWpTemplateFile)doc;
  Enumeration enum;
  CmsFile file;
  CmsFolder folder;
  CmsResource res;
  int filelist=getDefaultPreferences(cms);
  filelist=callingObject.modifyDisplayedColumns(cms,filelist);
  template=checkDisplayedColumns(filelist,template,"");
  output.append(template.getProcessedDataValue(C_LIST_HEAD,callingObject));
  enum=list.elements();
  while (enum.hasMoreElements()) {
    res=(CmsResource)enum.nextElement();
    if (checkAccess(cms,res)) {
      if (res.isFolder()) {
        folder=(CmsFolder)res;
        template.setData(C_FILELIST_CLASS_VALUE,getStyle(cms,folder));
        template.setData(C_CONTEXT_LINK,res.getAbsolutePath());
        template.setData(C_CONTEXT_MENU,getContextMenue(cms,res,template));
        template.setData(C_CONTEXT_NUMBER,new Integer(contextNumber++).toString());
        A_CmsResourceType type=cms.getResourceType(folder.getType());
        String icon=icon=getIcon(cms,type,config);
        template.setData(C_FILELIST_ICON_VALUE,config.getWpPictureUrl() + icon);
        if (res.getState() != C_STATE_DELETED) {
          template.setData(C_FILELIST_LINK_VALUE,folder.getAbsolutePath());
        }
 else {
          template.setData(C_FILELIST_LINK_VALUE,"#");
        }
        template.setData(C_FILELIST_LOCK_VALUE,template.getProcessedDataValue(getLock(cms,folder,template,lang),callingObject));
        template.setData(C_FILELIST_NAME_VALUE,folder.getName());
        title="";
        try {
          title=cms.readProperty(folder.getAbsolutePath(),C_PROPERTY_TITLE);
        }
 catch (        CmsException e) {
        }
        if (title == null) {
          title="";
        }
        template.setData(C_FILELIST_TITLE_VALUE,title);
        String typename=type.getResourceName();
        typename=lang.getDataValue("fileicon." + typename);
        template.setData(C_FILELIST_TYPE_VALUE,typename);
        long time=folder.getDateLastModified();
        template.setData(C_FILELIST_CHANGED_VALUE,getNiceDate(time));
        template.setData(C_FILELIST_SIZE_VALUE,"");
        template.setData(C_FILELIST_STATE_VALUE,getState(cms,folder,lang));
        A_CmsUser owner=cms.readOwner(folder);
        template.setData(C_FILELIST_OWNER_VALUE,owner.getName());
        A_CmsGroup group=cms.readGroup(folder);
        template.setData(C_FILELIST_GROUP_VALUE,group.getName());
        int access=folder.getAccessFlags();
        template.setData(C_FILELIST_ACCESS_VALUE,getAccessFlags(access));
        int lockedby=folder.isLockedBy();
        if (lockedby == C_UNKNOWN_ID) {
          template.setData(C_FILELIST_LOCKED_VALUE,"");
        }
 else {
          template.setData(C_FILELIST_LOCKED_VALUE,cms.lockedBy(folder).getName());
        }
        callingObject.getCustomizedColumnValues(cms,template,res,lang);
        template.setData(C_NAME_FILEFOLDER,template.getProcessedDataValue(getName(cms,folder),this));
        template=checkDisplayedColumns(filelist,template,C_FILELIST_SUFFIX_VALUE);
        output.append(template.getProcessedDataValue(C_LIST_ENTRY,callingObject));
      }
 else {
        file=(CmsFile)res;
        template.setData(C_FILELIST_CLASS_VALUE,getStyle(cms,file));
        template.setData(C_CONTEXT_LINK,res.getAbsolutePath());
        template.setData(C_CONTEXT_MENU,getContextMenue(cms,res,template));
        template.setData(C_CONTEXT_NUMBER,new Integer(contextNumber++).toString());
        A_CmsResourceType type=cms.getResourceType(file.getType());
        String icon=getIcon(cms,type,config);
        template.setData(C_FILELIST_ICON_VALUE,config.getWpPictureUrl() + icon);
        if (res.getState() != C_STATE_DELETED) {
          template.setData(C_FILELIST_LINK_VALUE,servlets + file.getAbsolutePath());
        }
 else {
          template.setData(C_FILELIST_LINK_VALUE,"#");
        }
        template.setData(C_FILELIST_LOCK_VALUE,template.getProcessedDataValue(getLock(cms,file,template,lang),callingObject));
        template.setData(C_FILELIST_NAME_VALUE,file.getName());
        title="";
        try {
          title=cms.readProperty(file.getAbsolutePath(),C_PROPERTY_TITLE);
        }
 catch (        CmsException e) {
        }
        if (title == null) {
          title="";
        }
        template.setData(C_FILELIST_TITLE_VALUE,title);
        type=cms.getResourceType(file.getType());
        String typename=type.getResourceName();
        typename=lang.getDataValue("fileicon." + typename);
        template.setData(C_FILELIST_TYPE_VALUE,typename);
        long time=file.getDateLastModified();
        template.setData(C_FILELIST_CHANGED_VALUE,getNiceDate(time));
        template.setData(C_FILELIST_SIZE_VALUE,new Integer(file.getLength()).toString());
        template.setData(C_FILELIST_STATE_VALUE,getState(cms,file,lang));
        A_CmsUser owner=cms.readOwner(file);
        template.setData(C_FILELIST_OWNER_VALUE,owner.getName());
        A_CmsGroup group=cms.readGroup(file);
        template.setData(C_FILELIST_GROUP_VALUE,group.getName());
        int access=file.getAccessFlags();
        template.setData(C_FILELIST_ACCESS_VALUE,getAccessFlags(access));
        int lockedby=file.isLockedBy();
        if (lockedby == C_UNKNOWN_ID) {
          template.setData(C_FILELIST_LOCKED_VALUE,"");
        }
 else {
          template.setData(C_FILELIST_LOCKED_VALUE,cms.lockedBy(file).getName());
        }
        callingObject.getCustomizedColumnValues(cms,template,res,lang);
        template.setData(C_NAME_FILEFOLDER,template.getProcessedDataValue(getName(cms,file),this));
        template=checkDisplayedColumns(filelist,template,C_FILELIST_SUFFIX_VALUE);
        output.append(template.getProcessedDataValue(C_LIST_ENTRY,callingObject));
      }
    }
  }
  return output.toString();
}
