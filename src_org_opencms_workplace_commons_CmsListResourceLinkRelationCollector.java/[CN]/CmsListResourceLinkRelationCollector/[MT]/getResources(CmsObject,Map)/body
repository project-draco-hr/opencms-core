{
  List allResources=new ArrayList();
  CmsRelationFilter filter=CmsRelationFilter.TARGETS;
  if (isSource()) {
    filter=CmsRelationFilter.SOURCES;
  }
  List relations=new ArrayList();
  try {
    relations=cms.getRelationsForResource(getResource(),filter);
  }
 catch (  CmsException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage(getWp().getLocale()),e);
    }
  }
  Map relationTypes=new HashMap();
  List brokenLinks=new ArrayList();
  Iterator itRelations=relations.iterator();
  while (itRelations.hasNext()) {
    CmsRelation relation=(CmsRelation)itRelations.next();
    CmsResource resource=null;
    try {
      if (isSource()) {
        resource=relation.getSource(cms,CmsResourceFilter.ALL);
      }
 else {
        resource=relation.getTarget(cms,CmsResourceFilter.ALL);
      }
    }
 catch (    CmsException e) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(e.getLocalizedMessage(getWp().getLocale()),e);
      }
      resource=new CmsResource(new CmsUUID(),new CmsUUID(),relation.getTargetPath(),CmsResourceTypePlain.getStaticTypeId(),false,0,getWp().getJsp().getRequestContext().currentProject().getUuid(),CmsResourceState.STATE_DELETED,0,getWp().getJsp().getRequestContext().currentUser().getId(),0,getWp().getJsp().getRequestContext().currentUser().getId(),0,0,0,0,0,0);
      if (!brokenLinks.contains(resource)) {
        brokenLinks.add(relation.getType().getLocalizedName(getWp().getJsp().getRequestContext().getLocale()) + "_" + resource.getStructureId());
      }
    }
    allResources.add(resource);
    if (relationTypes.containsKey(resource)) {
      ((List)relationTypes.get(resource)).add(relation.getType());
    }
 else {
      List types=new ArrayList();
      types.add(relation.getType());
      relationTypes.put(resource,types);
    }
  }
  if (getWp() instanceof CmsResourceLinkRelationList) {
    CmsResourceLinkRelationList wp=(CmsResourceLinkRelationList)getWp();
    wp.setRelationTypes(relationTypes);
    wp.setBrokenLinks(brokenLinks);
  }
  return allResources;
}
