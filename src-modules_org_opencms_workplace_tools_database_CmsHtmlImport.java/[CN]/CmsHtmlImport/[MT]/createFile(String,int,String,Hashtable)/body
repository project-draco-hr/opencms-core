{
  String vfsFileName=(String)m_fileIndex.get(filename.replace('\\','/'));
  if (vfsFileName != null) {
    try {
      m_report.print(Messages.get().container(Messages.RPT_CREATE_FILE_0),I_CmsReport.FORMAT_NOTE);
      m_report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,vfsFileName));
      m_report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
      if ((properties.get(CmsPropertyDefinition.PROPERTY_NAVPOS) == null) && (properties.get(CmsPropertyDefinition.PROPERTY_NAVTEXT) != null)) {
        properties.put(CmsPropertyDefinition.PROPERTY_NAVPOS,(position + 1) + "");
      }
      Locale locale=new Locale(m_locale);
      CmsXmlPage page=new CmsXmlPage(locale,OpenCms.getSystemInfo().getDefaultEncoding());
      page.addValue(m_element,locale);
      page.setStringValue(m_cmsObject,m_element,locale,content);
      CmsLinkTable linkTable=page.getLinkTable(m_element,locale);
      Iterator i=linkTable.iterator();
      while (i.hasNext()) {
        CmsLink link=(CmsLink)i.next();
        String target=link.getTarget();
        if (link.isInternal()) {
          target=m_cmsObject.getRequestContext().getFileTranslator().translateResource(target);
          link.updateLink(target,link.getAnchor(),link.getQuery());
          link.checkConsistency(m_cmsObject);
        }
      }
      byte[] contentByteArray=page.marshal();
      List oldProperties=new ArrayList();
      if (!m_overwrite) {
        m_cmsObject.createResource(vfsFileName,CmsResourceTypeXmlPage.getStaticTypeId(),contentByteArray,new ArrayList());
      }
 else {
        try {
          oldProperties=m_cmsObject.readPropertyObjects(vfsFileName,false);
          CmsLock lock=m_cmsObject.getLock(vfsFileName);
          if (lock.getType() != CmsLockType.EXCLUSIVE) {
            m_cmsObject.lockResource(vfsFileName);
          }
          m_cmsObject.deleteResource(vfsFileName,CmsResource.DELETE_PRESERVE_SIBLINGS);
        }
 catch (        CmsException e) {
        }
 finally {
          m_report.print(Messages.get().container(Messages.RPT_OVERWRITE_0),I_CmsReport.FORMAT_NOTE);
          m_report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
          m_cmsObject.createResource(vfsFileName,CmsResourceTypeXmlPage.getStaticTypeId(),contentByteArray,new ArrayList());
        }
      }
      Iterator it=properties.entrySet().iterator();
      List propertyList=new ArrayList();
      while (it.hasNext()) {
        Map.Entry entry=(Map.Entry)it.next();
        String propertyKey=(String)entry.getKey();
        String propertyVal=(String)entry.getValue();
        CmsProperty property=new CmsProperty(propertyKey,propertyVal,propertyVal);
        property.setAutoCreatePropertyDefinition(true);
        propertyList.add(property);
      }
      try {
        m_cmsObject.writePropertyObjects(vfsFileName,propertyList);
        m_cmsObject.writePropertyObjects(vfsFileName,oldProperties);
      }
 catch (      CmsException e1) {
        e1.printStackTrace();
      }
      m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
    }
 catch (    CmsException e) {
      m_report.println(e);
      LOG.error(e.getLocalizedMessage(),e);
    }
  }
}
