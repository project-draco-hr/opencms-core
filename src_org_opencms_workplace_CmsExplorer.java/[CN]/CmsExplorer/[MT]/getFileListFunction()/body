{
  boolean isInsideCurrentProject=false;
  boolean galleryView="galleryview".equals(getSettings().getExplorerMode());
  boolean projectView="projectview".equals(getSettings().getExplorerMode());
  boolean showVfsLinks=getSettings().getExplorerShowLinks();
  CmsResource currentResource=null;
  String currentFolder=getSettings().getExplorerResource();
  boolean found=true;
  try {
    currentResource=getCms().readFileHeader(currentFolder);
  }
 catch (  CmsException e) {
    found=false;
  }
  if (found) {
    if (showVfsLinks) {
      currentFolder="vfslink:" + currentFolder;
    }
  }
 else {
    currentFolder="/";
    showVfsLinks=false;
    try {
      currentResource=getCms().readFileHeader(currentFolder);
    }
 catch (    CmsException e) {
    }
  }
  long check=getCms().getFileSystemFolderChanges();
  boolean newTreePlease=getSettings().getExplorerChecksum() != check;
  CmsUUID currentFolderId;
  if (currentResource.isFile()) {
    currentFolderId=currentResource.getParentId();
  }
 else {
    currentFolderId=currentResource.getId();
  }
  StringBuffer content=new StringBuffer(2048);
  content.append("function initialize() {\n");
  content.append("top.mode=\"");
  content.append(getSettings().getExplorerMode());
  content.append("\";\n");
  content.append("top.showlinks=");
  content.append(showVfsLinks);
  content.append(";\n");
  content.append("top.head.helpUrl='explorer/index.html';\n");
  content.append("top.setProject(");
  content.append(getSettings().getProject());
  content.append(");\n");
  content.append("top.setOnlineProject(");
  content.append(I_CmsConstants.C_PROJECT_ONLINE_ID);
  content.append(");\n");
  content.append("top.setChecksum(");
  content.append(check);
  content.append(");\n");
  boolean writeAccess="explorerview".equals(getSettings().getExplorerMode());
  if (writeAccess && (!showVfsLinks)) {
    try {
      CmsFolder test=getCms().readFolder(currentFolder);
      writeAccess=getCms().isInsideCurrentProject(test);
    }
 catch (    CmsException e) {
      writeAccess=false;
    }
  }
  content.append("top.enableNewButton(");
  content.append(writeAccess);
  content.append(");\n");
  content.append("top.setDirectory(\"");
  content.append(currentFolderId.hashCode());
  content.append("\",\"");
  content.append(CmsResource.getPath(getSettings().getExplorerResource()));
  content.append("\");\n");
  if (showVfsLinks) {
    content.append("top.addHist('");
    content.append(CmsResource.getPath(getSettings().getExplorerResource()));
    content.append("')\n");
  }
  content.append("top.rD();\n\n");
  int preferences=getDefaultPreferences();
  boolean showTitle=(preferences & I_CmsWpConstants.C_FILELIST_TITLE) > 0;
  boolean showPermissions=(preferences & I_CmsWpConstants.C_FILELIST_PERMISSIONS) > 0;
  boolean showSize=(preferences & I_CmsWpConstants.C_FILELIST_SIZE) > 0;
  boolean showDateLastModified=(preferences & I_CmsWpConstants.C_FILELIST_DATE_LASTMODIFIED) > 0;
  boolean showUserWhoLastModified=(preferences & I_CmsWpConstants.C_FILELIST_USER_LASTMODIFIED) > 0;
  boolean showDateCreated=(preferences & I_CmsWpConstants.C_FILELIST_DATE_CREATED) > 0;
  boolean showUserWhoCreated=(preferences & I_CmsWpConstants.C_FILELIST_USER_CREATED) > 0;
  Vector resources=getRessources(getSettings().getExplorerResource());
  int startat=0;
  int stopat=resources.size();
  int selectedPage=1;
  int numberOfPages=0;
  int maxEntrys=C_ENTRYS_PER_PAGE;
  if (!(galleryView || projectView || showVfsLinks)) {
    selectedPage=getSettings().getExplorerPage();
    if (stopat > maxEntrys) {
      numberOfPages=(stopat / maxEntrys) + 1;
      if (selectedPage > numberOfPages) {
        selectedPage=1;
      }
      startat=(selectedPage - 1) * maxEntrys;
      if ((startat + maxEntrys) < stopat) {
        stopat=startat + maxEntrys;
      }
    }
  }
  for (int i=startat; i < stopat; i++) {
    CmsResource res=(CmsResource)resources.elementAt(i);
    CmsLock lock=null;
    String path=getCms().readAbsolutePath(res);
    try {
      lock=getCms().getLock(res);
    }
 catch (    CmsException e) {
      lock=CmsLock.getNullLock();
      if (I_CmsLogChannels.C_LOGGING && A_OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_CRITICAL)) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,this.getClass().getName() + " error getting lock state for resource " + res+ " "+ e.getMessage());
      }
    }
    isInsideCurrentProject=getCms().isInsideCurrentProject(res);
    content.append("top.aF(");
    content.append("\"");
    content.append(res.getResourceName());
    content.append("\",");
    if (projectView || showVfsLinks) {
      content.append("\"");
      content.append(path);
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showTitle) {
      String title="";
      try {
        title=getCms().readProperty(getCms().readAbsolutePath(res),I_CmsConstants.C_PROPERTY_TITLE);
      }
 catch (      CmsException e) {
      }
      if (title == null) {
        title="";
      }
      content.append("\"");
      if (title != null)       content.append(Encoder.escapeHtml(title));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    content.append(res.getType());
    content.append(",");
    content.append(res.getLinkCount() > 1 ? 1 : 0);
    content.append(",");
    if (res.isFolder() || (!showSize)) {
      content.append("\"\",");
    }
 else {
      content.append(res.getLength());
      content.append(",");
    }
    content.append(res.getState());
    content.append(",");
    int projectId=lock.isNullLock() ? res.getProjectId() : lock.getProjectId();
    content.append(projectId);
    content.append(",");
    if (showDateLastModified) {
      content.append("\"");
      content.append(getSettings().getMessages().getDateTime(res.getDateLastModified()));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showUserWhoLastModified) {
      content.append("\"");
      try {
        content.append(getCms().readUser(res.getUserLastModified()).getName());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showDateCreated) {
      content.append("\"");
      content.append(getSettings().getMessages().getDateTime(res.getDateCreated()));
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showUserWhoCreated) {
      content.append("\"");
      try {
        content.append(getCms().readUser(res.getUserCreated()).getName());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (showPermissions) {
      content.append("\"");
      try {
        content.append(getCms().getPermissions(getCms().readAbsolutePath(res)).getPermissionString());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
 else {
      content.append("\"\",");
    }
    if (lock.isNullLock()) {
      content.append("\"\",");
    }
 else {
      content.append("\"");
      try {
        content.append(getCms().readUser(lock.getUserId()).getName());
      }
 catch (      CmsException e) {
        content.append(e.getMessage());
      }
      content.append("\",");
    }
    content.append(lock.getType());
    content.append(",");
    int lockedInProject=I_CmsConstants.C_UNKNOWN_ID;
    if (lock.isNullLock() && res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
      lockedInProject=res.getProjectId();
    }
 else {
      if (res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {
        lockedInProject=res.getProjectId();
      }
 else {
        lockedInProject=getCms().getRequestContext().currentProject().getId();
      }
    }
    String lockedInProjectName=null;
    try {
      if (lockedInProject == I_CmsConstants.C_UNKNOWN_ID) {
        lockedInProjectName="";
      }
 else {
        lockedInProjectName=getCms().readProject(lockedInProject).getName();
      }
    }
 catch (    CmsException exc) {
      lockedInProjectName="";
    }
    content.append("\"");
    content.append(lockedInProjectName);
    content.append("\",");
    content.append(lockedInProject);
    content.append(",\"");
    if (isInsideCurrentProject) {
      content.append("I");
    }
 else {
      content.append("O");
    }
    content.append("\"");
    content.append(");\n");
  }
  if (newTreePlease && (!(galleryView || projectView || showVfsLinks))) {
    content.append("\ntop.rT();\n");
    List tree=null;
    try {
      tree=getCms().getFolderTree();
    }
 catch (    CmsException e) {
      tree=new Vector();
    }
    int startAt=1;
    CmsUUID parentId=CmsUUID.getNullUUID();
    boolean grey=false;
    if (CmsProject.isOnlineProject(getSettings().getProject())) {
      CmsFolder rootFolder=(CmsFolder)tree.get(0);
      content.append("top.aC(\"");
      content.append(rootFolder.getId().hashCode());
      content.append("\", ");
      content.append("\"");
      content.append(getSettings().getMessages().key("title.rootfolder"));
      content.append("\", \"");
      content.append(rootFolder.getParentId().hashCode());
      content.append("\", false);\n");
      for (int i=startAt; i < tree.size(); i++) {
        CmsFolder folder=(CmsFolder)tree.get(i);
        content.append("top.aC(\"");
        content.append(folder.getId().hashCode());
        content.append("\", ");
        content.append("\"");
        content.append(folder.getResourceName());
        content.append("\", \"");
        content.append(folder.getParentId().hashCode());
        content.append("\", false);\n");
      }
    }
 else {
      Hashtable idMixer=new Hashtable();
      CmsFolder rootFolder=(CmsFolder)tree.get(0);
      String folderToIgnore=null;
      if (getCms().isInsideCurrentProject(rootFolder)) {
        grey=false;
      }
 else {
        grey=true;
      }
      content.append("top.aC(\"");
      content.append(rootFolder.getId().hashCode());
      content.append("\", ");
      content.append("\"");
      content.append(getSettings().getMessages().key("title.rootfolder"));
      content.append("\", \"");
      content.append(rootFolder.getParentId().hashCode());
      content.append("\", ");
      content.append(grey);
      content.append(");\n");
      for (int i=startAt; i < tree.size(); i++) {
        CmsFolder folder=(CmsFolder)tree.get(i);
        if ((folder.getState() == I_CmsConstants.C_STATE_DELETED) || (getCms().readAbsolutePath(folder).equals(folderToIgnore))) {
          folderToIgnore=getCms().readAbsolutePath(folder);
        }
 else {
          if (!CmsProject.isOnlineProject(folder.getProjectId())) {
            parentId=folder.getParentId();
            try {
              if (getCms().readAbsolutePath(folder).equals(getCms().readAbsolutePath((CmsFolder)tree.get(i + 1)))) {
                i++;
                idMixer.put(tree.get(i),folder.getId());
              }
            }
 catch (            IndexOutOfBoundsException exc) {
            }
          }
 else {
            parentId=folder.getParentId();
            if (idMixer.containsKey(parentId)) {
              parentId=(CmsUUID)idMixer.get(parentId);
            }
          }
          if (getCms().isInsideCurrentProject(folder)) {
            grey=false;
          }
 else {
            grey=true;
          }
          content.append("top.aC(\"");
          content.append(folder.getId().hashCode());
          content.append("\", ");
          content.append("\"");
          content.append(folder.getResourceName());
          content.append("\", \"");
          content.append(parentId.hashCode());
          content.append("\", ");
          content.append(grey);
          content.append(");\n");
        }
      }
    }
  }
  content.append("top.dU(document,");
  content.append(numberOfPages);
  content.append(",");
  content.append(selectedPage);
  content.append("); \n");
  content.append("}\n");
  return content.toString();
}
