{
  CmsHTMLHoverPanel itemContent=uiBinder.createAndBindUi(this);
  initWidget(itemContent);
  m_title.setText(infoBean.getTitle());
  m_subTitle.setText(infoBean.getSubTitle());
  if ((infoBean.getAdditionalInfo() != null) && (infoBean.getAdditionalInfo().size() > 0)) {
    m_openClose=new CmsImageButton(CmsImageButton.Icon.triangle_1_e,CmsImageButton.Icon.triangle_1_s,false);
    m_titleRow.insert(m_openClose,0);
    m_openClose.addClickHandler(new ClickHandler(){
      /** 
 * If initialized. 
 */
      private boolean m_init;
      /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
      public void onClick(      ClickEvent event){
        if (CmsListItemWidget.this.getStyleName().contains(CmsListItemWidget.OPENCLASS)) {
          CmsListItemWidget.this.removeStyleName(CmsListItemWidget.OPENCLASS);
          m_openClose.setDown(false);
        }
 else {
          CmsListItemWidget.this.addStyleName(CmsListItemWidget.OPENCLASS);
          m_openClose.setDown(true);
          if (!m_init) {
            m_init=true;
            for (            Widget w : m_additionalInfo) {
              CmsLabel valueElem=((AdditionalInfoItem)w).getValueElem();
              valueElem.setTruncate(true);
              valueElem.widthCheck();
            }
          }
        }
      }
    }
);
    Iterator<Entry<String,String>> it=infoBean.getAdditionalInfo().entrySet().iterator();
    while (it.hasNext()) {
      Entry<String,String> entry=it.next();
      String valueStyle=infoBean.getValueStyle(entry.getKey());
      AdditionalInfoItem info=new AdditionalInfoItem(entry.getKey(),entry.getValue(),valueStyle);
      m_additionalInfo.add(info);
    }
  }
}
