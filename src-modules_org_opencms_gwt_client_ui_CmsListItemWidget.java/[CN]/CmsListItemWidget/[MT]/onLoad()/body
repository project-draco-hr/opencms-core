{
  super.onLoad();
  Scheduler.get().scheduleDeferred(new Scheduler.ScheduledCommand(){
    /** 
 * @see com.google.gwt.user.client.Command#execute()
 */
    public void execute(){
      int size=2 + m_additionalDiv.getChildCount();
      List<Element> elements=new ArrayList<Element>(size);
      elements.add(m_titleDiv.getElement());
      elements.add(m_subTitleDiv.getElement());
      NodeList<Node> childNodes=m_additionalDiv.getChildNodes();
      for (int i=0; i < childNodes.getLength(); i++) {
        Node addInfo=childNodes.getItem(i);
        Element element=addInfo.getChild(1).<Element>cast();
        elements.add(element);
      }
      for (int i=0; i < elements.size(); i++) {
        Element element=elements.get(i);
        CmsTextMetrics tm=CmsTextMetrics.get();
        tm.bind(element);
        String text=element.getInnerText();
        int clientWidth=CmsDomUtil.getCurrentStyleInt(element,CmsDomUtil.Style.width);
        int textWidth=tm.getWidth(text);
        if (clientWidth < textWidth) {
          int maxChars=(int)((float)clientWidth / (float)textWidth * text.length());
          if (maxChars < 1) {
            maxChars=1;
          }
          String newText=text.substring(0,maxChars - 1);
          if (text.startsWith("/")) {
            newText=CmsStringUtil.formatResourceName(text,maxChars);
          }
 else           if (maxChars > 2) {
            newText+="&hellip;";
          }
          if (newText.isEmpty()) {
            newText="&nbsp;";
          }
          element.setInnerHTML(text);
          element.setAttribute("title",text);
        }
        tm.release();
      }
    }
  }
);
}
