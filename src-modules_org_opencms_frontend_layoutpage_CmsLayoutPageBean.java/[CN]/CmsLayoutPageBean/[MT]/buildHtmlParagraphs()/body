{
  StringBuffer result=new StringBuffer(16384);
  Locale locale=getCmsObject().getRequestContext().getLocale();
  m_typeMappings=new HashMap();
  calculateColumnWidth();
  I_CmsMacroWrapper macros=null;
  try {
    macros=getMacroWrapper();
  }
 catch (  Exception e) {
    if (!(e instanceof CmsException)) {
      if (LOG.isErrorEnabled()) {
        LOG.error(e.getMessage());
      }
    }
    return "";
  }
  boolean showTwoCols=getColumnLayout().indexOf(COLUMNS_LAYOUT_2) != -1;
  boolean showImgLinks=IMG_LINK_LARGER.equals(m_content.getStringValue(getCmsObject(),NODE_IMAGEOPTIONS,locale));
  String imgLinkTitleLocalized="";
  CmsMessages messages=getCmsJspActionElement().getMessages("org/opencms/frontend/layoutpage/frontendmessages",locale);
  if (showImgLinks) {
    imgLinkTitleLocalized=messages.keyDefault("link.image.original","");
  }
  Iterator i=m_content.getValues(NODE_PARAGRAPH,locale).iterator();
  result.append(macros.getResult("content_start"));
  boolean firstInRow=true;
  while (i.hasNext()) {
    I_CmsXmlContentValue value=(I_CmsXmlContentValue)i.next();
    String xPath=value.getPath() + "/";
    boolean hasFileLink=m_content.hasValue(xPath + NODE_FILELINK,locale);
    CmsParameterConfiguration xmlElementsProperties=null;
    CmsFile linkToFile=null;
    CmsXmlContent xmlContentFileLink=null;
    if (hasFileLink) {
      try {
        linkToFile=getCmsObject().readFile(m_content.getStringValue(getCmsObject(),xPath + NODE_FILELINK,locale));
        xmlContentFileLink=CmsXmlContentFactory.unmarshal(getCmsObject(),linkToFile);
        xmlElementsProperties=getXmlElementsProperties(linkToFile);
      }
 catch (      Exception e) {
        hasFileLink=false;
      }
    }
    String headline="";
    if (m_content.hasValue(xPath + NODE_HEADLINE,locale)) {
      headline=m_content.getStringValue(getCmsObject(),xPath + NODE_HEADLINE,locale);
    }
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(headline)) {
      if (hasFileLink) {
        String titleValue=this.getPropertiesValue(xmlElementsProperties,KEY_HEADLINE,xmlContentFileLink,locale);
        if (!CmsStringUtil.isEmptyOrWhitespaceOnly(titleValue)) {
          headline="<a title=\"" + titleValue + "\" href=\""+ m_jspActionElement.link(m_content.getStringValue(getCmsObject(),xPath + NODE_FILELINK,locale))+ "\" target=\"_self\">"+ titleValue+ "</a>";
        }
 else {
          headline="";
        }
      }
 else {
        headline="";
      }
    }
    String textValue=m_content.getStringValue(getCmsObject(),xPath + NODE_TEXT,locale);
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(textValue)) {
      if (hasFileLink) {
        String text=getPropertiesValue(xmlElementsProperties,KEY_TEXTVALUE,xmlContentFileLink,locale);
        if (!CmsStringUtil.isEmptyOrWhitespaceOnly(text)) {
          textValue=text;
          textValue=CmsStringUtil.trimToSize(textValue,250);
          textValue+="<a href=\"" + m_jspActionElement.link(m_content.getStringValue(getCmsObject(),xPath + NODE_FILELINK,locale)) + "\" target=\"_self\">&gt; "+ messages.keyDefault("link.more","")+ "</a>";
        }
 else {
          textValue="";
        }
      }
 else {
        textValue="";
      }
    }
    xPath+=NODE_IMAGE + "/";
    String imgDesc="";
    String paragraphType="";
    String imgTag="";
    String imgUrl="";
    int imgWidth=getColumnWidth();
    boolean imagePresent=false;
    if (m_content.hasValue(xPath,locale)) {
      String imgUri=m_content.getStringValue(getCmsObject(),xPath + NODE_IMAGE,locale);
      if (CmsStringUtil.isEmptyOrWhitespaceOnly(imgUri)) {
        if (hasFileLink) {
          String imgValue=getPropertiesValue(xmlElementsProperties,KEY_IMGURI,xmlContentFileLink,locale);
          if (!CmsStringUtil.isEmptyOrWhitespaceOnly(imgValue)) {
            imgUri=imgValue;
          }
 else {
            imgUri="";
          }
        }
 else {
          imgUri="";
        }
      }
      String imgSize=null;
      try {
        imgSize=getCmsObject().readPropertyObject(imgUri,CmsPropertyDefinition.PROPERTY_IMAGE_SIZE,false).getValue();
      }
 catch (      CmsException e) {
      }
      if (imgSize != null) {
        imagePresent=true;
        if (m_content.hasValue(xPath + NODE_DESCRIPTION,locale)) {
          imgDesc=m_content.getStringValue(getCmsObject(),xPath + NODE_DESCRIPTION,locale);
        }
        paragraphType=m_content.getStringValue(getCmsObject(),xPath + NODE_ALIGN,locale);
        CmsImageScaler scaler=getImageScaler(paragraphType,imgSize);
        imgWidth=scaler.getWidth();
        String imgTitle=imgDesc;
        if (showImgLinks) {
          StringBuffer tempImgTitle=new StringBuffer(128);
          tempImgTitle.append(imgDesc);
          if (CmsStringUtil.isNotEmpty(imgDesc)) {
            tempImgTitle.append(" ");
          }
          tempImgTitle.append(imgLinkTitleLocalized);
          imgTitle=tempImgTitle.toString();
        }
        Map attrs=new HashMap(4);
        attrs.put("alt",imgTitle);
        attrs.put("title",imgTitle);
        attrs.put("border","0");
        imgTag=getCmsJspActionElement().img(imgUri,scaler,attrs);
        macros.putContextVariable(MACRO_IMAGE,imgTag);
        if (showImgLinks) {
          imgUrl=getLinkToLargeImage(imgUri,imgSize);
          macros.putContextVariable(MACRO_TITLE,imgTitle);
          macros.putContextVariable(MACRO_TARGET,imgUrl);
          imgTag=macros.getResult("image_with_link");
        }
 else {
          imgTag=macros.getResult("image_without_link");
        }
      }
    }
    macros.putContextVariable(MACRO_DESCRIPTION,imgDesc);
    if (imagePresent && showImgLinks) {
      macros.putContextVariable(MACRO_TITLE,imgLinkTitleLocalized);
      macros.putContextVariable(MACRO_TARGET,imgUrl);
      imgDesc=macros.getResult("description_with_link");
    }
 else {
      imgDesc=macros.getResult("description_without_link");
    }
    if (CmsStringUtil.isEmpty(paragraphType)) {
      paragraphType=PARAGRAPH_TYPE_TEXT_ONLY;
    }
    if (firstInRow || !showTwoCols) {
      result.append(macros.getResult("row_start"));
    }
    result.append(macros.getResult("element_start"));
    macros.putContextVariable(MACRO_HEADLINE,headline);
    macros.putContextVariable(MACRO_TEXT,textValue);
    macros.putContextVariable(MACRO_IMAGE,imgTag);
    macros.putContextVariable(MACRO_IMAGE_WIDTH,new Integer(imgWidth));
    macros.putContextVariable(MACRO_DESCRIPTION,imgDesc);
    result.append(macros.getResult(paragraphType));
    result.append(macros.getResult("element_end"));
    if (!showTwoCols || !firstInRow || (firstInRow && !i.hasNext())) {
      if (showTwoCols && firstInRow && !i.hasNext()) {
        result.append(macros.getResult("element_start"));
        result.append(macros.getResult("element_end"));
      }
      result.append(macros.getResult("row_end"));
    }
    firstInRow=!firstInRow;
  }
  result.append(macros.getResult("content_end"));
  return result.toString();
}
