{
  StringBuffer result=new StringBuffer(128);
  result.append("?action=search&query=");
  result.append(CmsEncoder.encodeParameter(getQuery()));
  result.append("&matchesPerPage=");
  result.append(getMatchesPerPage());
  result.append("&displayPages=");
  result.append(getDisplayPages());
  result.append("&index=");
  result.append(CmsEncoder.encodeParameter(getIndex()));
  Sort sort=getSort();
  if (sort != CmsSearchParameters.SORT_DEFAULT) {
    result.append("&sort=");
    if (sort == CmsSearchParameters.SORT_TITLE) {
      result.append("title");
    }
 else     if (sort == CmsSearchParameters.SORT_DATE_CREATED) {
      result.append("date-created");
    }
 else     if (sort == CmsSearchParameters.SORT_DATE_LASTMODIFIED) {
      result.append("date-lastmodified");
    }
  }
  if ((getCategories() != null) && (getCategories().size() > 0)) {
    result.append("&category=");
    Iterator it=getCategories().iterator();
    while (it.hasNext()) {
      result.append(it.next());
      if (it.hasNext()) {
        result.append(',');
      }
    }
  }
  if ((getRoots() != null) && (getRoots().size() > 0)) {
    result.append("&searchRoots=");
    Iterator it=getRoots().iterator();
    while (it.hasNext()) {
      result.append(CmsEncoder.encode((String)it.next()));
      if (it.hasNext()) {
        result.append(',');
      }
    }
  }
  if (isExcerptOnlySearchedFields()) {
    result.append("&excerptOnlySearchedFields=true");
  }
  return result.toString();
}
