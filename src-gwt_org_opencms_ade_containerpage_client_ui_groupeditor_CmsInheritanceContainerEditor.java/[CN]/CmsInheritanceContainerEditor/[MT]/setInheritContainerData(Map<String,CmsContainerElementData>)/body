{
  m_elementData=elementsData.get(getGroupContainerWidget().getId());
  if (m_elementData != null) {
    m_inputDescription.setFormValueAsString(m_elementData.getDescription());
    m_inputTitle.setFormValueAsString(m_elementData.getTitle());
    removeAllChildren();
    CmsContainerpageUtil util=getController().getContainerpageUtil();
    for (    CmsInheritanceInfo info : m_elementData.getInheritanceInfos()) {
      if (info.isVisibile()) {
        CmsContainerElementData element=getController().getCachedElement(info.getClientId());
        try {
          CmsContainerPageElementPanel elementWidget=util.createElement(element,getGroupContainerWidget());
          elementWidget.setInheritanceInfo(info);
          setOptionBar(elementWidget);
          getGroupContainerWidget().add(elementWidget);
        }
 catch (        Exception e) {
          CmsDebugLog.getInstance().printLine(e.getMessage());
        }
      }
    }
    boolean hasInvisible=false;
    for (    CmsInheritanceInfo info : m_elementData.getInheritanceInfos()) {
      if (!info.isVisibile()) {
        CmsContainerElementData element=getController().getCachedElement(info.getClientId());
        try {
          CmsContainerPageElementPanel elementWidget=util.createElement(element,getGroupContainerWidget());
          elementWidget.setInheritanceInfo(info);
          elementWidget.addStyleName(HIDDEN_ELEMENT_CLASS);
          setOptionBar(elementWidget);
          getGroupContainerWidget().add(elementWidget);
          Element elementOverlay=DOM.createDiv();
          elementOverlay.setClassName(HIDDEN_ELEMENT_OVERLAY_CLASS);
          elementWidget.getElement().appendChild(elementOverlay);
          hasInvisible=true;
        }
 catch (        Exception e) {
          CmsDebugLog.getInstance().printLine(e.getMessage());
        }
      }
    }
    if (hasInvisible) {
      m_showElementsButton.enable();
    }
  }
  getGroupContainerWidget().refreshHighlighting();
  setSaveEnabled(true,null);
}
