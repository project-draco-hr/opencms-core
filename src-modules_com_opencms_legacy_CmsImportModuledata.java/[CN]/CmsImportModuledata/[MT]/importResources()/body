{
  openImportFile();
  m_report.println(Messages.get().container(Messages.RPT_IMPORT_VERSION_1,new Integer(m_importVersion)),I_CmsReport.C_FORMAT_NOTE);
  try {
    m_report.println(Messages.get().container(Messages.RPT_IMPORT_CHANNELS_BEGIN_0),I_CmsReport.C_FORMAT_HEADLINE);
    m_cms.getRequestContext().saveSiteRoot();
    m_cms.getRequestContext().setSiteRoot(I_CmsConstants.VFS_FOLDER_CHANNELS);
    Iterator i=m_importImplementations.iterator();
    while (i.hasNext()) {
      I_CmsImport imp=(I_CmsImport)i.next();
      if (imp.getVersion() == m_importVersion) {
        imp.importResources(m_cms,m_importPath,m_report,m_importResource,m_importZip,m_docXml,null);
        break;
      }
    }
    m_cms.getRequestContext().restoreSiteRoot();
    m_report.println(Messages.get().container(Messages.RPT_IMPORT_CHANNELS_END_0),I_CmsReport.C_FORMAT_HEADLINE);
    m_report.println(Messages.get().container(Messages.RPT_IMPORT_MODULE_BEGIN_0),I_CmsReport.C_FORMAT_HEADLINE);
    importModuleMasters();
    m_report.println(Messages.get().container(Messages.RPT_IMPORT_MODULE_END_0),I_CmsReport.C_FORMAT_HEADLINE);
  }
 catch (  CmsXmlException e) {
    throw e;
  }
catch (  CmsImportExportException e) {
    throw e;
  }
catch (  CmsException e) {
    m_report.println(e);
    CmsMessageContainer message=Messages.get().container(Messages.ERR_COS_IMPORTEXPORT_ERROR_IMPORTING_RESOURCES_0);
    if (LOG.isDebugEnabled()) {
      LOG.debug(message,e);
    }
    throw new CmsImportExportException(message,e);
  }
 finally {
    closeImportFile();
  }
}
