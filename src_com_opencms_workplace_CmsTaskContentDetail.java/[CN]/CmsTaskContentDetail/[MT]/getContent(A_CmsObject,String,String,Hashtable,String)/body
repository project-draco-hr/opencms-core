{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  A_CmsRequestContext context=cms.getRequestContext();
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  A_CmsTask task;
  int taskid=-1;
  HttpSession session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
  try {
    Integer sessionTaskid=(Integer)session.getValue("taskid");
    if (sessionTaskid != null) {
      taskid=sessionTaskid.intValue();
    }
    try {
      taskid=Integer.parseInt((String)parameters.get("taskid"));
    }
 catch (    Exception exc) {
    }
    session.putValue("taskid",new Integer(taskid));
    parameters.put("taskid",taskid + "");
    task=cms.readTask(taskid);
    if ("acceptok".equals((String)parameters.get("action"))) {
      cms.acceptTask(taskid);
      String comment="";
      cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_ACCEPTED);
    }
 else     if ("accept".equals((String)parameters.get("action"))) {
      templateSelector="accept";
    }
 else     if ("take".equals((String)parameters.get("action"))) {
      templateSelector="take";
    }
 else     if ("takeok".equals((String)parameters.get("action"))) {
      A_CmsUser newEditor=context.currentUser();
      A_CmsGroup oldRole=cms.readGroup(task);
      if (cms.userInGroup(newEditor.getName(),oldRole.getName())) {
        cms.forwardTask(taskid,oldRole.getName(),newEditor.getName());
        String comment=lang.getLanguageValue("task.dialog.take.logmessage");
        comment+=" " + Utils.getFullName(newEditor);
        cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_TAKE);
      }
    }
 else     if ("due".equals((String)parameters.get("action"))) {
      templateSelector="due";
    }
 else     if ("dueok".equals((String)parameters.get("action"))) {
      String timeoutString=(String)parameters.get("DATE");
      String splittetDate[]=Utils.split(timeoutString,".");
      GregorianCalendar cal=new GregorianCalendar(Integer.parseInt(splittetDate[2]),Integer.parseInt(splittetDate[1]) - 1,Integer.parseInt(splittetDate[0]),0,0,0);
      long timeout=cal.getTime().getTime();
      cms.setTimeout(taskid,timeout);
      String comment="";
      comment+=lang.getLanguageValue("task.dialog.due.logmessage1") + " ";
      comment+=Utils.getNiceShortDate(task.getTimeOut().getTime()) + " ";
      comment+=lang.getLanguageValue("task.dialog.due.logmessage2") + " ";
      comment+=Utils.getNiceShortDate(timeout);
      cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_DUECHANGED);
    }
 else     if ("priorityok".equals((String)parameters.get("action"))) {
      String priorityString=(String)parameters.get("PRIORITY");
      int priority=Integer.parseInt(priorityString);
      cms.setPriority(taskid,priority);
      String comment="";
      comment+=lang.getLanguageValue("task.dialog.priority.logmessage1") + " ";
      comment+=lang.getLanguageValue("task.dialog.priority.logmessageprio" + task.getPriority()) + " ";
      comment+=lang.getLanguageValue("task.dialog.priority.logmessage2") + " ";
      comment+=lang.getLanguageValue("task.dialog.priority.logmessageprio" + priority) + " ";
      cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_PRIORITYCHANGED);
    }
 else     if ("okok".equals((String)parameters.get("action"))) {
      cms.endTask(taskid);
      String comment="";
      cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_OK);
    }
 else     if ("ok".equals((String)parameters.get("action"))) {
      templateSelector="ok";
    }
 else     if ("comment".equals((String)parameters.get("action"))) {
      String comment=(String)parameters.get("DESCRIPTION");
      if ((comment != null) && (comment.length() != 0)) {
        cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_COMMENT);
      }
    }
 else     if ("messageok".equals((String)parameters.get("action"))) {
      String comment=lang.getLanguageValue("task.dialog.message.head") + " ";
      if ((comment != null) && (comment.length() != 0)) {
        comment+=Utils.getFullName(cms.readAgent(task)) + "\n";
        comment+=(String)parameters.get("DESCRIPTION");
        cms.writeTaskLog(taskid,comment,this.C_TASKLOGTYPE_CALL);
      }
    }
 else     if ("queryok".equals((String)parameters.get("action"))) {
      String comment=lang.getLanguageValue("task.dialog.query.head") + " ";
      if ((comment != null) && (comment.length() != 0)) {
        comment+=Utils.getFullName(cms.readOwner(task)) + "\n";
        comment+=(String)parameters.get("DESCRIPTION");
        cms.writeTaskLog(taskid,comment,this.C_TASKLOGTYPE_CALL);
      }
    }
    task=cms.readTask(taskid);
  }
 catch (  Exception exc) {
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
  A_CmsUser owner=null;
  String ownerName="";
  try {
    owner=cms.readOwner(task);
    ownerName=owner.getName();
  }
 catch (  Exception exc) {
  }
  A_CmsUser editor=null;
  String editorName="";
  try {
    editor=cms.readAgent(task);
    editorName=editor.getName();
  }
 catch (  Exception exc) {
  }
  A_CmsGroup role=null;
  String roleName="";
  try {
    role=cms.readGroup(task);
    roleName=role.getName();
  }
 catch (  Exception exc) {
  }
  String priority;
  String projectname="?";
  String style;
  String button1;
  String button2;
  String button3;
  String button4;
  String button5;
  String button6;
  long startTime;
  long timeout;
  GregorianCalendar cal=new GregorianCalendar();
  cal.setTime(new Date(System.currentTimeMillis()));
  cal.set(Calendar.HOUR,0);
  cal.set(Calendar.MINUTE,0);
  cal.set(Calendar.SECOND,0);
  cal.set(Calendar.MILLISECOND,0);
  GregorianCalendar newcal=new GregorianCalendar(cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(Calendar.DAY_OF_MONTH),0,0,0);
  long now=newcal.getTime().getTime();
  try {
    projectname=cms.readTask(task.getRoot()).getName();
  }
 catch (  Exception exc) {
  }
  priority=xmlTemplateDocument.getProcessedXmlDataValue("priority" + task.getPriority(),this);
  startTime=task.getStartTime().getTime();
  timeout=task.getTimeOut().getTime();
  String due="";
  try {
    due=Utils.getNiceShortDate(timeout);
  }
 catch (  Exception exc) {
  }
  String from="";
  try {
    from=Utils.getNiceShortDate(startTime);
  }
 catch (  Exception exc) {
  }
  xmlTemplateDocument.setXmlData("taskid",task.getId() + "");
  boolean isOwner=context.currentUser().equals(owner);
  boolean isEditor=context.currentUser().equals(editor);
  boolean isInRole=false;
  try {
    isInRole=cms.userInGroup(context.currentUser().getName(),roleName);
  }
 catch (  Exception exc) {
  }
  if (task.getState() == C_TASK_STATE_ENDED) {
    if (isOwner) {
      button1=getButton(xmlTemplateDocument,"button_message",false);
      button2=getButton(xmlTemplateDocument,"button_accept",false);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_reakt",true);
    }
 else     if (isEditor) {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_forward",false);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_reakt",false);
    }
 else     if (isInRole) {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_take",false);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_reakt",false);
    }
 else {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_take",false);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_reakt",false);
    }
    if (timeout < now) {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_ok",this);
    }
 else {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_ok",this);
    }
  }
 else   if (task.getPercentage() == 0) {
    if (isOwner) {
      button1=getButton(xmlTemplateDocument,"button_message",true);
      button2=getButton(xmlTemplateDocument,"button_forward",true);
      button3=getButton(xmlTemplateDocument,"button_due",true);
      button4=getButton(xmlTemplateDocument,"button_priority",true);
      button5=getButton(xmlTemplateDocument,"button_comment",true);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
 else     if (isEditor) {
      button1=getButton(xmlTemplateDocument,"button_query",true);
      button2=getButton(xmlTemplateDocument,"button_accept",true);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",true);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
 else     if (isInRole) {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_take",true);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
 else {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_take",false);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
    if (timeout < now) {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_alert",this);
    }
 else {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_new",this);
    }
  }
 else {
    if (isOwner) {
      button1=getButton(xmlTemplateDocument,"button_message",true);
      button2=getButton(xmlTemplateDocument,"button_forward",true);
      button3=getButton(xmlTemplateDocument,"button_due",true);
      button4=getButton(xmlTemplateDocument,"button_priority",true);
      button5=getButton(xmlTemplateDocument,"button_comment",true);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
 else     if (isEditor) {
      button1=getButton(xmlTemplateDocument,"button_query",true);
      button2=getButton(xmlTemplateDocument,"button_forward",true);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",true);
      button6=getButton(xmlTemplateDocument,"button_ok",true);
    }
 else     if (isInRole) {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_take",true);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
 else {
      button1=getButton(xmlTemplateDocument,"button_query",false);
      button2=getButton(xmlTemplateDocument,"button_take",false);
      button3=getButton(xmlTemplateDocument,"button_due",false);
      button4=getButton(xmlTemplateDocument,"button_priority",false);
      button5=getButton(xmlTemplateDocument,"button_comment",false);
      button6=getButton(xmlTemplateDocument,"button_ok",false);
    }
    if (timeout < now) {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_alert",this);
    }
 else {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_activ",this);
    }
  }
  xmlTemplateDocument.setXmlData("style",style);
  xmlTemplateDocument.setXmlData("priority",priority);
  xmlTemplateDocument.setXmlData("task",task.getName());
  xmlTemplateDocument.setXmlData("foruser",Utils.getFullName(editor));
  xmlTemplateDocument.setXmlData("forrole",roleName);
  xmlTemplateDocument.setXmlData("actuator",Utils.getFullName(owner));
  xmlTemplateDocument.setXmlData("due",due);
  xmlTemplateDocument.setXmlData("from",from);
  xmlTemplateDocument.setXmlData("project",projectname);
  xmlTemplateDocument.setXmlData("button1",button1);
  xmlTemplateDocument.setXmlData("button2",button2);
  xmlTemplateDocument.setXmlData("button3",button3);
  xmlTemplateDocument.setXmlData("button4",button4);
  xmlTemplateDocument.setXmlData("button5",button5);
  xmlTemplateDocument.setXmlData("button6",button6);
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
