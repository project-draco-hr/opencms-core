{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  A_CmsRequestContext reqCont=cms.getRequestContext();
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  A_CmsTask task;
  int taskid=-1;
  HttpSession session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
  try {
    Integer sessionTaskid=(Integer)session.getValue("taskid");
    if (sessionTaskid != null) {
      taskid=sessionTaskid.intValue();
    }
    try {
      taskid=Integer.parseInt((String)parameters.get("taskid"));
    }
 catch (    Exception exc) {
      exc.printStackTrace();
    }
    session.putValue("taskid",new Integer(taskid));
    parameters.put("taskid",taskid + "");
    if ("acceptok".equals((String)parameters.get("action"))) {
      cms.acceptTask(taskid);
      String comment="";
      cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_ACCEPTED);
    }
 else     if ("accept".equals((String)parameters.get("action"))) {
      templateSelector="accept";
    }
 else     if ("okok".equals((String)parameters.get("action"))) {
      cms.endTask(taskid);
      String comment="";
      cms.writeTaskLog(taskid,comment,C_TASKLOGTYPE_OK);
    }
 else     if ("ok".equals((String)parameters.get("action"))) {
      templateSelector="ok";
    }
    task=cms.readTask(taskid);
  }
 catch (  Exception exc) {
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
  StringBuffer result=new StringBuffer();
  String priority;
  String projectname="?";
  String style;
  String button2;
  String button6;
  long startTime;
  long timeout;
  GregorianCalendar cal=new GregorianCalendar();
  cal.setTime(new Date(System.currentTimeMillis()));
  cal.set(Calendar.HOUR,0);
  cal.set(Calendar.MINUTE,0);
  cal.set(Calendar.SECOND,0);
  cal.set(Calendar.MILLISECOND,0);
  GregorianCalendar newcal=new GregorianCalendar(cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(Calendar.DAY_OF_MONTH),0,0,0);
  long now=newcal.getTime().getTime();
  try {
    projectname=cms.readTask(task.getRoot()).getName();
  }
 catch (  Exception exc) {
  }
  priority=xmlTemplateDocument.getProcessedXmlDataValue("priority" + task.getPriority(),this);
  startTime=task.getStartTime().getTime();
  timeout=task.getTimeOut().getTime();
  xmlTemplateDocument.setXmlData("taskid",task.getId() + "");
  if (task.getState() == C_TASK_STATE_ENDED) {
    button2=xmlTemplateDocument.getProcessedXmlDataValue("button_forward",this);
    button6=xmlTemplateDocument.getProcessedXmlDataValue("button_reakt",this);
    if (timeout < now) {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_ok",this);
    }
 else {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_ok",this);
    }
  }
 else   if (task.getPercentage() == 0) {
    button2=xmlTemplateDocument.getProcessedXmlDataValue("button_accept",this);
    button6=xmlTemplateDocument.getProcessedXmlDataValue("button_ok",this);
    if (timeout < now) {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_alert",this);
    }
 else {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_new",this);
    }
  }
 else {
    button2=xmlTemplateDocument.getProcessedXmlDataValue("button_take",this);
    button6=xmlTemplateDocument.getProcessedXmlDataValue("button_ok",this);
    if (timeout < now) {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_alert",this);
    }
 else {
      style=xmlTemplateDocument.getProcessedXmlDataValue("style_activ",this);
    }
  }
  String agent="";
  String group="";
  String owner="";
  String due="";
  String from="";
  try {
    agent=cms.readAgent(task).getName();
  }
 catch (  Exception exc) {
  }
  try {
    group=cms.readGroup(task).getName();
  }
 catch (  Exception exc) {
  }
  try {
    owner=cms.readOwner(task).getName();
  }
 catch (  Exception exc) {
  }
  try {
    due=Utils.getNiceShortDate(timeout);
  }
 catch (  Exception exc) {
  }
  try {
    from=Utils.getNiceShortDate(startTime);
  }
 catch (  Exception exc) {
  }
  xmlTemplateDocument.setXmlData("style",style);
  xmlTemplateDocument.setXmlData("priority",priority);
  xmlTemplateDocument.setXmlData("task",task.getName());
  xmlTemplateDocument.setXmlData("foruser",agent);
  xmlTemplateDocument.setXmlData("forrole",group);
  xmlTemplateDocument.setXmlData("actuator",owner);
  xmlTemplateDocument.setXmlData("due",due);
  xmlTemplateDocument.setXmlData("from",from);
  xmlTemplateDocument.setXmlData("project",projectname);
  xmlTemplateDocument.setXmlData("button2",button2);
  xmlTemplateDocument.setXmlData("button6",button6);
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
