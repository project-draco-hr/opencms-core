{
  Direction dir=null;
  int diff=0;
  int diffTemp=(posB.getLeft() + posB.getWidth()) - posA.getLeft();
  if (diffTemp > -margin) {
    dir=Direction.left;
    diff=diffTemp;
  }
  diffTemp=(posA.getLeft() + posA.getWidth()) - posB.getLeft();
  if ((diffTemp > -margin) && (diffTemp < diff)) {
    dir=Direction.right;
    diff=diffTemp;
  }
  diffTemp=(posB.getTop() + posB.getHeight()) - posA.getTop();
  if ((diffTemp > -margin) && (diffTemp < diff)) {
    dir=Direction.top;
    diff=diffTemp;
  }
  diffTemp=(posA.getTop() + posA.getHeight()) - posB.getTop();
  if ((diffTemp > -margin) && (diffTemp < diff)) {
    dir=Direction.bottom;
    diff=diffTemp;
  }
  diff=(int)Math.ceil((1.0 * (diff + margin)) / 2);
switch (dir) {
case left:
    posA.setLeft(posA.getLeft() + diff);
  posA.setWidth(posA.getWidth() - diff);
posB.setWidth(posB.getWidth() - diff);
break;
case right:
posB.setLeft(posB.getLeft() + diff);
posB.setWidth(posB.getWidth() - diff);
posA.setWidth(posA.getWidth() - diff);
break;
case top:
posA.setTop(posA.getTop() + diff);
posA.setHeight(posA.getHeight() - diff);
posB.setHeight(posB.getHeight() - diff);
break;
case bottom:
posB.setTop(posB.getTop() + diff);
posB.setHeight(posB.getHeight() - diff);
posA.setHeight(posA.getHeight() - diff);
}
}
