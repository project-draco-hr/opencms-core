{
  final CmsSitemapChange commitChange=change.getChangeForCommit();
  if (commitChange != null) {
    CmsRpcAction<List<CmsClientSitemapEntry>> saveAction=new CmsRpcAction<List<CmsClientSitemapEntry>>(){
      /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
      @Override public void execute(){
        setLoadingMessage(Messages.get().key(Messages.GUI_SAVING_0));
        start(0,true);
        getService().saveSync(getEntryPoint(),commitChange,this);
      }
      /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
      @Override public void onResponse(      List<CmsClientSitemapEntry> result){
        stop(true);
        if ((result != null) && !result.isEmpty()) {
          for (          CmsClientSitemapEntry entry : result) {
            change.updateEntry(entry);
          }
        }
        change.applyToModel(CmsSitemapController.this);
        fireChange(change);
        for (        AsyncCallback<Object> callback : callbacks) {
          callback.onSuccess(null);
        }
      }
    }
;
    saveAction.execute();
  }
}
