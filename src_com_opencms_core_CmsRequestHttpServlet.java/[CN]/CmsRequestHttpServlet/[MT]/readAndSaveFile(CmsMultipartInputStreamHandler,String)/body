{
  ByteArrayOutputStream out=new ByteArrayOutputStream(8 * 1024);
  byte[] boundaryBytes=boundary.getBytes();
  int[] lookaheadBuf=new int[boundary.length() + 3];
  int[] newLineBuf={-1,-1};
  int matches=0;
  int matchingByte=new Byte(boundaryBytes[matches]).intValue();
  int read=in.read();
  while (read > -1) {
    if (read == matchingByte) {
      lookaheadBuf[matches]=read;
      matches++;
      if (matches == boundary.length()) {
        read=in.read();
        if (newLineBuf[1] == read) {
          out.write(newLineBuf[0]);
        }
 else {
          in.read();
        }
        break;
      }
      matchingByte=new Byte(boundaryBytes[matches]).intValue();
    }
 else {
      if (newLineBuf[0] != -1) {
        out.write(newLineBuf[0]);
      }
      if (matches == 0) {
        newLineBuf[0]=newLineBuf[1];
      }
 else {
        if (newLineBuf[1] != -1) {
          out.write(newLineBuf[1]);
        }
        for (int i=0; i < matches; i++) {
          out.write(lookaheadBuf[i]);
        }
        matches=0;
        matchingByte=new Byte(boundaryBytes[matches]).intValue();
        newLineBuf[0]=-1;
      }
      newLineBuf[1]=read;
    }
    read=in.read();
  }
  out.flush();
  return out.toByteArray();
}
