{
  Map<String,CmsXmlContainerPage> lruMapCntPage=CmsCollectionsGenericWrapper.createLRUMap(cacheSettings.getContainerPageOfflineSize());
  m_containerPagesOffline=Collections.synchronizedMap(lruMapCntPage);
  memMonitor.register(CmsADECache.class.getName() + ".containerPagesOffline",lruMapCntPage);
  lruMapCntPage=CmsCollectionsGenericWrapper.createLRUMap(cacheSettings.getContainerPageOnlineSize());
  m_containerPagesOnline=Collections.synchronizedMap(lruMapCntPage);
  memMonitor.register(CmsADECache.class.getName() + ".containerPagesOnline",lruMapCntPage);
  Map<String,CmsContainerElementBean> lruMapCntElem=CmsCollectionsGenericWrapper.createLRUMap(cacheSettings.getContainerElementOfflineSize());
  m_containerElementsOffline=Collections.synchronizedMap(lruMapCntElem);
  memMonitor.register(CmsADECache.class.getName() + ".containerElementsOffline",lruMapCntElem);
  Map<String,CmsSearchOptions> adeSearchOptions=new HashMap<String,CmsSearchOptions>();
  m_adeSearchOptions=Collections.synchronizedMap(adeSearchOptions);
  memMonitor.register(CmsADEManager.class.getName(),adeSearchOptions);
  Map<String,List<CmsContainerElementBean>> adeRecentList=new HashMap<String,List<CmsContainerElementBean>>();
  m_adeRecentLists=Collections.synchronizedMap(adeRecentList);
  memMonitor.register(CmsADEManager.class.getName(),adeRecentList);
  OpenCms.addCmsEventListener(this,new int[]{I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,I_CmsEventListener.EVENT_RESOURCES_AND_PROPERTIES_MODIFIED,I_CmsEventListener.EVENT_RESOURCE_MODIFIED,I_CmsEventListener.EVENT_RESOURCES_MODIFIED,I_CmsEventListener.EVENT_RESOURCE_DELETED,I_CmsEventListener.EVENT_PUBLISH_PROJECT,I_CmsEventListener.EVENT_CLEAR_CACHES,I_CmsEventListener.EVENT_CLEAR_ONLINE_CACHES,I_CmsEventListener.EVENT_CLEAR_OFFLINE_CACHES});
}
