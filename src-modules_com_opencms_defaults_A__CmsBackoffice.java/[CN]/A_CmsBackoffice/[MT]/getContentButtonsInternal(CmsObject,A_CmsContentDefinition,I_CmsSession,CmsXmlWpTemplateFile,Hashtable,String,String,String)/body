{
  Vector errorCodes=null;
  String errorCode=null;
  String errorField=null;
  String errorType=null;
  if (action != null) {
    if ((!action.equals("save")) && (!action.equals("saveexit")) && (!action.equals("exit"))) {
      try {
        cd.check(false);
        session.putValue("backofficepagetemplateselector",templateSelector);
      }
 catch (      CmsPlausibilizationException plex) {
        errorCodes=plex.getErrorCodes();
        for (int i=0; i < errorCodes.size(); i++) {
          errorCode=(String)errorCodes.elementAt(i);
          if (template.hasData(I_CmsConstants.C_ERRPREFIX + errorCode)) {
            error+=template.getProcessedDataValue(I_CmsConstants.C_ERRPREFIX + errorCode);
          }
 else {
            errorField=errorCode.substring(0,errorCode.indexOf(I_CmsConstants.C_ERRSPERATOR));
            if (template.hasData(I_CmsConstants.C_ERRPREFIX + errorField)) {
              error+=template.getProcessedDataValue(I_CmsConstants.C_ERRPREFIX + errorField);
            }
 else {
              errorType=errorCode.substring(errorCode.indexOf(I_CmsConstants.C_ERRSPERATOR) + 1,errorCode.length());
              if (template.hasData(I_CmsConstants.C_ERRPREFIX + errorType)) {
                error+=template.getProcessedDataValue(I_CmsConstants.C_ERRPREFIX + errorType);
              }
 else {
                error+="[" + errorCode + "]";
              }
            }
          }
        }
        if (template.hasData("errormsg")) {
          error=template.getProcessedDataValue("errormsg") + error;
        }
        template.setData("error",error);
        if (session.getValue("backofficepagetemplateselector") != null) {
          templateSelector=(String)session.getValue("backofficepagetemplateselector");
          parameters.put("backofficepage",templateSelector);
        }
 else {
          templateSelector=null;
        }
      }
    }
    if (((action.equals("save")) || (action.equals("saveexit"))) && (error.equals(""))) {
      try {
        cd.check(true);
        cd.write(cms);
        String previewButton=null;
        try {
          previewButton=getPreviewUrl(cms,null,null,null);
        }
 catch (        Exception e) {
        }
        if (!((previewButton == null) || (previewButton.equals("")))) {
          session.putValue("weShallDisplayThePreviewButton",previewButton + "?id=" + cd.getUniqueId(cms));
        }
      }
 catch (      CmsPlausibilizationException plex) {
        errorCodes=plex.getErrorCodes();
        for (int i=0; i < errorCodes.size(); i++) {
          errorCode=(String)errorCodes.elementAt(i);
          if (template.hasData(I_CmsConstants.C_ERRPREFIX + errorCode)) {
            error+=template.getProcessedDataValue(I_CmsConstants.C_ERRPREFIX + errorCode);
          }
 else {
            errorField=errorCode.substring(0,errorCode.indexOf(I_CmsConstants.C_ERRSPERATOR));
            if (template.hasData(I_CmsConstants.C_ERRPREFIX + errorField)) {
              error+=template.getProcessedDataValue(I_CmsConstants.C_ERRPREFIX + errorField);
            }
 else {
              errorType=errorCode.substring(errorCode.indexOf(I_CmsConstants.C_ERRSPERATOR) + 1,errorCode.length());
              if (template.hasData(I_CmsConstants.C_ERRPREFIX + errorType)) {
                error+=template.getProcessedDataValue(I_CmsConstants.C_ERRPREFIX + errorType);
              }
 else {
                error+="[" + errorCode + "]";
              }
            }
          }
        }
        if (template.hasData("errormsg")) {
          error=template.getProcessedDataValue("errormsg") + error;
        }
        template.setData("error",error);
      }
catch (      Exception ex) {
        session.removeValue(this.getContentDefinitionClass().getName());
        session.removeValue("backofficepageselectorvector");
        session.removeValue("backofficepagetemplateselector");
        session.removeValue("media");
        session.removeValue("selectedmediaCD");
        session.removeValue("media_position");
        session.removeValue("weShallDisplayThePreviewButton");
        if (OpenCms.getLog(this).isErrorEnabled()) {
          OpenCms.getLog(this).error("Error while saving data to Content Definition",ex);
        }
        throw new CmsLegacyException(ex.getMessage(),CmsLegacyException.C_UNKNOWN_EXCEPTION,ex);
      }
    }
    if (errorCodes == null) {
      if ((action.equals("exit")) || ((action.equals("saveexit")) && (error.equals("")))) {
        try {
          session.removeValue(this.getContentDefinitionClass().getName());
          session.removeValue("backofficepageselectorvector");
          session.removeValue("backofficepagetemplateselector");
          session.removeValue("media");
          session.removeValue("selectedmediaCD");
          session.removeValue("media_position");
          session.removeValue("weShallDisplayThePreviewButton");
          return "done";
        }
 catch (        Exception e) {
          if (OpenCms.getLog(this).isErrorEnabled()) {
            OpenCms.getLog(this).error("Error while doing redirect ",e);
          }
          throw new CmsException(e.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,e);
        }
      }
    }
  }
  return templateSelector;
}
