{
  if (cms == null) {
    return targetUri;
  }
  URI uri;
  String path;
  try {
    uri=new URI(targetUri);
    path=uri.getPath();
  }
 catch (  Exception e) {
    if (LOG.isWarnEnabled()) {
      LOG.warn(Messages.get().getBundle().key(Messages.LOG_MALFORMED_URI_1,targetUri),e);
    }
    return null;
  }
  if (uri.isOpaque()) {
    return null;
  }
  CmsVfsMemoryObjectCache cache=CmsVfsMemoryObjectCache.getVfsMemoryObjectCache();
  @SuppressWarnings("unchecked") List<String> excludes=(List<String>)cache.getCachedObject(cms,LINK_EXCLUDE_DEFINIFITON_FILE);
  if (excludes == null) {
    excludes=readLinkExcludes(cms);
    cache.putCachedObject(cms,LINK_EXCLUDE_DEFINIFITON_FILE,excludes);
  }
  for (int i=0; i < excludes.size(); i++) {
    if (path.startsWith(excludes.get(i))) {
      return null;
    }
  }
  return super.getRootPath(cms,targetUri,basePath);
}
