{
  initWidget(((UiBinder<Widget,CmsAliasView>)GWT.create(I_CmsAliasViewUiBinder.class)).createAndBindUi(this));
  Map<String,String> items=new LinkedHashMap<String,String>();
  items.put(CmsAliasMode.permanentRedirect.toString(),messagePermanentRedirect());
  items.put(CmsAliasMode.redirect.toString(),messageRedirect());
  items.put(CmsAliasMode.page.toString(),messagePage());
  m_newMode.setItems(items);
  Map<String,String> rewriteItems=new LinkedHashMap<String,String>();
  rewriteItems.put(CmsAliasMode.permanentRedirect.toString(),messagePermanentRedirect());
  rewriteItems.put(CmsAliasMode.redirect.toString(),messageRedirect());
  rewriteItems.put(CmsAliasMode.passthrough.toString(),CmsAliasMessages.messagePassthrough());
  m_newRewriteMode.setItems(rewriteItems);
  m_controller=controller;
  m_deleteButton.setEnabled(false);
  m_rewriteDeleteButton.setEnabled(false);
  m_table=new CmsAliasCellTable(controller);
  m_tableContainer.add(m_table);
  m_rewriteTable=new CmsRewriteAliasTable(controller);
  m_rewriteTableContainer.add(m_rewriteTable);
  setNewButtonStyle(m_newButton);
  setNewButtonStyle(m_newRewriteButton);
  m_table.addRowCountChangeHandler(new RowCountChangeEvent.Handler(){
    public void onRowCountChange(    RowCountChangeEvent event){
      String message=messageRowCount(event.getNewRowCount());
      m_countLabel.setText(message);
    }
  }
);
  setWidth("1150px");
}
