{
  initWidget(((UiBinder<Widget,CmsAliasView>)GWT.create(I_CmsAliasViewUiBinder.class)).createAndBindUi(this));
  Map<String,String> items=new LinkedHashMap<String,String>();
  items.put(CmsAliasMode.permanentRedirect.toString(),messagePermanentRedirect());
  items.put(CmsAliasMode.redirect.toString(),messageRedirect());
  items.put(CmsAliasMode.page.toString(),messagePage());
  m_newMode.setItems(items);
  m_controller=controller;
  m_saveButton.setText(messageButtonSave());
  m_saveButton.setUseMinWidth(true);
  m_cancelButton.setText(messageButtonCancel());
  m_cancelButton.setUseMinWidth(true);
  m_deleteButton.setText(messageButtonDelete());
  m_deleteButton.setEnabled(false);
  m_downloadButton.setText(messageButtonDownload());
  m_uploadButton.setText(messageButtonUpload());
  m_table=new CmsAliasCellTable(controller);
  m_tableContainer.add(m_table);
  m_newAliasLabel.setText(messageNewAliasLabel());
  m_newAliasTargetLabel.setText(messageNewAliasTargetLabel());
  m_newAliasActionLabel.setText(messageNewAliasActionLabel());
  m_tableFieldSet.setLegend(messageTableFieldsetLegend());
  m_newFieldSet.setLegend(messageNewFieldsetLegend());
  I_CmsImageStyle imagestyle=I_CmsImageBundle.INSTANCE.style();
  m_newButton.setImageClass(imagestyle.addIcon());
  m_newButton.setSize(Size.small);
  m_newButton.setButtonStyle(ButtonStyle.TRANSPARENT,null);
  m_newButton.getElement().getStyle().setMarginTop(1,Unit.PX);
  m_table.addRowCountChangeHandler(new RowCountChangeEvent.Handler(){
    public void onRowCountChange(    RowCountChangeEvent event){
      String message=messageRowCount(event.getNewRowCount());
      m_countLabel.setText(message);
    }
  }
);
  setWidth("1150px");
}
