{
  WaterFilter water=new WaterFilter();
  water.setAmplitude(m_settings.getFilterAmplitude());
  water.setAntialias(true);
  water.setPhase(0);
  water.setWavelength(m_settings.getFilterWaveLength());
  ImageDeformation backgroundDeformation=new ImageDeformationByFilters(new ImageFilter[]{});
  ImageDeformation textDeformation=new ImageDeformationByFilters(new ImageFilter[]{});
  ImageDeformation postDeformation=new ImageDeformationByFilters(new ImageFilter[]{water});
  WordGenerator randomWords=new RandomWordGenerator(m_settings.getCharacterPool());
  BaffleTextDecorator textDecorator=new BaffleTextDecorator(m_settings.getHolesPerGlyph(),m_settings.getFontColor());
  ColorGenerator colorGenerator=new SingleColorGenerator(m_settings.getFontColor());
  TextPaster paster=new DecoratedRandomTextPaster(new Integer(m_settings.getMinPhraseLength()),new Integer(m_settings.getMaxPhraseLength()),colorGenerator,new TextDecorator[]{textDecorator});
  BackgroundGenerator background;
  if (m_settings.isUseBackgroundImage()) {
    background=new FileReaderRandomBackgroundGenerator(new Integer(m_settings.getImageWidth()),new Integer(m_settings.getImageHeight()),OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebApplication("resources/captchabackgrounds/"));
  }
 else {
    background=new UniColorBackgroundGenerator(new Integer(m_settings.getImageWidth()),new Integer(m_settings.getImageHeight()),m_settings.getBackgroundColor());
  }
  FontGenerator font=new RandomFontGenerator(new Integer(m_settings.getMinFontSize()),new Integer(m_settings.getMaxFontSize()));
  WordToImage wordToImage=new DeformedComposedWordToImage(font,background,paster,backgroundDeformation,textDeformation,postDeformation);
  m_factory=new GimpyFactory(randomWords,wordToImage);
}
