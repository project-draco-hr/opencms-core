{
  String nameAttr=data.getAttribute("name");
  String workTag=null;
  if ((!data.getNodeName().toLowerCase().equals("data")) && nameAttr != null && (!"".equals(nameAttr))) {
    workTag=tag.substring(0,tag.lastIndexOf("."));
  }
 else {
    workTag=tag;
  }
  Element importedNode=(Element)m_parser.importNode(m_content,data);
  if (workTag.indexOf(".") == -1) {
    m_content.getDocumentElement().appendChild(importedNode);
    m_blocks.put(tag,importedNode);
  }
 else {
    boolean found=false;
    String match="." + workTag;
    int dotIndex=match.lastIndexOf(".");
    Vector newBlocks=new Vector();
    while ((!found) && (dotIndex > 1)) {
      match=match.substring(0,dotIndex);
      if (hasData(match.substring(1))) {
        found=true;
      }
 else {
        dotIndex=match.lastIndexOf(".");
        newBlocks.addElement(match.substring(dotIndex + 1));
      }
    }
    String datablockPrefix="";
    if (found) {
      datablockPrefix=match.substring(1) + ".";
    }
    int numNewBlocks=newBlocks.size();
    Element newElem=null;
    Element lastElem=null;
    for (int i=numNewBlocks - 1; i >= 0; i--) {
      newElem=m_content.createElement("DATA");
      newElem.setAttribute("name",(String)newBlocks.elementAt(i));
      m_blocks.put(datablockPrefix + (String)newBlocks.elementAt(i),newElem);
      if (lastElem != null) {
        lastElem.appendChild(newElem);
      }
 else {
        lastElem=newElem;
      }
    }
    if (lastElem != null) {
      lastElem.appendChild(importedNode);
    }
 else {
      lastElem=importedNode;
    }
    m_blocks.put(datablockPrefix + tag,importedNode);
    if (found) {
      Element parent=(Element)m_blocks.get(match.substring(1));
      parent.appendChild(lastElem);
    }
 else {
      m_content.getDocumentElement().appendChild(lastElem);
    }
  }
}
