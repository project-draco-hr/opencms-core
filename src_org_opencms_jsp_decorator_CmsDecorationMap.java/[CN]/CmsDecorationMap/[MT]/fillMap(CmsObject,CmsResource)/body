{
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_DECORATION_MAP_FILL_MAP_2,m_name,m_decoratorDefinition));
  }
  Map decMap=new HashMap();
  CmsFile file=CmsFile.upgrade(res,cms);
  String unparsedContent=new String(file.getContents());
  String delimiter="\r\n";
  if (unparsedContent.indexOf(delimiter) == -1) {
    if (unparsedContent.indexOf("\n") > -1) {
      delimiter="\n";
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_DECORATION_MAP_FILL_MAP_DELIMITER_2,res.getName(),CmsStringUtil.escapeJavaScript(delimiter)));
  }
  List entries=CmsStringUtil.splitAsList(unparsedContent,delimiter);
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_DECORATION_MAP_FILL_MAP_SPLIT_LIST_2,res.getName(),entries));
  }
  Iterator i=entries.iterator();
  while (i.hasNext()) {
    try {
      String entry=(String)i.next();
      if (CmsStringUtil.isNotEmpty(entry)) {
        int speratator=entry.indexOf(CSV_SEPERATOR);
        if (speratator > -1) {
          String key=entry.substring(0,speratator).trim();
          String value=entry.substring(speratator + 1).trim();
          if (CmsStringUtil.isNotEmpty(key) && CmsStringUtil.isNotEmpty(value)) {
            CmsDecorationObject decObj=new CmsDecorationObject(key,value,m_decoratorDefinition,m_locale);
            decMap.put(key,decObj);
            if (LOG.isDebugEnabled()) {
              LOG.debug(Messages.get().getBundle().key(Messages.LOG_DECORATION_MAP_ADD_DECORATION_OBJECT_2,decObj,key));
            }
          }
        }
      }
    }
 catch (    Exception e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.LOG_DECORATION_MAP_FILL_2,m_name,e));
      }
    }
  }
  return decMap;
}
