{
  List<CmsElementViewInfo> elementViews=m_controller.getData().getElementViews();
  if (elementViews.size() > 1) {
    CmsContextMenuEntry parentEntry=new CmsContextMenuEntry(this,null,new I_CmsContextMenuCommand(){
      public void execute(      CmsUUID innerStructureId,      I_CmsContextMenuHandler handler,      CmsContextMenuEntryBean bean){
      }
      public A_CmsContextMenuItem getItemWidget(      CmsUUID innerStructureId,      I_CmsContextMenuHandler handler,      CmsContextMenuEntryBean bean){
        return null;
      }
      public boolean hasItemWidget(){
        return false;
      }
    }
);
    CmsContextMenuEntryBean parentBean=new CmsContextMenuEntryBean();
    parentBean.setLabel(Messages.get().key(Messages.GUI_SELECT_ELEMENT_VIEW_0));
    parentBean.setActive(true);
    parentBean.setVisible(true);
    parentEntry.setBean(parentBean);
    List<I_CmsContextMenuEntry> viewEntries=new ArrayList<I_CmsContextMenuEntry>();
    for (    CmsElementViewInfo viewInfo : elementViews) {
      if (viewInfo.isRoot()) {
        viewEntries.add(createMenuEntryForElementView(viewInfo,m_controller.matchRootView(viewInfo.getElementViewId()),this));
      }
    }
    parentEntry.setSubMenu(viewEntries);
    return parentEntry;
  }
 else {
    return null;
  }
}
