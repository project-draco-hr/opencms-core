{
  value=convertChars(value);
  StringBuffer buf;
  if (!m_writeHtml) {
switch (format) {
case C_FORMAT_HEADLINE:
      buf=new StringBuffer();
    buf.append("aH('");
  buf.append(value);
buf.append("'); ");
m_content.add(buf);
break;
case C_FORMAT_WARNING:
buf=new StringBuffer();
buf.append("aW('");
buf.append(value);
buf.append("'); ");
m_content.add(buf);
break;
case C_FORMAT_NOTE:
buf=new StringBuffer();
buf.append("aN('");
buf.append(value);
buf.append("'); ");
m_content.add(buf);
break;
case C_FORMAT_OK:
buf=new StringBuffer();
buf.append("aO('");
buf.append(value);
buf.append("'); ");
m_content.add(buf);
break;
case C_FORMAT_DEFAULT:
default :
buf=new StringBuffer();
buf.append("a('");
buf.append(value);
buf.append("'); ");
m_content.add(buf);
}
if (value.trim().endsWith(getLineBreak())) {
buf.append("aB(); ");
}
}
 else {
switch (format) {
case C_FORMAT_HEADLINE:
buf=new StringBuffer();
buf.append("<span class='head'>");
buf.append(value);
buf.append("</span>");
m_content.add(buf);
break;
case C_FORMAT_WARNING:
buf=new StringBuffer();
buf.append("<span class='warn'>");
buf.append(value);
buf.append("</span>");
m_content.add(buf);
break;
case C_FORMAT_NOTE:
buf=new StringBuffer();
buf.append("<span class='note'>");
buf.append(value);
buf.append("</span>");
m_content.add(buf);
break;
case C_FORMAT_OK:
buf=new StringBuffer();
buf.append("<span class='ok'>");
buf.append(value);
buf.append("</span>");
m_content.add(buf);
break;
case C_FORMAT_DEFAULT:
default :
m_content.add(value);
}
}
}
