{
  StringBuffer result=new StringBuffer();
  Vector values=new Vector();
  Vector names=new Vector();
  Vector descriptions=new Vector();
  Integer returnObject=null;
  String radioName=n.getAttribute(C_RADIO_NAME);
  String radioMethod=n.getAttribute(C_RADIO_METHOD);
  String radioOrder=n.getAttribute(C_RADIO_ORDER);
  if (radioOrder == null || ((!"row".equals(radioOrder)) && (!"col".equals(radioOrder)))) {
    radioOrder="col";
  }
  Method groupsMethod=null;
  int selectedOption=0;
  try {
    groupsMethod=callingObject.getClass().getMethod(radioMethod,new Class[]{CmsObject.class,CmsXmlLanguageFile.class,Vector.class,Vector.class,Vector.class,Hashtable.class});
    returnObject=(Integer)groupsMethod.invoke(callingObject,new Object[]{cms,lang,names,values,descriptions,parameters});
  }
 catch (  NoSuchMethodException exc) {
    throwException("Could not find radio button method " + radioMethod + " in calling class "+ callingObject.getClass().getName()+ " for generating select box content.",CmsLegacyException.C_NOT_FOUND);
  }
catch (  InvocationTargetException targetEx) {
    Throwable e=targetEx.getTargetException();
    if (!(e instanceof CmsException)) {
      throwException("Radio button method " + radioMethod + " in calling class "+ callingObject.getClass().getName()+ " throwed an exception. "+ e,CmsException.C_UNKNOWN_EXCEPTION);
    }
 else {
      throw (CmsException)e;
    }
  }
catch (  Exception exc2) {
    throwException("Radio button method " + radioMethod + " in calling class "+ callingObject.getClass().getName()+ " was found but could not be invoked. "+ exc2,CmsLegacyException.C_XML_NO_USER_METHOD);
  }
  if (returnObject != null) {
    selectedOption=returnObject.intValue();
  }
  int numValues=values.size();
  CmsXmlWpTemplateFile radiodef=getRadioDefinitions(cms);
  for (int i=0; i < numValues; i++) {
    radiodef.setData(C_RADIO_RADIONAME,radioName);
    radiodef.setData(C_RADIO_NAME,(String)descriptions.elementAt(i));
    radiodef.setData(C_RADIO_LINK,(String)values.elementAt(i));
    if ((String)names.elementAt(i) == null || "".equals(names.elementAt(i))) {
      radiodef.setData(C_RADIO_IMAGEENTRY,"");
    }
 else {
      radiodef.setData(C_RADIO_IMAGENAME,"ic_" + (String)names.elementAt(i) + ".gif");
      radiodef.setData(C_RADIO_IMAGEENTRY,radiodef.getProcessedDataValue("radiobuttons." + C_RADIO_IMAGEOPTION,callingObject));
    }
    if (i == selectedOption) {
      radiodef.setData(C_RADIO_SELECTEDENTRY,radiodef.getDataValue("radiobuttons." + C_RADIO_SELECTEDOPTION));
    }
 else {
      radiodef.setData(C_RADIO_SELECTEDENTRY,"");
    }
    if (radioOrder.equals("col")) {
      result.append(radiodef.getProcessedDataValue("radiobuttons.colentry",callingObject));
    }
 else {
      result.append(radiodef.getProcessedDataValue("radiobuttons.rowentry",callingObject));
    }
  }
  return result.toString();
}
