{
  m_report.println(m_report.key("report.mergepages.scanfolder") + " " + sourceMergeFolder,I_CmsReport.C_FORMAT_HEADLINE);
  CmsResourceFilter filter=CmsResourceFilter.IGNORE_EXPIRATION.addRequireType(CmsResourceTypeXmlPage.C_RESOURCE_TYPE_ID);
  List folderResources=m_cms.readResources(sourceMergeFolder,filter,true);
  Iterator i=folderResources.iterator();
  int size=folderResources.size();
  m_report.print(size + " " + m_report.key("report.mergepages.pages"),I_CmsReport.C_FORMAT_HEADLINE);
  m_report.println(m_report.key("report.dots"),I_CmsReport.C_FORMAT_HEADLINE);
  int count=1;
  while (i.hasNext()) {
    CmsResource res=(CmsResource)i.next();
    String resName=m_cms.getSitePath(res);
    m_report.print("( " + count++ + " / "+ size+ " ) "+ m_report.key("report.mergepages.scanning")+ " "+ resName,I_CmsReport.C_FORMAT_NOTE);
    m_report.print(m_report.key("report.dots"));
    int action=analyse(res,sourceMergeFolder,targetMergefolder,currentFolder);
switch (action) {
case C_FOLDER1_EXCLUSIVE:
      m_folder1Exclusive.add(resName);
    break;
case C_FOLDER2_EXCLUSIVE:
  m_folder2Exclusive.add(resName);
break;
case C_FOLDERS_SIBLING:
if (!m_foldersSibling.contains(getResourceNameInOtherFolder(resName,sourceMergeFolder,targetMergefolder))) {
m_foldersSibling.add(resName);
}
break;
case C_FOLDERS_EQUALNAMES:
if (!m_foldersEqualnames.contains(getResourceNameInOtherFolder(resName,sourceMergeFolder,targetMergefolder))) {
m_foldersEqualnames.add(resName);
}
break;
case C_FOLDERS_DIFFERENTTYPES:
if (!m_foldersDifferenttypes.contains(getResourceNameInOtherFolder(resName,sourceMergeFolder,targetMergefolder))) {
m_foldersDifferenttypes.add(resName);
}
break;
default :
break;
}
res=null;
m_report.println(m_report.key("report.mergepages.action" + action),I_CmsReport.C_FORMAT_OK);
}
folderResources=null;
m_report.print(m_report.key("report.dots"),I_CmsReport.C_FORMAT_HEADLINE);
m_report.println(m_report.key("report.mergepages.done"),I_CmsReport.C_FORMAT_HEADLINE);
}
