{
  CmsFile file=cms.readFile(resource);
  if (file.getLength() <= 0) {
    throw new CmsIndexNoContentException(Messages.get().container(Messages.ERR_NO_CONTENT_1,resource.getRootPath()));
  }
  A_CmsXmlDocument xmlContent=CmsXmlContentFactory.unmarshal(cms,file);
  Map<String,String> items=new HashMap<String,String>();
  StringBuffer locales=new StringBuffer();
  Locale resourceLocale=index.getLocaleForResource(cms,resource,xmlContent.getLocales());
  String defaultContent=null;
  for (  Locale locale : xmlContent.getLocales()) {
    StringBuffer textContent=new StringBuffer();
    locales.append(locale.toString());
    locales.append(' ');
    boolean hasTitleMapping=false;
    String galleryNameTemplate=null;
    List<String> paths=xmlContent.getNames(locale);
    for (    String xpath : paths) {
      String extracted=null;
      I_CmsXmlContentValue value=xmlContent.getValue(xpath,locale);
      try {
        extracted=value.getPlainText(cms);
        if (CmsStringUtil.isEmptyOrWhitespaceOnly(extracted) && value.isSimpleType()) {
          extracted=value.getStringValue(cms);
        }
      }
 catch (      Exception e) {
        LOG.warn(Messages.get().container(Messages.LOG_EXTRACT_VALUE_2,xpath,resource),e);
      }
      if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
        items.put(CmsXmlUtils.concatXpath(locale.toString(),xpath),extracted);
      }
      if (value.getContentDefinition().getContentHandler().isSearchable(value) && CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
        textContent.append(extracted);
        textContent.append('\n');
      }
      List<String> mappings=xmlContent.getHandler().getMappings(value.getPath());
      if (mappings.size() > 0) {
        for (        String mapping : mappings) {
          if (mapping.startsWith(I_CmsXmlContentHandler.MAPTO_PROPERTY)) {
            String propertyName=mapping.substring(mapping.lastIndexOf(':') + 1);
            if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propertyName) || CmsPropertyDefinition.PROPERTY_DESCRIPTION.equals(propertyName)) {
              if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
                String fieldName=null;
                if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propertyName)) {
                  hasTitleMapping=true;
                  fieldName=CmsSearchField.FIELD_TITLE_UNSTORED;
                }
 else {
                  fieldName=CmsSearchField.FIELD_DESCRIPTION;
                }
                items.put(CmsSearchFieldConfiguration.getLocaleExtendedName(fieldName,locale) + "_s",extracted);
              }
            }
 else             if (mapping.equals(MAPPING_GALLERY_NAME)) {
              galleryNameTemplate=value.getPlainText(cms);
              LOG.info("Found gallery name template for " + resource.getRootPath() + ":"+ galleryNameTemplate);
            }
          }
        }
      }
    }
    if (galleryNameTemplate == null) {
      Set<String> xpaths=Sets.newHashSet();
      collectSchemaXpathsForSimpleValues(cms,xmlContent.getContentDefinition(),"",xpaths);
      for (      String xpath : xpaths) {
        List<String> mappings=xmlContent.getHandler().getMappings(CmsXmlUtils.createXpath(xpath,1));
        for (        String mapping : mappings) {
          if (mapping.equals(MAPPING_GALLERY_NAME)) {
            galleryNameTemplate=xmlContent.getHandler().getDefault(cms,xmlContent.getFile(),null,xpath,locale);
            LOG.info("Using default value for gallery name template in " + resource.getRootPath() + ": "+ galleryNameTemplate);
            break;
          }
        }
      }
    }
    if (!hasTitleMapping) {
      String title=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue();
      items.put(CmsSearchFieldConfiguration.getLocaleExtendedName(CmsSearchField.FIELD_TITLE_UNSTORED,locale) + "_s",title);
    }
    if (galleryNameTemplate != null) {
      CmsGalleryNameMacroResolver macroResolver=new CmsGalleryNameMacroResolver(cms,xmlContent,locale);
      String galleryName=macroResolver.resolveMacros(galleryNameTemplate);
      LOG.info("Using gallery name mapping '" + galleryNameTemplate + "' for '"+ resource.getRootPath()+ "' in locale "+ locale+ ", resulting in gallery name '"+ galleryName+ "'");
      items.put(CmsSearchFieldConfiguration.getLocaleExtendedName(CmsSearchField.FIELD_TITLE_UNSTORED,locale) + "_s",galleryName);
    }
    if (textContent.length() > 0) {
      String key=CmsSearchFieldConfiguration.getLocaleExtendedName(CmsSearchField.FIELD_CONTENT,locale);
      items.put(key,textContent.toString());
      if (resourceLocale.equals(locale)) {
        defaultContent=textContent.toString();
      }
    }
  }
  items.put(CmsSearchField.FIELD_RESOURCE_LOCALES,locales.toString().trim());
  return new CmsExtractionResult(defaultContent,items);
}
