{
  CmsFile file=cms.readFile(resource);
  if (file.getLength() <= 0) {
    throw new CmsIndexNoContentException(Messages.get().container(Messages.ERR_NO_CONTENT_1,resource.getRootPath()));
  }
  A_CmsXmlDocument xmlContent=CmsXmlContentFactory.unmarshal(cms,file);
  Map<Locale,Map<String,String>> items=new HashMap<Locale,Map<String,String>>();
  Map<String,String> fieldMappings=new HashMap<String,String>();
  StringBuffer locales=new StringBuffer();
  Locale resourceLocale=index.getLocaleForResource(cms,resource,xmlContent.getLocales());
  for (  Locale locale : xmlContent.getLocales()) {
    GalleryNameChooser galleryNameChooser=new GalleryNameChooser(cms,xmlContent,locale);
    Map<String,String> localeItems=new HashMap<String,String>();
    StringBuffer textContent=new StringBuffer();
    locales.append(locale.toString());
    locales.append(' ');
    List<String> paths=xmlContent.getNames(locale);
    for (    String xpath : paths) {
      String extracted=null;
      I_CmsXmlContentValue value=xmlContent.getValue(xpath,locale);
      try {
        extracted=value.getPlainText(cms);
        if (CmsStringUtil.isEmptyOrWhitespaceOnly(extracted) && value.isSimpleType()) {
          extracted=value.getStringValue(cms);
        }
      }
 catch (      Exception e) {
        LOG.warn(Messages.get().container(Messages.LOG_EXTRACT_VALUE_2,xpath,resource),e);
      }
      if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
        localeItems.put(xpath,extracted);
      }
      if (value.getContentDefinition().getContentHandler().isSearchable(value) && CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
        textContent.append(extracted);
        textContent.append('\n');
      }
      List<String> mappings=xmlContent.getHandler().getMappings(value.getPath());
      if (mappings.size() > 0) {
        for (        String mapping : mappings) {
          if (mapping.startsWith(I_CmsXmlContentHandler.MAPTO_PROPERTY)) {
            String propertyName=mapping.substring(mapping.lastIndexOf(':') + 1);
            if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propertyName) || CmsPropertyDefinition.PROPERTY_DESCRIPTION.equals(propertyName)) {
              if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(extracted)) {
                String fieldName=null;
                if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propertyName)) {
                  galleryNameChooser.setMappedTitleValue(extracted);
                }
 else {
                  fieldName=CmsSearchField.FIELD_DESCRIPTION;
                  fieldMappings.put(CmsSearchFieldConfiguration.getLocaleExtendedName(fieldName,locale) + "_s",extracted);
                }
              }
            }
          }
 else           if (mapping.equals(MAPPING_GALLERY_NAME)) {
            galleryNameChooser.setMappedGalleryNameValue(value.getPlainText(cms));
          }
        }
      }
    }
    Set<String> xpaths=Sets.newHashSet();
    collectSchemaXpathsForSimpleValues(cms,xmlContent.getContentDefinition(),"",xpaths);
    for (    String xpath : xpaths) {
      List<String> mappings=xmlContent.getHandler().getMappings(CmsXmlUtils.createXpath(xpath,1));
      for (      String mapping : mappings) {
        if (mapping.equals(MAPPING_GALLERY_NAME) || mapping.equals(I_CmsXmlContentHandler.MAPTO_PROPERTY + CmsPropertyDefinition.PROPERTY_TITLE)) {
          String defaultValue=xmlContent.getHandler().getDefault(cms,xmlContent.getFile(),null,xpath,locale);
          if (mapping.equals(MAPPING_GALLERY_NAME)) {
            galleryNameChooser.setDefaultGalleryNameValue(defaultValue);
          }
 else {
            galleryNameChooser.setDefaultTitleValue(defaultValue);
          }
        }
      }
    }
    final String galleryTitleFieldKey=CmsSearchFieldConfiguration.getLocaleExtendedName(CmsSearchField.FIELD_TITLE_UNSTORED,locale) + "_s";
    final String galleryNameValue=galleryNameChooser.getGalleryName();
    fieldMappings.put(galleryTitleFieldKey,galleryNameValue);
    if (textContent.length() > 0) {
      localeItems.put(I_CmsExtractionResult.ITEM_CONTENT,textContent.toString());
    }
    items.put(locale,localeItems);
  }
  return new CmsExtractionResult(resourceLocale,items,fieldMappings);
}
