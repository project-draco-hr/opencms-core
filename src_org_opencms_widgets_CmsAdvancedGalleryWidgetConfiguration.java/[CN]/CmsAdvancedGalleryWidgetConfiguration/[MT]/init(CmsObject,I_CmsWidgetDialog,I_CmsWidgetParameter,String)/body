{
  JSONObject configJsonObj=new JSONObject();
  if (configuration != null) {
    configuration=CmsMacroResolver.resolveMacros(configuration,cms,widgetDialog.getMessages());
    try {
      configJsonObj=new JSONObject(configuration);
    }
 catch (    JSONException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
  }
  JSONObject gConfigJsonObj=new JSONObject();
  JSONArray resTypes, tabs;
switch (getGalleryType(configJsonObj)) {
case imagegallery:
    try {
      resTypes=new JSONArray(CmsGalleryConfigValues.RESOURCETYPE_IMAGEGALLERY.getName());
      tabs=new JSONArray(CmsGalleryConfigValues.TABS_IMAGEGALLERY.getName());
    }
 catch (    JSONException e) {
      resTypes=new JSONArray();
      tabs=new JSONArray();
    }
  setResourceTypes(resTypes);
setTabs(tabs);
setImagegallery(true);
setButtonPrefix(CmsGalleryConfigValues.IMAGE.getName());
gConfigJsonObj=configJsonObj.optJSONObject(CmsGalleryConfigKeys.imagegallery.toString());
setImageGalleryConfigParams(cms,widgetDialog,param,gConfigJsonObj);
break;
case sitemap:
try {
resTypes=new JSONArray(CmsGalleryConfigValues.RESOURCETYPE_CONTAINERPAGEGALLERY.getName());
tabs=new JSONArray(CmsGalleryConfigValues.TABS_CONTAINERPAGEGALLERY.getName());
}
 catch (JSONException e) {
resTypes=new JSONArray();
tabs=new JSONArray();
}
setResourceTypes(resTypes);
setTabs(tabs);
setImagegallery(false);
setButtonPrefix(CmsGalleryConfigValues.CONTAINER.getName());
gConfigJsonObj=configJsonObj.optJSONObject(CmsGalleryConfigKeys.sitemap.toString());
setDefaultgalleryConfigPart(cms,widgetDialog,param,gConfigJsonObj);
break;
case container:
try {
resTypes=new JSONArray(CmsGalleryConfigValues.RESOURCETYPE_SITEMAPGALLERY.getName());
tabs=new JSONArray(CmsGalleryConfigValues.TABS_SITEMAPGALLERY.getName());
}
 catch (JSONException e) {
resTypes=new JSONArray();
tabs=new JSONArray();
}
setResourceTypes(resTypes);
setTabs(tabs);
setImagegallery(false);
setButtonPrefix(CmsGalleryConfigValues.SITEMAP.getName());
gConfigJsonObj=configJsonObj.optJSONObject(CmsGalleryConfigKeys.container.toString());
setDefaultgalleryConfigPart(cms,widgetDialog,param,gConfigJsonObj);
break;
case downloadgallery:
try {
resTypes=new JSONArray(CmsGalleryConfigValues.RESOURCETYPE_DOWNLOADGALLERY.getName());
tabs=new JSONArray(CmsGalleryConfigValues.TABS_DOWNLOADGALLERY.getName());
}
 catch (JSONException e) {
resTypes=new JSONArray();
tabs=new JSONArray();
}
setResourceTypes(resTypes);
setTabs(tabs);
setImagegallery(false);
setButtonPrefix(CmsGalleryConfigValues.DOWNLOAD.getName());
gConfigJsonObj=configJsonObj.optJSONObject(CmsGalleryConfigKeys.downloadgallery.toString());
setDefaultgalleryConfigPart(cms,widgetDialog,param,gConfigJsonObj);
break;
case defaultgallery:
try {
resTypes=new JSONArray(CmsGalleryConfigValues.RESOURCETYPE_DEFAULTGALLERY.getName());
tabs=new JSONArray(CmsGalleryConfigValues.TABS_DEFAULTGALLERY.getName());
}
 catch (JSONException e) {
resTypes=new JSONArray();
tabs=new JSONArray();
}
setResourceTypes(resTypes);
setTabs(tabs);
setImagegallery(false);
setButtonPrefix(CmsGalleryConfigValues.DEFAULT.getName());
}
}
