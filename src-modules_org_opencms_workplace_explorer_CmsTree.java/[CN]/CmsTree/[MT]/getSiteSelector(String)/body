{
  List<String> options=new ArrayList<String>();
  List<String> values=new ArrayList<String>();
  int selectedIndex=0;
  String preSelection=getSettings().getTreeSite(getTreeType());
  if (preSelection == null) {
    if ("".equals(getCms().getRequestContext().getSiteRoot())) {
      preSelection="";
    }
 else {
      preSelection=OpenCms.getSiteManager().getCurrentSite(getCms()).getSiteRoot();
    }
    getSettings().setTreeSite(getTreeType(),preSelection);
  }
  boolean includeRootSite=true;
  boolean showSiteUrls=false;
  if (TYPE_PAGELINK.equals(getTreeType())) {
    includeRootSite=false;
    showSiteUrls=true;
  }
  List<CmsSite> sites=OpenCms.getSiteManager().getAvailableSites(getCms(),includeRootSite,true,getCms().getRequestContext().getOuFqn());
  Iterator<CmsSite> i=sites.iterator();
  int pos=0;
  while (i.hasNext()) {
    CmsSite site=i.next();
    values.add(site.getSiteRoot());
    String curOption=substituteSiteTitle(site.getTitle());
    if (showSiteUrls && (site.getSiteMatcher() != null)) {
      curOption=site.getUrl() + " (" + curOption+ ")";
      if (getCms().getRequestContext().getSiteRoot().equals(site.getSiteRoot())) {
        curOption="*" + curOption;
      }
    }
    if (site.getSiteRoot().equals(preSelection)) {
      selectedIndex=pos;
    }
    options.add(curOption);
    pos++;
  }
  return buildSelect(htmlAttributes,options,values,selectedIndex);
}
