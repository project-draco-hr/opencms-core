{
  m_croppingDialog=croppingDialog;
  m_croppingDialog.addValueChangeHandler(new ValueChangeHandler<CmsCroppingParamBean>(){
    /** 
 * Executed on value change. Sets the returned cropping parameters.<p>
 * @param event the value change event
 */
    public void onValueChange(    ValueChangeEvent<CmsCroppingParamBean> event){
      setCropping(event.getValue());
    }
  }
);
  m_formatForm=formatForm;
  if (m_useFormats) {
    for (    Entry<String,I_CmsFormatRestriction> entry : m_formats.entrySet()) {
      m_formatForm.addFormatSelectOption(entry.getKey(),entry.getValue().getLabel());
    }
    Entry<String,I_CmsFormatRestriction> match=getMatchingFormat(m_croppingParam);
    if (match != null) {
      m_currentFormat=match.getValue();
      m_formatForm.setFormatSelectValue(match.getKey());
      m_formatForm.setHeightInput(m_croppingParam.getTargetHeight() != -1 ? m_croppingParam.getTargetHeight() : m_originalHeight);
      m_formatForm.setWidthInput(m_croppingParam.getTargetWidth() != -1 ? m_croppingParam.getTargetWidth() : m_originalWidth);
    }
 else {
      onResetSize();
    }
  }
 else {
    m_formatForm.addFormatSelectOption("--","--");
    m_formatForm.setFormEnabled(m_useFormats);
  }
  if (m_croppingParam.isCropped()) {
    setCropping(m_croppingParam);
  }
}
