{
  List<C> result=new ArrayList<C>();
  Map<String,C> map=new LinkedHashMap<String,C>();
  if (parentConfigs != null) {
    for (    C parent : Lists.reverse(parentConfigs)) {
      map.put(parent.getKey(),parent);
    }
  }
  if (childConfigs == null) {
    childConfigs=Collections.emptyList();
  }
  for (  C child : Lists.reverse(childConfigs)) {
    String childKey=child.getKey();
    if (child.isDisabled()) {
      map.remove(childKey);
    }
 else {
      C parent=map.get(childKey);
      map.remove(childKey);
      C newValue;
      if (parent != null) {
        newValue=parent.merge(child);
      }
 else {
        newValue=child;
      }
      map.put(childKey,newValue);
    }
  }
  result=new ArrayList<C>(map.values());
  Collections.reverse(result);
  return result;
}
