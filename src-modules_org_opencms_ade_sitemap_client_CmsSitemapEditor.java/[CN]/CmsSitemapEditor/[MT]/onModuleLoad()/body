{
  super.onModuleLoad();
  I_CmsLayoutBundle.INSTANCE.rootCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.pageCss().ensureInjected();
  I_CmsToolbarButtonLayoutBundle.INSTANCE.toolbarButtonCss().ensureInjected();
  RootPanel.getBodyElement().addClassName(I_CmsLayoutBundle.INSTANCE.rootCss().root());
  CmsToolbar toolBar=new CmsToolbar();
  toolBar.addLeft(new CmsToolbarButton(CmsToolbarButton.ButtonData.SAVE));
  toolBar.addLeft(new CmsToolbarButton(I_CmsToolbarButtonLayoutBundle.INSTANCE.toolbarButtonCss().toolbarSubsitemap(),Messages.get().key(Messages.GUI_TOOLBAR_SUBSITEMAP_0)));
  toolBar.addLeft(new CmsToolbarButton(CmsToolbarButton.ButtonData.ADD));
  toolBar.addLeft(new CmsToolbarButton(CmsToolbarButton.ButtonData.NEW));
  toolBar.addLeft(new CmsToolbarButton(CmsToolbarButton.ButtonData.CLIPBOARD));
  final CmsToolbarButton publishButton=new CmsToolbarButton(CmsToolbarButton.ButtonData.PUBLISH);
  publishButton.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent event){
      CmsDomUtil.ensureMouseOut(publishButton.getElement());
      CmsPublishDialog.showPublishDialog(new CloseHandler<PopupPanel>(){
        /** 
 * @see com.google.gwt.event.logical.shared.CloseHandler#onClose(com.google.gwt.event.logical.shared.CloseEvent)
 */
        public void onClose(        CloseEvent<PopupPanel> event2){
          publishButton.setDown(false);
        }
      }
);
    }
  }
);
  toolBar.addRight(publishButton);
  toolBar.addRight(new CmsToolbarButton(CmsToolbarButton.ButtonData.RESET));
  RootPanel.get().add(toolBar);
  RootPanel.get().add(new CmsToolbarPlaceHolder());
  CmsHeader title=new CmsHeader(Messages.get().key(Messages.GUI_EDITOR_TITLE_1,""),CmsSitemapProvider.get().getUri());
  title.addStyleName(I_CmsLayoutBundle.INSTANCE.rootCss().pageCenter());
  RootPanel.get().add(title);
  final CmsPage page=new CmsPage();
  RootPanel.get().add(page);
  final Label loadingLabel=new Label(Messages.get().key(Messages.GUI_LOADING_0));
  page.add(loadingLabel);
  CmsRpcAction<CmsClientSitemapEntry> getRootAction=new CmsRpcAction<CmsClientSitemapEntry>(){
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
    @Override public void execute(){
      start(500);
      CmsSitemapProvider.getService().getRoot(CmsSitemapProvider.get().getUri(),this);
    }
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
    @Override public void onResponse(    CmsClientSitemapEntry root){
      page.remove(loadingLabel);
      CmsLazyTree<CmsSitemapTreeItem> tree=new CmsLazyTree<CmsSitemapTreeItem>(new A_CmsLazyOpenHandler<CmsSitemapTreeItem>(){
        /** 
 * @see org.opencms.gwt.client.ui.tree.I_CmsLazyOpenHandler#load(org.opencms.gwt.client.ui.tree.CmsLazyTreeItem)
 */
        public void load(        final CmsSitemapTreeItem target){
          CmsRpcAction<CmsClientSitemapEntry[]> getChildrenAction=new CmsRpcAction<CmsClientSitemapEntry[]>(){
            /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
            @Override public void execute(){
              start(1000);
              CmsSitemapProvider.getService().getChildren(target.getEntry().getSitePath(),this);
            }
            /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
            @Override public void onResponse(            CmsClientSitemapEntry[] result){
              target.clearChildren();
              for (              CmsClientSitemapEntry entry : result) {
                target.addChild(entry);
              }
              target.onFinishLoading();
              stop();
            }
          }
;
          getChildrenAction.execute();
        }
      }
);
      tree.addItem(new CmsSitemapTreeItem(root));
      page.add(tree);
      stop();
    }
  }
;
  getRootAction.execute();
}
