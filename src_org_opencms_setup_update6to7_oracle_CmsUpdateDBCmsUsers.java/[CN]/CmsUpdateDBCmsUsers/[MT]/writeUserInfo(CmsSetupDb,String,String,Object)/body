{
  String query=readQuery(QUERY_INSERT_CMS_USERDATA);
  try {
    List params=new ArrayList();
    params.add(id);
    params.add(key);
    params.add(value.getClass().getName());
    dbCon.updateSqlStatement(query,null,params);
  }
 catch (  SQLException e) {
    e.printStackTrace();
  }
  ResultSet res=null;
  boolean wasInTransaction=false;
  try {
    wasInTransaction=!dbCon.getConnection().getAutoCommit();
    if (!wasInTransaction) {
      dbCon.getConnection().setAutoCommit(false);
    }
    String stmt=readQuery(QUERY_ORACLE_USERDATA_UPDATE);
    List params=new ArrayList();
    params.add(id);
    params.add(key);
    res=dbCon.executeSqlStatement(stmt,null,params);
    if (res.next()) {
      OutputStream output=CmsUserDriver.getOutputStreamFromBlob(res,"DATA_VALUE");
      output.write(CmsDataTypeUtil.dataSerialize(value));
      output.close();
    }
 else {
      System.out.println("Could not insert blob");
    }
    if (!wasInTransaction) {
      String commit=readQuery("Q_COMMIT");
      dbCon.executeSqlStatement(commit,null);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    try {
      if (res != null) {
        res.close();
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    try {
      if (!wasInTransaction) {
        String rollback=readQuery("Q_ROLLBACK");
        dbCon.executeSqlStatement(rollback,null);
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    try {
      if (!wasInTransaction) {
        dbCon.getConnection().setAutoCommit(true);
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
}
