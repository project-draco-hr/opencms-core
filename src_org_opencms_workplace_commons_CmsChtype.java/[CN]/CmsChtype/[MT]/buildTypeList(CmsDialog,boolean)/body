{
  StringBuffer result=new StringBuffer(512);
  try {
    CmsObject cms=dialog.getCms();
    CmsResource res=cms.readResource(dialog.getParamResource(),CmsResourceFilter.ALL);
    int currentResTypeId=res.getTypeId();
    List resTypes=OpenCms.getWorkplaceManager().getExplorerTypeSettings();
    boolean isFolder=res.isFolder();
    for (int i=0; i < resTypes.size(); i++) {
      boolean changeable=false;
      CmsExplorerTypeSettings settings=(CmsExplorerTypeSettings)resTypes.get(i);
      boolean isResourceType;
      try {
        OpenCms.getResourceManager().getResourceType(settings.getName());
        isResourceType=true;
      }
 catch (      CmsLoaderException e) {
        isResourceType=false;
      }
      if (isResourceType) {
        int resTypeId=OpenCms.getResourceManager().getResourceType(settings.getName()).getTypeId();
        if (isFolder && OpenCms.getResourceManager().getResourceType(resTypeId).isFolder()) {
          changeable=true;
        }
 else         if (!isFolder && !OpenCms.getResourceManager().getResourceType(resTypeId).isFolder()) {
          changeable=true;
        }
        if (changeable) {
          CmsPermissionSet permissions;
          try {
            permissions=settings.getAccess().getAccessControlList().getPermissions(cms.getRequestContext().currentUser(),cms.getGroupsOfUser(cms.getRequestContext().currentUser().getName()));
          }
 catch (          CmsException e) {
            permissions=settings.getAccess().getAccessControlList().getPermissions(cms.getRequestContext().currentUser());
            if (LOG.isErrorEnabled()) {
              LOG.error(org.opencms.workplace.explorer.Messages.get().key(org.opencms.workplace.explorer.Messages.LOG_READ_GROUPS_OF_USER_FAILED_1,cms.getRequestContext().currentUser().getName()));
            }
          }
          String permString=permissions.getPermissionString();
          if (permString.indexOf("+w") == -1 || permString.indexOf("+c") == -1) {
            continue;
          }
          result.append("<tr><td>");
          result.append("<input type=\"radio\" name=\"");
          result.append(PARAM_NEWRESOURCETYPE);
          result.append("\" value=\"");
          if (useTypeId) {
            result.append(resTypeId);
          }
 else {
            result.append(settings.getName());
          }
          result.append("\"");
          if (resTypeId == currentResTypeId) {
            result.append(" checked=\"checked\"");
          }
          result.append("></td>");
          result.append("\t<td><img src=\"");
          result.append(getSkinUri());
          result.append("filetypes/");
          result.append(settings.getIcon());
          result.append("\" border=\"0\" title=\"");
          result.append(dialog.key(settings.getKey()));
          result.append("\"></td>\n");
          result.append("<td>");
          result.append(dialog.key(settings.getKey()));
          result.append("</td></tr>\n");
        }
      }
    }
  }
 catch (  CmsException e) {
    LOG.error(Messages.get().key(Messages.ERR_BUILDING_RESTYPE_LIST_1,dialog.getParamResource()));
  }
  return result.toString();
}
