{
  if (isOnlineProject(cms)) {
    throw new CmsSecurityException("Can't write to the online project",CmsSecurityException.C_SECURITY_NO_MODIFY_IN_ONLINE_PROJECT);
  }
  if (dataset.m_versionId != I_CmsConstants.C_UNKNOWN_ID) {
    throw new CmsSecurityException("Can't update a cd with a backup cd",CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  readLockstate(dataset,content.getSubId());
  if (!dataset.m_lockedBy.equals(cms.getRequestContext().currentUser().getId())) {
    throw new CmsSecurityException("Not locked by this user",CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  if (dataset.m_lockedInProject != dataset.m_projectId) {
    throw new CmsSecurityException("Not locked in this project",CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  if (!content.isWriteable()) {
    throw new CmsSecurityException("Not writeable",CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  long currentTime=new java.util.Date().getTime();
  CmsUUID currentUserId=cms.getRequestContext().currentUser().getId();
  if (dataset.m_state != I_CmsConstants.C_STATE_NEW) {
    dataset.m_state=I_CmsConstants.C_STATE_CHANGED;
  }
  dataset.m_lastModifiedBy=currentUserId;
  dataset.m_dateLastModified=currentTime;
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection();
    stmt=m_sqlManager.getPreparedStatement(conn,"update_offline");
    int rowcounter=sqlFillValues(stmt,content.getSubId(),dataset);
    stmt.setString(rowcounter++,dataset.m_masterId.toString());
    stmt.setInt(rowcounter++,content.getSubId());
    stmt.executeUpdate();
    updateMedia(dataset.m_masterId,dataset.m_mediaToAdd,dataset.m_mediaToUpdate,dataset.m_mediaToDelete);
    updateChannels(cms,dataset.m_masterId,dataset.m_channelToAdd,dataset.m_channelToDelete);
  }
 catch (  SQLException exc) {
    throw new CmsException(CmsException.C_SQL_ERROR,exc);
  }
 finally {
    m_sqlManager.closeAll(null,conn,stmt,null);
  }
}
