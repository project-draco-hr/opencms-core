{
  if (isOnlineProject(cms)) {
    throw new CmsException("Can't change permissions in online project",CmsException.C_NO_ACCESS);
  }
  if (dataset.m_versionId != I_CmsConstants.C_UNKNOWN_ID) {
    throw new CmsException("Can't change permissions of a backup cd ",CmsException.C_NO_ACCESS);
  }
  readLockstate(dataset,content.getSubId());
  if (!dataset.m_lockedBy.equals(cms.getRequestContext().currentUser().getId())) {
    throw new CmsException("Not locked by this user",CmsException.C_NO_ACCESS);
  }
  if (dataset.m_lockedInProject != dataset.m_projectId) {
    throw new CmsException("Not locked in this project",CmsException.C_NO_ACCESS);
  }
  if (!content.isWriteable()) {
    throw new CmsException("Not writeable",CmsException.C_NO_ACCESS);
  }
  if (dataset.m_state != I_CmsConstants.C_STATE_NEW) {
    dataset.m_state=I_CmsConstants.C_STATE_CHANGED;
  }
  dataset.m_dateLastModified=System.currentTimeMillis();
  dataset.m_lastModifiedBy=cms.getRequestContext().currentUser().getId();
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=DriverManager.getConnection(m_poolName);
    stmt=sqlPrepare(conn,"update_permissions_offline");
    stmt.setString(1,dataset.m_userId.toString());
    stmt.setString(2,dataset.m_groupId.toString());
    stmt.setInt(3,dataset.m_accessFlags);
    stmt.setInt(4,dataset.m_state);
    stmt.setString(5,dataset.m_lastModifiedBy.toString());
    stmt.setTimestamp(6,new Timestamp(dataset.m_dateLastModified));
    stmt.setString(7,dataset.m_masterId.toString());
    stmt.setInt(8,content.getSubId());
    stmt.executeUpdate();
  }
 catch (  SQLException exc) {
    throw new CmsException(CmsException.C_SQL_ERROR,exc);
  }
 finally {
    sqlClose(conn,stmt,null);
  }
}
