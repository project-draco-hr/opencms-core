{
  if (isOnlineProject(cms)) {
    throw new CmsSecurityException("Can't write in online project",CmsSecurityException.C_SECURITY_NO_MODIFY_IN_ONLINE_PROJECT);
  }
  if (dataset.m_versionId != I_CmsConstants.C_UNKNOWN_ID) {
    throw new CmsSecurityException("Can't update a cd with a backup cd ",CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  if (!content.isWriteable()) {
    throw new CmsSecurityException("Not writeable",CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  CmsUUID newMasterId=new CmsUUID();
  int projectId=cms.getRequestContext().currentProject().getId();
  CmsUUID currentUserId=cms.getRequestContext().currentUser().getId();
  long currentTime=new java.util.Date().getTime();
  dataset.m_masterId=newMasterId;
  dataset.m_projectId=projectId;
  dataset.m_lockedInProject=projectId;
  dataset.m_state=I_CmsConstants.C_STATE_NEW;
  dataset.m_lockedBy=currentUserId;
  dataset.m_lastModifiedBy=currentUserId;
  dataset.m_dateCreated=currentTime;
  dataset.m_dateLastModified=currentTime;
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection();
    stmt=m_sqlManager.getPreparedStatement(conn,"insert_offline");
    sqlFillValues(stmt,content.getSubId(),dataset);
    stmt.executeUpdate();
    updateMedia(dataset.m_masterId,mediaToAdd,new Vector(),new Vector());
    updateChannels(cms,dataset.m_masterId,channelToAdd,new Vector());
  }
 catch (  SQLException exc) {
    throw new CmsException(CmsException.C_SQL_ERROR,exc);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return newMasterId;
}
