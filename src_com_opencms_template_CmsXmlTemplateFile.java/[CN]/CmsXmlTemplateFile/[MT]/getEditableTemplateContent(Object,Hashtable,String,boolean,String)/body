{
  Vector cdatas=new Vector();
  String editDatablockName=this.getEditTemplateDatablockName(templateSelector);
  String datablockName=null;
  String testValue=getDataValue(editDatablockName);
  if (testValue == null || "".equals(testValue)) {
    datablockName=this.getTemplateDatablockName(templateSelector);
  }
 else {
    datablockName=editDatablockName;
  }
  Element data=getData(datablockName);
  StringBuffer result=new StringBuffer();
  if (style == null) {
    style="";
  }
  Document tempDoc=(Document)getXmlDocument().cloneNode(true);
  Element rootElem=tempDoc.getDocumentElement();
  while (rootElem.hasChildNodes()) {
    rootElem.removeChild(rootElem.getFirstChild());
  }
  data=(Element)getXmlParser().importNode(tempDoc,data);
  rootElem.appendChild(data);
  if (html) {
    Node n=data;
    while (n != null) {
      if (n.getNodeType() == Node.CDATA_SECTION_NODE) {
        cdatas.addElement(n.getNodeValue());
        n.setNodeValue("");
      }
      n=treeWalker(rootElem,n);
    }
  }
  StringWriter out=new StringWriter();
  getXmlParser().getXmlText(tempDoc,out);
  String xmlString=out.toString();
  int endOpeningXmlTag=xmlString.indexOf(">");
  int endOpeningDocTag=xmlString.indexOf(">",endOpeningXmlTag + 1);
  int endOpeningBodyTag=xmlString.indexOf(">",endOpeningDocTag + 1) + 1;
  int startClosingDocTag=xmlString.lastIndexOf("<");
  int startClosingBodyTag=xmlString.lastIndexOf("<",startClosingDocTag - 1);
  if (startClosingBodyTag <= endOpeningBodyTag) {
    xmlString="";
  }
 else {
    xmlString=xmlString.substring(endOpeningBodyTag,startClosingBodyTag);
    xmlString=xmlString.trim();
  }
  if (html) {
    int cdataStart=xmlString.indexOf("<![CDATA[");
    int currentPos=0;
    int loop=0;
    result.append("<HTML>\n<HEAD>\n");
    result.append("<link rel=stylesheet type=\"text/css\" href=\"" + style + "\">\n");
    result.append("</HEAD>\n");
    result.append("<BASE href=\"");
    I_CmsRequest req=m_cms.getRequestContext().getRequest();
    result.append(req.getScheme() + "://" + req.getServerName()+ ":"+ req.getServerPort()+ req.getServletUrl()+ (String)parameters.get("file"));
    result.append("\"></BASE>");
    result.append("<BODY " + getProcessedDataValue("bodytag",callingObject,parameters) + ">\n");
    while (cdataStart != -1) {
      String tempString=xmlString.substring(currentPos,cdataStart);
      tempString=replaceBack(tempString);
      result.append(tempString);
      result.append((String)cdatas.elementAt(loop++));
      cdataStart=xmlString.indexOf("<![CDATA[",cdataStart + 1);
      currentPos=xmlString.indexOf("]]>",currentPos + 1) + 3;
    }
    String tempString=xmlString.substring(currentPos);
    tempString=replaceBack(tempString);
    result.append(tempString);
    result.append("\n</BODY>\n</HTML>");
    xmlString=result.toString();
  }
 else {
    if (xmlString.trim().equals("")) {
      xmlString="<![CDATA[\n]]>";
    }
  }
  return xmlString;
}
