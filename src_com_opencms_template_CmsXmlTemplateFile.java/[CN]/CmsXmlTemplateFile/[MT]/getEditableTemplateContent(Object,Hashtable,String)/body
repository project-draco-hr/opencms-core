{
  System.err.println("### And still the content is:");
  System.err.println(getXmlText());
  String datablockName=this.getTemplateDatablockName(templateSelector);
  Element data=getData(datablockName);
  System.err.println("+++++++++ " + getDataValue(datablockName));
  StringBuffer result=new StringBuffer();
  Document tempDoc=(Document)getXmlDocument().cloneNode(true);
  Element rootElem=tempDoc.getDocumentElement();
  while (rootElem.hasChildNodes()) {
    rootElem.removeChild(rootElem.getFirstChild());
  }
  data=(Element)getXmlParser().importNode(tempDoc,data);
  rootElem.appendChild(data);
  Node n=data;
  Vector cdatas=new Vector();
  while (n != null) {
    if (n.getNodeType() == n.CDATA_SECTION_NODE) {
      cdatas.addElement(n.getNodeValue());
      n.setNodeValue("");
    }
    n=treeWalker(n);
  }
  StringWriter out=new StringWriter();
  getXmlParser().getXmlText(tempDoc,out);
  String xmlString=out.toString();
  int endOpeningXmlTag=xmlString.indexOf(">");
  int endOpeningDocTag=xmlString.indexOf(">",endOpeningXmlTag + 1);
  int endOpeningBodyTag=xmlString.indexOf(">",endOpeningDocTag + 1) + 1;
  int startClosingDocTag=xmlString.lastIndexOf("<");
  int startClosingBodyTag=xmlString.lastIndexOf("<",startClosingDocTag - 1);
  if (startClosingBodyTag <= endOpeningBodyTag) {
    xmlString="";
  }
 else {
    xmlString=xmlString.substring(endOpeningBodyTag,startClosingBodyTag);
    xmlString=xmlString.trim();
  }
  int cdataStart=xmlString.indexOf("<![CDATA[");
  int currentPos=0;
  int loop=0;
  result.append("<HTML>\n<HEAD></HEAD>\n");
  result.append("<BODY " + getProcessedDataValue("bodytag",callingObject,parameters) + ">\n");
  while (cdataStart != -1) {
    result.append(xmlString.substring(currentPos,cdataStart).replace('<','[').replace('>',']'));
    result.append((String)cdatas.elementAt(loop++));
    cdataStart=xmlString.indexOf("<![CDATA[",cdataStart + 1);
    currentPos=xmlString.indexOf("]]>",currentPos + 1) + 3;
  }
  result.append(xmlString.substring(currentPos).replace('<','[').replace('>',']'));
  result.append("\n</BODY>\n</HTML>");
  return result.toString();
}
