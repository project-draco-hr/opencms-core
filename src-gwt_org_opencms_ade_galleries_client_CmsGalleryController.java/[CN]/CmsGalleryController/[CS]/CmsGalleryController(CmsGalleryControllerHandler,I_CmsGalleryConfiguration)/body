{
  m_configuration=conf;
  m_handler=handler;
  m_handler.m_galleryDialog.setUseFormats(m_configuration.isUseFormats());
  m_handler.m_galleryDialog.setImageFormats(m_configuration.getImageFormats());
  m_handler.m_galleryDialog.setImageFormatNames(m_configuration.getImageFormatNames());
  m_eventBus=new SimpleEventBus();
  addValueChangeHandler(m_handler);
  CmsRpcAction<CmsGalleryDataBean> initAction=new CmsRpcAction<CmsGalleryDataBean>(){
    @Override public void execute(){
      getGalleryService().getInitialSettings(new CmsGalleryConfiguration(conf),this);
    }
    @Override protected void onResponse(    CmsGalleryDataBean result){
      m_dialogBean=result;
      m_dialogMode=m_dialogBean.getMode();
      if ((m_dialogBean.getTypes().size() == 1) && (m_dialogMode != GalleryMode.ade)) {
        removeTypesTab();
      }
      if (m_dialogBean.getStartTab() == GalleryTabId.cms_tab_results) {
        initialSearch();
      }
 else {
        m_searchObject=new CmsGallerySearchBean();
        m_searchObject.setIgnoreSearchExclude(m_dialogMode != GalleryMode.ade);
        m_searchObject.setLocale(m_dialogBean.getLocale());
        m_searchObject.setScope(m_dialogBean.getScope());
        List<GalleryTabId> tabs=Arrays.asList(getTabIds());
        if (!tabs.contains(m_dialogBean.getStartTab())) {
          if ((m_dialogMode == GalleryMode.widget) && tabs.contains(GalleryTabId.cms_tab_vfstree)) {
            m_dialogBean.setStartTab(GalleryTabId.cms_tab_vfstree);
          }
 else {
            m_dialogBean.setStartTab(tabs.get(0));
          }
        }
        m_handler.onInitialSearch(m_searchObject,m_dialogBean,CmsGalleryController.this);
      }
    }
  }
;
  initAction.execute();
  if (m_configuration.getTabIds() != null) {
    m_tabIds=m_configuration.getTabIds();
  }
  setShowSiteSelector(m_configuration.isShowSiteSelector());
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_configuration.getStartSite())) {
    setStartSite(m_configuration.getStartSite());
  }
}
