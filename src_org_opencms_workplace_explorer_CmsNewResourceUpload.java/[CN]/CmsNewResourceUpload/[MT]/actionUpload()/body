{
  boolean unzipFile=Boolean.valueOf(getParamUnzipFile()).booleanValue();
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getParamClientFolder())) {
    CmsUserSettings userSettings=new CmsUserSettings(getCms());
    userSettings.setUploadAppletClientFolder(getParamClientFolder());
    try {
      userSettings.save(getCms());
    }
 catch (    CmsException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle(getLocale()).key(Messages.ERR_UPLOAD_STORE_CLIENT_FOLDER_1,new Object[]{getCms().getRequestContext().getCurrentUser().getName()}),e);
      }
    }
  }
  try {
    Iterator i=getMultiPartFileItems().iterator();
    FileItem fi=null;
    while (i.hasNext()) {
      fi=(FileItem)i.next();
      if (fi.getName() != null) {
        break;
      }
 else {
        continue;
      }
    }
    if (fi != null) {
      String fileName=fi.getName();
      long size=fi.getSize();
      long maxFileSizeBytes=OpenCms.getWorkplaceManager().getFileBytesMaxUploadSize(getCms());
      if ((maxFileSizeBytes > 0) && (size > maxFileSizeBytes)) {
        throw new CmsWorkplaceException(Messages.get().container(Messages.ERR_UPLOAD_FILE_SIZE_TOO_HIGH_1,new Long(maxFileSizeBytes / 1024)));
      }
      byte[] content=fi.get();
      fi.delete();
      if (unzipFile) {
        String currentFolder=getParamUploadFolder();
        if (CmsStringUtil.isEmpty(currentFolder)) {
          currentFolder=getParamCurrentFolder();
        }
        if (CmsStringUtil.isEmpty(currentFolder) || !currentFolder.startsWith("/")) {
          currentFolder=computeCurrentFolder();
        }
        new CmsImportFolder(content,currentFolder,getCms(),false);
      }
 else {
        String newResname=CmsResource.getName(fileName.replace('\\','/'));
        String title=newResname;
        if (title.lastIndexOf('.') != -1) {
          title=title.substring(0,title.lastIndexOf('.'));
        }
        List properties=new ArrayList(1);
        CmsProperty titleProp=new CmsProperty();
        titleProp.setName(CmsPropertyDefinition.PROPERTY_TITLE);
        if (OpenCms.getWorkplaceManager().isDefaultPropertiesOnStructure()) {
          titleProp.setStructureValue(title);
        }
 else {
          titleProp.setResourceValue(title);
        }
        properties.add(titleProp);
        newResname=getCms().getRequestContext().getFileTranslator().translateResource(newResname);
        setParamNewResourceName(newResname);
        setParamResource(newResname);
        setParamResource(computeFullResourceName());
        int resTypeId=OpenCms.getResourceManager().getDefaultTypeForName(newResname).getTypeId();
        int plainId=OpenCms.getResourceManager().getResourceType(CmsResourceTypePlain.getStaticTypeName()).getTypeId();
        if (!getCms().existsResource(getParamResource(),CmsResourceFilter.IGNORE_EXPIRATION)) {
          try {
            getCms().createResource(getParamResource(),resTypeId,content,properties);
          }
 catch (          CmsSecurityException e) {
            getCms().createResource(getParamResource(),plainId,content,properties);
          }
catch (          CmsDbSqlException sqlExc) {
            getCms().lockResource(getParamResource());
            getCms().deleteResource(getParamResource(),CmsResource.DELETE_PRESERVE_SIBLINGS);
            throw sqlExc;
          }
        }
 else {
          checkLock(getParamResource());
          CmsFile file=getCms().readFile(getParamResource(),CmsResourceFilter.IGNORE_EXPIRATION);
          byte[] contents=file.getContents();
          try {
            getCms().replaceResource(getParamResource(),resTypeId,content,null);
          }
 catch (          CmsSecurityException e) {
            getCms().replaceResource(getParamResource(),plainId,content,null);
          }
catch (          CmsDbSqlException sqlExc) {
            file.setContents(contents);
            getCms().writeFile(file);
            throw sqlExc;
          }
        }
      }
    }
 else {
      throw new CmsWorkplaceException(Messages.get().container(Messages.ERR_UPLOAD_FILE_NOT_FOUND_0));
    }
  }
 catch (  Throwable e) {
    setParamMessage(Messages.get().getBundle(getLocale()).key(Messages.ERR_UPLOAD_FILE_0));
    setAction(ACTION_SHOWERROR);
    includeErrorpage(this,e);
  }
}
