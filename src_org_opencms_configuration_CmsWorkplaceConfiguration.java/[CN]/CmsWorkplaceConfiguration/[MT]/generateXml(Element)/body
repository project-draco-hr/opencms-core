{
  Element workplaceElement=parent.addElement(N_WORKPLACE);
  Iterator i;
  workplaceElement.addElement(N_DEFAULTLOCALE).setText(m_workplaceManager.getDefaultLocale().toString());
  Element dialogElement=workplaceElement.addElement(N_DIALOGHANDLERS);
  Map dialogs=m_workplaceManager.getDialogHandler();
  i=dialogs.keySet().iterator();
  while (i.hasNext()) {
    String name=(String)i.next();
    dialogElement.addElement(N_DIALOGHANDLER).addAttribute(A_CLASS,dialogs.get(name).getClass().getName());
  }
  workplaceElement.addElement(N_EDITORHANDLER).addAttribute(A_CLASS,m_workplaceManager.getEditorHandler().getClass().getName());
  workplaceElement.addElement(N_EDITORACTION).addAttribute(A_CLASS,m_workplaceManager.getEditorActionHandler().getClass().getName());
  Element viewsElement=workplaceElement.addElement(N_VIEWS);
  i=m_workplaceManager.getViews().iterator();
  while (i.hasNext()) {
    CmsWorkplaceView view=(CmsWorkplaceView)i.next();
    viewsElement.addElement(N_VIEW).addAttribute(A_KEY,view.getKey()).addAttribute(A_URI,view.getUri()).addAttribute(A_ORDER,view.getOrder().toString());
  }
  Element resourceloadersElement=workplaceElement.addElement(N_EXPORTPOINTS);
  Set points=m_workplaceManager.getExportPoints();
  i=points.iterator();
  while (i.hasNext()) {
    CmsExportPoint point=(CmsExportPoint)i.next();
    resourceloadersElement.addElement(N_EXPORTPOINT).addAttribute(A_URI,point.getUri()).addAttribute(A_DESTINATION,point.getDestination());
  }
  workplaceElement.addElement(N_AUTOLOCK).setText(new Boolean(m_workplaceManager.autoLockResources()).toString());
  workplaceElement.addElement(N_ENABLEUSERMGMT).setText(new Boolean(m_workplaceManager.showUserGroupIcon()).toString());
  workplaceElement.addElement(N_MAXUPLOADSIZE).setText(new Integer(m_workplaceManager.getFileMaxUploadSize()).toString());
  Element labeledElement=workplaceElement.addElement(N_LABELEDFOLDERS);
  i=m_workplaceManager.getLabelSiteFolders().iterator();
  while (i.hasNext()) {
    labeledElement.addElement(N_RESOURCE).addAttribute(A_URI,(String)i.next());
  }
  Element explorerTypesElement=workplaceElement.addElement(N_EXPLORERTYPES);
  i=m_workplaceManager.getExplorerTypeSettings().iterator();
  while (i.hasNext()) {
    CmsExplorerTypeSettings settings=(CmsExplorerTypeSettings)i.next();
    Element explorerTypeElement=explorerTypesElement.addElement(N_EXPLORERTYPE);
    explorerTypeElement.addAttribute(A_NAME,settings.getName());
    explorerTypeElement.addAttribute(A_KEY,settings.getKey());
    explorerTypeElement.addAttribute(A_ICON,settings.getIcon());
    Element newResElement=explorerTypeElement.addElement(N_NEWRESOURCE);
    newResElement.addAttribute(A_URI,settings.getNewResourceUri());
    newResElement.addAttribute(A_ORDER,settings.getNewResourceOrder());
    Element accessControlElement=explorerTypeElement.addElement(N_ACCESSCONTROL);
    Iterator k=settings.getAccessEntries().keySet().iterator();
    while (k.hasNext()) {
      String key=(String)k.next();
      String value=(String)settings.getAccessEntries().get(key);
      Element accessEntryElement=accessControlElement.addElement(N_ACCESSENTRY);
      accessEntryElement.addAttribute(A_PRINCIPAL,key);
      accessEntryElement.addAttribute(A_PERMISSIONS,value);
    }
    if (settings.isResourceType()) {
      Element editOptionsElement=explorerTypeElement.addElement(N_EDITOPTIONS);
      Element defaultPropertiesElement=editOptionsElement.addElement(N_DEFAULTPROPERTIES);
      defaultPropertiesElement.addAttribute(A_ENABLED,"" + settings.isPropertiesEnabled());
      defaultPropertiesElement.addAttribute(A_SHOWNAVIGATION,"" + settings.isShowNavigation());
      Iterator m=settings.getProperties().iterator();
      while (m.hasNext()) {
        defaultPropertiesElement.addElement(N_PROPERTY).addAttribute(A_NAME,(String)m.next());
      }
      Element contextMenuElement=editOptionsElement.addElement(N_CONTEXTMENU);
      m=settings.getContextMenuEntries().iterator();
      while (m.hasNext()) {
        CmsExplorerContextMenuItem item=(CmsExplorerContextMenuItem)m.next();
        Element itemElement;
        if (CmsExplorerContextMenuItem.C_TYPE_ENTRY.equals(item.getType())) {
          itemElement=contextMenuElement.addElement(N_ENTRY);
          itemElement.addAttribute(A_KEY,item.getKey());
          itemElement.addAttribute(A_URI,item.getUri());
          if (item.isXml()) {
            itemElement.addAttribute(A_ISXML,"" + item.isXml());
          }
          if (item.getTarget() != null) {
            itemElement.addAttribute(A_TARGET,item.getTarget());
          }
          itemElement.addAttribute(A_RULES,item.getRules());
        }
 else {
          itemElement=contextMenuElement.addElement(N_SEPARATOR);
        }
        itemElement.addAttribute(A_ORDER,"" + item.getOrder());
      }
    }
  }
  return workplaceElement;
}
