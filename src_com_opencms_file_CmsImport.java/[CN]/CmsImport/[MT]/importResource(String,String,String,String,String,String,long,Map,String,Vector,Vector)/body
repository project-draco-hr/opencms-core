{
  boolean success=true;
  byte[] content=null;
  String fullname=null;
  CmsResource res=null;
  try {
    if (m_importingChannelData) {
      String channelId=null;
      try {
        if ((type.equalsIgnoreCase(C_TYPE_FOLDER_NAME)) && (!destination.endsWith(C_FOLDER_SEPARATOR))) {
          destination+=C_FOLDER_SEPARATOR;
        }
        CmsResource channel=m_cms.readFileHeader(C_ROOT + destination);
        channelId=m_cms.readProperty(m_cms.readAbsolutePath(channel),I_CmsConstants.C_PROPERTY_CHANNELID);
      }
 catch (      Exception e) {
      }
      if (channelId == null) {
        int newChannelId=org.opencms.db.CmsIdGenerator.nextId(C_TABLE_CHANNELID);
        channelId="" + newChannelId;
      }
      properties.put(I_CmsConstants.C_PROPERTY_CHANNELID,channelId);
    }
    if (source != null) {
      content=getFileBytes(source);
    }
    if (m_importVersion < 2) {
      if ("page".equals(type) || ("plain".equals(type)) || ("XMLTemplate".equals(type))) {
        if (DEBUG > 0) {
          System.err.println("#########################");
          System.err.println("[" + this.getClass().getName() + ".importResource()]: starting conversion of \""+ type+ "\" resource "+ source+ ".");
        }
        content=convertFile(source,content);
      }
      if (m_importVersion == 0) {
        if (!(new CmsCompatibleCheck()).isTemplateCompatible(m_importPath + destination,content,type)) {
          type=C_TYPE_COMPATIBLEPLAIN_NAME;
          m_report.print(m_report.key("report.must_set_to") + C_TYPE_COMPATIBLEPLAIN_NAME + " ",I_CmsReport.C_FORMAT_WARNING);
        }
      }
    }
    res=m_cms.importResource(source,destination,type,user,group,access,lastmodified,properties,launcherStartClass,content,m_importPath);
    if (res != null) {
      if (C_TYPE_PAGE_NAME.equals(type)) {
        m_importedPages.add(I_CmsConstants.C_FOLDER_SEPARATOR + destination);
      }
    }
    m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
  }
 catch (  Exception exc) {
    success=false;
    m_report.println(exc);
    try {
      Thread.sleep(1000);
    }
 catch (    Exception e) {
    }
  }
  byte[] digestContent={0};
  if (content != null) {
    digestContent=m_digest.digest(content);
  }
  if (success && (fullname != null)) {
    if (writtenFilenames != null) {
      writtenFilenames.addElement(fullname);
    }
    if (fileCodes != null) {
      fileCodes.addElement(new String(digestContent));
    }
  }
  return res;
}
