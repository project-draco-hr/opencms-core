{
  NodeList userNodes;
  NodeList groupNodes;
  NodeList infoNodes;
  Element currentElement, currentGroup, currentInfo;
  Vector userGroups;
  Hashtable userInfo;
  sun.misc.BASE64Decoder dec;
  String name, description, flags, password, recoveryPassword, firstname, lastname, email, address, section, defaultGroup, type, pwd;
  try {
    userNodes=m_docXml.getElementsByTagName(C_EXPORT_TAG_USERDATA);
    for (int i=0; i < userNodes.getLength(); i++) {
      currentElement=(Element)userNodes.item(i);
      name=getTextNodeValue(currentElement,C_EXPORT_TAG_NAME);
      dec=new sun.misc.BASE64Decoder();
      pwd=getTextNodeValue(currentElement,C_EXPORT_TAG_PASSWORD);
      password=new String(dec.decodeBuffer(pwd.trim()));
      dec=new sun.misc.BASE64Decoder();
      pwd=getTextNodeValue(currentElement,C_EXPORT_TAG_RECOVERYPASSWORD);
      recoveryPassword=new String(dec.decodeBuffer(pwd.trim()));
      description=getTextNodeValue(currentElement,C_EXPORT_TAG_DESCRIPTION);
      flags=getTextNodeValue(currentElement,C_EXPORT_TAG_FLAGS);
      firstname=getTextNodeValue(currentElement,C_EXPORT_TAG_FIRSTNAME);
      lastname=getTextNodeValue(currentElement,C_EXPORT_TAG_LASTNAME);
      email=getTextNodeValue(currentElement,C_EXPORT_TAG_EMAIL);
      address=getTextNodeValue(currentElement,C_EXPORT_TAG_ADDRESS);
      section=getTextNodeValue(currentElement,C_EXPORT_TAG_SECTION);
      defaultGroup=getTextNodeValue(currentElement,C_EXPORT_TAG_DEFAULTGROUP);
      type=getTextNodeValue(currentElement,C_EXPORT_TAG_TYPE);
      infoNodes=currentElement.getElementsByTagName(C_EXPORT_TAG_INFO);
      userInfo=new Hashtable();
      for (int j=0; j < infoNodes.getLength(); j++) {
        currentInfo=(Element)infoNodes.item(j);
        String infoName=getTextNodeValue(currentInfo,C_EXPORT_TAG_NAME);
        String value=getTextNodeValue(currentInfo,C_EXPORT_TAG_VALUE);
        dec=new sun.misc.BASE64Decoder();
        String decstr=new String(dec.decodeBuffer(value.trim()));
        if (infoName != null) {
          userInfo.put(infoName,decstr);
        }
      }
      groupNodes=currentElement.getElementsByTagName(C_EXPORT_TAG_GROUP);
      userGroups=new Vector();
      for (int j=0; j < groupNodes.getLength(); j++) {
        currentGroup=(Element)groupNodes.item(j);
        userGroups.addElement(getTextNodeValue(currentGroup,C_EXPORT_TAG_NAME));
      }
      importUser(name,description,flags,password,recoveryPassword,firstname,lastname,email,address,section,defaultGroup,type,userInfo,userGroups);
    }
  }
 catch (  Exception exc) {
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
}
