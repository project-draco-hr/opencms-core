{
  CmsObject cms=getCmsObject();
  echo("Testing searching with multiple search roots");
  CmsSearch searchBean=new CmsSearch();
  List searchResult;
  String query="OpenCms";
  searchBean.init(cms);
  searchBean.setIndex(INDEX_OFFLINE);
  searchBean.setMatchesPerPage(1000);
  searchBean.setQuery(query);
  String[][] roots=new String[][]{new String[]{"/folder1/"},new String[]{"/folder2/"},new String[]{"/types/"},new String[]{"/folder2/","/types/"},new String[]{"/folder1/","/types/"},new String[]{"/folder1/","/folder2/"},new String[]{"/folder1/","/folder2/","/types/"}};
  int[] expected=new int[]{7,4,1,5,8,11,12};
  for (int i=0; i < expected.length; i++) {
    int expect=expected[i];
    String[] rootList=roots[i];
    searchBean.setSearchRoots(rootList);
    searchResult=searchBean.getSearchResult();
    Iterator j=searchResult.iterator();
    System.out.println("Result for search " + i + " (found "+ searchResult.size()+ ", expected "+ expect+ ")");
    while (j.hasNext()) {
      CmsSearchResult res=(CmsSearchResult)j.next();
      System.out.print(CmsStringUtil.padRight(cms.getRequestContext().removeSiteRoot(res.getPath()),50));
      System.out.print(CmsStringUtil.padRight(res.getTitle(),40));
      System.out.println("  score: " + res.getScore());
    }
    assertEquals(expect,searchResult.size());
  }
}
