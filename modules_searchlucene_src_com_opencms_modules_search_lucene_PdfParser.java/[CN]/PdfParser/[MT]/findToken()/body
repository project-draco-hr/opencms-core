{
  boolean[] match=new boolean[tokens.length];
  for (int i=0; i < match.length; i++) {
    match[i]=true;
  }
  int matchCount=tokens.length;
  int charPosition=0;
  while (true) {
    int b=read();
    if (b == -1) {
      break;
    }
    char ch=(char)b;
    for (int i=0; i < tokens.length; i++) {
      if (match[i] == true) {
        char[] token=tokens[i];
        if (charPosition >= token.length) {
          if (matchCount >= 2) {
            match[i]=false;
            matchCount--;
          }
 else {
            return token;
          }
        }
 else {
          if (token[charPosition] != ch) {
            match[i]=false;
            matchCount--;
          }
        }
      }
    }
    if (matchCount <= 0) {
      break;
    }
    charPosition++;
  }
  return null;
}
