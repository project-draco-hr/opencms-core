{
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    if (filter.isSource()) {
      List params=new ArrayList(7);
      StringBuffer queryBuf=new StringBuffer(256);
      queryBuf.append(m_sqlManager.readQuery(projectId,"C_DELETE_RELATIONS"));
      queryBuf.append(prepareRelationConditions(projectId,filter,resource,params,true));
      stmt=m_sqlManager.getPreparedStatementForSql(conn,queryBuf.toString());
      for (int i=0; i < params.size(); i++) {
        if (params.get(i) instanceof Integer) {
          stmt.setInt(i + 1,((Integer)params.get(i)).intValue());
        }
 else {
          stmt.setString(i + 1,(String)params.get(i));
        }
      }
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
    if (filter.isTarget()) {
      List params=new ArrayList(7);
      StringBuffer queryBuf=new StringBuffer(256);
      queryBuf.append(m_sqlManager.readQuery(projectId,"C_DELETE_RELATIONS"));
      queryBuf.append(prepareRelationConditions(projectId,filter,resource,params,false));
      stmt=m_sqlManager.getPreparedStatementForSql(conn,queryBuf.toString());
      for (int i=0; i < params.size(); i++) {
        if (params.get(i) instanceof Integer) {
          stmt.setInt(i + 1,((Integer)params.get(i)).intValue());
        }
 else {
          stmt.setString(i + 1,(String)params.get(i));
        }
      }
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
  updateBrokenRelations(dbc,projectId,resource.getRootPath());
}
