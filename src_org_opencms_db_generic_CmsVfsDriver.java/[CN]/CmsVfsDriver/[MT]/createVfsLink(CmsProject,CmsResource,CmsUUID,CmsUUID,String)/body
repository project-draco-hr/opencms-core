{
  Connection conn=null;
  PreparedStatement stmt=null;
  int newState=0;
  if (filename.length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("The resource name '" + filename + "' is too long! (max. allowed length must be <= "+ I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME+ " chars.!)",CmsException.C_BAD_NAME);
  }
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    newState=I_CmsConstants.C_STATE_UNCHANGED;
  }
 else {
    newState=I_CmsConstants.C_STATE_NEW;
  }
  try {
    readFileHeader(project.getId(),parentId,filename,false);
    throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_RESOURCE_DELETED) {
      removeFile(project,parentId,filename);
      newState=I_CmsConstants.C_STATE_CHANGED;
    }
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  if (!existsResourceId(project.getId(),resource.getResourceId()))   throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_NOT_FOUND);
  try {
    conn=m_sqlManager.getConnection(project);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,resource.getId().toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,resource.getResourceId().toString());
    stmt.setString(4,filename);
    stmt.setInt(5,newState);
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_LINK_COUNT");
    stmt.setInt(1,this.countVfsLinks(project.getId(),resource.getResourceId()));
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return this.readFileHeader(project.getId(),resource.getId(),false);
}
