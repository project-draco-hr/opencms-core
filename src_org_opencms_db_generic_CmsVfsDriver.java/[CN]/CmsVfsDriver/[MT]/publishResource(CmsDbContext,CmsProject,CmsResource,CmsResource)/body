{
  Connection conn=null;
  PreparedStatement stmt=null;
  internalValidateResourceLength(offlineResource);
  int resourceSize=offlineResource.getLength();
  String resourcePath=CmsFileUtil.removeTrailingSeparator(offlineResource.getRootPath());
  try {
    conn=m_sqlManager.getConnection(dbc);
    boolean resourceExists=validateResourceIdExists(dbc,onlineProject.getUuid(),offlineResource.getResourceId());
    if (resourceExists) {
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_RESOURCES_UPDATE_RESOURCES");
      stmt.setInt(1,offlineResource.getTypeId());
      stmt.setInt(2,offlineResource.getFlags());
      stmt.setLong(3,offlineResource.getDateLastModified());
      stmt.setString(4,offlineResource.getUserLastModified().toString());
      stmt.setInt(5,CmsResource.STATE_UNCHANGED.getState());
      stmt.setInt(6,resourceSize);
      stmt.setLong(7,offlineResource.getDateContent());
      stmt.setString(8,offlineResource.getProjectLastModified().toString());
      stmt.setInt(9,countSiblings(dbc,onlineProject.getUuid(),onlineResource.getResourceId()));
      stmt.setString(10,offlineResource.getResourceId().toString());
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_RESOURCES_WRITE");
      stmt.setString(1,offlineResource.getResourceId().toString());
      stmt.setInt(2,offlineResource.getTypeId());
      stmt.setInt(3,offlineResource.getFlags());
      stmt.setLong(4,offlineResource.getDateCreated());
      stmt.setString(5,offlineResource.getUserCreated().toString());
      stmt.setLong(6,offlineResource.getDateLastModified());
      stmt.setString(7,offlineResource.getUserLastModified().toString());
      stmt.setInt(8,CmsResource.STATE_UNCHANGED.getState());
      stmt.setInt(9,resourceSize);
      stmt.setLong(10,offlineResource.getDateContent());
      stmt.setString(11,offlineResource.getProjectLastModified().toString());
      stmt.setInt(12,1);
      stmt.setInt(13,1);
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
    String parentId=internalReadParentId(dbc,onlineProject.getUuid(),resourcePath);
    if (validateStructureIdExists(dbc,onlineProject.getUuid(),offlineResource.getStructureId())) {
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_RESOURCES_UPDATE_STRUCTURE");
      stmt.setString(1,offlineResource.getResourceId().toString());
      stmt.setString(2,resourcePath);
      stmt.setInt(3,CmsResource.STATE_UNCHANGED.getState());
      stmt.setLong(4,offlineResource.getDateReleased());
      stmt.setLong(5,offlineResource.getDateExpired());
      stmt.setString(6,parentId);
      stmt.setString(7,offlineResource.getStructureId().toString());
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_STRUCTURE_WRITE");
      stmt.setString(1,offlineResource.getStructureId().toString());
      stmt.setString(2,offlineResource.getResourceId().toString());
      stmt.setString(3,resourcePath);
      stmt.setInt(4,CmsResource.STATE_UNCHANGED.getState());
      stmt.setLong(5,offlineResource.getDateReleased());
      stmt.setLong(6,offlineResource.getDateExpired());
      stmt.setString(7,parentId);
      stmt.setInt(8,resourceExists ? 1 : 0);
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
