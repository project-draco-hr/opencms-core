{
  Connection conn=null;
  PreparedStatement stmt=null;
  int newState=0;
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    newState=I_CmsConstants.C_STATE_UNCHANGED;
  }
 else {
    newState=I_CmsConstants.C_STATE_NEW;
  }
  CmsResource existingSibling=null;
  CmsUUID newStructureId=resource.getStructureId();
  try {
    existingSibling=readResource(dbc,project.getId(),resource.getRootPath(),true);
    if (existingSibling.getState() == I_CmsConstants.C_STATE_DELETED) {
      newStructureId=existingSibling.getStructureId();
      newState=I_CmsConstants.C_STATE_CHANGED;
      List modifiedResources=readSiblings(dbc,project,existingSibling,false);
      int propertyDeleteOption=(existingSibling.getSiblingCount() > 1) ? CmsProperty.C_DELETE_OPTION_DELETE_STRUCTURE_VALUES : CmsProperty.C_DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES;
      deletePropertyObjects(dbc,project.getId(),existingSibling,propertyDeleteOption);
      removeFile(dbc,project,existingSibling,true);
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCES_MODIFIED,Collections.singletonMap("resources",modifiedResources)));
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",existingSibling)));
    }
  }
 catch (  CmsVfsResourceNotFoundException e) {
  }
  if (existingSibling != null && existingSibling.getState() != I_CmsConstants.C_STATE_DELETED) {
    throw new CmsVfsResourceAlreadyExistsException(Messages.get().container(Messages.ERR_RESOURCE_WITH_NAME_ALREADY_EXISTS_1,dbc.removeSiteRoot(resource.getRootPath())));
  }
  if (!validateResourceIdExists(dbc,project.getId(),resource.getResourceId())) {
    throw new CmsVfsResourceNotFoundException(Messages.get().container(Messages.ERR_CREATE_SIBLING_FILE_NOT_FOUND_1,dbc.removeSiteRoot(resource.getRootPath())));
  }
  try {
    conn=m_sqlManager.getConnection(dbc,project.getId());
    String parentId=internalReadParentId(dbc,project.getId(),resource.getRootPath());
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,newStructureId.toString());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.setString(3,resource.getRootPath());
    stmt.setInt(4,newState);
    stmt.setLong(5,resource.getDateReleased());
    stmt.setLong(6,resource.getDateExpired());
    stmt.setString(7,parentId);
    stmt.executeUpdate();
    m_sqlManager.closeAll(dbc,null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_SIBLING_COUNT");
    stmt.setInt(1,this.internalCountSiblings(dbc,project.getId(),resource.getResourceId()));
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
    m_sqlManager.closeAll(dbc,null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_FLAGS");
    stmt.setInt(1,resource.getFlags());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
