{
  int state=0;
  if (folder.getName().length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("The resource name '" + folder.getName() + "' is too long! (max. allowed length must be <= "+ I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME+ " chars.!)",CmsException.C_BAD_NAME);
  }
  long dateModified=folder.getDateLastModified();
  if (dateModified == 0) {
    dateModified=System.currentTimeMillis();
  }
  long dateCreated=folder.getDateCreated();
  if (dateCreated == 0) {
    dateCreated=System.currentTimeMillis();
  }
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    state=folder.getState();
  }
 else {
    state=I_CmsConstants.C_STATE_NEW;
  }
  try {
    CmsFolder oldFolder=readFolder(project.getId(),parentId,folder.getName());
    if (oldFolder.getState() == I_CmsConstants.C_STATE_DELETED) {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
    }
 else {
      if (oldFolder != null) {
        throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
      }
    }
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    conn=m_sqlManager.getConnection(project);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,folder.getStructureId().toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,folder.getResourceId().toString());
    stmt.setString(4,folder.getName());
    stmt.setInt(5,state);
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    if (!existsResourceId(project.getId(),folder.getResourceId())) {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_WRITE");
      stmt.setString(1,folder.getResourceId().toString());
      stmt.setInt(2,folder.getType());
      stmt.setInt(3,folder.getFlags());
      stmt.setString(4,CmsUUID.getNullUUID().toString());
      stmt.setInt(5,folder.getLoaderId());
      stmt.setTimestamp(6,new Timestamp(dateCreated));
      stmt.setString(7,folder.getUserCreated().toString());
      stmt.setTimestamp(8,new Timestamp(dateModified));
      stmt.setString(9,folder.getUserLastModified().toString());
      stmt.setInt(10,state);
      stmt.setInt(11,folder.getLength());
      stmt.setString(12,CmsUUID.getNullUUID().toString());
      stmt.setInt(13,project.getId());
      stmt.setInt(14,1);
      stmt.executeUpdate();
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_LINK_COUNT");
      stmt.setInt(1,this.countVfsLinks(project.getId(),folder.getResourceId()));
      stmt.setString(2,folder.getResourceId().toString());
      stmt.executeUpdate();
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  String parentFolderName="/";
  if (!folder.getName().equals(I_CmsConstants.C_ROOT)) {
    parentFolderName=folder.getName();
    if (parentFolderName.endsWith("/"))     parentFolderName=parentFolderName.substring(0,parentFolderName.length() - 1);
    parentFolderName=parentFolderName.substring(0,parentFolderName.lastIndexOf("/") + 1);
  }
  if (parentId.isNullUUID() || parentFolderName.equals(I_CmsConstants.C_ROOT)) {
    try {
      String rootFolder=null;
      try {
        rootFolder=readProjectResource(project.getId(),I_CmsConstants.C_ROOT);
      }
 catch (      CmsException exc) {
      }
      if (rootFolder == null) {
        createProjectResource(project.getId(),folder.getName());
      }
    }
 catch (    CmsException e) {
      if (e.getType() != CmsException.C_FILE_EXISTS) {
        throw e;
      }
    }
  }
  return readFolder(project.getId(),folder.getStructureId());
}
