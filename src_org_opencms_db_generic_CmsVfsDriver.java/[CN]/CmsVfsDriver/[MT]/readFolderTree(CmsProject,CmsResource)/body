{
  ResultSet res=null;
  PreparedStatement stmt=null;
  Connection conn=null;
  CmsAdjacencyTree adjacencyTree=new CmsAdjacencyTree();
  CmsUUID parentId=null;
  CmsUUID structureId=null;
  try {
    conn=m_sqlManager.getConnection(currentProject);
    stmt=m_sqlManager.getPreparedStatement(conn,currentProject,"C_RESOURCES_GET_FOLDERTREE");
    stmt.setInt(1,I_CmsConstants.C_STATE_CHANGED);
    stmt.setInt(2,I_CmsConstants.C_STATE_NEW);
    stmt.setInt(3,I_CmsConstants.C_STATE_UNCHANGED);
    res=stmt.executeQuery();
    while (res.next()) {
      parentId=new CmsUUID(res.getString(1));
      structureId=new CmsUUID(res.getString(2));
      adjacencyTree.add(parentId,structureId);
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  Exception ex) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_UNKNOWN_EXCEPTION,ex,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,res);
  }
  List dfsList=adjacencyTree.toList(parentResource.getStructureId());
  return dfsList;
}
