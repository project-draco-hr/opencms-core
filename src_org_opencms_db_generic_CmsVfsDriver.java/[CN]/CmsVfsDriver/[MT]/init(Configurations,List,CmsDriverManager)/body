{
  String offlinePoolUrl=null;
  String onlinePoolUrl=null;
  String backupPoolUrl=null;
  boolean hasDistinctPoolUrls=false;
  if ((offlinePoolUrl=config.getString("db.vfs.pool")) == null) {
    hasDistinctPoolUrls=true;
    offlinePoolUrl=config.getString("db.vfs.offline.pool");
    onlinePoolUrl=config.getString("db.vfs.online.pool");
    backupPoolUrl=config.getString("db.vfs.backup.pool");
  }
 else {
    hasDistinctPoolUrls=false;
    onlinePoolUrl=backupPoolUrl=offlinePoolUrl;
  }
  m_sqlManager=this.initQueries();
  m_sqlManager.setOfflinePoolUrl(offlinePoolUrl);
  m_sqlManager.setOnlinePoolUrl(onlinePoolUrl);
  m_sqlManager.setBackupPoolUrl(backupPoolUrl);
  m_driverManager=driverManager;
  if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INIT)) {
    if (hasDistinctPoolUrls) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Assign. offline pool : " + offlinePoolUrl);
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Assign. online pool  : " + onlinePoolUrl);
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Assign. backup pool  : " + backupPoolUrl);
    }
 else {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,". Assign. pool         : " + offlinePoolUrl);
    }
  }
  if (successiveDrivers != null && !successiveDrivers.isEmpty()) {
    if (OpenCms.isLogging(I_CmsLogChannels.C_OPENCMS_INIT)) {
      OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,this.getClass().toString() + " does not support successive drivers.");
    }
  }
}
