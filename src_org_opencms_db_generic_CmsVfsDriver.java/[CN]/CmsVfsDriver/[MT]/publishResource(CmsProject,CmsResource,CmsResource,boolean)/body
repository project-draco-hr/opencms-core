{
  Connection conn=null;
  PreparedStatement stmt=null;
  int resourceSize=offlineResource.getLength();
  try {
    conn=m_sqlManager.getConnection(onlineProject);
    if (validateResourceIdExists(onlineProject.getId(),offlineResource.getResourceId())) {
      if (writeFileContent && offlineResource.isFile()) {
        writeContent(onlineProject,offlineResource.getResourceId(),((CmsFile)offlineResource).getContents(),false);
      }
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_RESOURCES_UPDATE_RESOURCES");
      stmt.setInt(1,offlineResource.getTypeId());
      stmt.setInt(2,offlineResource.getFlags());
      stmt.setInt(3,offlineResource.getLoaderId());
      stmt.setLong(4,offlineResource.getDateLastModified());
      stmt.setString(5,offlineResource.getUserLastModified().toString());
      stmt.setInt(6,I_CmsConstants.C_STATE_UNCHANGED);
      stmt.setInt(7,resourceSize);
      stmt.setString(8,CmsUUID.getNullUUID().toString());
      stmt.setInt(9,offlineResource.getProjectLastModified());
      stmt.setInt(10,this.internalCountSiblings(onlineProject.getId(),onlineResource.getResourceId()));
      stmt.setString(11,offlineResource.getResourceId().toString());
      stmt.executeUpdate();
      m_sqlManager.closeAll(null,stmt,null);
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_RESOURCES_UPDATE_STRUCTURE");
      stmt.setString(1,offlineResource.getParentStructureId().toString());
      stmt.setString(2,offlineResource.getResourceId().toString());
      stmt.setString(3,offlineResource.getName());
      stmt.setInt(4,I_CmsConstants.C_STATE_UNCHANGED);
      stmt.setLong(5,offlineResource.getDateReleased());
      stmt.setLong(6,offlineResource.getDateExpired());
      stmt.setString(7,offlineResource.getStructureId().toString());
      stmt.executeUpdate();
    }
 else {
      if (writeFileContent && offlineResource.isFile()) {
        resourceSize=offlineResource.getLength();
        createContent(onlineProject,offlineResource.getResourceId(),((CmsFile)offlineResource).getContents(),0,false);
      }
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_RESOURCES_WRITE");
      stmt.setString(1,offlineResource.getResourceId().toString());
      stmt.setInt(2,offlineResource.getTypeId());
      stmt.setInt(3,offlineResource.getFlags());
      stmt.setInt(4,offlineResource.getLoaderId());
      stmt.setLong(5,offlineResource.getDateCreated());
      stmt.setString(6,offlineResource.getUserCreated().toString());
      stmt.setLong(7,offlineResource.getDateLastModified());
      stmt.setString(8,offlineResource.getUserLastModified().toString());
      stmt.setInt(9,I_CmsConstants.C_STATE_UNCHANGED);
      stmt.setInt(10,resourceSize);
      stmt.setString(11,CmsUUID.getNullUUID().toString());
      stmt.setInt(12,offlineResource.getProjectLastModified());
      stmt.setInt(13,1);
      stmt.executeUpdate();
      m_sqlManager.closeAll(null,stmt,null);
      stmt=m_sqlManager.getPreparedStatement(conn,onlineProject,"C_STRUCTURE_WRITE");
      stmt.setString(1,offlineResource.getStructureId().toString());
      stmt.setString(2,offlineResource.getParentStructureId().toString());
      stmt.setString(3,offlineResource.getResourceId().toString());
      stmt.setString(4,offlineResource.getName());
      stmt.setInt(5,I_CmsConstants.C_STATE_UNCHANGED);
      stmt.setLong(6,offlineResource.getDateReleased());
      stmt.setLong(7,offlineResource.getDateExpired());
      stmt.executeUpdate();
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
}
