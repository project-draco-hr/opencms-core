{
  Connection conn=null;
  PreparedStatement stmt=null;
  int newState=0;
  if (!resource.hasFullResourceName()) {
    throw new RuntimeException("Full resource name not set for CmsResource " + resource.getName());
  }
  if (filename.length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("The resource name '" + filename + "' is too long! (max. allowed length must be <= "+ I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME+ " chars.!)",CmsException.C_BAD_NAME);
  }
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    newState=I_CmsConstants.C_STATE_UNCHANGED;
  }
 else {
    newState=I_CmsConstants.C_STATE_NEW;
  }
  CmsResource res=null;
  CmsUUID newStructureId=resource.getStructureId();
  try {
    res=readFileHeader(project.getId(),parentId,filename,true);
    res.setFullResourceName(resource.getRootPath());
    if (res.getState() == I_CmsConstants.C_STATE_DELETED) {
      newStructureId=res.getStructureId();
      newState=I_CmsConstants.C_STATE_CHANGED;
      List modifiedResources=readSiblings(project,res,false);
      deleteProperties(project.getId(),res);
      removeFile(project,res,true);
      OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCES_MODIFIED,Collections.singletonMap("resources",modifiedResources)));
      OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",res)));
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
    }
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  if (!validateResourceIdExists(project.getId(),resource.getResourceId())) {
    throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_NOT_FOUND);
  }
  try {
    conn=m_sqlManager.getConnection(project);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,newStructureId.toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,resource.getResourceId().toString());
    stmt.setString(4,filename);
    stmt.setInt(5,newState);
    stmt.setLong(6,resource.getDateReleased());
    stmt.setLong(7,resource.getDateExpired());
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_LINK_COUNT");
    stmt.setInt(1,this.internalCountSiblings(project.getId(),resource.getResourceId()));
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_FLAGS");
    stmt.setInt(1,resource.getFlags());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return readFileHeader(project.getId(),newStructureId,false);
}
