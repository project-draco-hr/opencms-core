{
  CmsUUID newStructureId=null;
  Connection conn=null;
  PreparedStatement stmt=null;
  String resourcePath=removeTrailingSeparator(resource.getRootPath());
  if (resourcePath.length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsDataAccessException(Messages.get().container(Messages.ERR_RESOURCENAME_TOO_LONG_2,resourcePath,new Integer(I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME)));
  }
  if (!resource.getRootPath().equals(I_CmsConstants.C_FOLDER_SEPARATOR)) {
    String parentFolderName=CmsResource.getParentFolder(resource.getRootPath());
    CmsFolder parentFolder=readFolder(dbc,project.getId(),parentFolderName);
    if (parentFolder.getState() == I_CmsConstants.C_STATE_DELETED) {
      throw new CmsDbEntryNotFoundException(Messages.get().container(Messages.ERR_PARENT_FOLDER_DELETED_1,resource.getRootPath()));
    }
  }
  internalValidateResourceLength(resource);
  int newState;
  long dateModified;
  long dateCreated;
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    newState=I_CmsConstants.C_STATE_UNCHANGED;
    dateCreated=resource.getDateCreated();
    dateModified=resource.getDateLastModified();
  }
 else {
    newState=I_CmsConstants.C_STATE_NEW;
    if (resource.isTouched()) {
      dateCreated=resource.getDateCreated();
      dateModified=resource.getDateLastModified();
    }
 else {
      dateCreated=System.currentTimeMillis();
      dateModified=dateCreated;
    }
  }
  CmsResource existingResource=null;
  newStructureId=resource.getStructureId();
  try {
    existingResource=readResource(dbc,project.getId(),resourcePath,true);
    if (existingResource.getState() == I_CmsConstants.C_STATE_DELETED) {
      newStructureId=existingResource.getStructureId();
      newState=I_CmsConstants.C_STATE_CHANGED;
      List modifiedResources=readSiblings(dbc,project,existingResource,false);
      int propertyDeleteOption=(existingResource.getSiblingCount() > 1) ? CmsProperty.C_DELETE_OPTION_DELETE_STRUCTURE_VALUES : CmsProperty.C_DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES;
      deletePropertyObjects(dbc,project.getId(),existingResource,propertyDeleteOption);
      removeFile(dbc,project,existingResource,true);
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCES_MODIFIED,Collections.singletonMap("resources",modifiedResources)));
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",existingResource)));
    }
  }
 catch (  CmsVfsResourceNotFoundException e) {
  }
  if (existingResource != null && existingResource.getState() != I_CmsConstants.C_STATE_DELETED) {
    throw new CmsVfsResourceAlreadyExistsException(Messages.get().container(Messages.ERR_RESOURCE_WITH_NAME_ALREADY_EXISTS_1,dbc.removeSiteRoot(resource.getRootPath())));
  }
  try {
    String parentId=internalReadParentId(dbc,project.getId(),resourcePath);
    conn=m_sqlManager.getConnection(dbc,project.getId());
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,newStructureId.toString());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.setString(3,resourcePath);
    stmt.setInt(4,newState);
    stmt.setLong(5,resource.getDateReleased());
    stmt.setLong(6,resource.getDateExpired());
    stmt.setString(7,parentId);
    stmt.executeUpdate();
    m_sqlManager.closeAll(dbc,null,stmt,null);
    if (!validateResourceIdExists(dbc,project.getId(),resource.getResourceId())) {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_WRITE");
      stmt.setString(1,resource.getResourceId().toString());
      stmt.setInt(2,resource.getTypeId());
      stmt.setInt(3,resource.getFlags());
      stmt.setLong(4,dateCreated);
      stmt.setString(5,resource.getUserCreated().toString());
      stmt.setLong(6,dateModified);
      stmt.setString(7,resource.getUserLastModified().toString());
      stmt.setInt(8,newState);
      stmt.setInt(9,resource.getLength());
      stmt.setInt(10,project.getId());
      stmt.setInt(11,1);
      stmt.executeUpdate();
      if (resource.isFile() && content != null) {
        createContent(dbc,project,resource.getResourceId(),content,0);
      }
    }
 else {
      if ((content != null) || (resource.getState() != I_CmsConstants.C_STATE_KEEP)) {
        stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_RESOURCES");
        stmt.setInt(1,resource.getTypeId());
        stmt.setInt(2,resource.getFlags());
        stmt.setLong(3,dateModified);
        stmt.setString(4,resource.getUserLastModified().toString());
        stmt.setInt(5,I_CmsConstants.C_STATE_CHANGED);
        stmt.setInt(6,resource.getLength());
        stmt.setInt(7,project.getId());
        stmt.setInt(8,internalCountSiblings(dbc,project.getId(),resource.getResourceId()));
        stmt.setString(9,resource.getResourceId().toString());
        stmt.executeUpdate();
        m_sqlManager.closeAll(dbc,null,stmt,null);
      }
      if (resource.isFile()) {
        if (content != null) {
          writeContent(dbc,project,resource.getResourceId(),content);
        }
 else         if (resource.getState() == I_CmsConstants.C_STATE_KEEP) {
          stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_SIBLING_COUNT");
          stmt.setInt(1,this.internalCountSiblings(dbc,project.getId(),resource.getResourceId()));
          stmt.setString(2,resource.getResourceId().toString());
          stmt.executeUpdate();
          m_sqlManager.closeAll(dbc,null,stmt,null);
          stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_FLAGS");
          stmt.setInt(1,resource.getFlags());
          stmt.setString(2,resource.getResourceId().toString());
          stmt.executeUpdate();
          m_sqlManager.closeAll(dbc,null,stmt,null);
        }
      }
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(this,stmt,e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
  return readResource(dbc,project.getId(),newStructureId,false);
}
