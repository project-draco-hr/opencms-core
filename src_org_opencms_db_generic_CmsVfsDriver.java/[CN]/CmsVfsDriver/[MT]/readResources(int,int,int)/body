{
  List result=new ArrayList();
  ResultSet res=null;
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection(projectId);
    if (mode == I_CmsConstants.C_READMODE_MATCHSTATE) {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_RESOURCES_GET_RESOURCE_IN_PROJECT_WITH_STATE");
      stmt.setInt(1,projectId);
      stmt.setInt(2,state);
      stmt.setInt(3,state);
      stmt.setInt(4,state);
      stmt.setInt(5,state);
    }
 else     if (mode == I_CmsConstants.C_READMODE_UNMATCHSTATE) {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_RESOURCES_GET_RESOURCE_IN_PROJECT_WITHOUT_STATE");
      stmt.setInt(1,projectId);
      stmt.setInt(2,state);
      stmt.setInt(3,state);
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_RESOURCES_GET_RESOURCE_IN_PROJECT_IGNORE_STATE");
      stmt.setInt(1,projectId);
    }
    res=stmt.executeQuery();
    while (res.next()) {
      CmsResource resource=createResource(res,projectId);
      result.add(resource);
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  Exception exc) {
    throw new CmsException("readResources" + exc.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,res);
  }
  return result;
}
