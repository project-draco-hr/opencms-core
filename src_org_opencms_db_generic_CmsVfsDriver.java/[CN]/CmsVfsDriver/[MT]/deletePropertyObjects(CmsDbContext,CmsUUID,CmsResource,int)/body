{
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    if (deleteOption == CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES) {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_PROPERTIES_DELETE_ALL_STRUCTURE_AND_RESOURCE_VALUES");
      stmt.setString(1,resource.getResourceId().toString());
      stmt.setInt(2,CmsProperty.RESOURCE_RECORD_MAPPING);
      stmt.setString(3,resource.getStructureId().toString());
      stmt.setInt(4,CmsProperty.STRUCTURE_RECORD_MAPPING);
    }
 else     if (deleteOption == CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_VALUES) {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_PROPERTIES_DELETE_ALL_VALUES_FOR_MAPPING_TYPE");
      stmt.setString(1,resource.getStructureId().toString());
      stmt.setInt(2,CmsProperty.STRUCTURE_RECORD_MAPPING);
    }
 else     if (deleteOption == CmsProperty.DELETE_OPTION_DELETE_RESOURCE_VALUES) {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_PROPERTIES_DELETE_ALL_VALUES_FOR_MAPPING_TYPE");
      stmt.setString(1,resource.getResourceId().toString());
      stmt.setInt(2,CmsProperty.RESOURCE_RECORD_MAPPING);
    }
 else {
      throw new CmsDataAccessException(Messages.get().container(Messages.ERR_INVALID_DELETE_OPTION_1));
    }
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
