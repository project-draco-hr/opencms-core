{
  Connection conn=null;
  PreparedStatement stmt=null;
  try {
    conn=m_sqlManager.getConnection(dbc);
    boolean dbcHasProjectId=(dbc.getProjectId() != null) && !dbc.getProjectId().isNullUUID();
    if (needToUpdateContent || dbcHasProjectId) {
      if (dbcHasProjectId || !OpenCms.getSystemInfo().isHistoryEnabled()) {
        stmt=m_sqlManager.getPreparedStatement(conn,"C_ONLINE_CONTENTS_DELETE");
        stmt.setString(1,resourceId.toString());
        stmt.executeUpdate();
        m_sqlManager.closeAll(dbc,null,stmt,null);
      }
 else {
        stmt=m_sqlManager.getPreparedStatement(conn,"C_ONLINE_CONTENTS_HISTORY");
        stmt.setString(1,resourceId.toString());
        stmt.executeUpdate();
        m_sqlManager.closeAll(dbc,null,stmt,null);
      }
      stmt=m_sqlManager.getPreparedStatement(conn,"C_ONLINE_CONTENTS_WRITE");
      stmt.setString(1,resourceId.toString());
      if (contents.length < 2000) {
        stmt.setBytes(2,contents);
      }
 else {
        stmt.setBinaryStream(2,new ByteArrayInputStream(contents),contents.length);
      }
      stmt.setInt(3,publishTag);
      stmt.setInt(4,publishTag);
      stmt.setInt(5,keepOnline ? 1 : 0);
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,"C_HISTORY_CONTENTS_UPDATE");
      stmt.setInt(1,publishTag);
      stmt.setString(2,resourceId.toString());
      stmt.executeUpdate();
      m_sqlManager.closeAll(dbc,null,stmt,null);
      if (!keepOnline) {
        stmt=m_sqlManager.getPreparedStatement(conn,"C_ONLINE_CONTENTS_HISTORY");
        stmt.setString(1,resourceId.toString());
        stmt.executeUpdate();
        m_sqlManager.closeAll(dbc,null,stmt,null);
      }
    }
  }
 catch (  SQLException e) {
    throw new CmsDbSqlException(Messages.get().container(Messages.ERR_GENERIC_SQL_1,CmsDbSqlException.getErrorQuery(stmt)),e);
  }
 finally {
    m_sqlManager.closeAll(dbc,conn,stmt,null);
  }
}
