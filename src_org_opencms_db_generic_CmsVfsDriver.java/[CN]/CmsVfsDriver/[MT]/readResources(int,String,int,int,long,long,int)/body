{
  List result=new ArrayList();
  String query;
  StringBuffer conditions=new StringBuffer();
  List params=new ArrayList(5);
  prepareProjectCondition(projectId,mode,conditions,params);
  preparePathCondition(projectId,parentPath,mode,conditions,params);
  prepareTypeCondition(projectId,type,mode,conditions,params);
  prepareStateCondition(projectId,state,mode,conditions,params);
  prepareTimeRangeCondition(projectId,startTime,endTime,conditions,params);
  ResultSet res=null;
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection();
    query=m_sqlManager.readQuery(projectId,"C_RESOURCES_READ_SUBTREE");
    stmt=m_sqlManager.getPreparedStatementForSql(conn,query + conditions);
    for (int i=0; i < params.size(); i++) {
      stmt.setString(i + 1,(String)params.get(i));
    }
    res=stmt.executeQuery();
    while (res.next()) {
      CmsResource resource=createResource(res,projectId);
      result.add(resource);
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
catch (  Exception exc) {
    throw new CmsException("readResources " + exc.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,res);
  }
  return result;
}
