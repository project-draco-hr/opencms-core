{
  Connection conn=null;
  PreparedStatement stmt=null;
  if (filename.length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("The resource name '" + filename + "' is too long! (max. allowed length must be <= "+ I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME+ " chars.!)",CmsException.C_BAD_NAME);
  }
  int state=0;
  CmsUUID modifiedByUserId=userId;
  long dateModified=System.currentTimeMillis();
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    state=file.getState();
    modifiedByUserId=file.getResourceLastModifiedBy();
    dateModified=file.getDateLastModified();
  }
 else {
    state=I_CmsConstants.C_STATE_NEW;
  }
  try {
    readFileHeader(project.getId(),parentId,filename,false);
    throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_RESOURCE_DELETED) {
      removeFile(project,parentId,filename);
      state=I_CmsConstants.C_STATE_CHANGED;
    }
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  try {
    conn=m_sqlManager.getConnection(project);
    try {
      createFileContent(file.getFileId(),file.getContents(),0,project.getId(),false);
    }
 catch (    CmsException se) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_CRITICAL,"[" + this.getClass().getName() + "] "+ se.getMessage());
      }
    }
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_WRITE");
    stmt.setString(1,file.getResourceId().toString());
    stmt.setInt(2,file.getType());
    stmt.setInt(3,file.getFlags());
    stmt.setString(4,file.getOwnerId().toString());
    stmt.setString(5,file.getGroupId().toString());
    stmt.setString(6,file.getFileId().toString());
    stmt.setInt(7,file.getAccessFlags());
    stmt.setInt(8,file.getLauncherType());
    stmt.setString(9,file.getLauncherClassname());
    stmt.setTimestamp(10,new Timestamp(file.getDateCreated()));
    stmt.setTimestamp(11,new Timestamp(dateModified));
    stmt.setInt(12,file.getLength());
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,file.getId().toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,file.getResourceId().toString());
    stmt.setInt(4,project.getId());
    stmt.setString(5,filename);
    stmt.setInt(6,0);
    stmt.setInt(7,state);
    stmt.setString(8,file.isLockedBy().toString());
    stmt.setString(9,modifiedByUserId.toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return readFile(project.getId(),false,file.getId());
}
