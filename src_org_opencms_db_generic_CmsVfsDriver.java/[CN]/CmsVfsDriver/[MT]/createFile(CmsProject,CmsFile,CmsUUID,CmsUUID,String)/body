{
  int newState=0;
  CmsUUID modifiedByUserId=null, createdByUserId=null, newStructureId=null;
  long dateModified=0, dateCreated=0;
  Connection conn=null;
  PreparedStatement stmt=null;
  if (!file.hasFullResourceName()) {
    throw new RuntimeException("Full resource name not set for CmsFile " + file.getName());
  }
  if (filename.length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("The resource name '" + filename + "' is too long! (max. allowed length must be <= "+ I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME+ " chars.!)",CmsException.C_BAD_NAME);
  }
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    newState=I_CmsConstants.C_STATE_UNCHANGED;
    dateCreated=file.getDateCreated();
    createdByUserId=file.getUserCreated();
    dateModified=file.getDateLastModified();
    modifiedByUserId=file.getUserLastModified();
  }
 else {
    newState=I_CmsConstants.C_STATE_NEW;
    dateCreated=System.currentTimeMillis();
    createdByUserId=userId;
    dateModified=dateCreated;
    modifiedByUserId=createdByUserId;
  }
  CmsResource res=null;
  newStructureId=file.getStructureId();
  try {
    res=readFileHeader(project.getId(),parentId,filename,true);
    res.setFullResourceName(file.getRootPath());
    if (res.getState() == I_CmsConstants.C_STATE_DELETED) {
      newStructureId=res.getStructureId();
      newState=I_CmsConstants.C_STATE_CHANGED;
      List modifiedResources=readSiblings(project,res,false);
      deleteProperties(project.getId(),res);
      removeFile(project,res,true);
      OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCES_MODIFIED,Collections.singletonMap("resources",modifiedResources)));
      OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",res)));
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
    }
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  try {
    conn=m_sqlManager.getConnection(project);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,newStructureId.toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,file.getResourceId().toString());
    stmt.setString(4,filename);
    stmt.setInt(5,newState);
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,stmt,null);
    if (!validateResourceIdExists(project.getId(),file.getResourceId())) {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_WRITE");
      stmt.setString(1,file.getResourceId().toString());
      stmt.setInt(2,file.getType());
      stmt.setInt(3,file.getFlags());
      stmt.setString(4,file.getFileId().toString());
      stmt.setInt(5,file.getLoaderId());
      stmt.setTimestamp(6,new Timestamp(dateCreated));
      stmt.setString(7,createdByUserId.toString());
      stmt.setTimestamp(8,new Timestamp(dateModified));
      stmt.setString(9,modifiedByUserId.toString());
      stmt.setInt(10,newState);
      stmt.setInt(11,file.getLength());
      stmt.setString(12,CmsUUID.getNullUUID().toString());
      stmt.setInt(13,project.getId());
      stmt.setInt(14,1);
      stmt.executeUpdate();
      createFileContent(file.getFileId(),file.getContents(),0,project.getId(),false);
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_LINK_COUNT");
      stmt.setInt(1,this.internalCountSiblings(project.getId(),file.getResourceId()));
      stmt.setString(2,file.getResourceId().toString());
      stmt.executeUpdate();
      m_sqlManager.closeAll(null,stmt,null);
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_FLAGS");
      stmt.setInt(1,file.getFlags());
      stmt.setString(2,file.getResourceId().toString());
      stmt.executeUpdate();
      writeFileContent(file.getFileId(),file.getContents(),project.getId(),false);
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return readFile(project.getId(),false,newStructureId);
}
