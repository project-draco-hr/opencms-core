{
  Connection conn=null;
  PreparedStatement stmt=null;
  int newState=0;
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    newState=I_CmsConstants.C_STATE_UNCHANGED;
  }
 else {
    newState=I_CmsConstants.C_STATE_NEW;
  }
  CmsResource res=null;
  CmsUUID newStructureId=resource.getStructureId();
  try {
    res=readFileHeader(runtimeInfo,project.getId(),resource.getRootPath(),true);
    if (res.getState() == I_CmsConstants.C_STATE_DELETED) {
      newStructureId=res.getStructureId();
      newState=I_CmsConstants.C_STATE_CHANGED;
      List modifiedResources=readSiblings(runtimeInfo,project,res,false);
      int propertyDeleteOption=(res.getSiblingCount() > 1) ? CmsProperty.C_DELETE_OPTION_DELETE_STRUCTURE_VALUES : CmsProperty.C_DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES;
      deletePropertyObjects(runtimeInfo,project.getId(),res,propertyDeleteOption);
      removeFile(runtimeInfo,project,res,true);
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCES_MODIFIED,Collections.singletonMap("resources",modifiedResources)));
      OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",res)));
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
    }
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  if (!validateResourceIdExists(runtimeInfo,project.getId(),resource.getResourceId())) {
    throw new CmsVfsResourceNotFoundException("[" + this.getClass().getName() + "] ");
  }
  try {
    conn=m_sqlManager.getConnection(runtimeInfo,project);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,newStructureId.toString());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.setString(3,resource.getRootPath());
    stmt.setInt(4,newState);
    stmt.setLong(5,resource.getDateReleased());
    stmt.setLong(6,resource.getDateExpired());
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_SIBLING_COUNT");
    stmt.setInt(1,this.internalCountSiblings(null,project.getId(),resource.getResourceId()));
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
    m_sqlManager.closeAll(null,null,stmt,null);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_FLAGS");
    stmt.setInt(1,resource.getFlags());
    stmt.setString(2,resource.getResourceId().toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(runtimeInfo,conn,stmt,null);
  }
}
