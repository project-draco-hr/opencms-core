{
  CmsPropertydefinition propdef=null;
  try {
    propdef=readPropertyDefinition(meta,projectId,resourceType);
  }
 catch (  CmsException ex) {
    if (OpenCms.getLog(this).isDebugEnabled()) {
      OpenCms.getLog(this).debug("Could not read property definition " + meta + " projectId: "+ projectId+ " resourceType: "+ resourceType,ex);
    }
    propdef=null;
  }
  String resourceName=resource.getRootPath();
  if (resource.isFolder() && !resourceName.endsWith(I_CmsConstants.C_FOLDER_SEPARATOR)) {
    resourceName+=I_CmsConstants.C_FOLDER_SEPARATOR;
  }
  if (propdef == null) {
    if (addDefinition) {
      propdef=createPropertyDefinition(meta,projectId,resourceType);
      if (projectId >= 0) {
        try {
          m_driverManager.getBackupDriver().createBackupPropertyDefinition(meta,resourceType);
        }
 catch (        Exception ex) {
        }
      }
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + ".writeProperty/1] "+ meta,CmsException.C_NOT_FOUND);
    }
  }
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_sqlManager.getConnection(projectId);
    if (readProperty(propdef.getName(),projectId,resource,resourceType) != null) {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_PROPERTIES_UPDATE");
      stmt.setString(1,m_sqlManager.validateNull(value));
      stmt.setString(2,resource.getResourceId().toString());
      stmt.setString(3,resource.getStructureId().toString());
      stmt.setInt(4,propdef.getId());
      stmt.executeUpdate();
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,projectId,"C_PROPERTIES_CREATE");
      stmt.setInt(1,m_sqlManager.nextId(projectId,m_sqlManager.readQuery(projectId,"C_TABLE_PROPERTIES")));
      stmt.setInt(2,propdef.getId());
      stmt.setString(3,resource.getResourceId().toString());
      stmt.setString(4,resource.getStructureId().toString());
      stmt.setString(5,m_sqlManager.validateNull(value));
      stmt.executeUpdate();
    }
  }
 catch (  SQLException exc) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,exc,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
}
