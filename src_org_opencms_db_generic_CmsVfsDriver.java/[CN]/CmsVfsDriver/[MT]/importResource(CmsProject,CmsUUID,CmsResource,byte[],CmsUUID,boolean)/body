{
  Connection conn=null;
  PreparedStatement stmt=null;
  if (newResource.getName().length() > I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("The resource name '" + newResource.getName() + "' is too long! (max. allowed length must be <= "+ I_CmsConstants.C_MAX_LENGTH_RESOURCE_NAME+ " chars.!)",CmsException.C_BAD_NAME);
  }
  int state=0;
  CmsUUID modifiedByUserId=newResource.getUserLastModified();
  if (project.getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    state=newResource.getState();
    modifiedByUserId=newResource.getUserLastModified();
  }
 else {
    state=I_CmsConstants.C_STATE_NEW;
  }
  try {
    CmsResource curResource=readFileHeader(project.getId(),parentId,newResource.getName(),true);
    if (curResource.getState() == I_CmsConstants.C_STATE_DELETED) {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_RESOURCE_DELETED);
    }
 else {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
    }
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_RESOURCE_DELETED) {
      if (isFolder) {
        removeFolder(project,(CmsFolder)newResource);
        state=I_CmsConstants.C_STATE_CHANGED;
      }
 else {
      }
    }
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  CmsUUID newFileId=CmsUUID.getNullUUID();
  CmsUUID resourceId=new CmsUUID();
  CmsUUID structureId=new CmsUUID();
  if (newResource.getStructureId() != CmsUUID.getNullUUID()) {
    structureId=newResource.getStructureId();
  }
  if (newResource.getResourceId() != CmsUUID.getNullUUID()) {
    resourceId=newResource.getResourceId();
  }
  if (newResource.getFileId() != CmsUUID.getNullUUID()) {
    newFileId=newResource.getFileId();
  }
  try {
    conn=m_sqlManager.getConnection(project);
    stmt=m_sqlManager.getPreparedStatement(conn,project,"C_STRUCTURE_WRITE");
    stmt.setString(1,structureId.toString());
    stmt.setString(2,parentId.toString());
    stmt.setString(3,resourceId.toString());
    stmt.setString(4,newResource.getName());
    stmt.setInt(5,state);
    stmt.executeUpdate();
    if (!validateResourceIdExists(project.getId(),newResource.getResourceId())) {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_WRITE");
      stmt.setString(1,resourceId.toString());
      stmt.setInt(2,newResource.getType());
      stmt.setInt(3,newResource.getFlags());
      stmt.setString(4,newFileId.toString());
      stmt.setInt(5,newResource.getLoaderId());
      stmt.setTimestamp(6,new Timestamp(newResource.getDateCreated()));
      stmt.setString(7,newResource.getUserCreated().toString());
      stmt.setTimestamp(8,new Timestamp(newResource.getDateLastModified()));
      stmt.setString(9,modifiedByUserId.toString());
      stmt.setInt(10,state);
      stmt.setInt(11,newResource.getLength());
      stmt.setString(12,CmsUUID.getNullUUID().toString());
      stmt.setInt(13,project.getId());
      stmt.setInt(14,1);
      stmt.executeUpdate();
      m_sqlManager.closeAll(null,stmt,null);
      if (!isFolder) {
        try {
          createFileContent(newFileId,filecontent,0,project.getId(),false);
        }
 catch (        CmsException se) {
          if (OpenCms.getLog(this).isErrorEnabled()) {
            OpenCms.getLog(this).error("[" + this.getClass().getName() + "] "+ se.getMessage());
          }
        }
      }
    }
 else {
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_LINK_COUNT");
      stmt.setInt(1,this.internalCountSiblings(project.getId(),newResource.getResourceId()));
      stmt.setString(2,newResource.getResourceId().toString());
      stmt.executeUpdate();
      m_sqlManager.closeAll(null,stmt,null);
      stmt=m_sqlManager.getPreparedStatement(conn,project,"C_RESOURCES_UPDATE_FLAGS");
      stmt.setInt(1,newResource.getFlags());
      stmt.setString(2,newResource.getResourceId().toString());
      stmt.executeUpdate();
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return readFileHeader(project.getId(),parentId,newResource.getName(),true);
}
