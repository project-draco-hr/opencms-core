{
  Connection conn=null;
  PreparedStatement stmt=null;
  long dateModified=res.isTouched() ? res.getDateLastModified() : System.currentTimeMillis();
  try {
    if (resContent != null) {
      writeFileContent(res.getFileId(),resContent,currentProject.getId(),false);
    }
    conn=m_sqlManager.getConnection(currentProject);
    stmt=m_sqlManager.getPreparedStatement(conn,currentProject,"C_RESOURCE_REPLACE");
    stmt.setInt(1,newResType.getResourceType());
    stmt.setTimestamp(2,new Timestamp(dateModified));
    stmt.setString(3,currentUser.getId().toString());
    int state=res.getState();
    if ((state == I_CmsConstants.C_STATE_NEW) || (state == I_CmsConstants.C_STATE_CHANGED)) {
      stmt.setInt(4,state);
    }
 else     if (state == I_CmsConstants.C_STATE_UNCHANGED) {
      stmt.setInt(4,I_CmsConstants.C_STATE_CHANGED);
    }
 else {
      stmt.setInt(4,state);
    }
    stmt.setString(5,res.getId().toString());
    stmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,null);
  }
  return null;
}
