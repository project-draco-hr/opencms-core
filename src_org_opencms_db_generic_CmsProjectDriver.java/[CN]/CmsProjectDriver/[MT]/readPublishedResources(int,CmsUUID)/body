{
  Connection conn=null;
  PreparedStatement stmt=null;
  ResultSet res=null;
  CmsUUID structureId=null;
  CmsUUID resourceId=null;
  String rootPath=null;
  int resourceType=I_CmsConstants.C_UNKNOWN_ID;
  int resourceState=I_CmsConstants.C_UNKNOWN_ID;
  List publishedResources=new ArrayList();
  int siblingCount=I_CmsConstants.C_UNKNOWN_ID;
  CmsUUID masterId=CmsUUID.getNullUUID();
  String contentDefinitionName=null;
  int backupTagId=I_CmsConstants.C_UNKNOWN_ID;
  try {
    conn=m_sqlManager.getConnection(projectId);
    stmt=m_sqlManager.getPreparedStatement(conn,"C_SELECT_PUBLISHED_RESOURCES");
    stmt.setString(1,publishHistoryId.toString());
    res=stmt.executeQuery();
    while (res.next()) {
      structureId=new CmsUUID(res.getString("STRUCTURE_ID"));
      resourceId=new CmsUUID(res.getString("RESOURCE_ID"));
      rootPath=res.getString("RESOURCE_NAME");
      resourceState=res.getInt("RESOURCE_STATE");
      resourceType=res.getInt("RESOURCE_TYPE");
      siblingCount=res.getInt("SIBLING_COUNT");
      masterId=new CmsUUID(res.getString("MASTER_ID"));
      contentDefinitionName=res.getString("CONTENT_DEFINITION_NAME");
      backupTagId=res.getInt("TAG_ID");
      if (masterId.equals(CmsUUID.getNullUUID())) {
        publishedResources.add(new CmsPublishedResource(structureId,resourceId,backupTagId,rootPath,resourceType,resourceState,siblingCount));
      }
 else {
        publishedResources.add(new CmsPublishedResource(contentDefinitionName,masterId,resourceType,resourceState));
      }
    }
  }
 catch (  SQLException e) {
    throw m_sqlManager.getCmsException(this,null,CmsException.C_SQL_ERROR,e,false);
  }
 finally {
    m_sqlManager.closeAll(conn,stmt,res);
  }
  return publishedResources;
}
