{
  CmsFile newFile=null;
  CmsResource onlineFileHeader=null;
  List offlineProperties=null;
  CmsProperty property=null;
  int propertyDeleteOption=-1;
  try {
    if (offlineResource.getState() == CmsResource.STATE_DELETED) {
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,new Integer(m),new Integer(n)),I_CmsReport.FORMAT_NOTE);
      report.print(Messages.get().container(Messages.RPT_DELETE_FILE_0),I_CmsReport.FORMAT_NOTE);
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,offlineResource.getRootPath()));
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
      try {
        onlineFileHeader=m_driverManager.getVfsDriver().readResource(dbc,onlineProject.getId(),offlineResource.getStructureId(),true);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_READING_RESOURCE_1,offlineResource.getRootPath()),e);
        }
        throw e;
      }
      if (offlineResource.isLabeled() && !m_driverManager.labelResource(dbc,offlineResource,null,2)) {
        int flags=offlineResource.getFlags();
        flags&=~CmsResource.FLAG_LABELED;
        offlineResource.setFlags(flags);
      }
      try {
        if (backupEnabled && !OpenCms.getSystemInfo().keepVersionHistory()) {
          m_driverManager.deleteBackup(dbc,offlineResource);
        }
        m_driverManager.getProjectDriver().writePublishHistory(dbc,dbc.currentProject(),publishHistoryId,backupTagId,offlineResource);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_WRITING_PUBLISHING_HISTORY_1,offlineResource.getRootPath()),e);
        }
        throw e;
      }
      try {
        if (onlineFileHeader.getSiblingCount() > 1) {
          propertyDeleteOption=CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_VALUES;
        }
 else {
          propertyDeleteOption=CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES;
        }
        m_driverManager.getVfsDriver().deletePropertyObjects(dbc,onlineProject.getId(),onlineFileHeader,propertyDeleteOption);
        m_driverManager.getVfsDriver().deletePropertyObjects(dbc,dbc.currentProject().getId(),offlineResource,propertyDeleteOption);
        if (!onlineFileHeader.getResourceId().equals(offlineResource.getResourceId())) {
          m_driverManager.getVfsDriver().deletePropertyObjects(dbc,dbc.currentProject().getId(),onlineFileHeader,CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES);
        }
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_DELETING_PROPERTIES_1,offlineResource.getRootPath()),e);
        }
        throw e;
      }
      try {
        m_driverManager.getVfsDriver().removeFile(dbc,dbc.currentProject(),offlineResource,true);
        try {
          m_driverManager.getVfsDriver().readResource(dbc,dbc.currentProject().getId(),offlineResource.getStructureId(),true);
        }
 catch (        CmsVfsResourceNotFoundException e) {
          m_driverManager.getVfsDriver().removeFile(dbc,onlineProject,onlineFileHeader,true);
        }
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_REMOVING_RESOURCE_1,offlineResource.getRootPath()),e);
        }
        throw e;
      }
      try {
        m_driverManager.getUserDriver().removeAccessControlEntries(dbc,onlineProject,onlineFileHeader.getResourceId());
        m_driverManager.getUserDriver().removeAccessControlEntries(dbc,dbc.currentProject(),offlineResource.getResourceId());
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_REMOVING_ACL_1,offlineResource.toString()),e);
        }
        throw e;
      }
      report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().key(Messages.LOG_DEL_FILE_3,dbc.removeSiteRoot(offlineResource.getRootPath()),new Integer(m),new Integer(n)));
      }
    }
 else     if (offlineResource.getState() == CmsResource.STATE_CHANGED) {
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,new Integer(m),new Integer(n)),I_CmsReport.FORMAT_NOTE);
      report.print(Messages.get().container(Messages.RPT_PUBLISH_FILE_0),I_CmsReport.FORMAT_NOTE);
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,offlineResource.getRootPath()));
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
      try {
        onlineFileHeader=m_driverManager.getVfsDriver().readResource(dbc,onlineProject.getId(),offlineResource.getStructureId(),false);
        int flags=offlineResource.getFlags();
        flags&=~CmsResource.FLAG_LABELED;
        offlineResource.setFlags(flags);
        m_driverManager.getVfsDriver().deletePropertyObjects(dbc,onlineProject.getId(),onlineFileHeader,CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES);
        if (!onlineFileHeader.getResourceId().equals(offlineResource.getResourceId())) {
          offlineProperties=m_driverManager.getVfsDriver().readPropertyObjects(dbc,dbc.currentProject(),onlineFileHeader);
          if (offlineProperties.size() > 0) {
            for (int i=0; i < offlineProperties.size(); i++) {
              property=(CmsProperty)offlineProperties.get(i);
              property.setStructureValue(null);
              property.setResourceValue(CmsProperty.DELETE_VALUE);
            }
            m_driverManager.getVfsDriver().writePropertyObjects(dbc,dbc.currentProject(),onlineFileHeader,offlineProperties);
          }
        }
        boolean removeContent=!publishedContentIds.contains(offlineResource.getResourceId());
        m_driverManager.getVfsDriver().removeFile(dbc,onlineProject,onlineFileHeader,removeContent);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_DELETING_PROPERTIES_1,offlineResource.toString()),e);
        }
        throw e;
      }
      try {
        newFile=m_driverManager.getProjectDriver().publishFileContent(dbc,dbc.currentProject(),onlineProject,offlineResource,publishedContentIds);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_RESOURCE_1,offlineResource.getRootPath()),e);
        }
        throw e;
      }
      try {
        offlineProperties=m_driverManager.getVfsDriver().readPropertyObjects(dbc,dbc.currentProject(),offlineResource);
        CmsProperty.setAutoCreatePropertyDefinitions(offlineProperties,true);
        m_driverManager.getVfsDriver().writePropertyObjects(dbc,onlineProject,newFile,offlineProperties);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_PROPERTIES_1,newFile.getRootPath()),e);
        }
        throw e;
      }
      try {
        m_driverManager.getUserDriver().publishAccessControlEntries(dbc,dbc.currentProject(),onlineProject,newFile.getResourceId(),onlineFileHeader.getResourceId());
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_ACL_1,newFile.getRootPath()),e);
        }
        throw e;
      }
      try {
        if (backupEnabled) {
          if (offlineProperties == null) {
            offlineProperties=m_driverManager.getVfsDriver().readPropertyObjects(dbc,dbc.currentProject(),offlineResource);
          }
          m_driverManager.getBackupDriver().writeBackupResource(dbc,newFile,offlineProperties,backupTagId,publishDate,maxVersions);
        }
        m_driverManager.getProjectDriver().writePublishHistory(dbc,dbc.currentProject(),publishHistoryId,backupTagId,offlineResource);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_WRITING_PUBLISHING_HISTORY_1,newFile.getRootPath()),e);
        }
        throw e;
      }
      report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().key(Messages.LOG_PUBLISHING_FILE_3,dbc.removeSiteRoot(offlineResource.getRootPath()),new Integer(m),new Integer(n)));
      }
    }
 else     if (offlineResource.getState() == CmsResource.STATE_NEW) {
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,new Integer(m),new Integer(n)),I_CmsReport.FORMAT_NOTE);
      report.print(Messages.get().container(Messages.RPT_PUBLISH_FILE_0),I_CmsReport.FORMAT_NOTE);
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,dbc.removeSiteRoot(offlineResource.getRootPath())));
      report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
      try {
        int flags=offlineResource.getFlags();
        flags&=~CmsResource.FLAG_LABELED;
        offlineResource.setFlags(flags);
        newFile=m_driverManager.getProjectDriver().publishFileContent(dbc,dbc.currentProject(),onlineProject,offlineResource,publishedContentIds);
      }
 catch (      CmsVfsResourceAlreadyExistsException e) {
        try {
          m_driverManager.getVfsDriver().removeFile(dbc,onlineProject,offlineResource,true);
          publishedContentIds.remove(offlineResource.getResourceId());
          newFile=m_driverManager.getProjectDriver().publishFileContent(dbc,dbc.currentProject(),onlineProject,offlineResource,publishedContentIds);
        }
 catch (        CmsDataAccessException e1) {
          if (LOG.isErrorEnabled()) {
            LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_RESOURCE_1,offlineResource.getRootPath()),e);
          }
          throw e1;
        }
      }
catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_RESOURCE_1,offlineResource.getRootPath()),e);
        }
        throw e;
      }
      try {
        offlineProperties=m_driverManager.getVfsDriver().readPropertyObjects(dbc,dbc.currentProject(),offlineResource);
        CmsProperty.setAutoCreatePropertyDefinitions(offlineProperties,true);
        m_driverManager.getVfsDriver().writePropertyObjects(dbc,onlineProject,newFile,offlineProperties);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_PROPERTIES_1,newFile.getRootPath()),e);
        }
        throw e;
      }
      try {
        m_driverManager.getUserDriver().publishAccessControlEntries(dbc,dbc.currentProject(),onlineProject,offlineResource.getResourceId(),newFile.getResourceId());
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_PUBLISHING_ACL_1,newFile.getRootPath()),e);
        }
        throw e;
      }
      try {
        if (backupEnabled) {
          if (offlineProperties == null) {
            offlineProperties=m_driverManager.getVfsDriver().readPropertyObjects(dbc,dbc.currentProject(),offlineResource);
          }
          m_driverManager.getBackupDriver().writeBackupResource(dbc,newFile,offlineProperties,backupTagId,publishDate,maxVersions);
        }
        m_driverManager.getProjectDriver().writePublishHistory(dbc,dbc.currentProject(),publishHistoryId,backupTagId,offlineResource);
      }
 catch (      CmsDataAccessException e) {
        if (LOG.isErrorEnabled()) {
          LOG.error(Messages.get().key(Messages.LOG_WRITING_PUBLISHING_HISTORY_1,newFile.getRootPath()),e);
        }
        throw e;
      }
      report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
      if (LOG.isDebugEnabled()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().key(Messages.LOG_PUBLISHING_FILE_3,dbc.removeSiteRoot(offlineResource.getRootPath()),new Integer(m),new Integer(n)));
        }
      }
    }
  }
  finally {
    OpenCms.fireCmsEvent(new CmsEvent(I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",offlineResource)));
  }
}
