{
  CmsResourceState resourceState=fixMovedResource(dbc,onlineProject,offlineResource,publishHistoryId,publishTag);
  boolean existsOnline=m_driverManager.getVfsDriver(dbc).validateStructureIdExists(dbc,CmsProject.ONLINE_PROJECT_ID,offlineResource.getStructureId());
  CmsResource onlineResource=null;
  if (existsOnline) {
    try {
      onlineResource=m_driverManager.getVfsDriver(dbc).readResource(dbc,onlineProject.getUuid(),offlineResource.getStructureId(),true);
    }
 catch (    CmsDataAccessException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.LOG_READING_RESOURCE_1,offlineResource.getRootPath()),e);
      }
      throw e;
    }
  }
  if (offlineResource.isLabeled() && !m_driverManager.labelResource(dbc,offlineResource,null,2)) {
    int flags=offlineResource.getFlags();
    flags&=~CmsResource.FLAG_LABELED;
    offlineResource.setFlags(flags);
  }
  CmsFile offlineFile=new CmsFile(offlineResource);
  offlineFile.setContents(m_driverManager.getVfsDriver(dbc).readContent(dbc,dbc.currentProject().getUuid(),offlineFile.getResourceId()));
  internalWriteHistory(dbc,offlineFile,resourceState,null,publishHistoryId,publishTag);
  int propertyDeleteOption=-1;
  try {
    if (offlineResource.getSiblingCount() > 1) {
      propertyDeleteOption=CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_VALUES;
    }
 else {
      propertyDeleteOption=CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES;
    }
    if (existsOnline) {
      m_driverManager.getVfsDriver(dbc).deletePropertyObjects(dbc,onlineProject.getUuid(),onlineResource,propertyDeleteOption);
    }
    m_driverManager.getVfsDriver(dbc).deletePropertyObjects(dbc,dbc.currentProject().getUuid(),offlineResource,propertyDeleteOption);
    if (existsOnline && (onlineResource != null) && !onlineResource.getResourceId().equals(offlineResource.getResourceId())) {
      m_driverManager.getVfsDriver(dbc).deletePropertyObjects(dbc,dbc.currentProject().getUuid(),onlineResource,CmsProperty.DELETE_OPTION_DELETE_STRUCTURE_AND_RESOURCE_VALUES);
    }
  }
 catch (  CmsDataAccessException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().getBundle().key(Messages.LOG_DELETING_PROPERTIES_1,offlineResource.getRootPath()),e);
    }
    throw e;
  }
  try {
    m_driverManager.getVfsDriver(dbc).removeFile(dbc,dbc.currentProject().getUuid(),offlineResource);
    if (existsOnline && (onlineResource != null)) {
      m_driverManager.getVfsDriver(dbc).removeFile(dbc,onlineProject.getUuid(),onlineResource);
    }
  }
 catch (  CmsDataAccessException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().getBundle().key(Messages.LOG_REMOVING_RESOURCE_1,offlineResource.getRootPath()),e);
    }
    throw e;
  }
  try {
    if (existsOnline && (onlineResource != null) && (onlineResource.getSiblingCount() == 1)) {
      m_driverManager.getUserDriver(dbc).removeAccessControlEntries(dbc,onlineProject,onlineResource.getResourceId());
    }
    if (offlineResource.getSiblingCount() == 1) {
      m_driverManager.getUserDriver(dbc).removeAccessControlEntries(dbc,dbc.currentProject(),offlineResource.getResourceId());
    }
  }
 catch (  CmsDataAccessException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().getBundle().key(Messages.LOG_REMOVING_ACL_1,offlineResource.toString()),e);
    }
    throw e;
  }
  try {
    m_driverManager.getVfsDriver(dbc).deleteRelations(dbc,onlineProject.getUuid(),offlineResource,CmsRelationFilter.TARGETS);
    m_driverManager.getVfsDriver(dbc).deleteRelations(dbc,dbc.currentProject().getUuid(),offlineResource,CmsRelationFilter.TARGETS);
  }
 catch (  CmsDataAccessException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(Messages.get().getBundle().key(Messages.LOG_REMOVING_RELATIONS_1,offlineResource.toString()),e);
    }
    throw e;
  }
  if (OpenCms.getSubscriptionManager().isEnabled()) {
    try {
      CmsLogFilter filter=CmsLogFilter.ALL.includeType(CmsLogEntryType.USER_RESOURCE_VISITED).filterResource(offlineResource.getStructureId());
      m_driverManager.getSubscriptionDriver().deleteLog(dbc,OpenCms.getSubscriptionManager().getPoolName(),filter);
    }
 catch (    CmsDataAccessException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.LOG_REMOVING_VISITEDLOG_1,offlineResource.toString()),e);
      }
      throw e;
    }
    try {
      m_driverManager.getSubscriptionDriver().setSubscribedResourceAsDeleted(dbc,OpenCms.getSubscriptionManager().getPoolName(),offlineResource);
    }
 catch (    CmsDataAccessException e) {
      if (LOG.isErrorEnabled()) {
        LOG.error(Messages.get().getBundle().key(Messages.LOG_REMOVING_SUBSCRIPTIONS_1,offlineResource.toString()),e);
      }
      throw e;
    }
  }
}
