{
  CmsFolder onlineFolder=null;
  Map offlineProperties=null;
  try {
    report.print("( " + m + " / "+ n+ " ) "+ report.key("report.deleting.folder"),I_CmsReport.C_FORMAT_NOTE);
    report.println(context.removeSiteRoot(currentFolder.getRootPath()));
    try {
      if (backupEnabled) {
        offlineProperties=m_driverManager.getVfsDriver().readProperties(context.currentProject().getId(),currentFolder,currentFolder.getType());
        m_driverManager.getBackupDriver().writeBackupResource(context.currentUser(),context.currentProject(),currentFolder,offlineProperties,backupTagId,publishDate,maxVersions);
      }
      writePublishHistory(context.currentProject(),publishHistoryId,backupTagId,currentFolder.getRootPath(),currentFolder);
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isErrorEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).error("Error writing backup/publishing history of " + currentFolder.toString(),e);
      }
      throw e;
    }
    try {
      onlineFolder=m_driverManager.readFolder(context,currentFolder.getStructureId(),true);
      onlineFolder.setFullResourceName(currentFolder.getRootPath());
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isErrorEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).error("Error reading resource " + currentFolder.toString(),e);
      }
      throw e;
    }
    try {
      m_driverManager.getVfsDriver().deleteProperties(onlineProject.getId(),onlineFolder);
      m_driverManager.getVfsDriver().deleteProperties(context.currentProject().getId(),currentFolder);
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isErrorEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).error("Error deleting properties of " + currentFolder.toString(),e);
      }
      throw e;
    }
    try {
      m_driverManager.getVfsDriver().removeFolder(onlineProject,currentFolder);
      m_driverManager.getVfsDriver().removeFolder(context.currentProject(),currentFolder);
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isErrorEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).error("Error removing resource " + currentFolder.toString(),e);
      }
      throw e;
    }
    try {
      m_driverManager.getUserDriver().removeAccessControlEntries(onlineProject,onlineFolder.getResourceId());
      m_driverManager.getUserDriver().removeAccessControlEntries(context.currentProject(),currentFolder.getResourceId());
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isErrorEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).error("Error removing ACLs of " + currentFolder.toString(),e);
      }
      throw e;
    }
  }
 catch (  Exception e) {
    if (C_DEBUG) {
      System.err.println(e.getMessage());
      e.printStackTrace(System.err);
    }
    throw e;
  }
 finally {
    OpenCms.fireCmsEvent(new CmsEvent(new CmsObject(),I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED,Collections.singletonMap("resource",currentFolder)));
  }
}
