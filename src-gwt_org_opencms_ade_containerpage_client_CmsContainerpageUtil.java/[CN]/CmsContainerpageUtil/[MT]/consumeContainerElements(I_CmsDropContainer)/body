{
  Element child=(Element)container.getElement().getFirstChildElement();
  while (child != null) {
    boolean isContainerElement=CmsDomUtil.hasClass(CmsContainerElement.CLASS_CONTAINER_ELEMENT_START_MARKER,child);
    boolean isGroupcontainerElement=CmsDomUtil.hasClass(CmsContainerElement.CLASS_GROUP_CONTAINER_ELEMENT_MARKER,child);
    if (isContainerElement || isGroupcontainerElement) {
      String serializedData=child.getAttribute("rel");
      CmsContainerElement elementData=m_controller.getSerializedElement(serializedData);
      if (isContainerElement) {
        Element elementRoot=(Element)child.getNextSibling();
        while ((elementRoot != null) && (elementRoot.getNodeType() != Node.ELEMENT_NODE)) {
          Element temp=elementRoot;
          elementRoot=(Element)elementRoot.getNextSibling();
          temp.removeFromParent();
        }
        if (elementRoot == null) {
          child.removeFromParent();
          child=null;
          continue;
        }
        if (CmsDomUtil.hasClass(CmsContainerElement.CLASS_CONTAINER_ELEMENT_START_MARKER,elementRoot)) {
          child.removeFromParent();
          child=elementRoot;
          continue;
        }
        if (CmsDomUtil.hasClass(CmsContainerElement.CLASS_CONTAINER_ELEMENT_END_MARKER,elementRoot)) {
          child.removeFromParent();
          child=(Element)elementRoot.getNextSiblingElement();
          elementRoot.removeFromParent();
          continue;
        }
 else {
          Element endMarker=(Element)elementRoot.getNextSibling();
          while (!((endMarker == null) || ((endMarker.getNodeType() == Node.ELEMENT_NODE) && (CmsDomUtil.hasClass(CmsContainerElement.CLASS_CONTAINER_ELEMENT_END_MARKER,endMarker) || CmsDomUtil.hasClass(CmsContainerElement.CLASS_CONTAINER_ELEMENT_START_MARKER,endMarker))))) {
            Element temp=endMarker;
            endMarker=(Element)endMarker.getNextSibling();
            temp.removeFromParent();
          }
          if (endMarker == null) {
            elementRoot.removeFromParent();
            child.removeFromParent();
            child=null;
            continue;
          }
          if (CmsDomUtil.hasClass(CmsContainerElement.CLASS_CONTAINER_ELEMENT_START_MARKER,endMarker)) {
            elementRoot.removeFromParent();
            child.removeFromParent();
            child=endMarker;
          }
          CmsDomUtil.removeScriptTags(elementRoot);
          CmsContainerPageElementPanel containerElement=createElement(elementRoot,container,elementData);
          if (elementData.isNew()) {
            containerElement.setNewType(elementData.getResourceType());
          }
          container.adoptElement(containerElement);
          child.removeFromParent();
          child=(Element)endMarker.getNextSiblingElement();
          endMarker.removeFromParent();
        }
      }
 else       if (isGroupcontainerElement && (container instanceof CmsContainerPageContainer)) {
        CmsDomUtil.removeScriptTags(child);
        CmsGroupContainerElementPanel groupContainer=createGroupcontainer(child,container,elementData);
        groupContainer.setContainerId(container.getContainerId());
        container.adoptElement(groupContainer);
        consumeContainerElements(groupContainer);
        if (groupContainer.getWidgetCount() == 0) {
          groupContainer.addStyleName(I_CmsLayoutBundle.INSTANCE.containerpageCss().emptyGroupContainer());
        }
        addOptionBar(groupContainer);
        child=(Element)child.getNextSiblingElement();
      }
    }
 else {
      Element sibling=(Element)child.getNextSiblingElement();
      DOM.removeChild((Element)container.getElement(),child);
      child=sibling;
      continue;
    }
  }
}
