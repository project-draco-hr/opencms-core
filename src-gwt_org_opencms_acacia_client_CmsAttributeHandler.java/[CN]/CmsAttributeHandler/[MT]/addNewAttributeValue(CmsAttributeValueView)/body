{
  int maxOccurrence=getEntityType().getAttributeMaxOccurrence(m_attributeName);
  CmsEntityAttribute attribute=m_entity.getAttribute(m_attributeName);
  boolean mayHaveMore=((attribute == null) || (attribute.getValueCount() < maxOccurrence));
  if (mayHaveMore) {
    if (getAttributeType().isSimpleType()) {
      int valueIndex=reference.getValueIndex() + 1;
      String defaultValue=m_widgetService.getDefaultAttributeValue(m_attributeName,getSimplePath(valueIndex));
      I_CmsFormEditWidget widget=m_widgetService.getAttributeFormWidget(m_attributeName);
      boolean insertLast=false;
      if (reference.getElement().getNextSiblingElement() == null) {
        m_entity.addAttributeValue(m_attributeName,defaultValue);
        insertLast=true;
      }
 else {
        valueIndex=reference.getValueIndex() + 1;
        m_entity.insertAttributeValue(m_attributeName,defaultValue,valueIndex);
        m_widgetService.addChangedOrderPath(getSimplePath(-1));
      }
      CmsAttributeValueView valueWidget=reference;
      if (reference.hasValue()) {
        valueWidget=new CmsAttributeValueView(this,m_widgetService.getAttributeLabel(m_attributeName),m_widgetService.getAttributeHelp(m_attributeName));
        if (m_widgetService.isDisplaySingleLine(m_attributeName)) {
          valueWidget.setCompactMode(CmsAttributeValueView.COMPACT_MODE_SINGLE_LINE);
        }
        if (insertLast) {
          ((FlowPanel)reference.getParent()).add(valueWidget);
        }
 else {
          ((FlowPanel)reference.getParent()).insert(valueWidget,valueIndex);
        }
      }
      valueWidget.setValueWidget(widget,defaultValue,defaultValue,true);
    }
 else {
      CmsEntity value=m_vie.createEntity(null,getAttributeType().getId());
      insertValueAfterReference(value,reference);
    }
    CmsUndoRedoHandler handler=CmsUndoRedoHandler.getInstance();
    if (handler.isIntitalized()) {
      handler.addChange(m_entity.getId(),m_attributeName,reference.getValueIndex() + 1,ChangeType.add);
    }
  }
  updateButtonVisisbility();
}
