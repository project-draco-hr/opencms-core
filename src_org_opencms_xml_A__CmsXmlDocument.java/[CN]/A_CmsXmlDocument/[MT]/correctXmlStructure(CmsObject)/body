{
  Attribute schema=m_document.getRootElement().attribute(I_CmsXmlSchemaType.XSI_NAMESPACE_ATTRIBUTE_NO_SCHEMA_LOCATION);
  if (schema != null) {
    String schemaLocation=schema.getValue();
    String translatedSchema=OpenCms.getResourceManager().getXsdTranslator().translateResource(schemaLocation);
    if (!schemaLocation.equals(translatedSchema)) {
      schema.setValue(translatedSchema);
    }
  }
  Iterator<Locale> i=m_locales.iterator();
  while (i.hasNext()) {
    Locale locale=i.next();
    List<String> names=getNames(locale);
    List<I_CmsXmlContentValue> validValues=new ArrayList<I_CmsXmlContentValue>();
    Iterator<String> j=names.iterator();
    while (j.hasNext()) {
      String name=j.next();
      I_CmsXmlContentValue value=getValue(name,locale);
      if (value.isSimpleType()) {
        String content=value.getStringValue(cms);
        value.setStringValue(cms,content);
      }
      validValues.add(value);
    }
    if (isAutoCorrectionEnabled()) {
      if (validValues.size() < 1) {
        if (hasLocale(locale)) {
          removeLocale(locale);
        }
        addLocale(cms,locale);
      }
 else {
        List<Element> roots=new ArrayList<Element>();
        List<CmsXmlContentDefinition> rootCds=new ArrayList<CmsXmlContentDefinition>();
        List<Element> validElements=new ArrayList<Element>();
        Iterator<I_CmsXmlContentValue> it=validValues.iterator();
        while (it.hasNext()) {
          I_CmsXmlContentValue value=it.next();
          Element element=value.getElement();
          validElements.add(element);
          if (element.supportsParent()) {
            Element root=element.getParent();
            if ((root != null) && !roots.contains(root)) {
              CmsXmlContentDefinition rcd=value.getContentDefinition();
              if (rcd != null) {
                roots.add(root);
                rootCds.add(rcd);
              }
 else {
                throw new CmsXmlException(Messages.get().container(Messages.ERR_CORRECT_NO_CONTENT_DEF_3,value.getName(),value.getTypeName(),value.getPath()));
              }
            }
          }
        }
        for (int le=0; le < roots.size(); le++) {
          Element root=roots.get(le);
          CmsXmlContentDefinition cd=rootCds.get(le);
          List<List<Element>> nodeLists=new ArrayList<List<Element>>();
          boolean isMultipleChoice=cd.getSequenceType() == CmsXmlContentDefinition.SequenceType.MULTIPLE_CHOICE;
          if (isMultipleChoice) {
            List<Element> elements=CmsXmlGenericWrapper.elements(root);
            checkMaxOccurs(elements,cd.getChoiceMaxOccurs(),cd.getTypeName());
            nodeLists.add(elements);
          }
 else {
            for (            I_CmsXmlSchemaType type : cd.getTypeSequence()) {
              List<Element> elements=CmsXmlGenericWrapper.elements(root,type.getName());
              checkMaxOccurs(elements,type.getMaxOccurs(),type.getTypeName());
              nodeLists.add(elements);
            }
          }
          List<Element> nodeList=CmsXmlGenericWrapper.elements(root);
          nodeList.clear();
          Iterator<List<Element>> in=nodeLists.iterator();
          while (in.hasNext()) {
            List<Element> elements=in.next();
            nodeList.addAll(elements);
          }
          cd.addDefaultXml(cms,this,root,locale);
        }
      }
    }
    initDocument();
  }
  if (m_file != null) {
    m_file.setContents(marshal());
  }
  return m_file;
}
