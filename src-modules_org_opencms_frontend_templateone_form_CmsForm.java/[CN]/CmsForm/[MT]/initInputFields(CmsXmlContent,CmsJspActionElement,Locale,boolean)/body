{
  CmsObject cms=jsp.getCmsObject();
  List fieldValues=content.getValues(C_NODE_INPUTFIELD,locale);
  List fields=new ArrayList(fieldValues.size());
  Iterator i=fieldValues.iterator();
  while (i.hasNext()) {
    I_CmsXmlContentValue inputField=(I_CmsXmlContentValue)i.next();
    String inputFieldPath=inputField.getPath() + "/";
    CmsField field=new CmsField();
    String stringValue=content.getStringValue(cms,inputFieldPath + C_NODE_FIELDTYPE,locale);
    if (CmsStringUtil.isNotEmpty(stringValue)) {
      field.setType(stringValue);
    }
    field.setName(inputFieldPath.substring(0,inputFieldPath.length() - 1));
    stringValue=content.getStringValue(cms,inputFieldPath + C_NODE_FIELDLABEL,locale);
    if (CmsStringUtil.isNotEmpty(stringValue)) {
      field.setDescription(stringValue);
    }
    if (initial) {
      String fieldValue=content.getStringValue(cms,inputFieldPath + C_NODE_FIELDDEFAULTVALUE,locale);
      if (CmsStringUtil.isNotEmpty(fieldValue)) {
        field.setValue(CmsStringUtil.substituteMacros(fieldValue,new CmsStringMapper(cms,jsp.getJspContext())));
      }
    }
 else {
      if (!field.getType().equals(CmsField.C_TYPE_CHECKBOX)) {
        String fieldValue=jsp.getRequest().getParameter(field.getName());
        if (fieldValue == null) {
          fieldValue="";
        }
        field.setValue(fieldValue);
      }
    }
    if (!CmsField.C_TYPE_HIDDEN.equals(field.getType())) {
      stringValue=content.getStringValue(cms,inputFieldPath + C_NODE_FIELDVALIDATION,locale);
      if (CmsStringUtil.isNotEmpty(stringValue)) {
        field.setValidationExpression(stringValue);
      }
      stringValue=content.getStringValue(cms,inputFieldPath + C_NODE_FIELDMANDATORY,locale);
      boolean isMandatory=Boolean.valueOf(stringValue).booleanValue();
      field.setMandatory(isMandatory);
      if (isMandatory) {
        setHasMandatoryFields(isMandatory);
      }
      if (field.needsItems()) {
        String fieldValue=content.getStringValue(cms,inputFieldPath + C_NODE_FIELDDEFAULTVALUE,locale);
        if (CmsStringUtil.isNotEmpty(fieldValue)) {
          StringTokenizer T=new StringTokenizer(fieldValue,"|");
          List items=new ArrayList(T.countTokens());
          while (T.hasMoreTokens()) {
            String part=T.nextToken();
            boolean isPreselected=part.indexOf('*') != -1;
            String value="";
            String label="";
            String selected="";
            int delimPos=part.indexOf(':');
            if (delimPos != -1) {
              value=part.substring(0,delimPos);
              label=part.substring(delimPos + 1);
            }
 else {
              value=part;
              label=value;
            }
            if (isPreselected) {
              value=CmsStringUtil.substitute(value,"*","");
              label=CmsStringUtil.substitute(label,"*","");
            }
            if (initial) {
              if (isPreselected) {
                selected="true";
              }
            }
 else {
              selected=readSelectedFromRequest(jsp.getRequest(),field.getType(),field.getName(),value);
            }
            items.add(new CmsFieldItem(value,label,Boolean.valueOf(selected).booleanValue()));
          }
          field.setItems(items);
        }
 else {
          throw new Exception("No items specified for input field \"" + field.getName() + "\", type: "+ field.getType());
        }
      }
    }
    fields.add(field);
  }
  setFields(fields);
}
