{
  final String id=elementWidget.getId();
  m_controller.getElement(id,new I_CmsSimpleCallback<CmsContainerElementData>(){
    public void execute(    final CmsContainerElementData elementBean){
      Map<String,String> settings=elementBean.getSettings();
      Map<String,CmsXmlContentProperty> propertyConfig=elementBean.getSettingConfig();
      if (propertyConfig.size() == 0) {
        String message=Messages.get().key(Messages.GUI_NO_SETTINGS_0);
        String title=Messages.get().key(Messages.GUI_NO_SETTINGS_TITLE_0);
        (new CmsAlertDialog(title,message)).center();
        return;
      }
      final CmsForm form=new CmsForm(true);
      I_CmsFormHandler formHandler=new I_CmsFormHandler(){
        /** 
 * @see org.opencms.gwt.client.ui.input.form.I_CmsFormHandler#onSubmitForm(java.util.Map,java.util.Set)
 */
        public void onSubmitForm(        Map<String,String> fieldValues,        Set<String> editedFields){
          m_controller.reloadElementWithSettings(elementWidget,elementBean.getClientId(),CmsCollectionUtil.removeNullEntries(fieldValues));
        }
      }
;
      String title=Messages.get().key(Messages.GUI_PROPERTY_DIALOG_TITLE_0);
      CmsFormDialog dialog=new CmsFormDialog(title,form);
      Map<String,I_CmsFormField> formFields=CmsBasicFormField.createFields(propertyConfig.values());
      for (      I_CmsFormField field : formFields.values()) {
        String fieldId=field.getId();
        String initialValue=settings.get(fieldId);
        if (initialValue == null) {
          CmsXmlContentProperty propDef=propertyConfig.get(fieldId);
          initialValue=propDef.getDefault();
        }
        form.addField(field,initialValue);
      }
      form.render();
      dialog.setFormHandler(formHandler);
      dialog.center();
    }
  }
);
}
