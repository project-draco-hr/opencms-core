{
  super((JFrame)null,promptTask.getTitle(),true);
  m_promptTask=promptTask;
  m_label=new JLabel(m_promptTask.getPrompt());
  addWindowListener(new WindowAdapter(){
    public void windowClosed(    WindowEvent e){
      setVisible(false);
    }
  }
);
  getRootPane().setDefaultButton(m_ok);
  Container contentPane=getContentPane();
  contentPane.setLayout(new BoxLayout(contentPane,BoxLayout.Y_AXIS));
  m_label.setBorder(m_border);
  if (!m_promptTask.isSingleSelection()) {
    JPanel p1=new JPanel();
    p1.add(new JLabel("Select: "));
    m_selAll.addActionListener(this);
    p1.add(m_selAll);
    m_selNone.addActionListener(this);
    p1.add(m_selNone);
    JPanel p=new JPanel(new BorderLayout());
    p.add(m_label,BorderLayout.NORTH);
    p.add(p1,BorderLayout.SOUTH);
    contentPane.add(p);
  }
 else {
    getContentPane().add(m_label);
  }
  JScrollPane scrollpane=new JScrollPane(m_content);
  scrollpane.setBorder(m_border);
  scrollpane.setPreferredSize(new Dimension(300,800));
  this.parseModuleList();
  TreeModel treeModel=createTree();
  m_tree=new SelectionTree();
  m_tree.setModel(treeModel);
  m_tree.setRootVisible(false);
  m_tree.setShowsRootHandles(true);
  expandTree(new TreePath(treeModel.getRoot()));
  selectDefaultNodes((DefaultMutableTreeNode)treeModel.getRoot(),"",new TreePath(treeModel.getRoot()));
  m_content.setLayout(new GridLayout(1,1));
  m_content.add(m_tree);
  m_content.setBorder(BorderFactory.createLoweredBevelBorder());
  contentPane.add(scrollpane);
  m_buttons.setBorder(BorderFactory.createEmptyBorder(C_BORDER_SIZE,C_BORDER_SIZE,C_BORDER_SIZE / 2,C_BORDER_SIZE));
  m_ok.addActionListener(this);
  m_buttons.add(m_ok);
  m_cancel.addActionListener(this);
  m_buttons.add(m_cancel);
  getContentPane().add(m_buttons,BorderLayout.SOUTH);
  pack();
}
