{
  center();
  setVisible(true);
  StringBuffer ret=new StringBuffer();
  TreePath[] pathArr=m_tree.getSelectionPaths();
  if (pathArr == null) {
    pathArr=new TreePath[0];
  }
  TreePath path;
  StringBuffer pathString;
  DefaultMutableTreeNode node;
  for (int i=0; i < pathArr.length; i++) {
    pathString=new StringBuffer();
    path=pathArr[i];
    Object[] entries=path.getPath();
    for (int j=1; j < entries.length; j++) {
      pathString.append(entries[j]);
      if (j < entries.length - 1) {
        pathString.append(".");
      }
    }
    node=(DefaultMutableTreeNode)path.getLastPathComponent();
    if (node.isLeaf()) {
      ret.append(pathString.toString());
      ret.append(CmsAntTaskSelectionTreePrompt.LIST_SEPARATOR);
    }
 else {
      if (m_allModuleList.contains(pathString.toString())) {
        ret.append(pathString.toString());
        ret.append(CmsAntTaskSelectionTreePrompt.LIST_SEPARATOR);
      }
 else {
      }
      ret.append(getSubpaths(node,pathString.toString()));
    }
  }
  dispose();
  if (m_aborted || ret.toString().trim().length() < CmsAntTaskSelectionTreePrompt.LIST_SEPARATOR.length()) {
    return null;
  }
 else {
    return ret.toString();
  }
}
