{
  DefaultMutableTreeNode root=new DefaultMutableTreeNode("root");
  TreeModel tm=new DefaultTreeModel(root);
  Iterator itModules=m_allModuleList.iterator();
  StringTokenizer itPath;
  Enumeration childEnum;
  String pathElement;
  DefaultMutableTreeNode node, child;
  boolean found=false;
  while (itModules.hasNext()) {
    itPath=new StringTokenizer((String)itModules.next(),".");
    node=root;
    while (itPath.hasMoreTokens()) {
      pathElement=itPath.nextToken();
      childEnum=node.children();
      found=false;
      while (childEnum.hasMoreElements()) {
        child=(DefaultMutableTreeNode)childEnum.nextElement();
        if (pathElement.equals(child.getUserObject())) {
          node=child;
          found=true;
          break;
        }
      }
      if (!found) {
        child=new DefaultMutableTreeNode();
        child.setUserObject(pathElement);
        node.add(child);
        node=child;
      }
    }
  }
  return tm;
}
