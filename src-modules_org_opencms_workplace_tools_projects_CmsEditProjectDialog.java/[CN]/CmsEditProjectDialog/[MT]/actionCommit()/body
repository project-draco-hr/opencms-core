{
  List errors=new ArrayList();
  try {
    if (m_project.getId() == 0) {
      CmsProject newProject=getCms().createProject(m_project.getName(),m_project.getDescription(),this.getUserGroup(),this.getManagerGroup(),m_project.getType());
      m_project=newProject;
      CmsProject currentProject=getCms().getRequestContext().currentProject();
      getCms().getRequestContext().setCurrentProject(m_project);
      try {
        Iterator it=this.getResources().iterator();
        while (it.hasNext()) {
          getCms().copyResourceToProject(it.next().toString());
        }
      }
 catch (      CmsException e) {
        List projectResources=getCms().readProjectResources(m_project);
        if (projectResources == null || projectResources.isEmpty()) {
          getCms().deleteProject(m_project.getId());
        }
        throw e;
      }
 finally {
        getCms().getRequestContext().setCurrentProject(currentProject);
      }
    }
 else {
      m_project.setGroupId(getCms().readGroup(getUserGroup()).getId());
      m_project.setManagerGroupId(getCms().readGroup(getManagerGroup()).getId());
      getCms().writeProject(m_project);
    }
    Map objects=(Map)getSettings().getListObject();
    if (objects != null) {
      objects.remove(CmsProjectsList.class.getName());
    }
  }
 catch (  Throwable t) {
    errors.add(t);
  }
}
