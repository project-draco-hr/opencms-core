{
  CmsRequestContext context=cms.getRequestContext();
  int publishProjectId=context.currentProject().getId();
  boolean hasPublishPermissions;
  if (publishList.isDirectPublish()) {
    CmsResource directPublishResource=publishList.getDirectPublishResource();
    hasPublishPermissions=hasPublishPermissions(context,directPublishResource);
  }
 else {
    hasPublishPermissions=hasPublishPermissions(context,null);
  }
  if (hasPublishPermissions) {
    CmsDbContext dbc=m_dbContextFactory.getDbContext(context);
    try {
      m_driverManager.publishProject(cms,dbc,publishList,report);
    }
  finally {
      dbc.clear();
    }
  }
 else   if (publishProjectId == I_CmsConstants.C_PROJECT_ONLINE_ID) {
    throw new CmsSecurityException("[" + getClass().getName() + "] could not publish project "+ publishProjectId,CmsSecurityException.C_SECURITY_NO_MODIFY_IN_ONLINE_PROJECT);
  }
 else   if (!isAdmin(context) && !isManagerOfProject(context)) {
    throw new CmsSecurityException("[" + getClass().getName() + "] could not publish project "+ publishProjectId,CmsSecurityException.C_SECURITY_PROJECTMANAGER_PRIVILEGES_REQUIRED);
  }
 else {
    throw new CmsSecurityException("[" + getClass().getName() + "] could not publish project "+ publishProjectId,CmsSecurityException.C_SECURITY_NO_PERMISSIONS);
  }
  return publishList.getPublishHistoryId();
}
