{
  if (dbContextFactory == null) {
    throw new CmsInitException(org.opencms.main.Messages.get().container(org.opencms.main.Messages.ERR_CRITICAL_NO_DB_CONTEXT_0));
  }
  m_dbContextFactory=dbContextFactory;
  CmsSystemConfiguration systemConfiguration=(CmsSystemConfiguration)configurationManager.getConfiguration(CmsSystemConfiguration.class);
  CmsCacheSettings settings=systemConfiguration.getCacheSettings();
  String className=settings.getCacheKeyGenerator();
  try {
    m_keyGenerator=(I_CmsCacheKey)Class.forName(className).newInstance();
  }
 catch (  Exception e) {
    throw new CmsInitException(org.opencms.main.Messages.get().container(org.opencms.main.Messages.ERR_CRITICAL_CLASS_CREATION_1,className));
  }
  m_driverManager=CmsDriverManager.newInstance(configurationManager,this,dbContextFactory,publishEngine);
  try {
    m_driverManager.init(configurationManager);
    if (CmsLog.INIT.isInfoEnabled()) {
      CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_DRIVER_MANAGER_START_PHASE4_OK_0));
    }
  }
 catch (  Exception exc) {
    CmsMessageContainer message=Messages.get().container(Messages.LOG_ERR_DRIVER_MANAGER_START_0);
    if (LOG.isFatalEnabled()) {
      LOG.fatal(message.key(),exc);
    }
    throw new CmsInitException(message,exc);
  }
  m_lockManager=m_driverManager.getLockManager();
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_SECURITY_MANAGER_INIT_0));
  }
}
