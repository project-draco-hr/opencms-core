{
  if (dbContextFactory == null) {
    throw new CmsInitException(org.opencms.main.Messages.get().container(org.opencms.main.Messages.ERR_CRITICAL_NO_DB_CONTEXT_0));
  }
  m_dbContextFactory=dbContextFactory;
  Map configuration=configurationManager.getConfiguration();
  ExtendedProperties config;
  if (configuration instanceof ExtendedProperties) {
    config=(ExtendedProperties)configuration;
  }
 else {
    config=new ExtendedProperties();
    config.putAll(configuration);
  }
  String className=config.getString(I_CmsConstants.C_CONFIGURATION_CACHE + ".keygenerator");
  try {
    m_keyGenerator=(I_CmsCacheKey)Class.forName(className).newInstance();
  }
 catch (  Exception e) {
    throw new CmsInitException(org.opencms.main.Messages.get().container(org.opencms.main.Messages.ERR_CRITICAL_CLASS_CREATION_1,className));
  }
  LRUMap hashMap=new LRUMap(config.getInteger(I_CmsConstants.C_CONFIGURATION_CACHE + ".permissions",1000));
  m_permissionCache=Collections.synchronizedMap(hashMap);
  if (OpenCms.getMemoryMonitor().enabled()) {
    OpenCms.getMemoryMonitor().register(this.getClass().getName() + "." + "m_permissionCache",hashMap);
  }
  try {
    m_driverManager=CmsDriverManager.newInstance(configurationManager,this,dbContextFactory);
  }
 catch (  CmsException e) {
    throw new CmsInitException(org.opencms.main.Messages.get().container(org.opencms.main.Messages.ERR_CRITICAL_INIT_DATABASE_0));
  }
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Security manager init: ok - finished");
  }
}
