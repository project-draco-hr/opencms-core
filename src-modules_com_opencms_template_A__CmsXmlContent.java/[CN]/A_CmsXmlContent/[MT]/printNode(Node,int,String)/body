{
  if (C_PRINTNODES) {
    final String badChars="\n";
    final String[] goodChars={"\\n"};
    int nodeType=node.getNodeType();
    if (nodeType == Node.ELEMENT_NODE) {
      String nodeName=node.getNodeName();
      if (!"".equals(nodeName)) {
        if (depth > 2) {
          path+=".";
        }
        if (depth > 1) {
          path+=nodeName;
        }
      }
    }
 else     if (nodeType == Node.TEXT_NODE) {
      String nodeValue=node.getNodeValue();
      if (!"".equals(nodeValue)) {
        int nodeValueLength=nodeValue.length();
        String nodeValueNoBadChars="";
        for (int i=0; i < nodeValueLength; i++) {
          int index=0;
          if ((index=badChars.indexOf(nodeValue.charAt(i))) != -1) {
            nodeValueNoBadChars+=goodChars[index];
          }
 else {
            nodeValueNoBadChars+=nodeValue.charAt(i);
          }
        }
        if (node.getPreviousSibling() == null) {
          System.out.print(path + "=");
        }
        System.out.print(nodeValueNoBadChars);
        if (node.getNextSibling() == null) {
          System.out.print("\n");
        }
      }
    }
 else     if (nodeType == Node.CDATA_SECTION_NODE) {
      CDATASection cdata=(CDATASection)node;
      String nodeValue=cdata.getData();
      if (!"".equals(nodeValue)) {
        int nodeValueLength=nodeValue.length();
        String nodeValueNoBadChars="";
        for (int i=0; i < nodeValueLength; i++) {
          int index=0;
          if ((index=badChars.indexOf(nodeValue.charAt(i))) != -1) {
            nodeValueNoBadChars+=goodChars[index];
          }
 else {
            nodeValueNoBadChars+=nodeValue.charAt(i);
          }
        }
        if (node.getPreviousSibling() == null) {
          System.out.print(path + "=");
        }
        System.out.print(nodeValueNoBadChars);
        if (node.getNextSibling() == null) {
          System.out.print("\n");
        }
      }
    }
    NodeList nodeChildren=node.getChildNodes();
    if (nodeChildren != null) {
      for (int i=0; i < nodeChildren.getLength(); i++) {
        printNode(nodeChildren.item(i),depth + 1,path);
      }
    }
  }
}
