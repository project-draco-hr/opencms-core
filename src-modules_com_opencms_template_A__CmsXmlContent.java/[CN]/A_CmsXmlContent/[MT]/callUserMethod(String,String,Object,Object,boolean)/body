{
  Object[] params=new Object[]{m_cms,parameter,this,userObj};
  Object result=null;
  if (callingObject == null) {
    throwException("You are trying to call the user method \"" + methodName + "\" without giving an object containing this method. "+ "Please select a callingObject in your getProcessedData or getProcessedDataValue call.",CmsLegacyException.C_XML_NO_USER_METHOD);
  }
  if (CmsXmlTemplateLoader.isElementCacheEnabled() && !resolveMethods) {
    try {
      if (callingObject.getClass().getMethod("getMethodCacheDirectives",new Class[]{CmsObject.class,String.class}).invoke(callingObject,new Object[]{m_cms,methodName}) != null) {
        return null;
      }
    }
 catch (    NoSuchMethodException e) {
      throwException("Method getMethodeCacheDirectives was not found in class " + callingObject.getClass().getName() + ".",CmsLegacyException.C_XML_NO_USER_METHOD);
    }
catch (    InvocationTargetException targetEx) {
      Throwable e=targetEx.getTargetException();
      if (!(e instanceof CmsException)) {
        throwException("Method getMethodeCacheDirectives throwed an exception. " + e,CmsLegacyException.C_UNKNOWN_EXCEPTION);
      }
 else {
        throw (CmsException)e;
      }
    }
catch (    Exception exc2) {
      throwException("Method getMethodeCacheDirectives was found but could not be invoked. " + exc2,CmsLegacyException.C_XML_NO_USER_METHOD);
    }
  }
  try {
    result=getUserMethod(methodName,callingObject).invoke(callingObject,params);
  }
 catch (  NoSuchMethodException exc) {
    throwException("User method " + methodName + " was not found in class "+ callingObject.getClass().getName()+ ".",CmsLegacyException.C_XML_NO_USER_METHOD);
  }
catch (  InvocationTargetException targetEx) {
    Throwable e=targetEx.getTargetException();
    if (!(e instanceof CmsException)) {
      throwException("User method " + methodName + " throwed an exception. "+ e,CmsLegacyException.C_UNKNOWN_EXCEPTION);
    }
 else {
      throw (CmsException)e;
    }
  }
catch (  Exception exc2) {
    throwException("User method " + methodName + " was found but could not be invoked. "+ exc2,CmsLegacyException.C_XML_NO_USER_METHOD);
  }
  if ((result != null) && (!(result instanceof String || result instanceof CmsProcessedString || result instanceof Integer|| result instanceof NodeList|| result instanceof byte[]))) {
    throwException("User method " + methodName + " in class "+ callingObject.getClass().getName()+ " returned an unsupported Object: "+ result.getClass().getName(),CmsLegacyException.C_XML_PROCESS_ERROR);
  }
  return (result);
}
