{
  FlowPanel main=new FlowPanel();
  m_scrollPanel=GWT.create(CmsScrollPanel.class);
  m_scrollPanel.addStyleName(I_CmsLayoutBundle.INSTANCE.widgetCss().radioButtonPanel());
  Map<String,CmsPair<String,Boolean>> list=parse(config);
  m_defaultCheckBox=new LinkedList<CmsCheckBox>();
  m_checkboxes=new LinkedList<CmsCheckBox>();
  if (m_requiresactivation) {
    buildActivationButton();
    SimplePanel activation=new SimplePanel(m_activation);
    activation.addStyleName(I_CmsLayoutBundle.INSTANCE.widgetCss().radioButtonPanel());
    activation.getElement().getStyle().setMarginBottom(5,Unit.PX);
    main.add(activation);
  }
  FocusHandler focusHandler=new FocusHandler(){
    public void onFocus(    FocusEvent event){
      CmsDomUtil.fireFocusEvent(CmsMultiSelectWidget.this);
    }
  }
;
  for (  Map.Entry<String,CmsPair<String,Boolean>> entry : list.entrySet()) {
    CmsCheckBox checkbox=new CmsCheckBox(entry.getKey());
    checkbox.setInternalValue(entry.getValue().getFirst());
    if ((entry.getValue().getSecond()).booleanValue()) {
      m_defaultCheckBox.add(checkbox);
    }
    checkbox.addValueChangeHandler(new ValueChangeHandler<Boolean>(){
      public void onValueChange(      ValueChangeEvent<Boolean> event){
        fireChangeEvent();
      }
    }
);
    checkbox.addStyleName(I_CmsLayoutBundle.INSTANCE.widgetCss().checkboxlabel());
    checkbox.getButton().addFocusHandler(focusHandler);
    m_checkboxes.add(checkbox);
    m_panel.add(checkbox);
  }
  m_scrollPanel.add(m_panel);
  m_scrollPanel.setResizable(false);
  int height=(m_rowsToShow * 17);
  if (m_checkboxes.size() < m_rowsToShow) {
    height=(m_checkboxes.size() * 17);
  }
  m_scrollPanel.setDefaultHeight(height);
  m_scrollPanel.setHeight(height + "px");
  main.add(m_scrollPanel);
  initWidget(main);
  if (m_requiresactivation) {
    setAllCheckboxEnabled(false);
  }
}
