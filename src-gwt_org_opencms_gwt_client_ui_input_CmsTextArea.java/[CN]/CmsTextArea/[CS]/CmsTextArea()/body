{
  super();
  initWidget(m_panel);
  m_panel.add(m_textAreaContainer);
  m_textAreaContainer.setResizable(true);
  m_textAreaContainer.getElement().getStyle().setHeight(m_textArea.getOffsetHeight(),Unit.PX);
  m_fadePanel.addStyleName(I_CmsInputLayoutBundle.INSTANCE.inputCss().inputTextAreaFaider());
  m_textAreaContainer.add(m_textArea);
  m_fadePanel.addDomHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      m_textArea.setFocus(true);
    }
  }
,ClickEvent.getType());
  m_textArea.addKeyUpHandler(new KeyUpHandler(){
    public void onKeyUp(    KeyUpEvent event){
      String string=m_textArea.getText();
      String searchString="\n";
      int occurences=0;
      if (0 != searchString.length()) {
        for (int index=string.indexOf(searchString,0); index != -1; index=string.indexOf(searchString,index + 1)) {
          occurences++;
        }
      }
      String[] splittext=m_textArea.getText().split("\\n");
      for (int i=0; i < splittext.length; i++) {
        occurences+=(splittext[i].length() * 6.77) / m_textArea.getOffsetWidth();
      }
      int height=occurences + 1;
      if (m_defaultRows > height) {
        height=m_defaultRows;
      }
      m_textArea.setVisibleLines(height);
      m_textAreaContainer.onResize();
      fireValueChangedEvent(false);
    }
  }
);
  m_textArea.addValueChangeHandler(new ValueChangeHandler<String>(){
    public void onValueChange(    ValueChangeEvent<String> event){
      fireValueChangedEvent(false);
    }
  }
);
  m_panel.add(m_error);
  m_textAreaContainer.addStyleName(I_CmsLayoutBundle.INSTANCE.generalCss().cornerAll());
  m_textArea.addFocusHandler(new FocusHandler(){
    public void onFocus(    FocusEvent event){
      m_panel.remove(m_fadePanel);
      m_panel.getElement().setTitle("");
    }
  }
);
  m_textArea.addBlurHandler(new BlurHandler(){
    public void onBlur(    BlurEvent event){
      String string=m_textArea.getText();
      String searchString="\n";
      int occurences=0;
      if (0 != searchString.length()) {
        for (int index=string.indexOf(searchString,0); index != -1; index=string.indexOf(searchString,index + 1)) {
          occurences++;
        }
      }
      String[] splittext=m_textArea.getText().split("\\n");
      for (int i=0; i < splittext.length; i++) {
        occurences+=(splittext[i].length() * 6.88) / m_textArea.getOffsetWidth();
      }
      int height=occurences + 1;
      if (m_defaultRows < height) {
        m_panel.add(m_fadePanel);
        m_panel.getElement().setTitle(string);
      }
      m_textAreaContainer.scrollToTop();
    }
  }
);
}
