{
  CmsObject cms=getCmsObject();
  echo("Testing undo changes after a folder was moved and a file in the folder edited");
  String source="/folder1/";
  String destination="/folder1_undo2/";
  String newFile="newfile.html";
  storeResources(cms,source,true);
  cms.lockResource(source);
  cms.moveResource(source,destination);
  cms.createResource(destination + newFile,CmsResourceTypePlain.getStaticTypeId());
  cms.undoChanges(destination,CmsResource.UNDO_MOVE_CONTENT_RECURSIVE);
  assertFilter(cms,source,OpenCmsTestResourceFilter.FILTER_UNDOCHANGES_ALL);
  assertProject(cms,source,cms.getRequestContext().currentProject());
  Iterator subresources=cms.readResources(source,CmsResourceFilter.ALL).iterator();
  while (subresources.hasNext()) {
    CmsResource res=(CmsResource)subresources.next();
    String resName=cms.getSitePath(res);
    if (resName.equals(source + newFile)) {
      assertState(cms,source + newFile,CmsResource.STATE_NEW);
    }
 else {
      assertFilter(cms,resName,OpenCmsTestResourceFilter.FILTER_UNDOCHANGES_ALL);
      assertProject(cms,resName,cms.getRequestContext().currentProject());
    }
  }
  assertFalse(cms.existsResource(destination));
  assertTrue(cms.existsResource(source + newFile));
  cms.unlockProject(cms.getRequestContext().currentProject().getUuid());
  OpenCms.getPublishManager().publishProject(cms);
  OpenCms.getPublishManager().waitWhileRunning();
}
