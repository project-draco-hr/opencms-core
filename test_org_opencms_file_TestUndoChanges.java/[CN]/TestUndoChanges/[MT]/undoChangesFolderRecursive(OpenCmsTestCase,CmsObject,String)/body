{
  tc.createStorage("undoChanges");
  tc.switchStorage("undoChanges");
  tc.storeResources(cms,resource1);
  tc.switchStorage(OpenCmsTestResourceStorage.DEFAULT_STORAGE);
  CmsProperty property1=new CmsProperty("Title","undoChanges",null);
  TestProperty.writeProperty(tc,cms,resource1,property1);
  List subresources=cms.readResources(resource1,CmsResourceFilter.ALL);
  Iterator i=subresources.iterator();
  while (i.hasNext()) {
    CmsResource res=(CmsResource)i.next();
    String resName=cms.getSitePath(res);
    TestProperty.writeProperty(tc,cms,resName,property1);
  }
  cms.lockResource(resource1);
  cms.undoChanges(resource1,CmsResource.UNDO_CONTENT_RECURSIVE);
  cms.unlockResource(resource1);
  tc.switchStorage(OpenCmsTestResourceStorage.GLOBAL_STORAGE);
  tc.assertFilter(cms,resource1,OpenCmsTestResourceFilter.FILTER_UNDOCHANGES_ALL);
  tc.assertProject(cms,resource1,cms.getRequestContext().getCurrentProject());
  Iterator j=subresources.iterator();
  while (j.hasNext()) {
    CmsResource res=(CmsResource)j.next();
    String resName=cms.getSitePath(res);
    tc.assertFilter(cms,resName,OpenCmsTestResourceFilter.FILTER_UNDOCHANGES_ALL);
    tc.assertProject(cms,resName,cms.getRequestContext().getCurrentProject());
  }
}
