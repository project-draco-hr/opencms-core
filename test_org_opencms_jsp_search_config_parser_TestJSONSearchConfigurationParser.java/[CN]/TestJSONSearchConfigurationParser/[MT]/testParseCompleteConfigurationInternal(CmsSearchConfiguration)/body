{
  Map<String,String> additionalParameters=new HashMap<String,String>(2);
  additionalParameters.put("p1","fq=lastmodified:[%(value) TO *]");
  additionalParameters.put("p2","fq=%(value)");
  I_CmsSearchConfigurationCommon commonConfig=new CmsSearchConfigurationCommon("querytest","lastquerytest",Boolean.TRUE,"reloadedparam",Boolean.FALSE,Boolean.TRUE,"content_en:%(query) OR content_de:%(query) OR spell:%(query) OR Title_prop:%(query)","Solr Test Index","Solr Test Core","fq=type:plain",additionalParameters,Boolean.TRUE,Boolean.TRUE);
  ConfigurationTester.testGeneralConfiguration(commonConfig,config.getGeneralConfig());
  I_CmsSearchConfigurationPagination paginationConfig=new CmsSearchConfigurationPagination("pageparam",Integer.valueOf(20),Integer.valueOf(9));
  ConfigurationTester.testPaginationConfiguration(paginationConfig,config.getPaginationConfig());
  I_CmsSearchConfigurationSortOption sortOption1=new CmsSearchConfigurationSortOption("lastmodified descending","sort1","lastmodified desc");
  I_CmsSearchConfigurationSortOption sortOption2=new CmsSearchConfigurationSortOption(null,null,"lastmodified desc");
  List<I_CmsSearchConfigurationSortOption> sortOptions=new ArrayList<I_CmsSearchConfigurationSortOption>(2);
  sortOptions.add(sortOption1);
  sortOptions.add(sortOption2);
  I_CmsSearchConfigurationSorting sortingConfig=new CmsSearchConfigurationSorting("sortparam",sortOptions,sortOption1);
  ConfigurationTester.testSortingConfiguration(sortingConfig,config.getSortConfig());
  List<String> preselection=new ArrayList<String>(2);
  preselection.add("location/europe/");
  preselection.add("topic/");
  I_CmsSearchConfigurationFacetField fieldFacet1=new CmsSearchConfigurationFacetField("category_exact","category",Integer.valueOf(1),Integer.valueOf(6),"location/","Categories",SortOrder.index,"nonsense - %(value)",Boolean.TRUE,preselection,Boolean.TRUE);
  Collection<String> facetNames=new ArrayList<String>(5);
  facetNames.add("category");
  facetNames.add("Keywords");
  facetNames.add("modification");
  facetNames.add("size");
  facetNames.add("query_query");
  fieldFacet1.propagateAllFacetNames(facetNames);
  I_CmsSearchConfigurationFacetField fieldFacet2=new CmsSearchConfigurationFacetField("Keywords",null,null,null,null,null,null,null,null,null,null);
  Map<String,I_CmsSearchConfigurationFacetField> actualFieldFacetConfigs=config.getFieldFacetConfigs();
  assertEquals(2,actualFieldFacetConfigs.size());
  ConfigurationTester.testFieldFacetConfiguration(fieldFacet1,actualFieldFacetConfigs.get("category"));
  ConfigurationTester.testFieldFacetConfiguration(fieldFacet2,actualFieldFacetConfigs.get("Keywords"));
  Collection<I_CmsSearchConfigurationFacetRange.Other> other=new ArrayList<I_CmsSearchConfigurationFacetRange.Other>(5);
  other.add(Other.before);
  other.add(Other.after);
  other.add(Other.between);
  other.add(Other.all);
  other.add(Other.none);
  preselection.clear();
  preselection.add("2015-01-01T00:00:00Z");
  preselection.add("2016-01-01T00:00:00Z");
  I_CmsSearchConfigurationFacetRange rangeFacet1=new CmsSearchConfigurationFacetRange("lastmodified","NOW/MONTH-20MONTHS","NOW/MONTH","+1MONTHS",other,Boolean.FALSE,"modification",Integer.valueOf(1),"Date lastmodified",Boolean.TRUE,preselection,Boolean.TRUE);
  rangeFacet1.propagateAllFacetNames(facetNames);
  I_CmsSearchConfigurationFacetRange rangeFacet2=new CmsSearchConfigurationFacetRange("size","0","1000000","1000",null,null,null,null,null,null,null,null);
  Map<String,I_CmsSearchConfigurationFacetRange> actualRangeFacets=config.getRangeFacetConfigs();
  assertEquals(2,actualFieldFacetConfigs.size());
  ConfigurationTester.testRangeFacetConfiguration(rangeFacet1,actualRangeFacets.get("modification"));
  ConfigurationTester.testRangeFacetConfiguration(rangeFacet2,actualRangeFacets.get("size"));
  preselection.clear();
  preselection.add("created:[NOW-1MONTH TO NOW]");
  preselection.add("created:[* TO NOW-1MONTHS]");
  List<I_CmsFacetQueryItem> queries=new ArrayList<I_CmsFacetQueryItem>(3);
  queries.add(new CmsFacetQueryItem("created:[* TO NOW-1YEARS]","older than one year"));
  queries.add(new CmsFacetQueryItem("created:[* TO NOW-1MONTHS]","older than one month"));
  queries.add(new CmsFacetQueryItem("created:[NOW-1MONTH TO NOW]",null));
  I_CmsSearchConfigurationFacetQuery queryFacet=new CmsSearchConfigurationFacetQuery(queries,"Creation date",Boolean.TRUE,preselection,Boolean.TRUE);
  queryFacet.propagateAllFacetNames(facetNames);
  ConfigurationTester.testQueryFacetConfiguration(queryFacet,config.getQueryFacetConfig());
  I_CmsSearchConfigurationHighlighting highlightingConfig=new CmsSearchConfigurationHighlighting("content_en",Integer.valueOf(2),Integer.valueOf(123),"content",Integer.valueOf(124),"<strong>","</strong>","simple","gap",Boolean.TRUE);
  ConfigurationTester.testHighlightingConfiguration(highlightingConfig,config.getHighlighterConfig());
  I_CmsSearchConfigurationDidYouMean didYouMeanConfig=new CmsSearchConfigurationDidYouMean("dymparam",Boolean.FALSE,Integer.valueOf(7));
  ConfigurationTester.testDidYouMeanConfiguration(didYouMeanConfig,config.getDidYouMeanConfig());
}
