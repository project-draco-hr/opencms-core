{
  Element file=m_docXml.createElement(C_EXPORT_TAG_FILE);
  m_filesElement.appendChild(file);
  if (resource.isFile()) {
    addElement(m_docXml,file,C_EXPORT_TAG_SOURCE,getSourceFilename(m_cms.readAbsolutePath(resource)));
  }
 else {
    m_report.print(m_report.key("report.exporting"),I_CmsReport.C_FORMAT_NOTE);
    m_report.print(m_cms.readAbsolutePath(resource));
    m_report.print(m_report.key("report.dots"),I_CmsReport.C_FORMAT_NOTE);
    m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
  }
  addElement(m_docXml,file,C_EXPORT_TAG_DESTINATION,getSourceFilename(m_cms.readAbsolutePath(resource)));
  addElement(m_docXml,file,C_EXPORT_TAG_TYPE,m_cms.getResourceType(resource.getType()).getResourceTypeName());
  addElement(m_docXml,file,C_EXPORT_TAG_LINK,String.valueOf(resource.getVfsLinkType()));
  addElement(m_docXml,file,C_EXPORT_TAG_UUIDSTRUCTURE,resource.getId().toString());
  addElement(m_docXml,file,C_EXPORT_TAG_UUIDRESOURCE,resource.getResourceId().toString());
  addElement(m_docXml,file,C_EXPORT_TAG_UUIDCONTENT,resource.getFileId().toString());
  addElement(m_docXml,file,C_EXPORT_TAG_DATELASTMODIFIED,String.valueOf(resource.getDateLastModified()));
  addElement(m_docXml,file,C_EXPORT_TAG_USERLASTMODIFIED,resource.getUserLastModified().toString());
  addElement(m_docXml,file,C_EXPORT_TAG_DATECREATED,String.valueOf(resource.getDateCreated()));
  addElement(m_docXml,file,C_EXPORT_TAG_USERCREATED,resource.getUserCreated().toString());
  addElement(m_docXml,file,C_EXPORT_TAG_FLAGS,String.valueOf(resource.getFlags()));
  Element properties=m_docXml.createElement(C_EXPORT_TAG_PROPERTIES);
  file.appendChild(properties);
  Map fileProperties=m_cms.readProperties(m_cms.readAbsolutePath(resource));
  Iterator i=fileProperties.keySet().iterator();
  while (i.hasNext()) {
    String key=(String)i.next();
    if ((!m_exportingModuleData) || (!I_CmsConstants.C_PROPERTY_CHANNELID.equals(key))) {
      Element property=m_docXml.createElement(C_EXPORT_TAG_PROPERTY);
      properties.appendChild(property);
      addElement(m_docXml,property,C_EXPORT_TAG_NAME,key);
      addElement(m_docXml,property,C_EXPORT_TAG_TYPE,m_cms.readPropertydefinition(key,resource.getType()).getType() + "");
      addCdataElement(m_docXml,property,C_EXPORT_TAG_VALUE,(String)fileProperties.get(key));
    }
  }
  Element acentries=m_docXml.createElement(C_EXPORT_TAG_ACCESSCONTROL_ENTRIES);
  file.appendChild(acentries);
  Vector fileAcEntries=m_cms.getAccessControlEntries(m_cms.readAbsolutePath(resource),false);
  i=fileAcEntries.iterator();
  while (i.hasNext()) {
    CmsAccessControlEntry ace=(CmsAccessControlEntry)i.next();
    Element acentry=m_docXml.createElement(C_EXPORT_TAG_ACCESSCONTROL_ENTRY);
    acentries.appendChild(acentry);
    addElement(m_docXml,acentry,C_EXPORT_TAG_ACCESSCONTROL_PRINCIPAL,ace.getPrincipal().toString());
    addElement(m_docXml,acentry,C_EXPORT_TAG_FLAGS,new Integer(ace.getFlags()).toString());
    Element acpermissionset=m_docXml.createElement(C_EXPORT_TAG_ACCESSCONTROL_PERMISSIONSET);
    acentry.appendChild(acpermissionset);
    addElement(m_docXml,acpermissionset,C_EXPORT_TAG_ACCESSCONTROL_ALLOWEDPERMISSIONS,new Integer(ace.getAllowedPermissions()).toString());
    addElement(m_docXml,acpermissionset,C_EXPORT_TAG_ACCESSCONTROL_DENIEDPERMISSIONS,new Integer(ace.getDeniedPermissions()).toString());
  }
}
