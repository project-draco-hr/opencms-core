{
  try {
    try {
      wait(200);
    }
 catch (    InterruptedException e) {
    }
    if (m_engineState != CmsPublishEngineState.ENGINE_STARTED) {
      return;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().getBundle().key(Messages.LOG_PUBLISH_ENGINE_RUNNING_0));
    }
    if ((m_driverManager == null) || (m_dbContextFactory == null)) {
      LOG.error(Messages.get().getBundle().key(Messages.ERR_PUBLISH_ENGINE_NOT_INITIALIZED_0));
      return;
    }
    if (m_currentPublishThread == null) {
      if (!m_publishQueue.isEmpty()) {
        CmsPublishJobInfoBean publishJob=m_publishQueue.next();
        m_currentPublishThread=new CmsPublishThread(this,publishJob);
        m_currentPublishThread.start();
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_PUBLISH_ENGINE_NO_RUNNING_JOB_0));
        }
      }
      return;
    }
    if (m_currentPublishThread.isAlive()) {
      if (m_currentPublishThread.isInterrupted()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_PUBLISH_ENGINE_INTERRUPTED_JOB_0));
        }
        try {
          unlockPublishList(m_currentPublishThread.getPublishJob());
        }
 catch (        CmsException exc) {
          LOG.error(exc.getLocalizedMessage(),exc);
        }
        m_currentPublishThread=null;
        run();
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_PUBLISH_ENGINE_WAITING_0));
        }
      }
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_PUBLISH_ENGINE_DEAD_JOB_0));
      }
      m_currentPublishThread=null;
      run();
    }
  }
 catch (  Throwable e) {
    LOG.error(Messages.get().getBundle().key(Messages.ERR_PUBLISH_ENGINE_ERROR_0),e);
  }
}
