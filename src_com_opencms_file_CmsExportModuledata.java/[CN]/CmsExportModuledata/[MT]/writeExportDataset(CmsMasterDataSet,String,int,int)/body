{
  Document xmlDoc=null;
  try {
    xmlDoc=A_CmsXmlContent.getXmlParser().createEmptyDocument(C_EXPORT_TAG_MODULEXPORT);
  }
 catch (  Exception exc) {
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
  Element elementDataset=xmlDoc.createElement(this.C_EXPORT_TAG_MASTER_DATASET);
  xmlDoc.getDocumentElement().appendChild(elementDataset);
  String ownerName="";
  try {
    ownerName=m_cms.readUser(dataset.m_userId).getName();
  }
 catch (  CmsException e) {
  }
  String groupName="";
  try {
    groupName=m_cms.readGroup(dataset.m_groupId).getName();
  }
 catch (  CmsException e) {
  }
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_USER,ownerName);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_GROUP,groupName);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_ACCESSFLAGS,"" + dataset.m_accessFlags);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_PUBLICATIONDATE,Utils.getNiceDate(dataset.m_publicationDate));
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_PURGEDATE,Utils.getNiceDate(dataset.m_purgeDate));
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_FLAGS,"" + dataset.m_flags);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_FEEDID,"" + dataset.m_feedId);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_FEEDREFERENCE,"" + dataset.m_feedReference);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_FEEDFILENAME,dataset.m_feedFilename);
  addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_TITLE,dataset.m_title);
  for (int i=0; i < dataset.m_dataBig.length; i++) {
    String value=dataset.m_dataBig[i];
    String dataFile=new String();
    if (value != null && !"".equals(value)) {
      dataFile="databig_" + subId + "_"+ masterNr+ "_"+ i+ ".dat";
      writeExportContentFile(dataFile,value.getBytes());
    }
    addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_DATABIG + i,dataFile);
  }
  for (int i=0; i < dataset.m_dataMedium.length; i++) {
    String value=dataset.m_dataMedium[i];
    String dataFile=new String();
    if (value != null && !"".equals(value)) {
      dataFile="datamedium_" + subId + "_"+ masterNr+ "_"+ i+ ".dat";
      writeExportContentFile(dataFile,value.getBytes());
    }
    addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_DATAMEDIUM + i,dataFile);
  }
  for (int i=0; i < dataset.m_dataSmall.length; i++) {
    String value=dataset.m_dataSmall[i];
    String dataFile=new String();
    if (value != null && !"".equals(value)) {
      dataFile="datasmall_" + subId + "_"+ masterNr+ "_"+ i+ ".dat";
      writeExportContentFile(dataFile,value.getBytes());
    }
    addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_DATASMALL + i,dataFile);
  }
  for (int i=0; i < dataset.m_dataInt.length; i++) {
    String value="" + dataset.m_dataInt[i];
    addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_DATAINT + i,value);
  }
  for (int i=0; i < dataset.m_dataReference.length; i++) {
    String value="" + dataset.m_dataReference[i];
    addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_DATAREFERENCE + i,value);
  }
  for (int i=0; i < dataset.m_dataDate.length; i++) {
    String value=Utils.getNiceDate(dataset.m_dataDate[i]);
    addElement(xmlDoc,elementDataset,this.C_EXPORT_TAG_MASTER_DATADATE + i,value);
  }
  try {
    ZipEntry entry=new ZipEntry(filename);
    m_exportZipStream.putNextEntry(entry);
    A_CmsXmlContent.getXmlParser().getXmlText(xmlDoc,m_exportZipStream);
    m_exportZipStream.closeEntry();
  }
 catch (  Exception exc) {
    throw new CmsException(CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
}
