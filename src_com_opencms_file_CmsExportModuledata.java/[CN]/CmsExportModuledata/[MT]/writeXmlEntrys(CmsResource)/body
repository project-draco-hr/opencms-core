{
  m_report.print(m_report.key("report.exporting"),I_CmsReport.C_FORMAT_NOTE);
  m_report.print(resource.getAbsolutePath());
  String source, type, user, group, access, lastmodified;
  source=getSourceFilename(resource.getAbsolutePath());
  type=m_cms.getResourceType(resource.getType()).getResourceTypeName();
  user=m_cms.readOwner(resource).getName();
  group=m_cms.readGroup(resource).getName();
  access=resource.getAccessFlags() + "";
  lastmodified=Long.toString(resource.getDateLastModified());
  Element file=m_docXml.createElement(C_EXPORT_TAG_FILE);
  m_filesElement.appendChild(file);
  addElement(m_docXml,file,C_EXPORT_TAG_DESTINATION,source);
  addElement(m_docXml,file,C_EXPORT_TAG_TYPE,type);
  addElement(m_docXml,file,C_EXPORT_TAG_USER,user);
  addElement(m_docXml,file,C_EXPORT_TAG_GROUP,group);
  addElement(m_docXml,file,C_EXPORT_TAG_ACCESS,access);
  addElement(m_docXml,file,C_EXPORT_TAG_LASTMODIFIED,lastmodified);
  Element properties=m_docXml.createElement(C_EXPORT_TAG_PROPERTIES);
  file.appendChild(properties);
  Map fileProperties=new HashMap();
  try {
    m_cms.setContextToCos();
    fileProperties=m_cms.readProperties(resource.getAbsolutePath());
  }
 catch (  CmsException e) {
    throw e;
  }
 finally {
    m_cms.setContextToVfs();
  }
  Iterator i=fileProperties.keySet().iterator();
  while (i.hasNext()) {
    String key=(String)i.next();
    if (!key.equals(I_CmsConstants.C_PROPERTY_CHANNELID)) {
      Element property=m_docXml.createElement(C_EXPORT_TAG_PROPERTY);
      properties.appendChild(property);
      String value=(String)fileProperties.get(key);
      String propertyType=m_cms.readPropertydefinition(key,type).getType() + "";
      addElement(m_docXml,property,C_EXPORT_TAG_NAME,key);
      addElement(m_docXml,property,C_EXPORT_TAG_TYPE,propertyType);
      addCdataElement(m_docXml,property,C_EXPORT_TAG_VALUE,value);
    }
  }
  m_report.print(m_report.key("report.dots"),I_CmsReport.C_FORMAT_NOTE);
  m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
}
