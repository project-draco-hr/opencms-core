{
  int i, j;
  if (channelNames == null) {
    return;
  }
  Vector redundant=new Vector();
  int n=channelNames.size();
  if (n > 1) {
    for (i=0; i < n; i++) {
      redundant.addElement(new Boolean(false));
    }
    for (i=0; i < n - 1; i++) {
      for (j=i + 1; j < n; j++) {
        if (((String)channelNames.elementAt(i)).length() < ((String)channelNames.elementAt(j)).length()) {
          if (((String)channelNames.elementAt(j)).startsWith((String)channelNames.elementAt(i))) {
            redundant.setElementAt(new Boolean(true),j);
          }
        }
 else {
          if (((String)channelNames.elementAt(i)).startsWith((String)channelNames.elementAt(j))) {
            redundant.setElementAt(new Boolean(true),i);
          }
        }
      }
    }
    for (i=n - 1; i >= 0; i--) {
      if (((Boolean)redundant.elementAt(i)).booleanValue()) {
        channelNames.removeElementAt(i);
      }
    }
  }
}
