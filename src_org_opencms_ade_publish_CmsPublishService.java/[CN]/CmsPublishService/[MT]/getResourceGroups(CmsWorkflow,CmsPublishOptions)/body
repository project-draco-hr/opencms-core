{
  List<CmsPublishGroup> results=null;
  CmsObject cms=getCmsObject();
  try {
    Locale locale=OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);
    I_CmsWorkflowManager workflowManager=OpenCms.getWorkflowManager();
    I_CmsPublishResourceFormatter formatter=workflowManager.createFormatter(cms,workflow,options);
    List<CmsResource> resources=workflowManager.getWorkflowResources(cms,workflow,options);
    ResourceMap resourcesAndRelated=getResourcesAndRelated(resources,options.isIncludeRelated(),options.isIncludeSiblings(),(options.getProjectId() == null) || options.getProjectId().isNullUUID());
    formatter.initialize(options,resourcesAndRelated);
    List<CmsPublishResource> publishResources=formatter.getPublishResources();
    for (    CmsPublishResource publishResource : getPublishResourcesFlatList(publishResources)) {
      checkPreview(publishResource);
    }
    A_CmsPublishGroupHelper<CmsPublishResource,CmsPublishGroup> groupHelper;
    boolean autoSelectable=true;
    if ((options.getProjectId() == null) || options.getProjectId().isNullUUID()) {
      groupHelper=new CmsDefaultPublishGroupHelper(locale);
    }
 else {
      I_CmsVirtualProject virtualProject=OpenCms.getWorkflowManager().getRealOrVirtualProject(options.getProjectId());
      String title="";
      if (virtualProject != null) {
        CmsProjectBean projectBean=virtualProject.getProjectBean(cms,options.getParameters());
        title=projectBean.getDefaultGroupName();
        if (title == null) {
          title="";
        }
        autoSelectable=virtualProject.isAutoSelectable();
      }
      groupHelper=new CmsSinglePublishGroupHelper(locale,title);
    }
    results=groupHelper.getGroups(publishResources);
    for (    CmsPublishGroup group : results) {
      group.setAutoSelectable(autoSelectable);
    }
    setCachedOptions(options);
    setLastWorkflowForUser(workflow.getId());
  }
 catch (  Throwable e) {
    error(e);
  }
  return results;
}
