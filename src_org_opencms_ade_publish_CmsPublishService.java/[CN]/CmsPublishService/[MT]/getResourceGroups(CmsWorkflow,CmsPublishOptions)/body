{
  List<CmsPublishGroup> results=null;
  CmsObject cms=getCmsObject();
  try {
    Locale locale=OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);
    List<CmsPublishResource> publishResources=OpenCms.getWorkflowManager().getWorkflowPublishResources(cms,workflow,options);
    for (    CmsPublishResource publishResource : publishResources) {
      checkPreview(publishResource);
    }
    A_CmsPublishGroupHelper<CmsPublishResource,CmsPublishGroup> groupHelper;
    I_CmsVirtualProject.I_Context context=null;
    if ((options.getProjectId() == null) || options.getProjectId().isNullUUID()) {
      groupHelper=new CmsDefaultPublishGroupHelper(locale);
    }
 else {
      I_CmsVirtualProject virtualProject=CmsPublish.getRealOrVirtualProject(options.getProjectId());
      String title="";
      if (virtualProject != null) {
        context=virtualProject.createContext(cms,options.getParameters());
        CmsProjectBean projectBean=context.getProjectBean();
        title=projectBean.getDefaultGroupName();
        if (title == null) {
          title="";
        }
      }
      groupHelper=new CmsSinglePublishGroupHelper(locale,title);
    }
    if (options.isIncludeRelated()) {
      publishResources=eliminateRelatedResourcesFromTopLevel(publishResources);
      for (      CmsPublishResource pubRes : publishResources) {
        Collections.sort(pubRes.getRelated(),new Comparator<CmsPublishResource>(){
          public int compare(          CmsPublishResource first,          CmsPublishResource second){
            return ComparisonChain.start().compare(second.getSortDate(),first.getSortDate()).result();
          }
        }
);
      }
    }
 else {
      removeRelatedResources(publishResources);
    }
    if (context != null) {
      context.preSort(publishResources);
    }
    results=groupHelper.getGroups(publishResources);
    setCachedOptions(options);
  }
 catch (  Throwable e) {
    error(e);
  }
  return results;
}
