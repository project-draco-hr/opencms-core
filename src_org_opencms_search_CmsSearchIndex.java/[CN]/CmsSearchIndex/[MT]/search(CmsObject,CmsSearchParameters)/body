{
  long timeTotal=-System.currentTimeMillis();
  long timeLucene;
  long timeResultProcessing;
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_SEARCH_PARAMS_2,params,getName()));
  }
  TopDocs hits;
  CmsSearchResultList searchResults=new CmsSearchResultList();
  int previousPriority=Thread.currentThread().getPriority();
  try {
    CmsObject searchCms=OpenCms.initCmsObject(cms);
    if (getPriority() > 0) {
      Thread.currentThread().setPriority(getPriority());
    }
    searchCms.getRequestContext().setCurrentProject(searchCms.readProject(getProject()));
    timeLucene=-System.currentTimeMillis();
    BooleanFilter filter=new BooleanFilter();
    filter=appendPathFilter(searchCms,filter,params.getRoots());
    filter=appendCategoryFilter(searchCms,filter,params.getCategories());
    filter=appendResourceTypeFilter(searchCms,filter,params.getResourceTypes());
    filter=appendDateLastModifiedFilter(filter,params.getMinDateLastModified(),params.getMaxDateLastModified());
    filter=appendDateCreatedFilter(filter,params.getMinDateCreated(),params.getMaxDateCreated());
    Query query=null;
    Query fieldsQuery=null;
    if (!params.isIgnoreQuery()) {
      if (params.getParsedQuery() != null) {
        QueryParser p=new QueryParser(LUCENE_VERSION,CmsSearchField.FIELD_CONTENT,getAnalyzer());
        fieldsQuery=p.parse(params.getParsedQuery());
      }
 else       if (params.getFieldQueries() != null) {
        BooleanQuery mustOccur=null;
        BooleanQuery shouldOccur=null;
        for (        CmsSearchParameters.CmsSearchFieldQuery fq : params.getFieldQueries()) {
          QueryParser p=new QueryParser(LUCENE_VERSION,fq.getFieldName(),getAnalyzer());
          Query keywordQuery=null;
          if (fq.getSearchTerms().size() == 1) {
            keywordQuery=p.parse(fq.getSearchTerms().get(0));
          }
 else {
            BooleanQuery keywordListQuery=new BooleanQuery();
            for (            String keyword : fq.getSearchTerms()) {
              keywordListQuery.add(p.parse(keyword),fq.getTermOccur());
            }
            keywordQuery=keywordListQuery;
          }
          if (BooleanClause.Occur.SHOULD.equals(fq.getOccur())) {
            if (shouldOccur == null) {
              shouldOccur=new BooleanQuery();
            }
            shouldOccur.add(keywordQuery,fq.getOccur());
          }
 else {
            if (mustOccur == null) {
              mustOccur=new BooleanQuery();
            }
            mustOccur.add(keywordQuery,fq.getOccur());
          }
        }
        BooleanQuery booleanFieldsQuery=new BooleanQuery();
        if (mustOccur != null) {
          booleanFieldsQuery.add(mustOccur,BooleanClause.Occur.MUST);
        }
        if (shouldOccur != null) {
          booleanFieldsQuery.add(shouldOccur,BooleanClause.Occur.MUST);
        }
        fieldsQuery=getSearcher().rewrite(booleanFieldsQuery);
      }
 else       if ((params.getFields() != null) && (params.getFields().size() > 0)) {
        BooleanQuery booleanFieldsQuery=new BooleanQuery();
        for (int i=0; i < params.getFields().size(); i++) {
          QueryParser p=new QueryParser(LUCENE_VERSION,params.getFields().get(i),getAnalyzer());
          booleanFieldsQuery.add(p.parse(params.getQuery()),BooleanClause.Occur.SHOULD);
        }
        fieldsQuery=getSearcher().rewrite(booleanFieldsQuery);
      }
 else {
        QueryParser p=new QueryParser(LUCENE_VERSION,CmsSearchField.FIELD_CONTENT,getAnalyzer());
        fieldsQuery=getSearcher().rewrite(p.parse(params.getQuery()));
      }
      query=fieldsQuery;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().getBundle().key(Messages.LOG_BASE_QUERY_1,query));
    }
    if (query == null) {
      query=new MatchAllDocsQuery();
    }
 else {
      params.setParsedQuery(query.toString(CmsSearchField.FIELD_CONTENT));
    }
    CmsSearchCategoryCollector categoryCollector;
    if (params.isCalculateCategories()) {
      categoryCollector=new CmsSearchCategoryCollector(getSearcher());
      getSearcher().search(query,filter,categoryCollector);
      searchResults.setCategories(categoryCollector.getCategoryCountResult());
    }
    if (params.getSort() == null) {
      hits=getSearcher().search(query,filter,m_maxHits);
    }
 else {
      hits=getSearcher().search(query,filter,m_maxHits,params.getSort());
    }
    timeLucene+=System.currentTimeMillis();
    timeResultProcessing=-System.currentTimeMillis();
    Document doc;
    CmsSearchResult searchResult;
    if (hits != null) {
      int hitCount=hits.totalHits > hits.scoreDocs.length ? hits.scoreDocs.length : hits.totalHits;
      int page=params.getSearchPage();
      int start=-1, end=-1;
      if ((params.getMatchesPerPage() > 0) && (page > 0) && (hitCount > 0)) {
        start=params.getMatchesPerPage() * (page - 1);
        end=start + params.getMatchesPerPage();
        start=(start > hitCount) ? hitCount : start;
        end=(end > hitCount) ? hitCount : end;
      }
 else {
        start=0;
        end=hitCount;
      }
      int visibleHitCount=hitCount;
      for (int i=0, cnt=0; (i < hitCount) && (cnt < end); i++) {
        try {
          doc=getSearcher().doc(hits.scoreDocs[i].doc);
          if ((isInTimeRange(doc,params)) && (hasReadPermission(searchCms,doc))) {
            if (cnt >= start) {
              String excerpt=null;
              if (isCreatingExcerpt() && (fieldsQuery != null)) {
                I_CmsTermHighlighter highlighter=OpenCms.getSearchManager().getHighlighter();
                excerpt=highlighter.getExcerpt(doc,this,params,fieldsQuery,getAnalyzer());
              }
              searchResult=new CmsSearchResult(Math.round((hits.scoreDocs[i].score / hits.getMaxScore()) * 100f),doc,excerpt);
              searchResults.add(searchResult);
            }
            cnt++;
          }
 else {
            visibleHitCount--;
          }
        }
 catch (        Exception e) {
          if (LOG.isWarnEnabled()) {
            LOG.warn(Messages.get().getBundle().key(Messages.LOG_RESULT_ITERATION_FAILED_0),e);
          }
        }
      }
      searchResults.setHitCount(visibleHitCount);
    }
 else {
      searchResults.setHitCount(0);
    }
    timeResultProcessing+=System.currentTimeMillis();
  }
 catch (  RuntimeException e) {
    throw new CmsSearchException(Messages.get().container(Messages.ERR_SEARCH_PARAMS_1,params),e);
  }
catch (  Exception e) {
    throw new CmsSearchException(Messages.get().container(Messages.ERR_SEARCH_PARAMS_1,params),e);
  }
 finally {
    Thread.currentThread().setPriority(previousPriority);
  }
  if (LOG.isDebugEnabled()) {
    timeTotal+=System.currentTimeMillis();
    Object[] logParams=new Object[]{new Integer(hits == null ? 0 : hits.totalHits),new Long(timeTotal),new Long(timeLucene),new Long(timeResultProcessing)};
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_STAT_RESULTS_TIME_4,logParams));
  }
  return searchResults;
}
