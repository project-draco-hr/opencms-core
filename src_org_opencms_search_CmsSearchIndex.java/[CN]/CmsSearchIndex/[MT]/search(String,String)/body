{
  ArrayList result=null;
  Map searchCache=m_indexManager.getResultCache();
  String key=m_cms.getRequestContext().currentUser().getName() + "_" + m_cms.getRequestContext().getRemoteAddress()+ "_"+ m_name+ "_"+ searchQuery+ "_"+ fields;
  result=(ArrayList)searchCache.get(key);
  if (result != null) {
    return result;
  }
  CmsRequestContext context=m_cms.getRequestContext();
  CmsProject currentProject=context.currentProject();
  context.saveSiteRoot();
  context.setSiteRoot(m_site);
  context.setCurrentProject(I_CmsConstants.C_PROJECT_ONLINE_ID);
  Searcher searcher=null;
  if (OpenCms.getLog(this).isDebugEnabled()) {
    OpenCms.getLog(this).debug("Searching for \"" + searchQuery + "\" in fields \""+ fields+ "\" of index "+ m_name);
  }
  try {
    Query query;
    if (fields != null) {
      BooleanQuery fieldsQuery=new BooleanQuery();
      String fList[]=org.opencms.util.CmsStringSubstitution.split(fields," ");
      for (int i=0; i < fList.length; i++) {
        fieldsQuery.add(QueryParser.parse(searchQuery,fList[i],m_indexManager.getAnalyzer(m_language)),false,false);
      }
      query=fieldsQuery;
    }
 else {
      query=QueryParser.parse(searchQuery,I_CmsDocumentFactory.DOC_CONTENT,m_indexManager.getAnalyzer(m_language));
    }
    searcher=new IndexSearcher(m_path);
    Hits hits=searcher.search(query);
    double maxScore=-1.0;
    result=new ArrayList(hits.length());
    for (int i=0; i < hits.length(); i++) {
      try {
        Document doc=hits.doc(i);
        CmsResource res=m_cms.readFileHeader(doc.getField(I_CmsDocumentFactory.DOC_PATH).stringValue());
        if (m_cms.hasPermissions(res,I_CmsConstants.C_READ_ACCESS)) {
          maxScore=(maxScore < hits.score(i)) ? hits.score(i) : maxScore;
          result.add(new CmsSearchResult(this,searchQuery,res,doc,(int)((hits.score(i) / maxScore) * 100.0)));
        }
      }
 catch (      Exception exc) {
      }
    }
  }
 catch (  Exception exc) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Search on "+ m_path+ " failed. ",exc);
  }
 finally {
    if (searcher != null) {
      try {
        searcher.close();
      }
 catch (      IOException exc) {
      }
    }
    context.restoreSiteRoot();
    context.setCurrentProject(currentProject.getId());
  }
  searchCache.put(key,result);
  return result;
}
