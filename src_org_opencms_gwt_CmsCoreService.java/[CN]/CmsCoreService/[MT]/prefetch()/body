{
  CmsObject cms=getCmsObject();
  String navigationUri=cms.getRequestContext().getUri();
  boolean toolbarVisible=getSessionCache().isToolbarVisible();
  boolean isShowHelp=getSessionCache().isShowEditorHelp();
  CmsUUID structureId=null;
  try {
    CmsResource requestedResource=cms.readResource(cms.getRequestContext().getUri());
    structureId=requestedResource.getStructureId();
  }
 catch (  CmsException e) {
    throw new CmsRuntimeException(e.getMessageContainer(),e);
  }
  String loginUrl=DEFAULT_LOGIN_URL;
  try {
    loginUrl=cms.readPropertyObject(cms.getRequestContext().getUri(),CmsPropertyDefinition.PROPERTY_LOGIN_FORM,true).getValue(DEFAULT_LOGIN_URL);
  }
 catch (  CmsException e) {
    log(e.getLocalizedMessage(),e);
  }
  String defaultWorkplaceLink=CmsExplorer.getWorkplaceExplorerLink(cms,cms.getRequestContext().getSiteRoot());
  Map<String,String> gwtBuildIds=getBuildIds();
  CmsRoleManager roleManager=OpenCms.getRoleManager();
  boolean isAdmin=roleManager.hasRole(cms,CmsRole.ADMINISTRATOR);
  boolean isDeveloper=roleManager.hasRole(cms,CmsRole.DEVELOPER);
  UserInfo userInfo=new UserInfo(isAdmin,isDeveloper);
  CmsCoreData data=new CmsCoreData(EDITOR_URI,EDITOR_BACKLINK_URI,EDITOR_DELETE_URI,loginUrl,OpenCms.getStaticExportManager().getVfsPrefix(),cms.getRequestContext().getSiteRoot(),cms.getRequestContext().getLocale().toString(),OpenCms.getWorkplaceManager().getWorkplaceLocale(cms).toString(),cms.getRequestContext().getUri(),navigationUri,structureId,new HashMap<String,String>(OpenCms.getResourceManager().getExtensionMapping()),System.currentTimeMillis(),isShowHelp,toolbarVisible,defaultWorkplaceLink,gwtBuildIds,userInfo,OpenCms.getWorkplaceManager().isKeepAlive());
  return data;
}
