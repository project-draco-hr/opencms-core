{
  List<CmsContextMenuEntryBean> result=null;
  CmsObject cms=getCmsObject();
switch (context) {
case containerpage:
    cms.getRequestContext().setAttribute(I_CmsMenuItemRule.ATTR_CONTEXT_INFO,I_CmsCoreService.CONTEXT_CONTAINERPAGE);
  break;
case sitemap:
cms.getRequestContext().setAttribute(I_CmsMenuItemRule.ATTR_CONTEXT_INFO,I_CmsCoreService.CONTEXT_SITEMAP);
break;
default :
}
try {
CmsResourceUtil[] resUtil=new CmsResourceUtil[1];
resUtil[0]=new CmsResourceUtil(cms,cms.readResource(structureId));
CmsExplorerTypeSettings settings=null;
CmsExplorerContextMenu contextMenu;
try {
settings=OpenCms.getWorkplaceManager().getExplorerTypeSetting(resUtil[0].getResourceTypeName());
}
 catch (Throwable e) {
error(e);
}
if ((settings == null) || !settings.isEditable(cms,resUtil[0].getResource())) {
return Collections.<CmsContextMenuEntryBean>emptyList();
}
contextMenu=settings.getContextMenu();
List<CmsContextMenuEntryBean> allEntries=transformToMenuEntries(contextMenu.getAllEntries(),resUtil);
result=filterEntries(allEntries);
}
 catch (Throwable e) {
error(e);
}
return result;
}
