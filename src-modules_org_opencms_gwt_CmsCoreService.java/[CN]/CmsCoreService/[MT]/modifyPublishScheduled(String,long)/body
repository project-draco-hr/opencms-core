{
  if (pubDate != CmsAvailabilityInfoBean.DATE_PUBLISH_SCHEDULED_DEFAULT) {
    CmsObject cms=getCmsObject();
    String resource=resourceSitePath;
    CmsUser user=getCmsObject().getRequestContext().currentUser();
    Locale locale=getCmsObject().getRequestContext().getLocale();
    Date date=new Date(pubDate);
    CmsWorkplaceAction action=CmsWorkplaceAction.getInstance();
    CmsObject cmsAdmin=action.getCmsAdminObject();
    cmsAdmin.getRequestContext().setSiteRoot(cms.getRequestContext().getSiteRoot());
    String dateTime=CmsDateUtil.getDateTime(date,DateFormat.SHORT,locale);
    String resName=CmsResource.getName(resource);
    CmsMessages messages=OpenCms.getWorkplaceManager().getMessages(locale);
    String projectName=messages.key(org.opencms.workplace.commons.Messages.GUI_PUBLISH_SCHEDULED_PROJECT_NAME_2,new Object[]{resName,dateTime});
    projectName=projectName.replace("/","&#47;");
    CmsProject tmpProject=cmsAdmin.createProject(projectName,"",CmsRole.WORKPLACE_USER.getGroupName(),CmsRole.PROJECT_MANAGER.getGroupName(),CmsProject.PROJECT_TYPE_TEMPORARY);
    tmpProject.setHidden(true);
    cmsAdmin.writeProject(tmpProject);
    cmsAdmin.getRequestContext().setCurrentProject(tmpProject);
    cms.getRequestContext().setCurrentProject(tmpProject);
    cmsAdmin.copyResourceToProject(resource);
    getLockIfPossible(resource);
    CmsScheduledJobInfo job=new CmsScheduledJobInfo();
    String jobName=projectName;
    job.setJobName(jobName);
    job.setClassName("org.opencms.scheduler.jobs.CmsPublishScheduledJob");
    Calendar calendar=Calendar.getInstance();
    calendar.setTime(date);
    String cronExpr="" + calendar.get(Calendar.SECOND) + " "+ calendar.get(Calendar.MINUTE)+ " "+ calendar.get(Calendar.HOUR_OF_DAY)+ " "+ calendar.get(Calendar.DAY_OF_MONTH)+ " "+ (calendar.get(Calendar.MONTH) + 1)+ " "+ "?"+ " "+ calendar.get(Calendar.YEAR);
    job.setCronExpression(cronExpr);
    job.setActive(true);
    CmsContextInfo contextInfo=new CmsContextInfo();
    contextInfo.setProjectName(projectName);
    contextInfo.setUserName(cmsAdmin.getRequestContext().currentUser().getName());
    SortedMap<String,String> params=new TreeMap<String,String>();
    params.put(CmsPublishScheduledJob.PARAM_USER,user.getName());
    params.put(CmsPublishScheduledJob.PARAM_JOBNAME,jobName);
    params.put(CmsPublishScheduledJob.PARAM_LINKCHECK,"true");
    job.setParameters(params);
    job.setContextInfo(contextInfo);
    OpenCms.getScheduleManager().scheduleJob(cmsAdmin,job);
  }
}
