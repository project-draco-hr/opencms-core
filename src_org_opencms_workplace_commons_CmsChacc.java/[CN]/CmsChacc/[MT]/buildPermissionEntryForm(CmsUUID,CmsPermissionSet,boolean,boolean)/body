{
  String fileName=getParamResource();
  int flags=0;
  try {
    I_CmsPrincipal p;
    try {
      p=CmsPrincipal.readPrincipalIncludingHistory(getCms(),id);
    }
 catch (    CmsException e) {
      p=null;
    }
    if ((p != null) && p.isGroup()) {
      flags=CmsAccessControlEntry.ACCESS_FLAGS_GROUP;
    }
 else     if ((p != null) && p.isUser()) {
      flags=CmsAccessControlEntry.ACCESS_FLAGS_USER;
    }
 else     if ((p == null) && id.equals(CmsAccessControlEntry.PRINCIPAL_ALL_OTHERS_ID)) {
      flags=CmsAccessControlEntry.ACCESS_FLAGS_ALLOTHERS;
    }
 else     if ((p == null) && id.equals(CmsAccessControlEntry.PRINCIPAL_OVERWRITE_ALL_ID)) {
      flags=CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE_ALL;
    }
 else {
      CmsRole role=CmsRole.valueOfId(id);
      if (role != null) {
        flags=CmsAccessControlEntry.ACCESS_FLAGS_ROLE;
      }
    }
    CmsResource res=getCms().readResource(fileName,CmsResourceFilter.ALL);
    CmsAccessControlEntry entry=new CmsAccessControlEntry(res.getResourceId(),id,curSet,flags);
    return buildPermissionEntryForm(entry,editable,extendedView,null);
  }
 catch (  CmsException e) {
    if (LOG.isInfoEnabled()) {
      LOG.info(e.getLocalizedMessage());
    }
    return new StringBuffer("");
  }
}
