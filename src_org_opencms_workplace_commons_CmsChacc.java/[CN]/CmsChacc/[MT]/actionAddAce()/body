{
  String file=getParamResource();
  String name=getParamName();
  String type=getParamType();
  int arrayPosition=-1;
  try {
    arrayPosition=Integer.parseInt(type);
  }
 catch (  Exception e) {
    if (LOG.isInfoEnabled()) {
      LOG.info(e.getLocalizedMessage());
    }
  }
  if (checkNewEntry(name,arrayPosition)) {
    String permissionString="";
    if (getInheritOption() && getSettings().getUserSettings().getDialogPermissionsInheritOnFolder()) {
      permissionString="+i";
    }
    try {
      checkLock(getParamResource());
      if (name.equals(key(Messages.GUI_LABEL_ALLOTHERS_0))) {
        getCms().chacc(file,getTypes(false)[arrayPosition],CmsAccessControlEntry.PRINCIPAL_ALL_OTHERS_NAME,permissionString);
      }
 else       if (name.equals(key(Messages.GUI_LABEL_OVERWRITEALL_0))) {
        getCms().chacc(file,getTypes(false)[arrayPosition],CmsAccessControlEntry.PRINCIPAL_OVERWRITE_ALL_NAME,permissionString);
      }
 else {
        if (getTypes(false)[arrayPosition].equalsIgnoreCase(CmsRole.PRINCIPAL_ROLE)) {
          CmsRole role=CmsRole.valueOfRoleName(name);
          if (role == null) {
            Iterator it=CmsRole.getSystemRoles().iterator();
            while (it.hasNext()) {
              role=(CmsRole)it.next();
              if (role.getName(getLocale()).equalsIgnoreCase(name)) {
                name=role.getRoleName();
                break;
              }
            }
          }
        }
        getCms().chacc(file,getTypes(false)[arrayPosition],name,permissionString);
      }
      return true;
    }
 catch (    CmsException e) {
      m_errorMessages.add(e.getMessage());
      if (LOG.isErrorEnabled()) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
  }
  return false;
}
