{
  if (!entry.isMarkedNoTranslation(m_localeContext.getComparisonLocale())) {
    ContextMenuItem markPage=m_menu.addItem(CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_ADD_DONT_TRANSLATE_0));
    markPage.addItemClickListener(new ContextMenuItemClickListener(){
      @SuppressWarnings("synthetic-access") public void contextMenuItemClicked(      ContextMenuItemClickEvent event){
        CmsResource fileToModify2=fileToModify;
        if (fileToModify2.isFolder()) {
          try {
            fileToModify2=A_CmsUI.getCmsObject().readDefaultFile(fileToModify2,CmsResourceFilter.IGNORE_EXPIRATION);
          }
 catch (          CmsException e) {
            LOG.error(e.getLocalizedMessage(),e);
          }
        }
        CmsObject cms=A_CmsUI.getCmsObject();
        CmsLockActionRecord actionRecord=null;
        try {
          actionRecord=CmsLockUtil.ensureLock(cms,fileToModify2);
          m_localeContext.getComparisonLocale().toString();
          CmsProperty prop=cms.readPropertyObject(fileToModify2,CmsPropertyDefinition.PROPERTY_LOCALE_NOTRANSLATION,false);
          String propValue=prop.getValue();
          if (propValue == null) {
            propValue="";
          }
          List<Locale> currentLocales=CmsLocaleManager.getLocales(propValue);
          if (!currentLocales.contains(m_localeContext.getComparisonLocale())) {
            currentLocales.add(m_localeContext.getComparisonLocale());
            String newPropValue=Joiner.on(",").join(currentLocales);
            CmsProperty newProp=new CmsProperty(CmsPropertyDefinition.PROPERTY_LOCALE_NOTRANSLATION,newPropValue,null);
            cms.writePropertyObjects(fileToModify2,Arrays.asList(newProp));
            DialogContext dialogContext=new DialogContext(A_CmsUI.getCmsObject().readResource(entry.getClientEntry().getId(),CmsResourceFilter.IGNORE_EXPIRATION),node);
            dialogContext.finish(Arrays.asList(fileToModify2.getStructureId()));
          }
        }
 catch (        CmsException e) {
          LOG.error(e.getLocalizedMessage(),e);
          CmsErrorDialog.showErrorDialog(e);
        }
 finally {
          if ((actionRecord != null) && (actionRecord.getChange() == LockChange.locked)) {
            try {
              cms.unlockResource(fileToModify2);
            }
 catch (            CmsException e) {
              LOG.error(e.getLocalizedMessage(),e);
              CmsErrorDialog.showErrorDialog(e);
            }
          }
        }
      }
    }
);
  }
 else {
    ContextMenuItem unmarkPage=m_menu.addItem(CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_REMOVE_DONT_TRANSLATE_0));
    unmarkPage.addItemClickListener(new ContextMenuItemClickListener(){
      @SuppressWarnings("synthetic-access") public void contextMenuItemClicked(      ContextMenuItemClickEvent event){
        CmsResource fileToModify2=fileToModify;
        if (fileToModify2.isFolder()) {
          try {
            fileToModify2=A_CmsUI.getCmsObject().readDefaultFile(fileToModify2,CmsResourceFilter.IGNORE_EXPIRATION);
          }
 catch (          CmsException e) {
            LOG.error(e.getLocalizedMessage(),e);
          }
        }
        CmsObject cms=A_CmsUI.getCmsObject();
        CmsLockActionRecord actionRecord=null;
        try {
          actionRecord=CmsLockUtil.ensureLock(cms,fileToModify2);
          m_localeContext.getComparisonLocale().toString();
          CmsProperty prop=cms.readPropertyObject(fileToModify2,CmsPropertyDefinition.PROPERTY_LOCALE_NOTRANSLATION,false);
          String propValue=prop.getValue();
          if (propValue == null) {
            propValue="";
          }
          List<Locale> currentLocales=CmsLocaleManager.getLocales(propValue);
          if (currentLocales.contains(m_localeContext.getComparisonLocale())) {
            currentLocales.remove(m_localeContext.getComparisonLocale());
            String newPropValue=Joiner.on(",").join(currentLocales);
            CmsProperty newProp=new CmsProperty(CmsPropertyDefinition.PROPERTY_LOCALE_NOTRANSLATION,newPropValue,null);
            cms.writePropertyObjects(fileToModify,Arrays.asList(newProp));
            DialogContext dialogContext=new DialogContext(A_CmsUI.getCmsObject().readResource(entry.getClientEntry().getId(),CmsResourceFilter.IGNORE_EXPIRATION),node);
            dialogContext.finish(Arrays.asList(fileToModify2.getStructureId()));
          }
        }
 catch (        CmsException e) {
          LOG.error(e.getLocalizedMessage(),e);
          CmsErrorDialog.showErrorDialog(e);
        }
 finally {
          if ((actionRecord != null) && (actionRecord.getChange() == LockChange.locked)) {
            try {
              cms.unlockResource(fileToModify2);
            }
 catch (            CmsException e) {
              LOG.error(e.getLocalizedMessage(),e);
              CmsErrorDialog.showErrorDialog(e);
            }
          }
        }
      }
    }
);
  }
}
