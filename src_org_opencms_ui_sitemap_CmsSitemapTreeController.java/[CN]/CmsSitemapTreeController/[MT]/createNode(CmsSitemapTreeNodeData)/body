{
  final CmsSitemapTreeNode node=new CmsSitemapTreeNode();
  node.addLayoutClickListener(new LayoutClickListener(){
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void layoutClick(    LayoutClickEvent event){
      Component currentComponent=event.getClickedComponent();
      if (currentComponent != null) {
        boolean linked=false;
        do {
          currentComponent=currentComponent.getParent();
          if ((currentComponent != null) && "linked".equals(((AbstractComponent)currentComponent).getData())) {
            linked=true;
          }
          if (event.getClickedComponent() instanceof CmsResourceIcon) {
            if (currentComponent == node) {
              openTargetPage((CmsSitemapTreeNodeData)(node.getData()),linked);
            }
 else             if (currentComponent instanceof CmsSitemapTreeNode) {
              break;
            }
          }
        }
 while (currentComponent != null);
      }
    }
  }
);
  String icon=CmsSitemapTreeContainer.getSitemapResourceIcon(A_CmsUI.getCmsObject(),entry.getResource(),IconMode.localeCompare);
  CmsResourceInfo info=new CmsResourceInfo(entry.getClientEntry().getTitle(),entry.getClientEntry().getSitePath(),icon);
  info=CmsResourceInfo.createSitemapResourceInfo(entry.getResource(),OpenCms.getSiteManager().getSiteForRootPath(m_localeContext.getRoot().getRootPath()));
  info.getResourceIcon().addStyleName(OpenCmsTheme.POINTER);
  info.getResourceIcon().setDescription(CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_OPEN_PAGE_0));
  if (entry.getClientEntry().isHiddenNavigationEntry()) {
    info.addStyleName(OpenCmsTheme.RESOURCE_INFO_WEAK);
  }
  final MenuBar menu=new MenuBar();
  boolean noTranslation=false;
  noTranslation=entry.isMarkedNoTranslation(m_localeContext.getComparisonLocale());
  final MenuItem main=menu.addItem("",null);
  main.setIcon(FontOpenCms.CONTEXT_MENU);
  CssLayout rightSide=new CssLayout();
  info.setButtonWidget(rightSide);
  rightSide.addComponent(menu);
  main.setCommand(new Command(){
    /** 
 * Serial version id. 
 */
    private static final long serialVersionUID=1L;
    @SuppressWarnings("synthetic-access") public void menuSelected(    MenuItem selectedItem){
      m_menu.removeAllItems();
      if (!entry.isLinked()) {
        addLinkItem(entry,node);
      }
      if (m_localeContext.getRootLocale().equals(A_CmsUI.getCmsObject().getLocaleGroupService().getMainLocale(m_localeContext.getRoot().getRootPath()))) {
        try {
          CmsResource primary=A_CmsUI.getCmsObject().readResource(entry.getClientEntry().getId(),CmsResourceFilter.IGNORE_EXPIRATION);
          if (primary.isFolder()) {
            CmsResource defaultFile=A_CmsUI.getCmsObject().readDefaultFile(primary,CmsResourceFilter.IGNORE_EXPIRATION);
            if (defaultFile != null) {
              primary=defaultFile;
            }
          }
          final CmsResource primaryFinal=primary;
          addMarkItems(entry,node,primaryFinal);
        }
 catch (        CmsException e) {
          LOG.error(e.getLocalizedMessage(),e);
          CmsErrorDialog.showErrorDialog(e);
        }
      }
      if (entry.isCopyable()) {
        ContextMenuItem copyItem=m_menu.addItem(CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_COPY_PAGE_0));
        copyItem.addItemClickListener(new ContextMenuItemClickListener(){
          public void contextMenuItemClicked(          ContextMenuItemClickEvent event){
            openPageCopyDialog(node,entry);
          }
        }
);
      }
      ContextMenuItem infoItem=m_menu.addItem(CmsVaadinUtils.getMessageText(Messages.GUI_RESOURCE_INFO_0));
      infoItem.addItemClickListener(new ContextMenuItemClickListener(){
        public void contextMenuItemClicked(        ContextMenuItemClickEvent event){
          CmsResourceInfoAction infoAction=new CmsResourceInfoAction();
          infoAction.executeAction(new DialogContext(entry.getResource(),node));
        }
      }
);
      ContextMenuItem propertiesItem=m_menu.addItem("Properties");
      propertiesItem.addItemClickListener(new ContextMenuItemClickListener(){
        public void contextMenuItemClicked(        ContextMenuItemClickEvent event){
          ((CmsSitemapUI)A_CmsUI.get()).getSitemapExtension().openPropertyDialog(entry.getResource().getStructureId(),m_root.getStructureId());
        }
      }
);
      if (entry.isLinked()) {
        try {
          CmsResource primary=A_CmsUI.getCmsObject().readResource(entry.getClientEntry().getId(),CmsResourceFilter.IGNORE_EXPIRATION);
          if (primary.isFolder()) {
            CmsResource defaultFile=A_CmsUI.getCmsObject().readDefaultFile(primary,CmsResourceFilter.IGNORE_EXPIRATION);
            if (defaultFile != null) {
              primary=defaultFile;
            }
          }
          CmsLocaleGroupService groupService=A_CmsUI.getCmsObject().getLocaleGroupService();
          Locale mainLocale=groupService.getMainLocale(m_localeContext.getRoot().getRootPath());
          int mainLocaleCount=0;
          for (          Locale testLocale : Arrays.asList(m_localeContext.getRootLocale(),m_localeContext.getComparisonLocale())) {
            mainLocaleCount+=mainLocale.equals(testLocale) ? 1 : 0;
          }
          if (mainLocaleCount == 1) {
            addUnlinkItem(entry,node);
          }
          CmsLocaleGroup localeGroup=groupService.readLocaleGroup(primary);
          if (localeGroup.isRealGroup()) {
            ContextMenuItem show=m_menu.addItem(CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_SHOW_LOCALE_0));
            Map<Locale,CmsResource> resourcesByLocale=localeGroup.getResourcesByLocale();
            String mySiteRoot=A_CmsUI.getCmsObject().getRequestContext().getSiteRoot();
            int realSubitemCount=0;
            for (            Map.Entry<Locale,CmsResource> localeGroupEntry : resourcesByLocale.entrySet()) {
              final Locale locale=localeGroupEntry.getKey();
              final CmsResource resource=localeGroupEntry.getValue();
              final boolean sameSite=mySiteRoot.equals(OpenCms.getSiteManager().getSiteRoot(resource.getRootPath()));
              String localeName=locale.getDisplayLanguage(A_CmsUI.get().getLocale());
              ContextMenuItem showLanguage=show.addItem(localeName);
              if (!sameSite) {
                showLanguage.addStyleName("o-show-locale-disabled");
              }
              showLanguage.addItemClickListener(new ContextMenuItemClickListener(){
                public void contextMenuItemClicked(                ContextMenuItemClickEvent event){
                  if (sameSite) {
                    CmsObject cms=A_CmsUI.getCmsObject();
                    String link=OpenCms.getLinkManager().substituteLink(cms,resource);
                    A_CmsUI.get().getPage().setLocation(link);
                  }
 else {
                    String message=CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_SHOW_WRONGSITE_1,resource.getRootPath());
                    Notification.show(message,Type.ERROR_MESSAGE);
                  }
                }
              }
);
              realSubitemCount+=1;
            }
            if (realSubitemCount == 0) {
              m_menu.removeItem(show);
            }
          }
        }
 catch (        Exception e) {
          LOG.error(e.getLocalizedMessage(),e);
          CmsErrorDialog.showErrorDialog(e);
        }
      }
      m_menu.open(menu);
    }
  }
);
  menu.addStyleName("borderless o-toolbar-button o-resourceinfo-toolbar");
  if (entry.isLinked()) {
    CmsSite site=OpenCms.getSiteManager().getSiteForRootPath(m_localeContext.getRoot().getRootPath());
    CmsResourceInfo linkedInfo=CmsResourceInfo.createSitemapResourceInfo(readSitemapEntryFolderIfPossible(entry.getLinkedResource()),site);
    linkedInfo.addStyleName(OpenCmsTheme.RESOURCE_INFO_DIRECTLINK);
    rightSide.addComponent(linkedInfo,0);
    linkedInfo.setWidth(RHS_WIDTH + "px");
    node.setContent(info);
    linkedInfo.setData("linked");
    linkedInfo.getResourceIcon().setDescription(CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_OPEN_PAGE_0));
    linkedInfo.getResourceIcon().addStyleName(OpenCmsTheme.POINTER);
  }
 else {
    if (noTranslation) {
      CmsResourceInfo noTranslationInfo=new CmsResourceInfo();
      String topMessage=CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_NO_TRANSLATION_TOP_0);
      String bottomMessage=CmsVaadinUtils.getMessageText(Messages.GUI_LOCALECOMPARE_NO_TRANSLATION_BOTTOM_0);
      noTranslationInfo.getTopLine().setValue(topMessage);
      noTranslationInfo.getBottomLine().setValue(bottomMessage);
      noTranslationInfo.getResourceIcon().setValue("<span class=\"" + OpenCmsTheme.RESOURCE_ICON + " "+ OpenCmsTheme.NO_TRANSLATION_ICON+ "\">"+ FontAwesome.BAN.getHtml()+ "</span>");
      noTranslationInfo.addStyleName(OpenCmsTheme.RESOURCE_INFO_DIRECTLINK);
      noTranslationInfo.setWidth(RHS_WIDTH + "px");
      rightSide.addComponent(noTranslationInfo,0);
    }
    node.setContent(info);
  }
  if (entry.hasNoChildren()) {
    node.setOpen(true);
    node.setOpenerVisible(false);
  }
  node.setData(entry);
  return node;
}
