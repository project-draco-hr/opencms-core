{
  ByteArrayOutputStream captchaImageOutput=new ByteArrayOutputStream();
  ServletOutputStream out=null;
  try {
    String sessionId=cms.getRequest().getSession().getId();
    Locale locale=cms.getRequestContext().getLocale();
    BufferedImage captchaImage=CmsCaptchaServiceCache.getSharedInstance().getCaptchaService(m_captchaSettings).getImageChallengeForID(sessionId,locale);
    JPEGImageEncoder jpegEncoder=JPEGCodec.createJPEGEncoder(captchaImageOutput);
    jpegEncoder.encode(captchaImage);
    cms.getResponse().setHeader("Cache-Control","no-store");
    cms.getResponse().setHeader("Pragma","no-cache");
    cms.getResponse().setDateHeader("Expires",0);
    cms.getResponse().setContentType("image/jpeg");
    out=cms.getResponse().getOutputStream();
    out.write(captchaImageOutput.toByteArray());
    out.flush();
  }
 catch (  Exception e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage());
    }
    cms.getResponse().sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
  }
 finally {
    try {
      if (out != null) {
        out.close();
      }
    }
 catch (    Throwable t) {
    }
  }
}
