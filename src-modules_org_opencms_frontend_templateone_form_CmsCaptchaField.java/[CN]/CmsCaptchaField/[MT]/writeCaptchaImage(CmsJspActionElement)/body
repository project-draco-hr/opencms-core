{
  ByteArrayOutputStream captchaImageOutput=new ByteArrayOutputStream();
  ServletOutputStream out=null;
  BufferedImage captchaImage=null;
  int maxTries=10;
  do {
    try {
      maxTries--;
      String sessionId=cms.getRequest().getSession().getId();
      Locale locale=cms.getRequestContext().getLocale();
      captchaImage=CmsCaptchaServiceCache.getSharedInstance().getCaptchaService(m_captchaSettings,cms.getCmsObject()).getImageChallengeForID(sessionId,locale);
    }
 catch (    CaptchaException cex) {
      if (LOG.isErrorEnabled()) {
        LOG.error(cex);
        LOG.error(Messages.get().getBundle().key(Messages.LOG_ERR_CAPTCHA_CONFIG_IMAGE_SIZE_2,new Object[]{m_captchaSettings.getPresetPath(),new Integer(maxTries)}));
      }
      m_captchaSettings.setImageHeight(m_captchaSettings.getImageHeight() + 40);
      m_captchaSettings.setImageWidth(m_captchaSettings.getImageWidth() + 80);
    }
  }
 while (captchaImage == null && maxTries > 0);
  try {
    ImageIO.write(captchaImage,"jpg",captchaImageOutput);
    CmsFlexController controller=CmsFlexController.getController(cms.getRequest());
    HttpServletResponse response=controller.getTopResponse();
    response.setHeader("Cache-Control","no-store");
    response.setHeader("Pragma","no-cache");
    response.setDateHeader("Expires",0);
    response.setContentType("image/jpeg");
    out=cms.getResponse().getOutputStream();
    out.write(captchaImageOutput.toByteArray());
    out.flush();
  }
 catch (  Exception e) {
    if (LOG.isErrorEnabled()) {
      LOG.error(e.getLocalizedMessage(),e);
    }
    cms.getResponse().sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
  }
 finally {
    try {
      if (out != null) {
        out.close();
      }
    }
 catch (    Throwable t) {
    }
  }
}
