{
  CmsUUID structureId=null;
  if (!changedEntities.isEmpty()) {
    structureId=CmsContentDefinition.entityIdToUuid(changedEntities.get(0).getId());
  }
  if ((structureId == null) && !deletedEntities.isEmpty()) {
    structureId=CmsContentDefinition.entityIdToUuid(deletedEntities.get(0));
  }
  if (structureId != null) {
    CmsObject cms=getCmsObject();
    CmsResource resource=null;
    try {
      resource=cms.readResource(structureId,CmsResourceFilter.IGNORE_EXPIRATION);
      ensureLock(resource);
      CmsFile file=cms.readFile(resource);
      CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,file);
      checkAutoCorrection(cms,content);
      if (!changedEntities.isEmpty()) {
        for (        Entity entity : changedEntities) {
          String entityId=entity.getId();
          Locale contentLocale=CmsLocaleManager.getLocale(CmsContentDefinition.getLocaleFromId(entityId));
          CmsContentTypeVisitor visitor=null;
          Entity originalEntity=null;
          if (content.getHandler().hasVisibilityHandlers()) {
            visitor=new CmsContentTypeVisitor(cms,file,contentLocale);
            visitor.visitTypes(content.getContentDefinition(),getWorkplaceLocale(cms));
          }
          if (content.hasLocale(contentLocale)) {
            if ((visitor != null) && visitor.hasInvisibleFields()) {
              Element element=content.getLocaleNode(contentLocale);
              originalEntity=readEntity(content,element,contentLocale,entityId,"",getTypeUri(content.getContentDefinition()),visitor,true);
            }
            content.removeLocale(contentLocale);
          }
          content.addLocale(cms,contentLocale);
          if ((visitor != null) && visitor.hasInvisibleFields()) {
            transfereInvisibleValues(originalEntity,entity,visitor);
          }
          addEntityAttributes(cms,content,"",entity,contentLocale);
        }
      }
      for (      String deleteId : deletedEntities) {
        Locale contentLocale=CmsLocaleManager.getLocale(CmsContentDefinition.getLocaleFromId(deleteId));
        if (content.hasLocale(contentLocale)) {
          content.removeLocale(contentLocale);
        }
      }
      ValidationResult validationResult=validateContent(cms,structureId,content);
      if (validationResult.hasErrors()) {
        return validationResult;
      }
      writeContent(cms,file,content,getFileEncoding(cms,file));
      OpenCms.getSearchManager().updateOfflineIndexes(2 * CmsSearchManager.DEFAULT_OFFLINE_UPDATE_FREQNENCY);
      if (clearOnSuccess) {
        tryUnlock(resource);
      }
    }
 catch (    Exception e) {
      if (resource != null) {
        tryUnlock(resource);
      }
      error(e);
    }
  }
  return null;
}
