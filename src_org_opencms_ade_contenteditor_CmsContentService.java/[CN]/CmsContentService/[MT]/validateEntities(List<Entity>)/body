{
  CmsUUID structureId=null;
  if (changedEntities.isEmpty()) {
    return Collections.emptyMap();
  }
  structureId=CmsContentDefinition.entityIdToUuid(changedEntities.get(0).getId());
  if (structureId != null) {
    CmsObject cms=getCmsObject();
    try {
      CmsResource resource=cms.readResource(structureId);
      ensureLock(resource);
      CmsFile file=cms.readFile(resource);
      CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,file);
      for (      Entity entity : changedEntities) {
        String entityId=entity.getId();
        Locale contentLocale=CmsLocaleManager.getLocale(CmsContentDefinition.getLocaleFromId(entityId));
        if (content.hasLocale(contentLocale)) {
          content.removeLocale(contentLocale);
        }
        content.addLocale(cms,contentLocale);
        addEntityAttributes(cms,content,"",entity,contentLocale);
      }
      CmsXmlContentErrorHandler errorHandler=content.validate(cms);
      if (errorHandler.hasErrors()) {
        Map<String,Map<String,String>> result=new HashMap<String,Map<String,String>>();
        for (        Entry<Locale,Map<String,String>> localeEntry : errorHandler.getErrors().entrySet()) {
          Map<String,String> errors=new HashMap<String,String>();
          for (          Entry<String,String> error : localeEntry.getValue().entrySet()) {
            I_CmsXmlContentValue value=content.getValue(error.getKey(),localeEntry.getKey());
            String typeUri=getTypeUri(value.getContentDefinition());
            String attributeName=getAttributeName(value.getName(),typeUri);
            errors.put(attributeName + "[" + value.getXmlIndex()+ "]",error.getValue());
          }
          result.put(CmsContentDefinition.uuidToEntityId(structureId,localeEntry.getKey().toString()),errors);
        }
        return result;
      }
    }
 catch (    Exception e) {
      error(e);
    }
  }
  return Collections.emptyMap();
}
