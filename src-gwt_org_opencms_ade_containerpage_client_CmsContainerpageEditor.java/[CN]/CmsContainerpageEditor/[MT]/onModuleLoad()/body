{
  super.onModuleLoad();
  CmsBroadcastTimer.start();
  JavaScriptObject window=CmsDomUtil.getWindow();
  CmsDomUtil.setAttribute(window,"__hideEditorCloseButton","true");
  I_CmsLayoutBundle.INSTANCE.containerpageCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.dragdropCss().ensureInjected();
  I_CmsLayoutBundle.INSTANCE.groupcontainerCss().ensureInjected();
  final CmsContainerpageController controller=new CmsContainerpageController();
  final CmsContainerpageHandler containerpageHandler=new CmsContainerpageHandler(controller,this);
  CmsContentEditorHandler contentEditorHandler=new CmsContentEditorHandler(containerpageHandler);
  CmsCompositeDNDController dndController=new CmsCompositeDNDController();
  dndController.addController(new CmsContainerpageDNDController(controller));
  controller.setDndController(dndController);
  CmsDNDHandler dndHandler=new CmsDNDHandler(dndController);
  dndHandler.setAnimationType(AnimationType.SPECIAL);
  ClickHandler clickHandler=new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent event){
      I_CmsToolbarButton source=(I_CmsToolbarButton)event.getSource();
      source.onToolbarClick();
      if (source instanceof CmsPushButton) {
        ((CmsPushButton)source).clearHoverState();
      }
    }
  }
;
  m_toolbar=new CmsToolbar();
  RootPanel root=RootPanel.get();
  root.add(m_toolbar);
  m_publish=new CmsToolbarPublishButton(containerpageHandler);
  m_publish.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_publish);
  m_move=new CmsToolbarMoveButton(containerpageHandler,dndHandler);
  m_edit=new CmsToolbarEditButton(containerpageHandler);
  m_addToFavorites=new CmsAddToFavoritesButton(containerpageHandler);
  m_remove=new CmsToolbarRemoveButton(containerpageHandler);
  m_properties=new CmsToolbarSettingsButton(containerpageHandler);
  m_info=new CmsToolbarInfoButton(containerpageHandler);
  m_clipboard=new CmsToolbarClipboardMenu(containerpageHandler);
  m_clipboard.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_clipboard);
  m_add=new CmsToolbarGalleryMenu(containerpageHandler,dndHandler);
  m_add.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_add);
  m_allGalleries=new CmsToolbarAllGalleriesMenu(containerpageHandler,dndHandler);
  m_allGalleries.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_allGalleries);
  m_elementsInfo=new CmsToolbarElementInfoButton(containerpageHandler,controller);
  m_elementsInfo.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_elementsInfo);
  m_selection=new CmsToolbarSelectionButton(containerpageHandler);
  m_selection.addClickHandler(clickHandler);
  m_toolbar.addLeft(m_selection);
  m_context=new CmsToolbarContextButton(containerpageHandler);
  m_context.addClickHandler(clickHandler);
  m_toolbar.addRight(m_context);
  m_sitemap=new CmsToolbarSitemapButton(containerpageHandler);
  if (controller.getData().isSitemapManager()) {
    m_sitemap.addClickHandler(clickHandler);
    m_toolbar.addRight(m_sitemap);
    if (CmsStringUtil.isEmptyOrWhitespaceOnly(controller.getData().getSitemapUri())) {
      m_sitemap.setEnabled(false);
    }
  }
  Window.addCloseHandler(new CloseHandler<Window>(){
    public void onClose(    CloseEvent<Window> event){
      controller.onWindowClose();
    }
  }
);
  RootPanel.get().addStyleName(org.opencms.gwt.client.ui.css.I_CmsLayoutBundle.INSTANCE.toolbarCss().hideButtonShowSmallElements());
  m_toolbarVisibility=new CmsStyleVariable(m_toolbar);
  m_toolbarVisibility.setValue(org.opencms.gwt.client.ui.css.I_CmsLayoutBundle.INSTANCE.toolbarCss().toolbarHide());
  if (CmsCoreProvider.get().isToolbarVisible()) {
    showToolbar(true);
    containerpageHandler.activateSelection();
  }
  CmsContainerpageUtil containerpageUtil=new CmsContainerpageUtil(controller,m_edit,m_move,m_info,m_properties,m_addToFavorites,m_remove);
  controller.init(containerpageHandler,dndHandler,contentEditorHandler,containerpageUtil);
  exportStacktraceDialogMethod();
}
