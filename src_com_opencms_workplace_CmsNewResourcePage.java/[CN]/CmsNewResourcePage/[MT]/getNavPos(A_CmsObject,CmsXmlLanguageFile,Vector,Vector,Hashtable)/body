{
  HttpSession session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
  CmsFolder folder=null;
  CmsFile file=null;
  String nicename=null;
  String currentFilelist=null;
  Hashtable storage=new Hashtable();
  int max=0;
  currentFilelist=(String)session.getValue(C_PARA_FILELIST);
  if (currentFilelist == null) {
    currentFilelist=cms.rootFolder().getAbsolutePath();
  }
  Vector files=cms.getFilesInFolder(currentFilelist);
  Vector folders=cms.getSubFolders(currentFilelist);
  Vector filefolders=new Vector();
  Enumeration enum=folders.elements();
  while (enum.hasMoreElements()) {
    folder=(CmsFolder)enum.nextElement();
    filefolders.addElement(folder);
  }
  enum=files.elements();
  while (enum.hasMoreElements()) {
    file=(CmsFile)enum.nextElement();
    filefolders.addElement(file);
  }
  enum=filefolders.elements();
  while (enum.hasMoreElements()) {
    CmsResource res=(CmsResource)enum.nextElement();
    if (res.getState() != C_STATE_DELETED) {
      String navpos=cms.readMetainformation(res.getAbsolutePath(),C_METAINFO_NAVPOS);
      if (navpos != null) {
        nicename=cms.readMetainformation(res.getAbsolutePath(),C_METAINFO_NAVTITLE);
        if (nicename == null) {
          nicename=res.getName();
        }
        storage.put(navpos,lang.getDataValue("input.next") + " " + nicename);
        if (new Integer(navpos).intValue() > max) {
          max=new Integer(navpos).intValue();
        }
      }
    }
  }
  storage.put("0",lang.getDataValue("input.firstelement"));
  storage.put(new Integer(max + 1).toString(),lang.getDataValue("input.lastelement"));
  for (int i=0; i <= max + 1; i++) {
    String name=(String)storage.get(new Integer(i).toString());
    if (name != null) {
      names.addElement(name);
      values.addElement(new Integer(i).toString());
    }
  }
  return new Integer(values.size() - 1);
}
