{
  String moduleName;
  if (!CmsStringUtil.isValidJavaClassName(name)) {
    LOG.error(Messages.get().getBundle().key(Messages.LOG_INVALID_MOD_NAME_IMPORTED_1,name));
    moduleName=makeValidJavaClassName(name);
    LOG.error(Messages.get().getBundle().key(Messages.LOG_CORRECTED_MOD_NAME_1,moduleName));
  }
 else {
    moduleName=name;
  }
  CmsModuleVersion moduleVersion=new CmsModuleVersion(version);
  long moduleDateCreated=CmsModule.DEFAULT_DATE;
  if (dateCreated != null) {
    try {
      moduleDateCreated=CmsDateUtil.parseHeaderDate(dateCreated);
    }
 catch (    ParseException e) {
    }
  }
  long moduleDateInstalled=CmsModule.DEFAULT_DATE;
  if (dateInstalled != null) {
    try {
      moduleDateInstalled=CmsDateUtil.parseHeaderDate(dateInstalled);
    }
 catch (    ParseException e1) {
    }
  }
  if (m_oldModule) {
    String modulePath=CmsWorkplace.VFS_PATH_MODULES + name + "/";
    m_resources.add(modulePath);
  }
  m_module=new CmsModule(moduleName,niceName,group,actionClass,importScript,importSite,description,moduleVersion,authorName,authorEmail,moduleDateCreated,userInstalled,moduleDateInstalled,m_dependencies,m_exportPoints,m_resources,m_excluderesources,m_parameters);
  List<I_CmsResourceType> moduleResourceTypes=new ArrayList<I_CmsResourceType>(m_resourceTypes.size());
  for (Iterator<I_CmsResourceType> i=m_resourceTypes.iterator(); i.hasNext(); ) {
    I_CmsResourceType resType=i.next();
    resType.setModuleName(moduleName);
    moduleResourceTypes.add(resType);
  }
  m_module.setResourceTypes(moduleResourceTypes);
  m_module.setExplorerTypes(m_explorerTypeSettings);
}
