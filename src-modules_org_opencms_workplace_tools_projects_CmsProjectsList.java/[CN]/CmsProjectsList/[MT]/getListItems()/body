{
  List ret=new ArrayList();
  List projects=OpenCms.getOrgUnitManager().getAllManageableProjects(getCms(),"",true);
  Iterator itProjects=projects.iterator();
  while (itProjects.hasNext()) {
    CmsProject project=(CmsProject)itProjects.next();
    CmsListItem item=getList().newItem(project.getUuid().toString());
    item.set(LIST_COLUMN_NAME,project.getSimpleName());
    item.set(LIST_COLUMN_DESCRIPTION,project.getDescription());
    item.set(LIST_COLUMN_ORGUNIT,OpenCms.getOrgUnitManager().readOrganizationalUnit(getCms(),project.getOuFqn()).getDisplayName(getLocale()));
    try {
      item.set(LIST_COLUMN_OWNER,getCms().readUser(project.getOwnerId()).getName());
    }
 catch (    Exception e) {
    }
    try {
      item.set(LIST_COLUMN_MANAGER,getCms().readGroup(project.getManagerGroupId()).getSimpleName());
    }
 catch (    Exception e) {
    }
    try {
      item.set(LIST_COLUMN_USER,getCms().readGroup(project.getGroupId()).getSimpleName());
    }
 catch (    Exception e) {
    }
    item.set(LIST_COLUMN_CREATION,new Date(project.getDateCreated()));
    StringBuffer html=new StringBuffer(512);
    Iterator resources=getCms().readProjectResources(project).iterator();
    while (resources.hasNext()) {
      html.append(resources.next().toString());
      html.append("<br>");
    }
    item.set(LIST_DETAIL_RESOURCES,html.toString());
    ret.add(item);
  }
  try {
    if (OpenCms.getOrgUnitManager().getOrganizationalUnits(getCms(),"",true).isEmpty()) {
      getList().getMetadata().getColumnDefinition(LIST_COLUMN_ORGUNIT).setVisible(false);
    }
 else {
      getList().getMetadata().getColumnDefinition(LIST_COLUMN_ORGUNIT).setVisible(true);
    }
  }
 catch (  CmsException e) {
  }
  return ret;
}
