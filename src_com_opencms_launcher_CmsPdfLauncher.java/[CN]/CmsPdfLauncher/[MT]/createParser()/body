{
  String parserClassName=System.getProperty("org.xml.sax.parser");
  if (parserClassName == null) {
    parserClassName="org.apache.xerces.parsers.SAXParser";
  }
  if ((A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING)) {
    A_OpenCms.log(C_OPENCMS_INFO,"[CmsPdfLauncher] Using SAX parser: " + parserClassName);
  }
  try {
    return (Parser)Class.forName(parserClassName).newInstance();
  }
 catch (  ClassNotFoundException e) {
    if ((A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING)) {
      A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsPdfLauncher] Could not find " + parserClassName);
    }
  }
catch (  InstantiationException e) {
    if ((A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING)) {
      A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsPdfLauncher] Could not instantiate " + parserClassName);
    }
  }
catch (  IllegalAccessException e) {
    if ((A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING)) {
      A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsPdfLauncher] Could not access " + parserClassName);
    }
  }
catch (  ClassCastException e) {
    if ((A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING)) {
      A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsPdfLauncher] " + parserClassName + " is not a SAX driver");
    }
  }
  return null;
}
