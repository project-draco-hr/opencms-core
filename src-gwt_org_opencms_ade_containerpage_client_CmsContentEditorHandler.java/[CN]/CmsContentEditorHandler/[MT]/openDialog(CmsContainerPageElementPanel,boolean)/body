{
  m_handler.disableToolbarButtons();
  m_handler.deactivateCurrentButton();
  m_currentElementId=element.getId();
  String serverId=CmsContainerpageController.getServerId(getCurrentElementId());
  if (m_handler.m_controller.getData().isUseClassicEditor() || element.isNewEditorDisabled()) {
    CmsEditableData editableData=new CmsEditableData();
    editableData.setElementLanguage(CmsCoreProvider.get().getLocale());
    editableData.setStructureId(new CmsUUID(serverId));
    editableData.setSitePath(element.getSitePath());
    CmsContentEditorDialog.get().openEditDialog(editableData,false,CmsContentEditorHandler.this);
  }
 else {
    String editorLocale=CmsCoreProvider.get().getLocale();
    Command onClose=new Command(){
      public void execute(){
        addClosedEditorHistoryItem();
        onClose(element.getSitePath(),false);
      }
    }
;
    if (inline && CmsContentEditor.hasEditable(element.getElement())) {
      addEditingHistoryItem(true);
      CmsContentEditor.getInstance().openInlineEditor(getEditorContext(),new CmsUUID(serverId),editorLocale,element,onClose);
    }
 else {
      addEditingHistoryItem(false);
      CmsContentEditor.getInstance().openFormEditor(getEditorContext(),editorLocale,serverId,null,null,onClose);
    }
  }
}
