{
  if (!m_editorOpened) {
    m_editorOpened=true;
    m_handler.disableToolbarButtons();
    m_handler.deactivateCurrentButton();
    m_currentElementId=element.getId();
    final String serverId=CmsContainerpageController.getServerId(getCurrentElementId());
    final Runnable classicEdit=new Runnable(){
      public void run(){
        CmsEditableData editableData=new CmsEditableData();
        editableData.setElementLanguage(CmsCoreProvider.get().getLocale());
        editableData.setStructureId(new CmsUUID(serverId));
        editableData.setSitePath(element.getSitePath());
        editableData.setMainLanguage(m_handler.m_controller.getData().getMainLocale());
        CmsContentEditorDialog.get().openEditDialog(editableData,false,null,new DialogOptions(),CmsContentEditorHandler.this);
      }
    }
;
    if (m_handler.m_controller.getData().isUseClassicEditor() || element.isNewEditorDisabled()) {
      classicEdit.run();
    }
 else {
      String editorLocale=CmsCoreProvider.get().getLocale();
      Command onClose=new Command(){
        public void execute(){
          addClosedEditorHistoryItem();
          onClose(element.getSitePath(),new CmsUUID(serverId),false);
        }
      }
;
      if (inline && CmsContentEditor.hasEditable(element.getElement())) {
        addEditingHistoryItem(true);
        CmsEditorContext context=getEditorContext();
        context.setHtmlContextInfo(getContextInfo(element));
        element.setReleasedAndNotExpired(true);
        CmsContentEditor.getInstance().openInlineEditor(context,new CmsUUID(serverId),editorLocale,element,onClose);
      }
 else {
        addEditingHistoryItem(false);
        CmsContentEditor.getInstance().openFormEditor(getEditorContext(),editorLocale,serverId,null,null,null,null,m_handler.m_controller.getData().getMainLocale(),onClose);
      }
    }
  }
 else {
    CmsDebugLog.getInstance().printLine("Editor is already being opened.");
  }
}
