{
  m_handler.disableToolbarButtons();
  m_handler.deactivateCurrentButton();
  m_currentElementId=element.getId();
  final String serverId=CmsContainerpageController.getServerId(getCurrentElementId());
  final Runnable classicEdit=new Runnable(){
    public void run(){
      CmsEditableData editableData=new CmsEditableData();
      editableData.setElementLanguage(CmsCoreProvider.get().getLocale());
      editableData.setStructureId(new CmsUUID(serverId));
      editableData.setSitePath(element.getSitePath());
      CmsContentEditorDialog.get().openEditDialog(editableData,false,CmsContentEditorHandler.this);
    }
  }
;
  if (m_handler.m_controller.getData().isUseClassicEditor() || element.isNewEditorDisabled()) {
    classicEdit.run();
  }
 else {
    final String editorLocale=CmsCoreProvider.get().getLocale();
    Command onClose=new Command(){
      public void execute(){
        addClosedEditorHistoryItem();
        onClose(element.getSitePath(),false);
      }
    }
;
    if (inline && CmsContentEditor.hasEditable(element.getElement())) {
      addEditingHistoryItem(true);
      CmsContentEditor.getInstance().openInlineEditor(new CmsUUID(serverId),editorLocale,element,onClose);
    }
 else {
      addEditingHistoryItem(false);
      CmsContentEditor.getInstance().openFormEditor(editorLocale,serverId,null,null,onClose);
    }
  }
}
