{
  m_handler.disableToolbarButtons();
  m_handler.deactivateCurrentButton();
  m_currentElementId=element.getId();
  final String serverId=CmsContainerpageController.getServerId(getCurrentElementId());
  final Runnable classicEdit=new Runnable(){
    public void run(){
      CmsEditableData editableData=new CmsEditableData();
      editableData.setElementLanguage(CmsCoreProvider.get().getLocale());
      editableData.setStructureId(new CmsUUID(serverId));
      editableData.setSitePath(element.getSitePath());
      CmsContentEditorDialog.get().openEditDialog(editableData,false,CmsContentEditorHandler.this);
    }
  }
;
  if (m_handler.m_controller.getData().isUseClassicEditor()) {
    classicEdit.run();
  }
 else {
    final String editorLocale=CmsCoreProvider.get().getLocale();
    m_handler.checkNewWidgetsAvailable(new CmsUUID(serverId),new AsyncCallback<Boolean>(){
      public void onFailure(      Throwable caught){
      }
      public void onSuccess(      Boolean result){
        if (result.booleanValue()) {
          Command onClose=new Command(){
            public void execute(){
              onClose(element.getSitePath(),false);
            }
          }
;
          if (inline && CmsContentEditor.hasEditable(element.getElement())) {
            CmsContentEditor.getInstance().openInlineEditor(new CmsUUID(serverId),editorLocale,element,onClose);
          }
 else {
            CmsContentEditor.getInstance().openFormEditor(editorLocale,serverId,null,null,onClose);
          }
        }
 else {
          classicEdit.run();
        }
      }
    }
);
  }
}
