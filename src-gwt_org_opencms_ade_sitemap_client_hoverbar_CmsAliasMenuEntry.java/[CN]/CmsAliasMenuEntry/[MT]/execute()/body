{
  CmsSitemapView view=CmsSitemapView.getInstance();
  final CmsSitemapController controller=view.getController();
  String sitePath=getHoverbar().getEntry().getSitePath();
  CmsClientSitemapEntry entry=controller.getEntry(sitePath);
  CmsUUID structureId=entry.getDefaultFileId();
  if (structureId == null) {
    structureId=entry.getId();
  }
  final CmsUUID constStructureId=structureId;
  CmsRpcAction<CmsListInfoBean> infoAction=new CmsRpcAction<CmsListInfoBean>(){
    @Override public void execute(){
      start(200,true);
      CmsCoreProvider.getVfsService().getPageInfo(constStructureId,this);
    }
    @Override protected void onResponse(    final CmsListInfoBean listInfoBean){
      stop(false);
      controller.loadAliases(constStructureId,new AsyncCallback<List<CmsAliasBean>>(){
        public void onFailure(        Throwable caught){
        }
        public void onSuccess(        List<CmsAliasBean> result){
          CmsSeoOptionsDialog dialog=new CmsSeoOptionsDialog(constStructureId,listInfoBean,result);
          dialog.center();
        }
      }
);
    }
  }
;
  infoAction.execute();
}
