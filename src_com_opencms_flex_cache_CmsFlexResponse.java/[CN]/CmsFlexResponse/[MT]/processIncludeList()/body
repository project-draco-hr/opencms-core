{
  byte[] result=getWriterBytes();
  if (!hasIncludeList()) {
    m_cachedEntry.add(result);
  }
 else {
    int max=result.length;
    int pos=0;
    int last=0;
    int size=0;
    int count=0;
    java.util.Iterator i=m_includeList.iterator();
    while (i.hasNext() && (pos < max)) {
      while ((pos < max) && (result[pos] != C_FLEX_CACHE_DELIMITER)) {
        pos++;
      }
      if (result[pos] == C_FLEX_CACHE_DELIMITER) {
        count++;
        size=pos - last;
        if (size > 0) {
          byte[] piece=new byte[size];
          System.arraycopy(result,last,piece,0,size);
          m_cachedEntry.add(piece);
        }
        last=++pos;
        m_cachedEntry.add((String)i.next());
      }
    }
    if (pos < max) {
      size=max - pos;
      byte[] piece=new byte[size];
      System.arraycopy(result,pos,piece,0,size);
      m_cachedEntry.add(piece);
    }
    if (!i.hasNext()) {
      m_includeList=null;
    }
 else {
      m_includeList=m_includeList.subList(count,m_includeList.size());
    }
  }
}
