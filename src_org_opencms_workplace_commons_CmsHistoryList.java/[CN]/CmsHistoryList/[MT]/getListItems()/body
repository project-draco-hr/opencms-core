{
  List result=new ArrayList();
  List historicalVersions=getCms().readAllAvailableVersions(getParamResource());
  Iterator itVersions=historicalVersions.iterator();
  while (itVersions.hasNext()) {
    I_CmsHistoryResource histRes=(I_CmsHistoryResource)itVersions.next();
    int publishTag=histRes.getPublishTag();
    CmsHistoryProject project=getCms().readHistoryProject(publishTag);
    String filetype=String.valueOf(histRes.getTypeId());
    String dateLastModified=getMessages().getDateTime(histRes.getDateLastModified());
    String datePublished=getMessages().getDateTime(project.getPublishingDate());
    CmsListItem item=getList().newItem("" + histRes.getVersion());
    int factor=1;
    if (result.isEmpty() && !histRes.getState().isDeleted()) {
      factor=-1;
    }
    CmsVersionWrapper version=new CmsVersionWrapper(factor * histRes.getVersion());
    item.set(LIST_COLUMN_VERSION,version);
    item.set(LIST_COLUMN_DATE_PUBLISHED,datePublished);
    item.set(LIST_COLUMN_DATE_LAST_MODIFIED,dateLastModified);
    item.set(LIST_COLUMN_FILE_TYPE,filetype);
    String user=histRes.getUserLastModified().toString();
    try {
      user=CmsPrincipal.readPrincipalIncludingHistory(getCms(),histRes.getUserLastModified()).getName();
    }
 catch (    CmsDbEntryNotFoundException e) {
    }
    item.set(LIST_COLUMN_USER,user);
    item.set(LIST_COLUMN_RESOURCE_PATH,getCms().getRequestContext().removeSiteRoot(histRes.getRootPath()));
    item.set(LIST_COLUMN_SIZE,new Integer(histRes.getLength()).toString());
    item.set(LIST_COLUMN_PUBLISH_TAG,new Integer(publishTag));
    item.set(LIST_COLUMN_STRUCTURE_ID,histRes.getStructureId().toString());
    result.add(item);
  }
  if (result.isEmpty()) {
    CmsResource onlineResource=null;
    CmsProject project=getCms().getRequestContext().currentProject();
    try {
      getCms().getRequestContext().setCurrentProject(getCms().readProject(CmsProject.ONLINE_PROJECT_ID));
      onlineResource=getCms().readResource(getParamResource(),CmsResourceFilter.IGNORE_EXPIRATION);
      CmsListItem item=getList().newItem("" + onlineResource.getVersion());
      item.set(LIST_COLUMN_VERSION,new CmsVersionWrapper(-1 * onlineResource.getVersion()));
      item.set(LIST_COLUMN_DATE_PUBLISHED,"-");
      item.set(LIST_COLUMN_DATE_LAST_MODIFIED,getMessages().getDateTime(onlineResource.getDateLastModified()));
      item.set(LIST_COLUMN_FILE_TYPE,String.valueOf(onlineResource.getTypeId()));
      String user=onlineResource.getUserLastModified().toString();
      try {
        user=CmsPrincipal.readPrincipalIncludingHistory(getCms(),onlineResource.getUserLastModified()).getName();
      }
 catch (      CmsDbEntryNotFoundException e) {
      }
      item.set(LIST_COLUMN_USER,user);
      item.set(LIST_COLUMN_SIZE,new Integer(onlineResource.getLength()).toString());
      item.set(LIST_COLUMN_RESOURCE_PATH,getCms().getSitePath(onlineResource));
      item.set(LIST_COLUMN_STRUCTURE_ID,onlineResource.getStructureId().toString());
      result.add(item);
    }
 catch (    CmsVfsResourceNotFoundException e) {
    }
 finally {
      getCms().getRequestContext().setCurrentProject(project);
    }
  }
  CmsResource offlineResource=getCms().readResource(getParamResource(),CmsResourceFilter.IGNORE_EXPIRATION);
  getList().getMetadata().getColumnDefinition(LIST_COLUMN_SIZE).setVisible(offlineResource.isFile());
  getList().getMetadata().getColumnDefinition(LIST_COLUMN_ICON).setVisible(offlineResource.isFile());
  if (!offlineResource.getState().isUnchanged()) {
    CmsListItem item=getList().newItem("" + CmsHistoryResourceHandler.PROJECT_OFFLINE_VERSION);
    item.set(LIST_COLUMN_VERSION,new CmsVersionWrapper(CmsHistoryResourceHandler.PROJECT_OFFLINE_VERSION));
    item.set(LIST_COLUMN_DATE_PUBLISHED,"-");
    item.set(LIST_COLUMN_DATE_LAST_MODIFIED,getMessages().getDateTime(offlineResource.getDateLastModified()));
    item.set(LIST_COLUMN_FILE_TYPE,String.valueOf(offlineResource.getTypeId()));
    String user=offlineResource.getUserLastModified().toString();
    try {
      user=CmsPrincipal.readPrincipalIncludingHistory(getCms(),offlineResource.getUserLastModified()).getName();
    }
 catch (    CmsDbEntryNotFoundException e) {
    }
    item.set(LIST_COLUMN_USER,user);
    item.set(LIST_COLUMN_SIZE,new Integer(offlineResource.getLength()).toString());
    item.set(LIST_COLUMN_RESOURCE_PATH,getCms().getSitePath(offlineResource));
    item.set(LIST_COLUMN_STRUCTURE_ID,offlineResource.getStructureId().toString());
    result.add(item);
  }
  boolean comparable=(result.size() > 1);
  getList().getMetadata().getColumnDefinition(LIST_COLUMN_SEL1).setVisible(comparable);
  getList().getMetadata().getColumnDefinition(LIST_COLUMN_SEL2).setVisible(comparable);
  getList().getMetadata().getMultiAction(LIST_MACTION_COMPARE).setVisible(comparable);
  return result;
}
