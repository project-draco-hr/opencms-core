{
  CmsXmlLanguageFile lang=new CmsXmlLanguageFile(cms);
  String[] filenames;
  String[] nicenames;
  String[] positions;
  Hashtable storage=new Hashtable();
  CmsFolder folder=null;
  CmsFile file=null;
  String nicename=null;
  String currentFilelist=null;
  int count=1;
  float max=0;
  currentFilelist=CmsWorkplaceAction.getCurrentFolder(cms);
  if (currentFilelist == null) {
    currentFilelist=cms.readAbsolutePath(cms.rootFolder());
  }
  Vector files=cms.getFilesInFolder(currentFilelist);
  Vector folders=cms.getSubFolders(currentFilelist);
  Vector filefolders=new Vector();
  Enumeration enum=folders.elements();
  while (enum.hasMoreElements()) {
    folder=(CmsFolder)enum.nextElement();
    filefolders.addElement(folder);
  }
  enum=files.elements();
  while (enum.hasMoreElements()) {
    file=(CmsFile)enum.nextElement();
    filefolders.addElement(file);
  }
  if (filefolders.size() > 0) {
    filenames=new String[filefolders.size() + 3];
    nicenames=new String[filefolders.size() + 3];
    positions=new String[filefolders.size() + 3];
    enum=filefolders.elements();
    while (enum.hasMoreElements()) {
      CmsResource res=(CmsResource)enum.nextElement();
      if (!cms.readAbsolutePath(res).equals(filename)) {
        if (res.getState() != C_STATE_DELETED) {
          String navpos=cms.readProperty(cms.readAbsolutePath(res),C_PROPERTY_NAVPOS);
          if (navpos != null) {
            nicename=Encoder.escapeHtml(cms.readProperty(cms.readAbsolutePath(res),C_PROPERTY_NAVTEXT));
            if (nicename == null) {
              nicename=res.getName();
            }
            filenames[count]=cms.readAbsolutePath(res);
            nicenames[count]=nicename;
            positions[count]=navpos;
            if (new Float(navpos).floatValue() > max) {
              max=new Float(navpos).floatValue();
            }
            count++;
          }
        }
      }
    }
  }
 else {
    filenames=new String[3];
    nicenames=new String[3];
    positions=new String[3];
  }
  filenames[0]="FIRSTENTRY";
  nicenames[0]=lang.getLanguageValue("input.firstelement");
  positions[0]="0";
  filenames[count]="LASTENTRY";
  nicenames[count]=lang.getLanguageValue("input.lastelement");
  positions[count]=new Float(max + 1).toString();
  filenames[count + 1]="NOCHANGE";
  nicenames[count + 1]=lang.getLanguageValue("input.nochange");
  positions[count + 1]="-1";
  sort(cms,filenames,nicenames,positions,count);
  storage.put("FILENAMES",filenames);
  storage.put("NICENAMES",nicenames);
  storage.put("POSITIONS",positions);
  storage.put("COUNT",new Integer(count + 1));
  return storage;
}
