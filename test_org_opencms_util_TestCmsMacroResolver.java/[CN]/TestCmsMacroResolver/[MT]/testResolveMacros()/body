{
  CmsMacroResolver resolver=CmsMacroResolver.newInstance();
  resolver.addMacro("test","REPLACED");
  String content, result;
  content="<<This is a prefix >>${test}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>REPLACED<<This is a suffix>>",result);
  content="${test}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("REPLACED<<This is a suffix>>",result);
  content="<<This is a prefix >>${test}";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>REPLACED",result);
  content="<<This is a prefix >>$<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>$<<This is a suffix>>",result);
  content="$<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("$<<This is a suffix>>",result);
  content="<<This is a prefix >>$";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>$",result);
  content="<<This is a prefix >>${}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >><<This is a suffix>>",result);
  content="<<This is a prefix >>${unknown}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >><<This is a suffix>>",result);
  content="<<This is a prefix >>${test<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>${test<<This is a suffix>>",result);
  content="<<This is a prefix >>${unknown}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >><<This is a suffix>>",result);
  content="<<This is a prefix >>${unknown}";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>",result);
  content="${unknown}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a suffix>>",result);
  content="${test}<<This is a prefix >>${test}${unknown}${test}<<This is a suffix>>${test}";
  result=resolver.resolveMacros(content);
  assertEquals("REPLACED<<This is a prefix >>REPLACEDREPLACED<<This is a suffix>>REPLACED",result);
  resolver.setKeepEmptyMacros(true);
  content="<<This is a prefix >>${unknown}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>${unknown}<<This is a suffix>>",result);
  content="<<This is a prefix >>${unknown}";
  result=resolver.resolveMacros(content);
  assertEquals("<<This is a prefix >>${unknown}",result);
  content="${unknown}<<This is a suffix>>";
  result=resolver.resolveMacros(content);
  assertEquals("${unknown}<<This is a suffix>>",result);
  content="${test}<<This is a prefix >>${test}${unknown}${test}<<This is a suffix>>${test}";
  result=resolver.resolveMacros(content);
  assertEquals("REPLACED<<This is a prefix >>REPLACED${unknown}REPLACED<<This is a suffix>>REPLACED",result);
}
