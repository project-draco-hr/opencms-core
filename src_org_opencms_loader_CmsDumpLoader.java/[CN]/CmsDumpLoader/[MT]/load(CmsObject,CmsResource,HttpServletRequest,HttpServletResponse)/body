{
  boolean isWorkplaceUser=CmsWorkplaceManager.isWorkplaceUser(req);
  if (!isWorkplaceUser) {
    long lastModifiedHeader=req.getDateHeader(CmsRequestUtil.HEADER_IF_MODIFIED_SINCE);
    if (lastModifiedHeader > -1) {
      if ((resource.getState() == CmsResource.STATE_UNCHANGED) && (resource.getDateLastModified() == lastModifiedHeader)) {
        long now=System.currentTimeMillis();
        if ((resource.getDateReleased() < now) && (resource.getDateExpired() > now)) {
          CmsFlexController.setDateExpiresHeader(res,resource.getDateExpired());
          res.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
          return;
        }
      }
    }
  }
  CmsFile file=CmsFile.upgrade(resource,cms);
  res.setStatus(HttpServletResponse.SC_OK);
  res.setContentLength(file.getContents().length);
  if (isWorkplaceUser) {
    res.setDateHeader(CmsRequestUtil.HEADER_LAST_MODIFIED,System.currentTimeMillis());
    CmsRequestUtil.setNoCacheHeaders(res);
  }
 else {
    res.setDateHeader(CmsRequestUtil.HEADER_LAST_MODIFIED,file.getDateLastModified());
    if (!res.containsHeader(CmsRequestUtil.HEADER_CACHE_CONTROL)) {
      long expireTime=resource.getDateExpired();
      if (expireTime == CmsResource.DATE_EXPIRED_DEFAULT) {
        expireTime--;
      }
      CmsFlexController.setDateExpiresHeader(res,expireTime);
    }
  }
  service(cms,file,req,res);
}
