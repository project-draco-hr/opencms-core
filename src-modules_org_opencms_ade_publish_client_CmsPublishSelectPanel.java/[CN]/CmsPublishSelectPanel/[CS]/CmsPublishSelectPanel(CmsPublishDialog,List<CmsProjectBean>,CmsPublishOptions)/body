{
  m_publishOptions=publishOptions;
  initWidget(UI_BINDER.createAndBindUi(this));
  List<CmsPair<String,String>> items=new ArrayList<CmsPair<String,String>>();
  CmsMessages messages=Messages.get();
  items.add(new CmsPair<String,String>(CmsUUID.getNullUUID().toString(),messages.key(Messages.GUI_PUBLISH_DIALOG_MY_CHANGES_0)));
  for (  CmsProjectBean project : projects) {
    items.add(new CmsPair<String,String>(project.getId().toString(),project.getName()));
  }
  m_projectSelector.setItems(items);
  m_projectSelector.addStyleName(CSS.selector());
  m_publishDialog=publishDialog;
  m_checkboxRelated.setChecked(publishOptions.isIncludeRelated());
  m_checkboxSiblings.setChecked(publishOptions.isIncludeSiblings());
  m_projectSelector.selectValue(publishOptions.getProjectId().toString());
  m_projectSelector.addValueChangeHandler(new ValueChangeHandler<String>(){
    /** 
 * @see ValueChangeHandler#onValueChange(ValueChangeEvent)
 */
    public void onValueChange(    ValueChangeEvent<String> event){
      m_publishOptions.setProjectId(new CmsUUID(event.getValue()));
      m_publishDialog.onChangeOptions();
    }
  }
);
  m_checkboxRelated.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      m_publishOptions.setIncludeRelated(m_checkboxRelated.isChecked());
      m_publishDialog.onChangeOptions();
    }
  }
);
  m_checkboxSiblings.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      m_publishOptions.setIncludeSiblings(m_checkboxSiblings.isChecked());
      m_publishDialog.onChangeOptions();
    }
  }
);
  m_checkboxProblems.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      setProblemMode(m_checkboxProblems.isChecked());
    }
  }
);
  m_publishButton.setUpFace(messages.key(Messages.GUI_PUBLISH_DIALOG_PUBLISH_0),null);
  m_publishButton.useMinWidth(true);
  m_cancelButton.setUpFace(messages.key(Messages.GUI_PUBLISH_DIALOG_CANCEL_BUTTON_0),null);
  m_cancelButton.useMinWidth(true);
  m_selectAll.setUpFace(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_ALL_BUTTON_0),I_CmsInputLayoutBundle.INSTANCE.inputCss().checkBoxImageChecked());
  m_selectAll.useMinWidth(true);
  m_selectNone.setUpFace(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_NONE_BUTTON_0),I_CmsInputLayoutBundle.INSTANCE.inputCss().checkBoxImageUnchecked());
  m_selectNone.useMinWidth(true);
  m_noResources.setText(messages.key(Messages.GUI_PUBLISH_DIALOG_NO_RES_0));
  m_selectAll.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      setAllCheckboxes(true);
      onChangePublishSelection();
    }
  }
);
  m_selectNone.addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent e){
      setAllCheckboxes(false);
      onChangePublishSelection();
    }
  }
);
  m_siblingsLabel.setText(" " + messages.key(Messages.GUI_PUBLISH_CHECKBOXES_SIBLINGS_0));
  m_relatedLabel.setText(" " + messages.key(Messages.GUI_PUBLISH_CHECKBOXES_REL_RES_0));
  m_relatedLabel.addStyleName(CSS.clear());
  m_siblingsLabel.addStyleName(CSS.clear());
  m_problemsLabel.setText(messages.key(Messages.GUI_PUBLISH_CHECKBOXES_PROBLEMS_0));
  m_problemsLabel.addStyleName(CSS.clear());
  m_selectLabel.setText(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_LEFT_LABEL_0));
  m_selectorLabel.setText(messages.key(Messages.GUI_PUBLISH_TOP_PANEL_RIGHT_LABEL_0));
  addScrollHandler();
}
