{
  m_class=cls;
  try {
    List<PropertyDescriptor> descriptors=BeanUtil.getBeanPropertyDescriptor(m_class);
    for (    PropertyDescriptor desc : descriptors) {
      Method getter=desc.getReadMethod();
      if (getter != null) {
        Column columnInfo=getter.getAnnotation(Column.class);
        if (columnInfo != null) {
          if ((columnInfo.view() == null) || matchView(m_view,columnInfo.view())) {
            m_columns.add(new ColumnBean(desc,columnInfo));
          }
        }
      }
    }
    Collections.sort(m_columns,new Comparator<ColumnBean>(){
      public int compare(      CmsBeanTableBuilder<T>.ColumnBean col1,      CmsBeanTableBuilder<T>.ColumnBean col2){
        return ComparisonChain.start().compare(col1.getInfo().order(),col2.getInfo().order()).result();
      }
    }
);
  }
 catch (  IntrospectionException e) {
    LOG.error(e.getLocalizedMessage(),e);
    throw new IllegalArgumentException(e);
  }
}
