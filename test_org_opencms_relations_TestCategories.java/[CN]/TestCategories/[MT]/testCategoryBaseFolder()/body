{
  System.out.println("Testing changing the base folder name of the category repositories.");
  CmsObject cms=getCmsObject();
  List<CmsCategory> cats=CmsCategoryService.getInstance().readCategories(cms,null,true,"index.html");
  assertEquals(3,cats.size());
  CmsCategory catA=cats.get(0);
  CmsCategory catAA=cats.get(1);
  CmsCategory catB=cats.get(2);
  assertEquals(CmsCategoryService.CENTRALIZED_REPOSITORY + "a/",catA.getRootPath());
  assertEquals(CmsCategoryService.CENTRALIZED_REPOSITORY + "a/aa/",catAA.getRootPath());
  assertEquals(cms.getRequestContext().getSiteRoot() + CmsCategoryService.getInstance().getRepositoryBaseFolderName(cms) + "b/",catB.getRootPath());
  cms.writePropertyObject(CmsCategoryService.CENTRALIZED_REPOSITORY,new CmsProperty(CmsPropertyDefinition.PROPERTY_DEFAULT_FILE,"mycats",null));
  cats=CmsCategoryService.getInstance().readCategories(cms,null,true,"index.html");
  assertEquals(2,cats.size());
  assertEquals(catA,cats.get(0));
  assertEquals(catAA,cats.get(1));
  cms.createResource(CmsCategoryService.getInstance().getRepositoryBaseFolderName(cms),CmsResourceTypeFolder.RESOURCE_TYPE_ID);
  CmsCategory catC=CmsCategoryService.getInstance().createCategory(cms,null,"c","C","C test","index.html");
  assertEquals("c/",catC.getPath());
  assertEquals("C",catC.getTitle());
  assertEquals("C test",catC.getDescription());
  assertEquals(cms.getRequestContext().getSiteRoot() + CmsCategoryService.getInstance().getRepositoryBaseFolderName(cms),catC.getBasePath());
  CmsResource resC=cms.readResource(cms.getRequestContext().removeSiteRoot(catC.getRootPath()));
  assertEquals(catC.getId(),resC.getStructureId());
  assertEquals(catC.getRootPath(),resC.getRootPath());
  assertEquals(catC.getTitle(),cms.readPropertyObject(resC,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue());
  assertEquals(catC.getDescription(),cms.readPropertyObject(resC,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false).getValue());
  cats=CmsCategoryService.getInstance().readCategories(cms,null,true,"index.html");
  assertEquals(3,cats.size());
  assertEquals(catA,cats.get(0));
  assertEquals(catAA,cats.get(1));
  assertEquals(catC,cats.get(2));
}
