{
  m_cms=cms;
  m_exportFile=exportFile;
  m_cms=cms;
  m_report=report;
  m_exportingModuleData=true;
  openExportFile(null);
  m_report.println(m_report.key("report.export_channels_begin"),I_CmsReport.C_FORMAT_HEADLINE);
  m_cms.getRequestContext().saveSiteRoot();
  try {
    m_cms.setContextToCos();
    exportAllResourcesVersion3(resourcesToExport);
  }
 catch (  Exception e) {
    throw new CmsException("Error exporting COS channels",e);
  }
 finally {
    m_cms.getRequestContext().restoreSiteRoot();
  }
  m_report.println(m_report.key("report.export_channels_end"),I_CmsReport.C_FORMAT_HEADLINE);
  Vector modules=new Vector();
  Vector moduleNames=new Vector();
  for (int i=0; i < modulesToExport.length; i++) {
    String modName=modulesToExport[i];
    if (modName != null && !"".equals(modName)) {
      moduleNames.addElement(modulesToExport[i]);
    }
  }
  Hashtable moduleExportables=new Hashtable();
  m_cms.getRegistry().getModuleExportables(moduleExportables);
  if (moduleNames.size() == 0) {
    if (resourcesToExport.length > 0) {
      Enumeration modElements=moduleExportables.elements();
      while (modElements.hasMoreElements()) {
        modules.add(modElements.nextElement());
      }
    }
  }
 else {
    modules=moduleNames;
  }
  Enumeration enumModules=modules.elements();
  while (enumModules.hasMoreElements()) {
    String classname=(String)enumModules.nextElement();
    this.exportData(classname,m_exportedChannelIds);
  }
  closeExportFile();
}
