{
  m_report.print(m_report.key("report.export_moduledata_begin"),I_CmsReport.C_FORMAT_HEADLINE);
  m_report.print("<i>" + classname + "</i>",I_CmsReport.C_FORMAT_HEADLINE);
  m_report.println(m_report.key("report.dots"),I_CmsReport.C_FORMAT_HEADLINE);
  Iterator keys=exportedChannelIds.iterator();
  int subId=getContentDefinition(classname,new Class[]{CmsObject.class},new Object[]{m_cms}).getSubId();
  int masterNr=1;
  while (keys.hasNext()) {
    int channelId;
    String key=(String)keys.next();
    try {
      channelId=Integer.parseInt(key);
    }
 catch (    NumberFormatException nfe) {
      m_report.println(nfe);
      continue;
    }
    try {
      Vector allDatasets=new Vector();
      allDatasets=(Vector)Class.forName(classname).getMethod("readAllByChannel",new Class[]{CmsObject.class,Integer.class,Integer.class}).invoke(null,new Object[]{m_cms,new Integer(channelId),new Integer(subId)});
      for (int i=0; i < allDatasets.size(); i++) {
        CmsMasterDataSet curDataset=(CmsMasterDataSet)allDatasets.elementAt(i);
        if (!m_exportedMasters.contains("" + curDataset.m_masterId)) {
          writeExportManifestEntries(classname,curDataset,masterNr,subId);
          m_exportedMasters.add("" + curDataset.m_masterId);
          masterNr++;
        }
      }
    }
 catch (    InvocationTargetException ite) {
      m_report.println(ite);
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isWarnEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).warn("Invocation target exception",ite);
      }
    }
catch (    NoSuchMethodException nsm) {
      m_report.println(nsm);
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isWarnEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).warn("Requested method was not found",nsm);
      }
    }
catch (    Exception e) {
      m_report.println(e);
      if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isWarnEnabled()) {
        OpenCms.getLog(CmsLog.CHANNEL_MAIN).warn("Other exception",e);
      }
    }
  }
  m_report.println(m_report.key("report.export_moduledata_end"),I_CmsReport.C_FORMAT_HEADLINE);
}
