{
  CmsMasterContent cd=null;
  try {
    Class cdClass=Class.forName(classname);
    Constructor co=cdClass.getConstructor(classes);
    cd=(CmsMasterContent)co.newInstance(objects);
  }
 catch (  InvocationTargetException ite) {
    m_report.println(ite);
    if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_MAIN).info("[CmsExportModuledata] " + classname + " contentDefinitionConstructor: Invocation target exception!");
    }
  }
catch (  NoSuchMethodException nsm) {
    m_report.println(nsm);
    if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_MAIN).info("[CmsExportModuledata] " + classname + " contentDefinitionConstructor: Requested method was not found!");
    }
  }
catch (  InstantiationException ie) {
    m_report.println(ie);
    if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_MAIN).info("[CmsExportModuledata] " + classname + " contentDefinitionConstructor: the reflected class is abstract!");
    }
  }
catch (  Exception e) {
    m_report.println(e);
    if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_MAIN).info("[CmsExportModuledata] " + classname + " contentDefinitionConstructor: Other exception! "+ e);
    }
    if (OpenCms.getLog(CmsLog.CHANNEL_MAIN).isInfoEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_MAIN).info(e.getMessage());
    }
  }
  return cd;
}
