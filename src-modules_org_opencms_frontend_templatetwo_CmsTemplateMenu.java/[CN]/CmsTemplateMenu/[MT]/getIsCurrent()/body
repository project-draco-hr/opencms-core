{
  if (m_current == null) {
    m_current=LazyMap.decorate(new HashMap(),new Transformer(){
      /** 
 * @see org.apache.commons.collections.Transformer#transform(java.lang.Object)
 */
      public Object transform(      Object input){
        CmsJspNavElement elem=(CmsJspNavElement)input;
        String uri=getCmsObject().getRequestContext().getUri();
        CmsJspNavElement uriElem=null;
        try {
          uriElem=new CmsJspNavElement(uri,CmsProperty.toMap(getCmsObject().readPropertyObjects(uri,false)));
        }
 catch (        CmsException ex) {
        }
        if (elem.getResourceName().equals(uri)) {
          return new Boolean(true);
        }
        String path=CmsJspNavBuilder.getDefaultFile(getCmsObject(),elem.getResourceName());
        if ((path == null) || ((uriElem != null) && uriElem.isInNavigation())) {
          path=elem.getResourceName();
        }
        if (uri.equals(path)) {
          return new Boolean(true);
        }
        CmsJspNavElement navElem=uriElem;
        while ((navElem != null) && !navElem.isInNavigation()) {
          String parentPath=CmsResource.getParentFolder(navElem.getResourceName());
          if (parentPath == null) {
            break;
          }
          try {
            navElem=new CmsJspNavElement(parentPath,CmsProperty.toMap(getCmsObject().readPropertyObjects(parentPath,false)));
          }
 catch (          CmsException ex) {
            break;
          }
        }
        if ((navElem != null) && (uriElem != null) && !uriElem.isInNavigation()) {
          return new Boolean(elem.equals(navElem));
        }
        return new Boolean(false);
      }
    }
);
  }
  return m_current;
}
