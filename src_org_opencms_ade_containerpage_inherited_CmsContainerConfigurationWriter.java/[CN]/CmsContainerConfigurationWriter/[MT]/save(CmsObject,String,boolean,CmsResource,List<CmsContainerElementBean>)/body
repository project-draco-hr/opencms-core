{
  cms=OpenCms.initCmsObject(cms);
  cms.getRequestContext().setSiteRoot("");
  String configPath;
  if (pageResource.isFolder()) {
    configPath=CmsStringUtil.joinPaths(pageResource.getRootPath(),CmsContainerConfigurationCache.INHERITANCE_CONFIG_FILE_NAME);
  }
 else {
    configPath=CmsStringUtil.joinPaths(CmsResource.getParentFolder(pageResource.getRootPath()),CmsContainerConfigurationCache.INHERITANCE_CONFIG_FILE_NAME);
  }
  CmsInheritedContainerState state=OpenCms.getADEManager().getInheritedContainerState(cms,CmsResource.getParentFolder(CmsResource.getParentFolder(configPath)),name);
  Set<String> keys=state.getNewElementKeys();
  CmsResource configRes=null;
  boolean needToUnlock=false;
  if (!cms.existsResource(configPath)) {
    configRes=cms.createResource(configPath,OpenCms.getResourceManager().getResourceType(CmsResourceTypeXmlContainerPage.INHERIT_CONTAINER_CONFIG_TYPE_NAME).getTypeId());
    needToUnlock=true;
  }
  if (configRes == null) {
    configRes=cms.readResource(configPath);
  }
  CmsFile configFile=cms.readFile(configRes);
  configFile.setFlags(configFile.getFlags() | CmsResource.FLAG_INTERNAL);
  CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,configFile);
  removeExistingEntry(cms,content,cms.getRequestContext().getLocale(),name);
  CmsContainerConfiguration configuration=createConfigurationBean(newOrdering,elements,keys);
  Locale locale=cms.getRequestContext().getLocale();
  if (!content.hasLocale(locale)) {
    content.addLocale(cms,locale);
  }
  Element parentElement=content.getLocaleNode(locale);
  serializeSingleConfiguration(cms,name,configuration,parentElement);
  byte[] contentBytes=content.marshal();
  configFile.setContents(contentBytes);
  CmsLock prevLock=cms.getLock(configRes);
  boolean alreadyLocked=prevLock.isOwnedBy(cms.getRequestContext().getCurrentUser());
  if (!alreadyLocked) {
    cms.lockResourceTemporary(configRes);
    needToUnlock=true;
  }
  try {
    cms.writeFile(configFile);
  }
  finally {
    if (needToUnlock) {
      cms.unlockResource(configRes);
    }
  }
}
