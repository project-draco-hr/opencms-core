{
  List<String> visibles=new ArrayList<String>();
  List<String> invisibles=new ArrayList<String>();
  for (  String key : config.getVisibility().keySet()) {
    Boolean value=config.getVisibility().get(key);
    if (value.booleanValue()) {
      visibles.add(key);
    }
 else {
      invisibles.add(key);
    }
  }
  if (config.getOrdering().isEmpty() && visibles.isEmpty() && invisibles.isEmpty()&& config.getNewElements().isEmpty()) {
    return null;
  }
  Element root=parentElement.addElement(N_CONFIGURATION);
  root.addElement(N_NAME).addCDATA(name);
  for (  String orderKey : config.getOrdering()) {
    root.addElement(N_ORDERKEY).addCDATA(orderKey);
  }
  for (  String visible : visibles) {
    root.addElement(N_VISIBLE).addCDATA(visible);
  }
  for (  String invisible : invisibles) {
    root.addElement(N_HIDDEN).addCDATA(invisible);
  }
  for (  Map.Entry<String,CmsContainerElementBean> entry : config.getNewElements().entrySet()) {
    String key=entry.getKey();
    CmsContainerElementBean elementBean=entry.getValue();
    elementBean.initResource(cms);
    Map<String,CmsXmlContentProperty> settingConfiguration=getSettingConfiguration(cms,elementBean.getResource());
    CmsUUID structureId=elementBean.getId();
    Map<String,String> settings=elementBean.getIndividualSettings();
    Element newElementElement=root.addElement(N_NEWELEMENT);
    newElementElement.addElement(N_KEY).addCDATA(key);
    Element elementElement=newElementElement.addElement(N_ELEMENT);
    Element uriElement=elementElement.addElement(N_URI);
    CmsXmlVfsFileValue.fillEntry(uriElement,structureId,"",CmsRelationType.XML_STRONG);
    CmsXmlContentPropertyHelper.saveProperties(cms,elementElement,settings,settingConfiguration);
  }
  return root;
}
