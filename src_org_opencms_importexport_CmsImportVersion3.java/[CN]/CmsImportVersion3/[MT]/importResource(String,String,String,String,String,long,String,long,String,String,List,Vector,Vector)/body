{
  boolean success=true;
  byte[] content=null;
  String fullname=null;
  CmsResource res=null;
  try {
    if (m_importingChannelData) {
      String channelId=null;
      try {
        if ((type.equalsIgnoreCase(CmsResourceTypeFolder.C_RESOURCE_TYPE_NAME)) && (!destination.endsWith(I_CmsConstants.C_FOLDER_SEPARATOR))) {
          destination+=I_CmsConstants.C_FOLDER_SEPARATOR;
        }
        CmsResource channel=m_cms.readResource(I_CmsConstants.C_ROOT + destination);
        channelId=m_cms.readPropertyObject(m_cms.getSitePath(channel),I_CmsConstants.C_PROPERTY_CHANNELID,false).getValue();
      }
 catch (      Exception e) {
      }
      if (channelId != null) {
        properties.add(new CmsProperty(I_CmsConstants.C_PROPERTY_CHANNELID,channelId,null));
      }
    }
    if (source != null) {
      content=getFileBytes(source);
    }
    I_CmsResourceType resType=OpenCms.getResourceManager().getResourceType(type);
    int size=0;
    if (content != null) {
      size=content.length;
    }
    CmsUUID curUser=m_cms.getRequestContext().currentUser().getId();
    CmsUUID newUserlastmodified=new CmsUUID(userlastmodified);
    CmsUUID newUsercreated=new CmsUUID(usercreated);
    if (m_cms.readUser(newUserlastmodified).getId().equals(CmsUUID.getNullUUID())) {
      newUserlastmodified=curUser;
    }
    if (m_cms.readUser(newUsercreated).getId().equals(CmsUUID.getNullUUID())) {
      newUsercreated=curUser;
    }
    CmsUUID newUuidstructure=new CmsUUID();
    CmsUUID newUuidresource=new CmsUUID();
    if (uuidstructure != null) {
      newUuidstructure=new CmsUUID(uuidstructure);
    }
    if (uuidresource != null) {
      newUuidresource=new CmsUUID(uuidresource);
    }
    if (m_convertToXmlPage && (resType.getTypeName().equals(A_CmsImport.C_RESOURCE_TYPE_LEGACY_PAGE_NAME) || resType.getTypeName().equals(C_RESOURCE_TYPE_NEWPAGE_NAME))) {
      if (content != null) {
        String encoding=null;
        encoding=CmsProperty.get(I_CmsConstants.C_PROPERTY_CONTENT_ENCODING,properties).getValue();
        if (encoding == null) {
          encoding=OpenCms.getSystemInfo().getDefaultEncoding();
        }
        CmsXmlPage xmlPage=CmsXmlPageConverter.convertToXmlPage(m_cms,content,getLocale(destination,properties),encoding);
        content=xmlPage.marshal();
      }
      resType=OpenCms.getResourceManager().getResourceType(CmsResourceTypeXmlPage.getStaticTypeId());
    }
    CmsResource resource=new CmsResource(newUuidstructure,newUuidresource,destination,resType.getTypeId(),resType.isFolder(),new Integer(flags).intValue(),m_cms.getRequestContext().currentProject().getId(),I_CmsConstants.C_STATE_NEW,datelastmodified,newUserlastmodified,datecreated,newUsercreated,CmsResource.DATE_RELEASED_DEFAULT,CmsResource.DATE_EXPIRED_DEFAULT,1,size);
    res=m_cms.importResource(m_importPath + destination,resource,content,properties);
    m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.C_FORMAT_OK);
  }
 catch (  Exception exc) {
    success=false;
    m_report.println(exc);
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().key(Messages.ERR_IMPORTEXPORT_ERROR_IMPORTING_RESOURCE_1,destination),exc);
    }
    try {
      Thread.sleep(1000);
    }
 catch (    Exception e) {
    }
  }
  byte[] digestContent={0};
  if (content != null) {
    digestContent=m_digest.digest(content);
  }
  if (success && (fullname != null)) {
    if (writtenFilenames != null) {
      writtenFilenames.addElement(fullname);
    }
    if (fileCodes != null) {
      fileCodes.addElement(new String(digestContent));
    }
  }
  return res;
}
