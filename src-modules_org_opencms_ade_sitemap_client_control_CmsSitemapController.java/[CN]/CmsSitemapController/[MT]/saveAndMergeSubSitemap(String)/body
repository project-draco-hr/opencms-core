{
  CmsRpcAction<CmsSitemapMergeInfo> mergeAction=new CmsRpcAction<CmsSitemapMergeInfo>(){
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#execute()
 */
    @Override public void execute(){
      start(0);
      List<I_CmsSitemapChange> changes=getChangesToSave();
      getService().saveAndMergeSubSitemap(getSitemapUri(),changes,path,this);
    }
    /** 
 * @see org.opencms.gwt.client.rpc.CmsRpcAction#onResponse(java.lang.Object)
 */
    @Override protected void onResponse(    CmsSitemapMergeInfo result){
      stop(false);
      resetChanges();
      CmsClientSitemapEntry target=getEntry(path);
      I_CmsClientSitemapChange change=new CmsClientSitemapChangeMergeSitemap(path,target,result);
      executeChange(change);
    }
  }
;
  CmsClientSitemapEntry entry=getEntry(path);
  String sitemapProp=entry.getProperties().get(CmsSitemapManager.Property.sitemap.name());
  if (CmsCoreProvider.get().lockAndCheckModification(getSitemapUri(),m_data.getTimestamp()) && CmsCoreProvider.get().lock(sitemapProp)) {
    mergeAction.execute();
  }
}
