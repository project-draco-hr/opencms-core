{
  getJsp().getRequest().setAttribute(C_SESSION_WORKPLACE_CLASS,this);
  try {
    CmsResource sourceRes=getCms().readFileHeader(getParamResource());
    boolean isFolder=sourceRes.isFolder();
    if (performMoveOperation(isFolder)) {
      if (isFolder) {
        List folderList=new ArrayList(2);
        String sourceParent=CmsResource.getParentFolder(getParamResource());
        String targetParent=CmsResource.getParentFolder(getParamTarget());
        if (!targetParent.equals(sourceParent)) {
          folderList.add(targetParent);
        }
        folderList.add(CmsResource.getParentFolder(getParamResource()));
        getJsp().getRequest().setAttribute(C_REQUEST_ATTRIBUTE_RELOADTREE,folderList);
      }
      actionCloseDialog();
    }
 else {
      getJsp().include(C_FILE_DIALOG_SCREEN_WAIT);
    }
  }
 catch (  CmsException e) {
    String message="<p>\n" + key("source") + ": "+ getParamResource()+ "<br>\n"+ key("target")+ ": "+ getParamTarget()+ "\n</p>\n";
    if ((e.getType() == CmsException.C_FILE_EXISTS)) {
      setParamMessage(message + key("confirm.message.copy"));
      getJsp().include(C_FILE_DIALOG_SCREEN_CONFIRM);
    }
 else {
      setParamErrorstack(e.getStackTraceAsString());
      setParamMessage(message + key("error.message." + getParamDialogtype()));
      setParamReasonSuggestion(getErrorSuggestionDefault());
      getJsp().include(C_FILE_DIALOG_SCREEN_ERROR);
    }
  }
}
