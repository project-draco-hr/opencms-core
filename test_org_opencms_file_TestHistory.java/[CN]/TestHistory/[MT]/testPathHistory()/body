{
  CmsObject cms=getCmsObject();
  echo("Testing the reconstruction of the resource path for the history");
  String foldername="/folderMove";
  String filename="/dummyMove";
  String ext=".txt";
  String path=foldername + 0;
  String resName=path + filename + 0+ ext;
  int counter=2;
  cms.createResource(path,CmsResourceTypeFolder.getStaticTypeId());
  cms.unlockResource(path);
  CmsResource res=cms.createResource(resName,CmsResourceTypePlain.getStaticTypeId(),"content version 0".getBytes(),null);
  cms.unlockResource(resName);
  OpenCms.getPublishManager().publishResource(cms,path);
  OpenCms.getPublishManager().waitWhileRunning();
  for (int i=1; i <= counter; i++) {
    String contentStr="content version " + i;
    CmsFile file=cms.readFile(resName);
    file.setContents(contentStr.getBytes());
    cms.lockResource(resName);
    cms.writeFile(file);
    String newPath=foldername + i;
    cms.lockResource(path);
    cms.moveResource(path,newPath);
    String newName=newPath + filename + i+ ext;
    cms.moveResource(newPath + filename + (i - 1)+ ext,newName);
    OpenCms.getPublishManager().publishResource(cms,newPath);
    OpenCms.getPublishManager().waitWhileRunning();
    resName=newName;
    path=newPath;
  }
  CmsFile file=cms.readFile(resName);
  file.setContents(("content version " + (counter + 1)).getBytes());
  cms.lockResource(resName);
  cms.writeFile(file);
  String newPath=foldername + (counter + 1);
  cms.lockResource(path);
  cms.moveResource(path,newPath);
  String newName=newPath + filename + (counter + 1)+ ext;
  cms.moveResource(newPath + filename + counter+ ext,newName);
  CmsFolder folder=cms.readFolder(newPath);
  cms.deleteResource(newPath,CmsResource.DELETE_PRESERVE_SIBLINGS);
  OpenCms.getPublishManager().publishResource(cms,newPath);
  OpenCms.getPublishManager().waitWhileRunning();
  resName=filename + ext;
  cms.createResource(resName,CmsResourceTypePlain.getStaticTypeId(),null,null);
  List historyResources=cms.readAllAvailableVersions(resName);
  assertTrue(historyResources.isEmpty());
  String importFile="import2.txt";
  cms.importResource(importFile,res,"blah-blah".getBytes(),null);
  historyResources=cms.readAllAvailableVersions(importFile);
  assertEquals(counter + 2,historyResources.size());
  for (int i=0; i < counter + 2; i++) {
    int version=counter + 2 - i;
    String contentStr="content version " + (version - 1);
    String histResName=foldername + (version - 1) + filename+ (version - 1)+ ext;
    I_CmsHistoryResource historyResource=(I_CmsHistoryResource)historyResources.get(i);
    assertEquals(version,historyResource.getVersion());
    assertEquals(histResName,cms.getSitePath((CmsResource)historyResource));
    cms.restoreResourceVersion(historyResource.getStructureId(),historyResource.getVersion());
    file=cms.readFile(importFile);
    String restoredContent=getContentString(cms,file.getContents());
    assertEquals(contentStr,restoredContent);
  }
  String importFolder="/import";
  cms.importResource(importFolder,folder,null,null);
  historyResources=cms.readAllAvailableVersions(importFile);
  assertEquals(counter + 2,historyResources.size());
  cms.lockResource(importFile);
  for (int i=0; i < counter + 2; i++) {
    int version=counter + 2 - i;
    String contentStr="content version " + (version - 1);
    String histResName=foldername + (version - 1) + filename+ (version - 1)+ ext;
    I_CmsHistoryResource historyResource=(I_CmsHistoryResource)historyResources.get(i);
    assertEquals(version,historyResource.getVersion());
    assertEquals(histResName,cms.getSitePath((CmsResource)historyResource));
    cms.restoreResourceVersion(historyResource.getStructureId(),historyResource.getVersion());
    file=cms.readFile(importFile);
    String restoredContent=getContentString(cms,file.getContents());
    assertEquals(contentStr,restoredContent);
  }
}
