{
  CmsObject cms=getCmsObject();
  echo("Testing history with siblings edition");
  String folder="/siblings_edition/";
  cms.createResource(folder,CmsResourceTypeFolder.getStaticTypeId());
  OpenCms.getPublishManager().publishResource(cms,folder);
  OpenCms.getPublishManager().waitWhileRunning();
  String s1name=folder + "s1.txt";
  CmsResource s1=cms.createResource(s1name,CmsResourceTypePlain.getStaticTypeId(),"first sibling".getBytes(),null);
  assertHistory(cms,s1name,1);
  OpenCms.getPublishManager().publishResource(cms,s1name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,1);
  I_CmsHistoryResource histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  int basePubTag=histRes.getPublishTag();
  String s2name=folder + "s2.txt";
  CmsResource s2=cms.createSibling(s1name,s2name,null);
  assertHistory(cms,s1name,1);
  assertHistory(cms,s2name,2);
  OpenCms.getPublishManager().publishResource(cms,s2name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,1);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertHistory(cms,s2name,2);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  cms.lockResource(s1name);
  cms.writePropertyObject(s1name,new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,null,"resource change"));
  assertHistory(cms,s1name,2);
  assertHistory(cms,s2name,3);
  cms.changeLock(s2name);
  cms.writePropertyObject(s2name,new CmsProperty(CmsPropertyDefinition.PROPERTY_NAVTEXT,"structure change",null));
  assertHistory(cms,s1name,2);
  assertHistory(cms,s2name,3);
  OpenCms.getPublishManager().publishResource(cms,s1name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,2);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  assertHistory(cms,s2name,4);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  OpenCms.getPublishManager().publishResource(cms,s2name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,2);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  assertHistory(cms,s2name,4);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  cms.lockResource(s1name);
  cms.setDateExpired(s1name,System.currentTimeMillis(),false);
  assertHistory(cms,s1name,3);
  assertHistory(cms,s2name,4);
  cms.changeLock(s2name);
  cms.setDateReleased(s2name,System.currentTimeMillis(),false);
  assertHistory(cms,s1name,3);
  assertHistory(cms,s2name,5);
  OpenCms.getPublishManager().publishResource(cms,s2name,true,null);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,3);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  assertHistory(cms,s2name,5);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),5);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  CmsFile file=cms.readFile(s1name);
  file.setContents("resource changed".getBytes());
  cms.lockResource(s1name);
  cms.writeFile(file);
  assertHistory(cms,s1name,4);
  assertHistory(cms,s2name,6);
  cms.changeLock(s2name);
  cms.writePropertyObject(s2name,new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,"structure change",null));
  assertHistory(cms,s1name,4);
  assertHistory(cms,s2name,6);
  OpenCms.getPublishManager().publishResource(cms,s2name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,4);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),4);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  assertHistory(cms,s2name,6);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),5);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),6);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  cms.lockResource(s1name);
  cms.writePropertyObject(s1name,new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,null,"new resource change"));
  assertHistory(cms,s1name,5);
  assertHistory(cms,s2name,7);
  cms.writePropertyObject(s1name,new CmsProperty(CmsPropertyDefinition.PROPERTY_NAVTEXT,"new structure change",null));
  assertHistory(cms,s1name,5);
  assertHistory(cms,s2name,7);
  cms.changeLock(s2name);
  cms.writePropertyObject(s2name,new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,"new structure change",null));
  assertHistory(cms,s1name,5);
  assertHistory(cms,s2name,7);
  OpenCms.getPublishManager().publishResource(cms,s2name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,6);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),4);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),5);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  assertHistory(cms,s2name,7);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),5);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),6);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),7);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  OpenCms.getPublishManager().publishResource(cms,s1name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,6);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),4);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),5);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),6);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 7,histRes.getPublishTag());
  assertHistory(cms,s2name,7);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),5);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),6);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),7);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  String s3name=folder + "s3.txt";
  CmsResource s3=cms.createSibling(s1name,s3name,null);
  assertHistory(cms,s1name,6);
  assertHistory(cms,s2name,7);
  assertHistory(cms,s3name,5);
  OpenCms.getPublishManager().publishResource(cms,s3name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,6);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),4);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),5);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  histRes=cms.readResource(s1.getStructureId(),6);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 7,histRes.getPublishTag());
  assertHistory(cms,s2name,7);
  histRes=cms.readResource(s2.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(2,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),5);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),6);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s2.getStructureId(),7);
  assertEquals(3,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  assertHistory(cms,s3name,5);
  histRes=cms.readResource(s3.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  histRes=cms.readResource(s3.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 2,histRes.getPublishTag());
  histRes=cms.readResource(s3.getStructureId(),3);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  histRes=cms.readResource(s3.getStructureId(),4);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  histRes=cms.readResource(s3.getStructureId(),5);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertEquals(basePubTag + 8,histRes.getPublishTag());
}
