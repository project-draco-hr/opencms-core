{
  CmsObject cms=getCmsObject();
  echo("Testing history with siblings restoration");
  String folder="/siblings_restoration/";
  cms.createResource(folder,CmsResourceTypeFolder.getStaticTypeId());
  OpenCms.getPublishManager().publishResource(cms,folder);
  OpenCms.getPublishManager().waitWhileRunning();
  String s1name=folder + "s1.txt";
  String txt1="first sibling";
  CmsResource s1=cms.createResource(s1name,CmsResourceTypePlain.getStaticTypeId(),txt1.getBytes(),null);
  assertHistory(cms,s1name,1);
  String s2name=folder + "s2.txt";
  CmsResource s2=cms.createSibling(s1name,s2name,null);
  assertHistory(cms,s1name,1);
  assertHistory(cms,s2name,1);
  OpenCms.getPublishManager().publishResource(cms,folder);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,1);
  I_CmsHistoryResource histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  assertHistory(cms,s2name,1);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  int basePubTag=histRes.getPublishTag();
  String s3name=folder + "s3.txt";
  CmsResource s3=cms.createSibling(s1name,s3name,null);
  assertHistory(cms,s1name,1);
  assertHistory(cms,s2name,1);
  assertHistory(cms,s3name,2);
  cms.changeLock(s1name);
  cms.writePropertyObject(s1name,new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,null,"resource change"));
  assertHistory(cms,s1name,2);
  assertHistory(cms,s2name,2);
  assertHistory(cms,s3name,2);
  OpenCms.getPublishManager().publishResource(cms,s3name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,2);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  assertHistory(cms,s2name,2);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  assertHistory(cms,s3name,2);
  histRes=cms.readResource(s3.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s3.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  cms.lockResource(s3name);
  cms.deleteResource(s3name,CmsResource.DELETE_PRESERVE_SIBLINGS);
  assertHistory(cms,s1name,2);
  assertHistory(cms,s2name,2);
  assertEquals(3,cms.readResource(s3name,CmsResourceFilter.ALL).getVersion());
  OpenCms.getPublishManager().publishResource(cms,s3name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,2);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  assertHistory(cms,s2name,2);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  cms.lockResource(s2name);
  cms.deleteResource(s2name,CmsResource.DELETE_PRESERVE_SIBLINGS);
  assertHistory(cms,s1name,2);
  assertEquals(3,cms.readResource(s2name,CmsResourceFilter.ALL).getVersion());
  CmsFile file=cms.readFile(s1name);
  String txt2="resource changed";
  file.setContents(txt2.getBytes());
  cms.changeLock(s1name);
  cms.writeFile(file);
  assertHistory(cms,s1name,3);
  OpenCms.getPublishManager().publishResource(cms,s2name);
  OpenCms.getPublishManager().waitWhileRunning();
  cms.getRequestContext().setCurrentProject(cms.readProject(CmsProject.ONLINE_PROJECT_ID));
  assertContent(cms,s1name,txt1.getBytes());
  cms=getCmsObject();
  assertState(cms,s1name,CmsResource.STATE_CHANGED);
  assertHistory(cms,s1name,3);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  cms.lockResource(s1name);
  cms.deleteResource(s1name,CmsResource.DELETE_PRESERVE_SIBLINGS);
  assertEquals(3,cms.readResource(s1name,CmsResourceFilter.ALL).getVersion());
  OpenCms.getPublishManager().publishResource(cms,s1name);
  OpenCms.getPublishManager().waitWhileRunning();
  cms.restoreDeletedResource(s1.getStructureId());
  assertHistoryForRestored(cms,s1name,4);
  OpenCms.getPublishManager().publishResource(cms,s1name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,4);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertTrue(histRes.getState().isDeleted());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  assertEquals(txt2,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),4);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  assertEquals(txt2,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  cms.restoreDeletedResource(s2.getStructureId());
  assertHistory(cms,s1name,5);
  assertHistoryForRestored(cms,s2name,6);
  OpenCms.getPublishManager().publishResource(cms,s2name);
  OpenCms.getPublishManager().waitWhileRunning();
  assertHistory(cms,s1name,5);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),3);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertTrue(histRes.getState().isDeleted());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  assertEquals(txt2,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),4);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  assertEquals(txt2,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s1.getStructureId(),5);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(5,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  assertHistory(cms,s2name,6);
  histRes=cms.readResource(s1.getStructureId(),1);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(1,histRes.getResourceVersion());
  assertEquals(basePubTag,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),2);
  assertEquals(0,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 1,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),3);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(2,histRes.getResourceVersion());
  assertEquals(basePubTag + 3,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),4);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(3,histRes.getResourceVersion());
  assertTrue(histRes.getState().isDeleted());
  assertEquals(basePubTag + 4,histRes.getPublishTag());
  assertEquals(txt2,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),5);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(4,histRes.getResourceVersion());
  assertTrue(histRes.getState().isDeleted());
  assertEquals(basePubTag + 5,histRes.getPublishTag());
  assertEquals(txt2,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
  histRes=cms.readResource(s2.getStructureId(),6);
  assertEquals(1,histRes.getStructureVersion());
  assertEquals(5,histRes.getResourceVersion());
  assertFalse(histRes.getState().isDeleted());
  assertEquals(basePubTag + 6,histRes.getPublishTag());
  assertEquals(txt1,new String(CmsFile.upgrade((CmsHistoryFile)histRes,cms).getContents()));
}
