{
  CmsObject cms=getCmsObject();
  echo("Testing restoring and deleting a file several times");
  String resName="fileRestoreIteration.txt";
  int vers=OpenCms.getSystemInfo().getHistoryVersions();
  int delVers=OpenCms.getSystemInfo().getHistoryVersionsAfterDeletion();
  try {
    OpenCms.getSystemInfo().setVersionHistorySettings(true,10,10);
    CmsResource res=cms.createResource(resName,CmsResourceTypePlain.getStaticTypeId());
    assertVersion(cms,resName,1);
    assertTrue(cms.readAllAvailableVersions(resName).isEmpty());
    OpenCms.getPublishManager().publishResource(cms,resName);
    OpenCms.getPublishManager().waitWhileRunning();
    assertVersion(cms,resName,1);
    assertEquals(cms.readAllAvailableVersions(resName).size(),1);
    for (int i=0; i < 3; i++) {
      cms.lockResource(resName);
      cms.deleteResource(resName,CmsResource.DELETE_PRESERVE_SIBLINGS);
      assertVersion(cms,resName,2 + (i * 2));
      assertEquals(cms.readAllAvailableVersions(resName).size(),1 + (i * 2));
      OpenCms.getPublishManager().publishResource(cms,resName);
      OpenCms.getPublishManager().waitWhileRunning();
      cms.restoreDeletedResource(res.getStructureId());
      assertVersion(cms,resName,3 + (i * 2));
      assertEquals(cms.readAllAvailableVersions(resName).size(),2 + (i * 2));
      OpenCms.getPublishManager().publishResource(cms,resName);
      OpenCms.getPublishManager().waitWhileRunning();
      assertVersion(cms,resName,3 + (i * 2));
      assertEquals(cms.readAllAvailableVersions(resName).size(),3 + (i * 2));
    }
  }
  finally {
    OpenCms.getSystemInfo().setVersionHistorySettings(true,vers,delVers);
  }
}
