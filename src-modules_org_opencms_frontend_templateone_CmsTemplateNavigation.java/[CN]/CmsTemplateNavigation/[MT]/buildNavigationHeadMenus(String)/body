{
  CmsTemplateParts parts=null;
  boolean cacheNavEnabled=!getRequestContext().currentProject().isOnlineProject();
  String cacheKey=null;
  if (cacheNavEnabled) {
    parts=CmsTemplateParts.getInstance(this);
    StringBuffer key=new StringBuffer(8);
    key.append(getRequestContext().getSiteRoot());
    key.append("_");
    key.append(getHeadNavFolder().hashCode());
    key.append("_");
    key.append(getStartFolder().hashCode());
    key.append("_");
    key.append(getMenuDepth());
    key.append("_");
    key.append(showMenus());
    key.append("_");
    key.append(showAccessibleVersion());
    key.append("_");
    key.append(getLocale());
    cacheKey=key.toString();
    String cachedNav=(String)parts.getPart(cacheKey);
    if (CmsStringUtil.isNotEmpty(cachedNav)) {
      return cachedNav;
    }
  }
  StringBuffer result=new StringBuffer(4096);
  if (showMenus()) {
    List navElements=getNavigation().getNavigationForFolder(getHeadNavFolder());
    int count=-1;
    String showItemProperty;
    for (int i=0; i < navElements.size(); i++) {
      CmsJspNavElement foldernav=(CmsJspNavElement)navElements.get(i);
      showItemProperty=property(C_PROPERTY_HEADNAV_USE,foldernav.getResourceName(),getHeadNavItemDefaultStringValue());
      boolean showItem=Boolean.valueOf(showItemProperty).booleanValue();
      if (foldernav.isFolderLink() && showItem) {
        count++;
        String subfolder=foldernav.getResourceName();
        List subNav=getNavigation().getNavigationForFolder(subfolder);
        result.append(getMenuNavigation(subNav,styleClass,"menu" + count,1));
      }
    }
    if (cacheNavEnabled) {
      parts.setPart(cacheKey,result.toString());
    }
  }
  return result.toString();
}
