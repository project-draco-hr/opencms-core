{
  Object o=null;
  if (callParameters == null) {
    callParameters=new Object[0];
  }
  if (parameterTypes == null) {
    parameterTypes=new Class[0];
  }
  if (instanceCache.containsKey(classname)) {
    o=instanceCache.get(classname);
  }
 else {
    Vector repositories=new Vector();
    String[] repositoriesFromConfigFile=null;
    repositoriesFromConfigFile=cms.getConfigurations().getStringArray("repositories");
    for (int i=0; i < repositoriesFromConfigFile.length; i++)     repositories.addElement(repositoriesFromConfigFile[i]);
    try {
      CmsClassLoader loader=new CmsClassLoader(cms,repositories,null);
      Class c=loader.loadClass(classname);
      Constructor con=c.getConstructor(parameterTypes);
      o=con.newInstance(callParameters);
    }
 catch (    Exception e) {
      String errorMessage=null;
      if (e instanceof ClassNotFoundException) {
        errorMessage="Could not load template class " + classname + ". "+ e.getMessage();
      }
 else       if (e instanceof InstantiationException) {
        errorMessage="Could not instantiate template class " + classname;
      }
 else       if (e instanceof NoSuchMethodException) {
        errorMessage="Could not find constructor of template class " + classname;
      }
 else {
        errorMessage="Unknown error while getting instance of template class " + classname;
      }
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsTemplateClassManager] " + errorMessage);
      }
      throw new CmsException(errorMessage,CmsException.C_CLASSLOADER_ERROR,e);
    }
    instanceCache.put(classname,o);
  }
  return o;
}
