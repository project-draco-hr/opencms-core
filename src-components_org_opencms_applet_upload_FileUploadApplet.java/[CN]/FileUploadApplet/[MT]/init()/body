{
  m_opencms=getParameter("opencms");
  m_targetUrl=getParameter("target");
  m_redirectUrl=getParameter("redirect");
  m_redirectTargetFrame=getParameter("targetframe");
  if ((m_redirectTargetFrame == null) || m_redirectTargetFrame.equals("")) {
    m_redirectTargetFrame="explorer_files";
  }
  m_errorUrl=getParameter("error");
  m_uploadFolder=getParameter("filelist");
  String tmpSize=getParameter("maxsize");
  if ((tmpSize != null) && (tmpSize.length() > 0)) {
    m_maxsize=Long.parseLong(tmpSize);
  }
  m_fileExtensions=getParameter("fileExtensions");
  m_colors=extractColors(getParameter("colors"));
  m_font=new java.awt.Font(null,Font.BOLD,12);
  m_metrics=getFontMetrics(m_font);
  m_source=getImage(getCodeBase(),"org/opencms/applet/upload/applet_source.png");
  m_target=getImage(getCodeBase(),"org/opencms/applet/upload/applet_target.png");
  m_floater=getImage(getCodeBase(),"org/opencms/applet/upload/floater.gif");
  if (getParameter("actionOutputSelect") != null) {
    m_actionOutputSelect=getParameter("actionOutputSelect");
  }
  if (getParameter("actionOutputCount") != null) {
    m_actionOutputCount=getParameter("actionOutputCount");
  }
  if (getParameter("actionOutputCreate") != null) {
    m_actionOutputCreate=getParameter("actionOutputCreate");
  }
  if (getParameter("actionOutputUpload") != null) {
    m_actionOutputUpload=getParameter("actionOutputUpload");
  }
  if (getParameter("actionOutputError") != null) {
    m_actionOutputError=getParameter("actionOutputError");
  }
  if (getParameter("messageOutputUpload") != null) {
    m_messageOutputUpload=getParameter("messageOutputUpload");
  }
  if (getParameter("messageOutputAdding") != null) {
    m_messageOutputAdding=getParameter("messageOutputAdding");
  }
  if (getParameter("messageOutputErrorZip") != null) {
    m_messageOutputErrorZip=getParameter("messageOutputErrorZip");
  }
  if (getParameter("messageOutputErrorSize") != null) {
    m_messageOutputErrorSize=getParameter("messageOutputErrorSize");
  }
  if (getParameter("messageNoPreview") != null) {
    m_messageNoPreview=getParameter("messageNoPreview");
  }
  if (getParameter("errorLine1") != null) {
    m_errorLine1=getParameter("errorLine1");
  }
  if (getParameter("certificateErrorTitle") != null) {
    m_certificateErrorTitle=getParameter("certificateErrorTitle");
  }
  if (getParameter("certificateErrorMessage") != null) {
    m_certificateErrorMessage=getParameter("certificateErrorMessage");
  }
  m_certificateAccepted=true;
  try {
    System.setProperty(org.apache.commons.logging.LogFactory.FACTORY_PROPERTY,org.apache.commons.logging.LogFactory.FACTORY_DEFAULT);
  }
 catch (  SecurityException e) {
    m_certificateAccepted=false;
    e.printStackTrace();
  }
}
