{
  if (list == null) {
    throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_PROGRESS_START_INVALID_LIST_0));
  }
  if (m_threads.get(getKey()) != null) {
    if (abortExisting) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_INTERRUPT_THREAD_1,getKey()));
      }
      Thread thread=(Thread)m_threads.get(getKey());
      thread.interrupt();
    }
 else {
      throw new CmsIllegalStateException(Messages.get().container(Messages.ERR_PROGRESS_START_THREAD_EXISTS_0));
    }
  }
  CmsProgressThread thread=new CmsProgressThread(list,getKey(),list.getLocale());
  Map threadsAbandoned=new HashMap();
  Map threadsAlive=new HashMap();
synchronized (m_threads) {
    for (Iterator iter=m_threads.entrySet().iterator(); iter.hasNext(); ) {
      Map.Entry entry=(Map.Entry)iter.next();
      CmsProgressThread value=(CmsProgressThread)entry.getValue();
      if ((!value.isAlive()) && (System.currentTimeMillis() - value.getFinishTime() > CLEANUP_PERIOD)) {
        threadsAbandoned.put(entry.getKey(),value);
      }
 else {
        threadsAlive.put(entry.getKey(),value);
      }
    }
    threadsAlive.put(thread.getKey(),thread);
    thread.start();
    m_threads=threadsAlive;
  }
  if (LOG.isDebugEnabled()) {
    for (Iterator iter=threadsAbandoned.keySet().iterator(); iter.hasNext(); ) {
      String key=(String)iter.next();
      LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_CLEAN_UP_THREAD_1,key));
    }
  }
}
