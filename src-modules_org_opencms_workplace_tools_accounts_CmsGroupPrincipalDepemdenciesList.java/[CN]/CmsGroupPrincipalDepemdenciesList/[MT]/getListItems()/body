{
  CmsIdentifiableObjectContainer ret=new CmsIdentifiableObjectContainer(true,false);
  Iterator itGroups=CmsStringUtil.splitAsList(getParamGroupid(),CmsHtmlList.ITEM_SEPARATOR,true).iterator();
  String storedSiteRoot=getCms().getRequestContext().getSiteRoot();
  try {
    getCms().getRequestContext().setSiteRoot("/");
    while (itGroups.hasNext()) {
      CmsGroup group=getCms().readGroup(new CmsUUID(itGroups.next().toString()));
      Set resources=getCms().getResourcesForPrincipal(group.getId(),null,m_showAttributes);
      Iterator itRes=resources.iterator();
      while (itRes.hasNext()) {
        CmsResource resource=(CmsResource)itRes.next();
        CmsListItem item=(CmsListItem)ret.getObject(resource.getResourceId().toString());
        if (item == null) {
          item=getList().newItem(resource.getResourceId().toString());
          item.set(LIST_COLUMN_NAME,resource.getRootPath());
          item.set(LIST_COLUMN_TYPE,new Integer(resource.getTypeId()));
          Iterator itAces=getCms().getAccessControlEntries(resource.getRootPath(),false).iterator();
          while (itAces.hasNext()) {
            CmsAccessControlEntry ace=(CmsAccessControlEntry)itAces.next();
            if (ace.getPrincipal().equals(group.getId())) {
              if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(ace.getPermissions().getPermissionString())) {
                item.set(LIST_COLUMN_PERMISSIONS,group.getName() + ": " + ace.getPermissions().getPermissionString());
              }
              break;
            }
          }
          ret.addIdentifiableObject(item.getId(),item);
        }
 else {
          String oldData=(String)item.get(LIST_COLUMN_PERMISSIONS);
          Iterator itAces=getCms().getAccessControlEntries(resource.getRootPath(),false).iterator();
          while (itAces.hasNext()) {
            CmsAccessControlEntry ace=(CmsAccessControlEntry)itAces.next();
            if (ace.getPrincipal().equals(group.getId())) {
              if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(ace.getPermissions().getPermissionString())) {
                String data=group.getName() + ": " + ace.getPermissions().getPermissionString();
                if (oldData != null) {
                  data=oldData + ", " + data;
                }
                item.set(LIST_COLUMN_PERMISSIONS,data);
              }
              break;
            }
          }
        }
      }
      Iterator itUsers=getCms().getUsersOfGroup(group.getName()).iterator();
      while (itUsers.hasNext()) {
        CmsUser user=(CmsUser)itUsers.next();
        CmsListItem item=(CmsListItem)ret.getObject(user.getId().toString());
        if (item == null) {
          item=getList().newItem(user.getId().toString());
          item.set(LIST_COLUMN_NAME,user.getName());
          item.set(LIST_COLUMN_PERMISSIONS,"--");
          ret.addIdentifiableObject(item.getId(),item);
        }
      }
      Iterator itChildren=getCms().getChildren(group.getName(),false).iterator();
      while (itChildren.hasNext()) {
        CmsGroup child=(CmsGroup)itChildren.next();
        CmsListItem item=(CmsListItem)ret.getObject(child.getId().toString());
        if (item == null) {
          item=getList().newItem(child.getId().toString());
          item.set(LIST_COLUMN_NAME,child.getName());
          item.set(LIST_COLUMN_PERMISSIONS,"--");
          ret.addIdentifiableObject(item.getId(),item);
        }
      }
    }
  }
  finally {
    getCms().getRequestContext().setSiteRoot(storedSiteRoot);
  }
  return ret.elementList();
}
