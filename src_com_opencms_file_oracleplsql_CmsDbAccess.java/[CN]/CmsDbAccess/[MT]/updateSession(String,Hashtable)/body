{
  com.opencms.file.oracleplsql.CmsDbPool pool=(com.opencms.file.oracleplsql.CmsDbPool)m_pool;
  com.opencms.file.oracleplsql.CmsQueries cq=(com.opencms.file.oracleplsql.CmsQueries)m_cq;
  byte[] value=null;
  PreparedStatement statement=null;
  PreparedStatement statement2=null;
  PreparedStatement nextStatement=null;
  OraclePreparedStatement trimStatement=null;
  int retValue;
  ResultSet res=null;
  try {
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    ObjectOutputStream oout=new ObjectOutputStream(bout);
    oout.writeObject(data);
    oout.close();
    value=bout.toByteArray();
    statement=pool.getPreparedStatement(cq.C_PLSQL_SESSION_UPDATE_KEY);
    statement.setTimestamp(1,new java.sql.Timestamp(System.currentTimeMillis()));
    statement.setString(2,sessionId);
    retValue=statement.executeUpdate();
    statement2=pool.getNextPreparedStatement(statement,cq.C_PLSQL_SESSION_FORUPDATE_KEY);
    statement2.setString(1,sessionId);
    Connection conn=pool.getConnectionOfStatement(statement);
    conn.setAutoCommit(false);
    res=statement2.executeQuery();
    while (res.next()) {
      oracle.sql.BLOB blob=((OracleResultSet)res).getBLOB("SESSION_DATA");
      trimStatement=(OraclePreparedStatement)pool.getNextPreparedStatement(statement,cq.C_TRIMBLOB_KEY);
      trimStatement.setBLOB(1,blob);
      trimStatement.setInt(2,0);
      trimStatement.execute();
      ByteArrayInputStream instream=new ByteArrayInputStream(value);
      OutputStream outstream=blob.getBinaryOutputStream();
      byte[] chunk=new byte[blob.getChunkSize()];
      int i=-1;
      while ((i=instream.read(chunk)) != -1) {
        outstream.write(chunk,0,i);
      }
      instream.close();
      outstream.close();
    }
    res.close();
    nextStatement=pool.getNextPreparedStatement(statement,cq.C_COMMIT_KEY);
    nextStatement.execute();
    conn.setAutoCommit(true);
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "]"+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
catch (  IOException e) {
    throw new CmsException("[" + this.getClass().getName() + "]:"+ CmsException.C_SERIALIZATION,e);
  }
 finally {
    if (statement != null) {
      pool.putPreparedStatement(cq.C_PLSQL_SESSION_UPDATE_KEY,statement);
    }
  }
  return retValue;
}
