{
  PreparedStatement statement=null;
  ResultSet res=null;
  CmsUser user=null;
  try {
    statement=m_pool.getPreparedStatement(m_cq.C_USERS_READ_KEY);
    statement.setString(1,name);
    statement.setInt(2,type);
    res=statement.executeQuery();
    if (res.next()) {
      oracle.sql.BLOB blob=((OracleResultSet)res).getBLOB(m_cq.C_USERS_USER_INFO);
      byte[] value=new byte[(int)blob.length()];
      value=blob.getBytes(1,(int)blob.length());
      ByteArrayInputStream bin=new ByteArrayInputStream(value);
      ObjectInputStream oin=new ObjectInputStream(bin);
      Hashtable info=(Hashtable)oin.readObject();
      user=new CmsUser(res.getInt(m_cq.C_USERS_USER_ID),res.getString(m_cq.C_USERS_USER_NAME),res.getString(m_cq.C_USERS_USER_PASSWORD),res.getString(m_cq.C_USERS_USER_RECOVERY_PASSWORD),res.getString(m_cq.C_USERS_USER_DESCRIPTION),res.getString(m_cq.C_USERS_USER_FIRSTNAME),res.getString(m_cq.C_USERS_USER_LASTNAME),res.getString(m_cq.C_USERS_USER_EMAIL),SqlHelper.getTimestamp(res,m_cq.C_USERS_USER_LASTLOGIN).getTime(),SqlHelper.getTimestamp(res,m_cq.C_USERS_USER_LASTUSED).getTime(),res.getInt(m_cq.C_USERS_USER_FLAGS),info,new CmsGroup(res.getInt(m_cq.C_GROUPS_GROUP_ID),res.getInt(m_cq.C_GROUPS_PARENT_GROUP_ID),res.getString(m_cq.C_GROUPS_GROUP_NAME),res.getString(m_cq.C_GROUPS_GROUP_DESCRIPTION),res.getInt(m_cq.C_GROUPS_GROUP_FLAGS)),res.getString(m_cq.C_USERS_USER_ADDRESS),res.getString(m_cq.C_USERS_USER_SECTION),res.getInt(m_cq.C_USERS_USER_TYPE));
    }
 else {
      res.close();
      throw new CmsException("[" + this.getClass().getName() + "]"+ name,CmsException.C_NO_USER);
    }
    res.close();
    return user;
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "]"+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
catch (  CmsException e) {
    throw e;
  }
catch (  Exception e) {
    throw new CmsException("[" + this.getClass().getName() + "]",e);
  }
 finally {
    if (statement != null) {
      m_pool.putPreparedStatement(m_cq.C_USERS_READ_KEY,statement);
    }
  }
}
