{
  com.opencms.file.oracleplsql.CmsQueries cq=(com.opencms.file.oracleplsql.CmsQueries)m_cq;
  CallableStatement statement=null;
  Connection con=null;
  ResultSet res=null;
  Vector resources=new Vector();
  CmsResource resource=null;
  try {
    con=DriverManager.getConnection(m_poolName);
    statement=con.prepareCall(cq.C_PLSQL_RESOURCES_LOCKRESOURCE);
    statement.setInt(1,currentUser.getId());
    statement.setInt(2,currentProject.getId());
    statement.setString(3,resourcename);
    if (force == true) {
      statement.setString(4,"TRUE");
    }
 else {
      statement.setString(4,"FALSE");
    }
    statement.registerOutParameter(5,oracle.jdbc.driver.OracleTypes.CURSOR);
    statement.execute();
    res=(ResultSet)statement.getObject(5);
    while (res.next()) {
      int resId=res.getInt(m_cq.C_RESOURCES_RESOURCE_ID);
      int parentId=res.getInt(m_cq.C_RESOURCES_PARENT_ID);
      String resName=res.getString(m_cq.C_RESOURCES_RESOURCE_NAME);
      int resType=res.getInt(m_cq.C_RESOURCES_RESOURCE_TYPE);
      int resFlags=res.getInt(m_cq.C_RESOURCES_RESOURCE_FLAGS);
      int userId=res.getInt(m_cq.C_RESOURCES_USER_ID);
      int groupId=res.getInt(m_cq.C_RESOURCES_GROUP_ID);
      int projectId=res.getInt(m_cq.C_RESOURCES_PROJECT_ID);
      int fileId=res.getInt(m_cq.C_RESOURCES_FILE_ID);
      int accessFlags=res.getInt(m_cq.C_RESOURCES_ACCESS_FLAGS);
      int state=res.getInt(m_cq.C_RESOURCES_STATE);
      int lockedBy=res.getInt(m_cq.C_RESOURCES_LOCKED_BY);
      int launcherType=res.getInt(m_cq.C_RESOURCES_LAUNCHER_TYPE);
      String launcherClass=res.getString(m_cq.C_RESOURCES_LAUNCHER_CLASSNAME);
      long created=SqlHelper.getTimestamp(res,m_cq.C_RESOURCES_DATE_CREATED).getTime();
      long modified=SqlHelper.getTimestamp(res,m_cq.C_RESOURCES_DATE_LASTMODIFIED).getTime();
      int modifiedBy=res.getInt(m_cq.C_RESOURCES_LASTMODIFIED_BY);
      int resSize=res.getInt(m_cq.C_RESOURCES_SIZE);
      resource=new CmsResource(resId,parentId,fileId,resName,resType,resFlags,userId,groupId,projectId,accessFlags,state,lockedBy,launcherType,launcherClass,created,modified,modifiedBy,resSize);
      resources.addElement(resource);
    }
    res.close();
    statement.close();
    return resources;
  }
 catch (  SQLException sqlexc) {
    CmsException cmsException=getCmsException("[" + this.getClass().getName() + "] ",sqlexc);
    throw cmsException;
  }
catch (  Exception e) {
    throw new CmsException("[" + this.getClass().getName() + "]",e);
  }
 finally {
    if (res != null) {
      try {
        res.close();
      }
 catch (      SQLException se) {
      }
    }
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException se) {
      }
    }
  }
}
