{
  com.opencms.file.oracleplsql.CmsQueries cq=(com.opencms.file.oracleplsql.CmsQueries)m_cq;
  CmsAccessFilesystem discAccess=new CmsAccessFilesystem(m_exportpointStorage);
  CallableStatement statement=null;
  Connection con=null;
  ResultSet res1=null;
  ResultSet res2=null;
  ResultSet res3=null;
  ResultSet res4=null;
  Vector changedResources=new Vector();
  int enableHistoryInt=1;
  if (!enableHistory) {
    enableHistoryInt=0;
  }
  try {
    con=DriverManager.getConnection(m_poolName);
    statement=con.prepareCall(cq.get("C_PLSQL_PROJECTS_PUBLISHPROJECT"));
    statement.setInt(1,currentUser.getId());
    statement.setInt(2,projectId);
    statement.setInt(3,onlineProject.getId());
    statement.setInt(4,enableHistoryInt);
    statement.setTimestamp(5,new Timestamp(System.currentTimeMillis()));
    statement.registerOutParameter(6,oracle.jdbc.driver.OracleTypes.CURSOR);
    statement.registerOutParameter(7,oracle.jdbc.driver.OracleTypes.CURSOR);
    statement.registerOutParameter(8,oracle.jdbc.driver.OracleTypes.CURSOR);
    statement.registerOutParameter(9,oracle.jdbc.driver.OracleTypes.CURSOR);
    statement.execute();
    res1=(ResultSet)statement.getObject(6);
    while (res1.next()) {
      String exportKey=checkExport(res1.getString("RESOURCE_NAME"));
      if (exportKey != null) {
        discAccess.removeResource(res1.getString("RESOURCE_NAME"),exportKey);
      }
    }
    res2=(ResultSet)statement.getObject(7);
    while (res2.next()) {
      changedResources.add(res2.getString("RESOURCE_NAME"));
      String exportKey=checkExport(res2.getString("RESOURCE_NAME"));
      if (exportKey != null) {
        discAccess.createFolder(res2.getString("RESOURCE_NAME"),exportKey);
      }
    }
    res3=(ResultSet)statement.getObject(8);
    while (res3.next()) {
      changedResources.add(res3.getString("RESOURCE_NAME"));
      String exportKey=checkExport(res3.getString("RESOURCE_NAME"));
      if (exportKey != null) {
        discAccess.removeResource(res3.getString("RESOURCE_NAME"),exportKey);
      }
    }
    res4=(ResultSet)statement.getObject(9);
    while (res4.next()) {
      changedResources.add(res4.getString("RESOURCE_NAME"));
      String exportKey=checkExport(res4.getString("RESOURCE_NAME"));
      if (exportKey != null) {
        discAccess.writeFile(res4.getString("RESOURCE_NAME"),exportKey,readFileContent(projectId,res4.getInt("FILE_ID")));
      }
    }
    res1.close();
    res2.close();
    res3.close();
    res4.close();
    statement.close();
    statement=con.prepareCall(cq.get("C_PLSQL_RESOURCES_REMOVEALLDELETED"));
    statement.setInt(1,projectId);
    statement.setInt(2,C_STATE_DELETED);
    statement.executeUpdate();
    statement.close();
    statement=con.prepareCall(cq.get("C_PLSQL_RESOURCES_SETALLUNCHANGED"));
    statement.setInt(1,C_STATE_UNCHANGED);
    statement.setInt(2,projectId);
    statement.setInt(3,C_STATE_UNCHANGED);
    statement.executeUpdate();
    statement.close();
  }
 catch (  SQLException sqlexc) {
    CmsException cmsException=getCmsException("[" + this.getClass().getName() + "] ",sqlexc);
    throw cmsException;
  }
catch (  Exception e) {
    throw new CmsException("[" + this.getClass().getName() + "]",e);
  }
 finally {
    if (res1 != null) {
      try {
        res1.close();
      }
 catch (      SQLException se) {
      }
    }
    if (res2 != null) {
      try {
        res2.close();
      }
 catch (      SQLException se) {
      }
    }
    if (res3 != null) {
      try {
        res3.close();
      }
 catch (      SQLException se) {
      }
    }
    if (res4 != null) {
      try {
        res4.close();
      }
 catch (      SQLException se) {
      }
    }
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException se) {
      }
    }
  }
  return changedResources;
}
