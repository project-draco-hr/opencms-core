{
  if (C_DEBUG && A_OpenCms.isLogging()) {
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "getting content of element " + ((elementName == null) ? "<root>" : elementName));
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "template file is: " + templateFile);
    A_OpenCms.log(C_OPENCMS_DEBUG,this.getClassName() + "selected template section is: " + ((templateSelector == null) ? "<default>" : templateSelector));
  }
  A_CmsRequestContext reqCont=cms.getRequestContext();
  CmsXmlTemplateFile xmlTemplateDocument=getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  if (C_ROLE == null) {
    initConstants((CmsXmlWpTemplateFile)xmlTemplateDocument);
  }
  if (parameters.get("ok") != null) {
    String agentName=(String)parameters.get("USER");
    String roleName=(String)parameters.get("TEAM");
    if (roleName.equals(C_ALL_ROLES)) {
      roleName=cms.readUser(agentName).getDefaultGroup().getName();
    }
    String taskName=(String)parameters.get("TASKNAME");
    String taskcomment=(String)parameters.get("DESCRIPTION");
    String timeoutString=(String)parameters.get("DATE");
    String priorityString=(String)parameters.get("PRIO");
    String paraAcceptation=(String)parameters.get("MSG_ACCEPTATION");
    String paraAll=(String)parameters.get("MSG_ALL");
    String paraCompletion=(String)parameters.get("MSG_COMPLETION");
    String paraDelivery=(String)parameters.get("MSG_DELIVERY");
    try {
      int priority=Integer.parseInt(priorityString);
      String splittetDate[]=Utils.split(timeoutString,".");
      GregorianCalendar cal=new GregorianCalendar(Integer.parseInt(splittetDate[2]),Integer.parseInt(splittetDate[1]) - 1,Integer.parseInt(splittetDate[0]));
      long timeout=cal.getTime().getTime();
      A_CmsTask task=cms.createTask(agentName,roleName,taskName,taskcomment,timeout,priority);
      cms.setTaskPar(task.getId(),C_TASKPARA_ACCEPTATION,paraAcceptation);
      cms.setTaskPar(task.getId(),C_TASKPARA_ALL,paraAll);
      cms.setTaskPar(task.getId(),C_TASKPARA_COMPLETION,paraCompletion);
      cms.setTaskPar(task.getId(),C_TASKPARA_DELIVERY,paraDelivery);
      String comment="Rolle: " + roleName + "\n";
      comment+="Bevorzugter Benutzer: " + agentName + "\n";
      comment+=taskcomment;
      cms.writeTaskLog(task.getId(),comment,C_TASKLOGTYPE_CREATED);
      templateSelector="done";
    }
 catch (    Exception exc) {
      A_OpenCms.log(C_MODULE_INFO,"Could not create task. " + exc.getMessage());
      templateSelector="error";
    }
  }
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
