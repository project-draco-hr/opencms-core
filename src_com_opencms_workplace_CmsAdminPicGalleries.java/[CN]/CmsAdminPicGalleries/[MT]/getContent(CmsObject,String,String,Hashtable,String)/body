{
  I_CmsSession session=CmsXmlTemplateLoader.getSession(cms.getRequestContext(),true);
  CmsXmlWpTemplateFile xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,templateFile,elementName,parameters,templateSelector);
  String lasturl=getLastUrl(cms,parameters);
  getInitial(session,parameters);
  String foldername=getGalleryPath(cms,session,parameters);
  CmsFolder thefolder=cms.readFolder(foldername);
  int maxFileSize=OpenCms.getWorkplaceManager().getFileMaxUploadSize();
  if ((maxFileSize <= 0) || cms.userInGroup(cms.getRequestContext().currentUser().getName(),OpenCms.getDefaultUsers().getGroupAdministrators())) {
    maxFileSize=-1;
    xmlTemplateDocument.setData("limitation","");
  }
 else {
    xmlTemplateDocument.setData("maxfilesize","" + maxFileSize);
    try {
      String limitation=xmlTemplateDocument.getProcessedDataValue("filesize_limited");
      xmlTemplateDocument.setData("limitation",limitation);
    }
 catch (    CmsException e) {
      xmlTemplateDocument.setData("limitation","");
    }
  }
  if (foldername.equals(C_VFS_GALLERY_PICS) && templateFile.endsWith("administration_head_picgalleries2")) {
    xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,C_VFS_PATH_WORKPLACE + "administration/picgallery/administration_head_picgalleries1",elementName,parameters,templateSelector);
  }
  try {
    String parent=CmsResource.getParentFolder(cms.getSitePath(thefolder));
    if (foldername.startsWith(C_VFS_GALLERY_PICS) && (parent.equals(C_VFS_GALLERY_PICS)) && templateFile.endsWith("administration_head_picgalleries1")) {
      xmlTemplateDocument=(CmsXmlWpTemplateFile)getOwnTemplateFile(cms,C_VFS_PATH_WORKPLACE + "administration/htmlgallery/administration_head_picgalleries2",elementName,parameters,templateSelector);
    }
  }
 catch (  Exception e) {
  }
  String action=(String)parameters.get("action");
  String unzip=(String)parameters.get("unzip");
  String newname=(String)parameters.get(C_PARA_NAME);
  String title=(String)parameters.get("TITLE");
  String step=(String)parameters.get("step");
  String imagedescription=(String)parameters.get("DESCRIPTION");
  if (foldername == null) {
    foldername="";
  }
  if ("new".equals(action)) {
    String galleryname=(String)parameters.get("NAME");
    String group=(String)parameters.get("GROUP");
    if (galleryname != null && group != null && galleryname != "" && group != "") {
      try {
        String superfolder=getConfigFile(cms).getPicGalleryPath();
        CmsResource folder=cms.createResource(superfolder + galleryname,CmsResourceTypeFolder.C_RESOURCE_TYPE_ID);
        if (title != null) {
          cms.writeProperty(cms.getSitePath(folder),C_PROPERTY_TITLE,title);
        }
        cms.unlockResource(cms.getSitePath(folder));
      }
 catch (      CmsException ex) {
        xmlTemplateDocument.setData("ERRORDETAILS",CmsException.getStackTraceAsString(ex));
        templateSelector="error";
      }
    }
 else {
      templateSelector="datamissing";
    }
  }
 else {
    if ("upload".equals(action)) {
      String filename=null;
      byte[] filecontent=new byte[0];
      Enumeration files=CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getFileNames();
      while (files.hasMoreElements()) {
        filename=(String)files.nextElement();
      }
      if (filename != null) {
        session.putValue(C_PARA_RESOURCE,filename);
      }
      filename=(String)session.getValue(C_PARA_RESOURCE);
      if (filename != null) {
        filecontent=CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getFile(filename);
      }
      if (filecontent != null) {
        session.putValue(C_PARA_FILECONTENT,filecontent);
      }
      filecontent=(byte[])session.getValue(C_PARA_FILECONTENT);
      if ("0".equals(step)) {
        templateSelector="";
      }
 else {
        if ("1".equals(step)) {
          if (filename != null) {
            if (filecontent.length == 0) {
              templateSelector="error";
              xmlTemplateDocument.setData("details",filename);
            }
 else             if ((maxFileSize > 0) && (filecontent.length > (maxFileSize * 1024))) {
              templateSelector="errorfilesize";
              xmlTemplateDocument.setData("details",filename + ": " + (filecontent.length / 1024)+ " kb, max. "+ maxFileSize+ " kb.");
            }
 else {
              if (unzip != null) {
                CmsImportFolder zip=new CmsImportFolder(filecontent,foldername,cms,true);
                if (zip.isValidZipFile()) {
                  session.removeValue(C_PARA_RESOURCE);
                  session.removeValue(C_PARA_FILECONTENT);
                  session.removeValue(C_PARA_NEWTYPE);
                  session.removeValue("unzip");
                  try {
                    if ((lasturl != null) && (lasturl != "")) {
                      CmsXmlTemplateLoader.getResponse(cms.getRequestContext()).sendRedirect(lasturl);
                    }
 else {
                      CmsXmlTemplateLoader.getResponse(cms.getRequestContext()).sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath() + CmsWorkplaceAction.getExplorerFileUri(CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getOriginalRequest()));
                    }
                  }
 catch (                  Exception ex) {
                    throw new CmsException("Redirect fails :" + getConfigFile(cms).getWorkplaceActionPath() + CmsWorkplaceAction.getExplorerFileUri(CmsXmlTemplateLoader.getRequest(cms.getRequestContext()).getOriginalRequest()),CmsException.C_UNKNOWN_EXCEPTION,ex);
                  }
                  return null;
                }
              }
              xmlTemplateDocument.setData("MIME",filename);
              xmlTemplateDocument.setData("SIZE","Not yet available");
              xmlTemplateDocument.setData("FILESIZE",new Integer(filecontent.length).toString() + " Bytes");
              xmlTemplateDocument.setData("FILENAME",filename);
              xmlTemplateDocument.setData("IMAGEDESCRIPTION",imagedescription);
              templateSelector="step1";
            }
          }
        }
 else {
          if ("2".equals(step)) {
            if (newname != null) {
              filename=newname;
            }
            try {
              CmsFile file=(CmsFile)cms.createResource(foldername + filename,CmsResourceTypeImage.C_RESOURCE_TYPE_ID,filecontent,null);
              if (title != null) {
                String filepath=cms.getSitePath(file);
                cms.writeProperty(filepath,C_PROPERTY_TITLE,title);
              }
              if (imagedescription != null) {
                String filepath=cms.getSitePath(file);
                cms.writeProperty(filepath,C_PROPERTY_DESCRIPTION,imagedescription);
              }
            }
 catch (            CmsException ex) {
              xmlTemplateDocument.setData("details",CmsException.getStackTraceAsString(ex));
              templateSelector="error";
              xmlTemplateDocument.setData("link_value",foldername);
              xmlTemplateDocument.setData("lasturl",lasturl);
              return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
            }
            try {
              CmsXmlTemplateLoader.getResponse(cms.getRequestContext()).sendRedirect(lasturl);
            }
 catch (            Exception ex) {
              throw new CmsException("Redirect fails :" + getConfigFile(cms).getWorkplaceActionPath() + lasturl,CmsException.C_UNKNOWN_EXCEPTION,ex);
            }
            return null;
          }
        }
      }
    }
  }
  xmlTemplateDocument.setData("link_value",foldername);
  xmlTemplateDocument.setData("lasturl",lasturl);
  xmlTemplateDocument.setData("galleryRootFolder",C_VFS_GALLERY_PICS);
  return startProcessing(cms,xmlTemplateDocument,elementName,parameters,templateSelector);
}
