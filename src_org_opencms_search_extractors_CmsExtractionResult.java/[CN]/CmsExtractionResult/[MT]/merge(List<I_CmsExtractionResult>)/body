{
  Map<Locale,Map<String,String>> contentItems=new HashMap<Locale,Map<String,String>>(m_contentItems.size());
  for (  Locale locale : m_contentItems.keySet()) {
    Map<String,String> originalLocalValues=m_contentItems.get(locale);
    Map<String,String> localeValues=new HashMap<String,String>(originalLocalValues.size());
    for (    String key : originalLocalValues.keySet()) {
      localeValues.put(key,originalLocalValues.get(key));
    }
    contentItems.put(locale,localeValues);
  }
  HashMap<String,String> fieldMappings=new HashMap<String,String>(m_fieldMappings.size());
  for (  String fieldMapping : m_fieldMappings.keySet()) {
    fieldMappings.put(fieldMapping,m_fieldMappings.get(fieldMapping));
  }
  for (  Locale locale : contentItems.keySet()) {
    Map<String,String> localeValues=contentItems.get(locale);
    for (    I_CmsExtractionResult result : extractionResults) {
      if (result.getLocales().contains(locale)) {
        Map<String,String> resultLocaleValues=result.getContentItems(locale);
        for (        String item : Arrays.asList(ITEMS_TO_MERGE)) {
          localeValues=mergeItem(item,localeValues,resultLocaleValues);
        }
      }
    }
  }
  return new CmsExtractionResult(m_defaultLocale,contentItems,fieldMappings);
}
