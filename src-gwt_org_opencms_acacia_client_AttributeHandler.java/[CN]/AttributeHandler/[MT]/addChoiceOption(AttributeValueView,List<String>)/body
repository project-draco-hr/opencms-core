{
  String attributeChoice=choicePath.get(0);
  Type optionType=getAttributeType().getAttributeType(attributeChoice);
  int valueIndex=reference.getValueIndex() + 1;
  Entity choiceEntity=m_vie.createEntity(null,getAttributeType().getId());
  AttributeValueView valueWidget=reference;
  if (reference.hasValue()) {
    valueWidget=new AttributeValueView(this,m_widgetService.getAttributeLabel(attributeChoice),m_widgetService.getAttributeHelp(attributeChoice));
    if (optionType.isSimpleType() && m_widgetService.isDisplaySingleLine(attributeChoice)) {
      valueWidget.setCompactMode(AttributeValueView.COMPACT_MODE_SINGLE_LINE);
    }
  }
  List<ChoiceMenuEntryBean> menuEntries=Renderer.getChoiceEntries(getAttributeType(),true);
  for (  ChoiceMenuEntryBean menuEntry : menuEntries) {
    valueWidget.addChoice(m_widgetService,menuEntry);
  }
  m_entity.insertAttributeValue(m_attributeName,choiceEntity,valueIndex);
  ((FlowPanel)reference.getParent()).insert(valueWidget,valueIndex);
  insertHandlers(valueWidget.getValueIndex());
  if (optionType.isSimpleType()) {
    String defaultValue=m_widgetService.getDefaultAttributeValue(attributeChoice,getSimplePath(valueIndex));
    I_FormEditWidget widget=m_widgetService.getAttributeFormWidget(attributeChoice);
    choiceEntity.addAttributeValue(attributeChoice,defaultValue);
    valueWidget.setValueWidget(widget,defaultValue,defaultValue,true);
  }
 else {
    Entity value=m_vie.createEntity(null,optionType.getId());
    choiceEntity.addAttributeValue(attributeChoice,value);
    List<String> remainingAttributeNames=tail(choicePath);
    createNestedEntitiesForChoicePath(value,remainingAttributeNames);
    I_EntityRenderer renderer=m_widgetService.getRendererForAttribute(attributeChoice,optionType);
    valueWidget.setValueEntity(renderer,value);
  }
  updateButtonVisisbility();
}
