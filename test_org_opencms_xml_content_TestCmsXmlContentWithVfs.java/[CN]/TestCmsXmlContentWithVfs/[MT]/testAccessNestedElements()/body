{
  CmsObject cms=getCmsObject();
  echo("Testing access to nested schema values in XML content");
  CmsXmlEntityResolver resolver=new CmsXmlEntityResolver(cms);
  String content;
  CmsXmlContent xmlcontent;
  content=CmsFileUtil.readFile("org/opencms/xml/content/xmlcontent-definition-7.xsd",CmsEncoder.ENCODING_UTF_8);
  CmsXmlEntityResolver.cacheSystemId(SCHEMA_SYSTEM_ID_7,content.getBytes(CmsEncoder.ENCODING_UTF_8));
  content=CmsFileUtil.readFile("org/opencms/xml/content/xmlcontent-7.xml",CmsEncoder.ENCODING_UTF_8);
  xmlcontent=CmsXmlContentFactory.unmarshal(content,CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.validateXmlStructure(resolver);
  xmlcontent.addValue(cms,"DeepCascade",Locale.ENGLISH,0);
  CmsXmlContentValueSequence level0Sequence=xmlcontent.getValueSequence("DeepCascade[1]",Locale.ENGLISH);
  assertEquals(1,level0Sequence.getElementCount());
  xmlcontent.validateXmlStructure(resolver);
  CmsXmlContentValueSequence level1Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade",Locale.ENGLISH);
  assertEquals(1,level1Sequence.getElementCount());
  CmsXmlContentValueSequence level2Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade[1]/VfsLink",Locale.ENGLISH);
  assertEquals(1,level2Sequence.getElementCount());
  level1Sequence.addValue(cms,1);
  assertEquals(2,level1Sequence.getElementCount());
  xmlcontent.validateXmlStructure(resolver);
  System.out.println(xmlcontent.toString());
  xmlcontent=CmsXmlContentFactory.unmarshal(xmlcontent.toString(),CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.validateXmlStructure(resolver);
  level0Sequence=xmlcontent.getValueSequence("DeepCascade[1]",Locale.ENGLISH);
  assertEquals(1,level0Sequence.getElementCount());
  level1Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade",Locale.ENGLISH);
  assertEquals(2,level1Sequence.getElementCount());
  level2Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade[2]/VfsLink",Locale.ENGLISH);
  assertEquals(1,level2Sequence.getElementCount());
  level2Sequence.addValue(cms,0);
  level2Sequence.addValue(cms,2);
  level2Sequence.addValue(cms,1);
  assertEquals(4,level2Sequence.getElementCount());
  System.out.println(xmlcontent.toString());
  xmlcontent=CmsXmlContentFactory.unmarshal(xmlcontent.toString(),CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.validateXmlStructure(resolver);
  level2Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade[2]/VfsLink",Locale.ENGLISH);
  assertEquals(4,level2Sequence.getElementCount());
  level2Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade[2]/Option",Locale.ENGLISH);
  assertEquals(0,level2Sequence.getElementCount());
  level2Sequence.addValue(cms,0);
  level2Sequence.addValue(cms,1);
  assertEquals(2,level2Sequence.getElementCount());
  System.out.println(xmlcontent.toString());
  xmlcontent=CmsXmlContentFactory.unmarshal(xmlcontent.toString(),CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.validateXmlStructure(resolver);
  level2Sequence=xmlcontent.getValueSequence("DeepCascade[1]/Cascade[2]/Option",Locale.ENGLISH);
  assertEquals(2,level2Sequence.getElementCount());
  level0Sequence=xmlcontent.getValueSequence("DeepCascade",Locale.ENGLISH);
  assertEquals(1,level0Sequence.getElementCount());
  level0Sequence.removeValue(0);
  assertEquals(0,level0Sequence.getElementCount());
  System.out.println(xmlcontent.toString());
  xmlcontent=CmsXmlContentFactory.unmarshal(xmlcontent.toString(),CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.validateXmlStructure(resolver);
  level0Sequence=xmlcontent.getValueSequence("DeepCascade",Locale.ENGLISH);
  assertEquals(0,level0Sequence.getElementCount());
  level0Sequence.addValue(cms,0);
  assertEquals(1,level0Sequence.getElementCount());
  System.out.println(xmlcontent.toString());
  xmlcontent=CmsXmlContentFactory.unmarshal(xmlcontent.toString(),CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.validateXmlStructure(resolver);
  level0Sequence=xmlcontent.getValueSequence("DeepCascade",Locale.ENGLISH);
  assertEquals(1,level0Sequence.getElementCount());
}
