{
  CmsObject cms=getCmsObject();
  echo("Testing link CmsXmlVarLinkValue in an XML content");
  CmsXmlEntityResolver resolver=new CmsXmlEntityResolver(cms);
  String content;
  content=CmsFileUtil.readFile("org/opencms/xml/content/xmlcontent-VarLink-definition-1.xsd",CmsEncoder.ENCODING_UTF_8);
  String schemaId="http://www.opencms.org/testVarLink1.xsd";
  CmsXmlContentDefinition definition=CmsXmlContentDefinition.unmarshal(content,schemaId,resolver);
  CmsXmlEntityResolver.cacheSystemId(schemaId,content.getBytes(CmsEncoder.ENCODING_UTF_8));
  content=CmsFileUtil.readFile("org/opencms/xml/content/xmlcontent-VarLink-1.xml",CmsEncoder.ENCODING_UTF_8);
  CmsXmlContent xmlcontent=CmsXmlContentFactory.unmarshal(content,CmsEncoder.ENCODING_UTF_8,resolver);
  assertTrue(xmlcontent.hasValue("VfsLink",Locale.ENGLISH));
  assertTrue(xmlcontent.hasValue("VarLink",Locale.ENGLISH));
  assertSame(definition.getContentHandler().getClass().getName(),CmsDefaultXmlContentHandler.class.getName());
  CmsXmlVfsFileValue vfsValue=(CmsXmlVfsFileValue)xmlcontent.getValue("VfsLink",Locale.ENGLISH);
  CmsXmlVarLinkValue varValue1=(CmsXmlVarLinkValue)xmlcontent.getValue("VarLink",Locale.ENGLISH,0);
  CmsXmlVarLinkValue varValue2=(CmsXmlVarLinkValue)xmlcontent.getValue("VarLink",Locale.ENGLISH,1);
  CmsLink link=vfsValue.getLink(cms);
  assertEquals("/sites/default/index.html",link.getTarget());
  assertTrue(link.isInternal());
  assertEquals("/index.html",vfsValue.getStringValue(cms));
  CmsLink varLink1=varValue1.getLink(cms);
  assertEquals("/sites/default/index.html",varLink1.getTarget());
  assertTrue(varLink1.isInternal());
  assertEquals("/index.html",varValue1.getStringValue(cms));
  CmsLink varLink2=varValue2.getLink(cms);
  assertEquals("http://www.alkacon.com",varLink2.getTarget());
  assertFalse(varLink2.isInternal());
  CmsXmlVarLinkValue varVal;
  CmsLink varLink;
  varVal=(CmsXmlVarLinkValue)xmlcontent.addValue(cms,"VarLink",Locale.ENGLISH,2);
  varVal.setStringValue(cms,"http://www.opencms.org");
  varLink=varVal.getLink(cms);
  assertEquals("http://www.opencms.org",varLink.getTarget());
  assertFalse(varLink.isInternal());
  varVal=(CmsXmlVarLinkValue)xmlcontent.addValue(cms,"VarLink",Locale.ENGLISH,3);
  varVal.setStringValue(cms,"/folder1/page1.html");
  varLink=varVal.getLink(cms);
  assertEquals("/sites/default/folder1/page1.html",varLink.getTarget());
  assertTrue(varLink.isInternal());
  assertEquals("/folder1/page1.html",varVal.getStringValue(cms));
  varVal=(CmsXmlVarLinkValue)xmlcontent.addValue(cms,"VarLink",Locale.ENGLISH,4);
  varVal.setStringValue(cms,"/folder_notexist/page_i_dont_exist.html");
  varLink=varVal.getLink(cms);
  assertEquals("/sites/default/folder_notexist/page_i_dont_exist.html",varLink.getTarget());
  assertTrue(varLink.isInternal());
  assertEquals("/folder_notexist/page_i_dont_exist.html",varVal.getStringValue(cms));
  varVal=(CmsXmlVarLinkValue)xmlcontent.addValue(cms,"VarLink",Locale.ENGLISH,5);
  varVal.setStringValue(cms,"http://localhost:8080/folder1/page1.html");
  varLink=varVal.getLink(cms);
  assertEquals("/sites/default/folder1/page1.html",varLink.getTarget());
  assertTrue(varLink.isInternal());
  assertEquals("/folder1/page1.html",varVal.getStringValue(cms));
  varVal=(CmsXmlVarLinkValue)xmlcontent.addValue(cms,"VarLink",Locale.ENGLISH,6);
  varVal.setStringValue(cms,"http://localhost:8080/folder_notexist/page_i_dont_exist.html");
  varLink=varVal.getLink(cms);
  assertEquals("/sites/default/folder_notexist/page_i_dont_exist.html",varLink.getTarget());
  assertTrue(varLink.isInternal());
  assertEquals("/folder_notexist/page_i_dont_exist.html",varVal.getStringValue(cms));
  echo("XML Content after VarLink modification:");
  echo(xmlcontent.toString());
  echo("-----------------");
  CmsXmlContentDefinition cd=CmsXmlContentDefinition.unmarshal(content,schemaId,resolver);
  CmsXmlContent newContent=CmsXmlContentFactory.createDocument(cms,Locale.ENGLISH,CmsEncoder.ENCODING_UTF_8,cd);
  echo("New XML Content for VarLink:");
  echo(newContent.toString());
  echo("-----------------");
  xmlcontent.validateXmlStructure(resolver);
  newContent.validateXmlStructure(resolver);
}
