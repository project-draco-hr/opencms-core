{
  CmsObject cms=getCmsObject();
  echo("Testing adding a file reference value to an existing xmlcontent");
  String filename="/xmlcontent/article_0001.html";
  String filename2="/xmlcontent/article_0002.html";
  CmsXmlEntityResolver resolver=new CmsXmlEntityResolver(cms);
  CmsFile file=cms.readFile(filename);
  cms.lockResource(filename);
  file=cms.writeFile(file);
  String content=new String(file.getContents());
  CmsXmlContent xmlcontent=CmsXmlContentFactory.unmarshal(content,CmsEncoder.ENCODING_UTF_8,resolver);
  xmlcontent.addValue(cms,"Homepage",Locale.ENGLISH,0);
  CmsXmlVfsFileValue value=(CmsXmlVfsFileValue)xmlcontent.getValue("Homepage",Locale.ENGLISH);
  value.setStringValue(cms,filename + "?a=b&c=d#e");
  xmlcontent.validateXmlStructure(resolver);
  CmsLink link=value.getLink(cms);
  assertEquals(link.getTarget(),cms.getRequestContext().addSiteRoot(filename));
  assertTrue(link.isInternal());
  assertEquals(link.getQuery(),"a=b&c=d");
  assertEquals(link.getAnchor(),"e");
  assertEquals(link.getStructureId(),file.getStructureId());
  assertEquals(value.getStringValue(cms),filename + "?a=b&c=d#e");
  CmsResource res2=cms.readResource(filename2);
  CmsResource schema=cms.readResource("/xmlcontent/article.xsd");
  List<CmsRelation> links=cms.getRelationsForResource(filename,CmsRelationFilter.TARGETS);
  assertEquals(links.size(),2);
  assertRelation(new CmsRelation(file,schema,CmsRelationType.XSD),links.get(0));
  assertRelation(new CmsRelation(file,res2,CmsRelationType.HYPERLINK),links.get(1));
  file.setContents(xmlcontent.toString().getBytes());
  cms.lockResource(filename);
  cms.writeFile(file);
  links=cms.getRelationsForResource(filename,CmsRelationFilter.TARGETS);
  assertEquals(links.size(),3);
  assertRelation(new CmsRelation(file,schema,CmsRelationType.XSD),links.get(0));
  assertRelation(new CmsRelation(file,file,CmsRelationType.XML_WEAK),links.get(1));
  assertRelation(new CmsRelation(file,res2,CmsRelationType.HYPERLINK),links.get(2));
  links=cms.getRelationsForResource(filename,CmsRelationFilter.TARGETS.filterType(CmsRelationType.XML_WEAK));
  assertEquals(links.size(),1);
  assertRelation(new CmsRelation(file,file,CmsRelationType.XML_WEAK),links.get(0));
  links=cms.getRelationsForResource(filename,CmsRelationFilter.TARGETS.filterType(CmsRelationType.HYPERLINK));
  assertEquals(links.size(),1);
  assertRelation(new CmsRelation(file,res2,CmsRelationType.HYPERLINK),links.get(0));
  file=cms.readFile(filename);
  content=new String(file.getContents());
  xmlcontent=CmsXmlContentFactory.unmarshal(content,CmsEncoder.ENCODING_UTF_8,resolver);
  CmsXmlHtmlValue value2=(CmsXmlHtmlValue)xmlcontent.getValue("Text",Locale.ENGLISH,0);
  link=value2.getLinkTable().getLink("link0");
  assertEquals(link.getTarget(),res2.getRootPath());
  assertTrue(link.isInternal());
  assertNull(link.getQuery());
  assertNull(link.getAnchor());
  assertEquals(link.getStructureId(),res2.getStructureId());
}
