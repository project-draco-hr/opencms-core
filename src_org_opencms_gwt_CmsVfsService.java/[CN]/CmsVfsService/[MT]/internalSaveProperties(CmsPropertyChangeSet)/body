{
  CmsObject cms=getCmsObject();
  CmsResource resource=cms.readResource(changes.getTargetStructureId(),CmsResourceFilter.IGNORE_EXPIRATION);
  CmsLockActionRecord actionRecord=ensureLock(cms.getSitePath(resource));
  try {
    Map<String,CmsProperty> ownProps=getPropertiesByName(cms.readPropertyObjects(resource,false));
    boolean changeOwnTitle=shouldChangeTitle(ownProps);
    String hasNavTextChange=null;
    List<CmsProperty> ownPropertyChanges=new ArrayList<CmsProperty>();
    for (    CmsPropertyModification propMod : changes.getChanges()) {
      if (propMod.isFileNameProperty()) {
        if (!resource.getStructureId().equals(propMod.getId())) {
          if (propMod.getId() != null) {
            throw new IllegalStateException("Invalid structure id in property changes.");
          }
        }
        CmsResource.checkResourceName(propMod.getValue());
        String oldSitePath=CmsFileUtil.removeTrailingSeparator(cms.getSitePath(resource));
        String parentPath=CmsResource.getParentFolder(oldSitePath);
        String newSitePath=CmsFileUtil.removeTrailingSeparator(CmsStringUtil.joinPaths(parentPath,propMod.getValue()));
        if (!oldSitePath.equals(newSitePath)) {
          cms.moveResource(oldSitePath,newSitePath);
        }
        resource=cms.readResource(resource.getStructureId(),CmsResourceFilter.IGNORE_EXPIRATION);
      }
 else {
        CmsProperty propToModify=null;
        if (resource.getStructureId().equals(propMod.getId())) {
          if (CmsPropertyDefinition.PROPERTY_NAVTEXT.equals(propMod.getName())) {
            hasNavTextChange=propMod.getValue();
          }
 else           if (CmsPropertyDefinition.PROPERTY_TITLE.equals(propMod.getName())) {
            changeOwnTitle=false;
          }
          propToModify=ownProps.get(propMod.getName());
          if (propToModify == null) {
            propToModify=new CmsProperty(propMod.getName(),null,null);
          }
          ownPropertyChanges.add(propToModify);
        }
 else {
          throw new IllegalStateException("Invalid structure id in property changes!");
        }
        String newValue=propMod.getValue();
        if (newValue == null) {
          newValue="";
        }
        if (propMod.isStructureValue()) {
          propToModify.setStructureValue(newValue);
        }
 else {
          propToModify.setResourceValue(newValue);
        }
      }
    }
    if (hasNavTextChange != null) {
      if (changeOwnTitle) {
        CmsProperty titleProp=ownProps.get(CmsPropertyDefinition.PROPERTY_TITLE);
        if (titleProp == null) {
          titleProp=new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,null,null);
        }
        titleProp.setStructureValue(hasNavTextChange);
        ownPropertyChanges.add(titleProp);
      }
    }
    if (!ownPropertyChanges.isEmpty()) {
      cms.writePropertyObjects(resource,ownPropertyChanges);
    }
  }
  finally {
    if (actionRecord.getChange() == LockChange.locked) {
      cms.unlockResource(resource);
    }
  }
}
