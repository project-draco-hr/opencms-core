{
  listInfo.setResourceState(resource.getState());
  String title=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_TITLE,false).getValue();
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(title)) {
    listInfo.setTitle(title);
  }
 else {
    listInfo.setTitle(resource.getName());
  }
  listInfo.setSubTitle(cms.getSitePath(resource));
  String secure=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_SECURE,true).getValue();
  if (Boolean.parseBoolean(secure)) {
    listInfo.setStateIcon(CmsListInfoBean.StateIcon.secure);
  }
 else {
    String export=cms.readPropertyObject(resource,CmsPropertyDefinition.PROPERTY_EXPORT,true).getValue();
    if (Boolean.parseBoolean(export)) {
      listInfo.setStateIcon(CmsListInfoBean.StateIcon.export);
    }
 else {
      listInfo.setStateIcon(CmsListInfoBean.StateIcon.standard);
    }
  }
  String resTypeName=OpenCms.getResourceManager().getResourceType(resource.getTypeId()).getTypeName();
  String key=OpenCms.getWorkplaceManager().getExplorerTypeSetting(resTypeName).getKey();
  Locale currentLocale=OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);
  CmsMessages messages=OpenCms.getWorkplaceManager().getMessages(currentLocale);
  String resTypeNiceName=messages.key(key);
  listInfo.addAdditionalInfo(messages.key(org.opencms.workplace.commons.Messages.GUI_LABEL_TYPE_0),resTypeNiceName);
  listInfo.setResourceType(resTypeName);
  return listInfo;
}
