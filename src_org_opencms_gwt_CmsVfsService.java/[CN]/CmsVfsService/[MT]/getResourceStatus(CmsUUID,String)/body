{
  try {
    CmsObject cms=getCmsObject();
    Locale locale=OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);
    cms.getRequestContext().setLocale(locale);
    CmsResource resource=cms.readResource(structureId);
    String localizedTitle=null;
    if (!CmsStringUtil.isEmptyOrWhitespaceOnly(contentLocale)) {
      Locale realLocale=CmsLocaleManager.getLocale(contentLocale);
      CmsGallerySearchResult result=CmsGallerySearch.searchById(cms,structureId,realLocale);
      if (!CmsStringUtil.isEmptyOrWhitespaceOnly(result.getTitle())) {
        localizedTitle=result.getTitle();
      }
    }
    CmsResourceUtil resourceUtil=new CmsResourceUtil(cms,resource);
    List<CmsProperty> properties=cms.readPropertyObjects(resource,false);
    CmsResourceStatusBean result=new CmsResourceStatusBean();
    result.setDateCreated(formatDateTime(resource.getDateCreated()));
    long dateExpired=resource.getDateExpired();
    if (dateExpired != CmsResource.DATE_EXPIRED_DEFAULT) {
      result.setDateExpired(formatDateTime(dateExpired));
    }
    result.setDateLastModified(formatDateTime(resource.getDateLastModified()));
    long dateReleased=resource.getDateReleased();
    if (dateReleased != CmsResource.DATE_RELEASED_DEFAULT) {
      result.setDateReleased(formatDateTime(dateReleased));
    }
    String lastProject=resourceUtil.getLockedInProjectName();
    if ("".equals(lastProject)) {
      lastProject=null;
    }
    result.setLastProject(lastProject);
    result.setListInfo(getPageInfo(cms,resource));
    CmsLock lock=cms.getLock(resource);
    CmsUser lockOwner=null;
    if (!lock.isUnlocked()) {
      lockOwner=cms.readUser(lock.getUserId());
      result.setLockState(org.opencms.workplace.list.Messages.get().getBundle(locale).key(org.opencms.workplace.list.Messages.GUI_EXPLORER_LIST_ACTION_LOCK_NAME_2,lockOwner.getName(),lastProject));
    }
 else {
      result.setLockState(org.opencms.workplace.list.Messages.get().getBundle(locale).key(org.opencms.workplace.list.Messages.GUI_EXPLORER_LIST_ACTION_UNLOCK_NAME_0));
    }
    CmsProperty navText=CmsProperty.get(CmsPropertyDefinition.PROPERTY_NAVTEXT,properties);
    if (navText != null) {
      result.setNavText(navText.getValue());
    }
    result.setPermissions(resourceUtil.getPermissionString());
    result.setSize(resource.getLength());
    result.setStateBean(resource.getState());
    CmsProperty title=CmsProperty.get(CmsPropertyDefinition.PROPERTY_TITLE,properties);
    if (localizedTitle != null) {
      result.setTitle(localizedTitle);
      result.getListInfo().setTitle(localizedTitle);
    }
 else     if (title != null) {
      result.setTitle(title.getValue());
    }
    result.setUserCreated(resourceUtil.getUserCreated());
    result.setUserLastModified(resourceUtil.getUserLastModified());
    I_CmsResourceType resType=OpenCms.getResourceManager().getResourceType(resource.getTypeId());
    result.setResourceType(resType.getTypeName());
    if (resType instanceof CmsResourceTypeXmlContent) {
      CmsFile file=cms.readFile(resource);
      CmsXmlContent content=CmsXmlContentFactory.unmarshal(cms,file);
      List<Locale> locales=content.getLocales();
      List<String> localeStrings=new ArrayList<String>();
      for (      Locale l : locales) {
        localeStrings.add(l.toString());
      }
      result.setLocales(localeStrings);
    }
    return result;
  }
 catch (  Throwable e) {
    error(e);
    return null;
  }
}
