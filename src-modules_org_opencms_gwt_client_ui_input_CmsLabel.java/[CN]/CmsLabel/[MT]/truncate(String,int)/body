{
  Element element=getElement();
  String title=element.getAttribute(CmsDomUtil.Attribute.title.name());
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(title)) {
    element.setInnerText(m_originalText);
  }
  updateTitle(false);
  element.addClassName(I_CmsInputLayoutBundle.INSTANCE.inputCss().label());
  CmsTextMetrics tm=CmsTextMetrics.get(element,textMetricsKey);
  String text=element.getInnerText();
  int textWidth=tm.getWidth(text);
  tm.release();
  if (labelWidth >= textWidth) {
    updateTitle(false);
    return;
  }
  updateTitle(true);
  int maxChars=(int)((float)labelWidth / (float)textWidth * text.length());
  if (maxChars < 1) {
    maxChars=1;
  }
  String newText=text.substring(0,maxChars - 1);
  if (text.startsWith("/")) {
    newText=CmsStringUtil.formatResourceName(text,maxChars);
  }
 else   if (maxChars > 2) {
    newText+=CmsDomUtil.Entity.hellip.html();
  }
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(newText)) {
    newText=CmsDomUtil.Entity.nbsp.html();
  }
  element.setInnerHTML(newText);
  element.addClassName(I_CmsInputLayoutBundle.INSTANCE.inputCss().labelTruncated());
}
