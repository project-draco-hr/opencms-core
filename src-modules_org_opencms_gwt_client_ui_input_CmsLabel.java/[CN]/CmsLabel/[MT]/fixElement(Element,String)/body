{
  CmsDebugLog log=CmsDebugLog.getInstance();
  if (getWidthChecked(element)) {
    return;
  }
  setWidthChecked(element,true);
  CmsTextMetrics tm=CmsTextMetrics.get(element,textMetricsKey);
  String text=element.getInnerText();
  int textWidth=tm.getWidth(text);
  tm.release();
  int elementWidth=CmsDomUtil.getCurrentStyleInt(element,CmsDomUtil.Style.width);
  if (elementWidth >= textWidth) {
    element.getStyle().setVisibility(Style.Visibility.VISIBLE);
    return;
  }
  log.printLine("fixElement: ");
  log.printLine("text: " + text);
  log.printLine("elemWidth: " + elementWidth);
  log.printLine("textWidth: " + textWidth);
  int maxChars=(int)((float)elementWidth / (float)textWidth * text.length());
  if (maxChars < 1) {
    maxChars=1;
  }
  String newText=text.substring(0,maxChars - 1);
  if (text.startsWith("/")) {
    newText=CmsStringUtil.formatResourceName(text,maxChars);
  }
 else   if (maxChars > 2) {
    newText+=CmsDomUtil.Entity.hellip.html();
  }
  if (newText.isEmpty()) {
    newText=CmsDomUtil.Entity.nbsp.html();
  }
  element.setInnerHTML(newText);
  element.setAttribute(CmsDomUtil.Attribute.title.name(),text);
  element.addClassName(I_CmsInputLayoutBundle.INSTANCE.inputCss().labelTruncated());
  element.getStyle().setVisibility(Style.Visibility.VISIBLE);
}
