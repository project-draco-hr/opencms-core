{
  if (CmsStringUtil.isEmpty(input)) {
    return input;
  }
  String[] segments=CmsStringUtil.splitAsArray(input,I_CmsMacroResolver.MACRO_DELIMITER);
  if (segments.length == 1) {
    return input;
  }
  String macro;
  String value;
  int pos;
  StringBuffer result=new StringBuffer(input.length() * 2);
  for (int i=0; i < segments.length; i++) {
    if ((segments[i].length() > 0) && (segments[i].charAt(0) == I_CmsMacroResolver.MACRO_START) && (pos=segments[i].indexOf(I_CmsMacroResolver.MACRO_END)) > 0) {
      macro=segments[i].substring(1,pos);
      value=resolver.getMacroValue(macro);
      if (value != null) {
        result.append(value);
      }
 else       if (resolver.isKeepEmptyMacros()) {
        result.append(formatMacro(macro));
      }
      result.append(segments[i].substring(pos + 1));
    }
 else {
      if (i > 0) {
        result.append(I_CmsMacroResolver.MACRO_DELIMITER);
      }
      result.append(segments[i]);
    }
  }
  return result.toString();
}
