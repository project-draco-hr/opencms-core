{
  if (m_propertyValues == null) {
    return Collections.EMPTY_LIST;
  }
  List propertyObjects=new ArrayList(m_propertyValues.size());
  Iterator i=m_propertyValues.keySet().iterator();
  while (i.hasNext()) {
    String key=(String)i.next();
    CmsProperty property=new CmsProperty();
    property.setAutoCreatePropertyDefinition(true);
    property.setKey(key);
    String value=(String)m_propertyValues.get(key);
    StringTokenizer toker=new StringTokenizer(value.trim(),"|");
    String propValue=toker.nextToken();
    propValue=CmsStringUtil.substituteMacros(propValue,new CmsStringMapper(cms,null));
    String propRecord="";
    if (toker.hasMoreTokens()) {
      propRecord=toker.nextToken();
    }
    if (C_PROPERTY_ON_RESOURCE.equals(propRecord) || (CmsStringUtil.isEmpty(propRecord) && !OpenCms.getWorkplaceManager().isDefaultPropertiesOnStructure())) {
      property.setResourceValue(propValue);
    }
 else {
      property.setStructureValue(propValue);
    }
    propertyObjects.add(property);
  }
  return propertyObjects;
}
