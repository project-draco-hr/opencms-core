{
  Log log=OpenCms.getLog(this);
  if (!log.isWarnEnabled()) {
    return;
  }
 else   if ((!warning) && (!log.isInfoEnabled())) {
    return;
  }
 else   if (warning && (m_warningLoggedSinceLastStatus && !(((m_intervalLog <= 0) && (System.currentTimeMillis() < (m_lastLogWarning + m_intervalWarning)))))) {
    return;
  }
 else   if ((!warning) && (m_intervalLog <= 0)) {
    return;
  }
  if (warning) {
    m_lastLogWarning=System.currentTimeMillis();
    m_warningLoggedSinceLastStatus=true;
    log.warn(" W A R N I N G Memory consumption of " + m_memoryCurrent.getUsage() + "% has reached a critical level"+ " ("+ m_maxUsagePercent+ "% configured)");
  }
 else {
    m_warningLoggedSinceLastStatus=false;
    m_lastLogStatus=System.currentTimeMillis();
  }
  String memStatus="Memory (current) max: " + m_memoryCurrent.getMaxMemory() + " mb  "+ "total: "+ m_memoryCurrent.getTotalMemory()+ " mb  "+ "free: "+ m_memoryCurrent.getFreeMemory()+ " mb  "+ "used: "+ m_memoryCurrent.getUsedMemory()+ " mb  "+ "percent: "+ m_memoryCurrent.getUsage()+ "%  "+ "limit: "+ m_maxUsagePercent+ "%  ";
  String avgStatus="Memory (average) max: " + m_memoryAverage.getMaxMemory() + " mb  "+ "total: "+ m_memoryAverage.getTotalMemory()+ " mb  "+ "free: "+ m_memoryAverage.getFreeMemory()+ " mb  "+ "used: "+ m_memoryAverage.getUsedMemory()+ " mb  "+ "percent: "+ m_memoryAverage.getUsage()+ "%  "+ "count: "+ m_memoryAverage.getCount();
  if (warning) {
    log.warn(memStatus);
  }
 else {
    m_logCount++;
    log.info("Memory monitor log for server " + OpenCms.getSystemInfo().getServerName().toUpperCase() + " ("+ m_logCount+ ")");
    List keyList=Arrays.asList(m_monitoredObjects.keySet().toArray());
    Collections.sort(keyList);
    long totalSize=0;
    for (Iterator keys=keyList.iterator(); keys.hasNext(); ) {
      String key=(String)keys.next();
      Object obj=m_monitoredObjects.get(key);
      long size=getKeySize(obj) + getValueSize(obj) + getCosts(obj);
      totalSize+=size;
      PrintfFormat name1=new PrintfFormat("%-80s");
      PrintfFormat name2=new PrintfFormat("%-50s");
      PrintfFormat form=new PrintfFormat("%9s");
      log.info("    " + "Monitored: " + name1.sprintf(key) + " "+ "Type: "+ name2.sprintf(obj.getClass().getName())+ " "+ "Entries: "+ form.sprintf(getItems(obj))+ " "+ "Limit: "+ form.sprintf(getLimit(obj))+ " "+ "Size: "+ form.sprintf(Long.toString(size)));
    }
    memStatus+="size monitored: " + totalSize + " ("+ totalSize / 1048576 + " mb)";
    log.info(memStatus);
    log.info(avgStatus);
    CmsSessionManager sm=OpenCms.getSessionManager();
    if (sm != null) {
      log.info("Sessions users: " + sm.getSessionCountAuthenticated() + " current: "+ sm.getSessionCountCurrent()+ " total: "+ sm.getSessionCountTotal());
    }
    sm=null;
    log.info("OpenCms startup time was: " + CmsDateUtil.getDateTimeShort(OpenCms.getSystemInfo().getStartupTime()) + " - current runtime is: "+ CmsStringUtil.formatRuntime(OpenCms.getSystemInfo().getRuntime()));
  }
}
