{
  for (  CacheType type : types) {
switch (type) {
case ACL:
      m_cacheAccessControlList.clear();
    break;
case CONTENT_DEFINITION:
  m_cacheContentDefinitions.clear();
break;
case GROUP:
m_cacheGroup.clear();
break;
case HAS_ROLE:
m_cacheHasRoles.clear();
break;
case LOCALE:
m_cacheLocale.clear();
break;
case LOCK:
m_cacheLock.clear();
break;
case MEMORY_OBJECT:
m_cacheMemObject.clear();
break;
case ORG_UNIT:
m_cacheOrgUnit.clear();
break;
case PERMISSION:
m_cachePermission.clear();
break;
case PROJECT:
m_cacheProject.clear();
break;
case PROJECT_RESOURCES:
m_cacheProjectResources.clear();
break;
case PROPERTY:
m_cacheProperty.clear();
break;
case PROPERTY_LIST:
m_cachePropertyList.clear();
break;
case PUBLISHED_RESOURCES:
m_cachePublishedResources.clear();
break;
case PUBLISH_HISTORY:
m_publishHistory.clear();
break;
case PUBLISH_QUEUE:
m_publishQueue.clear();
break;
case RESOURCE:
m_cacheResource.clear();
break;
case RESOURCE_LIST:
m_cacheResourceList.clear();
break;
case ROLE_LIST:
m_cacheRoleLists.clear();
break;
case USER:
m_cacheUser.clear();
break;
case USERGROUPS:
m_cacheUserGroups.clear();
break;
case USER_LIST:
m_cacheUserList.clear();
break;
case VFS_OBJECT:
m_cacheVfsObject.clear();
break;
case XML_ENTITY_PERM:
m_cacheXmlPermanentEntity.clear();
break;
case XML_ENTITY_TEMP:
m_cacheXmlTemporaryEntity.clear();
break;
default :
}
}
}
