{
  long keySize=0;
  try {
    Object[] values=map.values().toArray();
    for (int i=0, s=values.length; i < s; i++) {
      Object obj=values[i];
      if (obj instanceof Map && depth < MAX_DEPTH) {
        keySize+=getKeySize((Map)obj,depth + 1);
        continue;
      }
    }
    values=null;
    Object[] keys=map.keySet().toArray();
    for (int i=0, s=keys.length; i < s; i++) {
      Object obj=keys[i];
      if (obj instanceof String) {
        String st=(String)obj;
        keySize+=(st.length() * 2);
      }
    }
  }
 catch (  ConcurrentModificationException e) {
  }
catch (  Throwable t) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().key(Messages.LOG_CAUGHT_THROWABLE_1,t.getMessage()));
    }
  }
  return keySize;
}
