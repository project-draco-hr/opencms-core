{
  m_context=context;
  CmsObject cms=context.getCms();
  m_user=cms.getRequestContext().getCurrentUser();
  if (m_user.isManaged()) {
    throw new CmsRuntimeException(Messages.get().container(Messages.ERR_USER_NOT_SELF_MANAGED_1,m_user.getName()));
  }
  CmsVaadinUtils.readAndLocalizeDesign(this,OpenCms.getWorkplaceManager().getMessages(A_CmsUI.get().getLocale()),null);
  m_userInfo.setContentMode(ContentMode.HTML);
  m_userInfo.setValue("<img src=\"" + OpenCms.getWorkplaceAppManager().getUserIconHelper().getSmallIconPath(cms,m_user) + "\" style=\"vertical-align:middle; margin: -4px 10px 0 0;\" />"+ m_user.getName());
  initFields();
  m_deleteImage.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      OpenCms.getWorkplaceAppManager().getUserIconHelper().deleteUserImage(A_CmsUI.getCmsObject());
      updateUserInfo();
    }
  }
);
  m_cancelButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      cancel();
    }
  }
);
  m_okButton.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      submit();
    }
  }
);
  m_changePassword.addClickListener(new ClickListener(){
    private static final long serialVersionUID=1L;
    public void buttonClick(    ClickEvent event){
      openChangePassword();
    }
  }
);
  setActionHandler(new CmsOkCancelActionHandler(){
    private static final long serialVersionUID=1L;
    @Override protected void cancel(){
      CmsUserDataDialog.this.cancel();
    }
    @Override protected void ok(){
      submit();
    }
  }
);
}
