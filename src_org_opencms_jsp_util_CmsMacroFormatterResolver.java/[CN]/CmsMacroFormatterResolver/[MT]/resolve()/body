{
  initMacroContent();
  String input=getMacroInput();
  if (input == null) {
    return;
  }
  if (input.length() < 3) {
    m_context.getOut().print(input);
    return;
  }
  int newDelimPos=input.indexOf(I_CmsMacroResolver.MACRO_DELIMITER);
  int oldDelomPos=input.indexOf(I_CmsMacroResolver.MACRO_DELIMITER_OLD);
  if ((oldDelomPos == -1) && (newDelimPos == -1)) {
    m_context.getOut().print(input);
    return;
  }
  int len=input.length();
  int nextDelimPos, delimPos1, delimPos2, endPos;
  String macro;
  char startChar, endChar;
  int delimPos;
  if ((oldDelomPos == -1) || ((newDelimPos > -1) && (newDelimPos < oldDelomPos))) {
    delimPos=newDelimPos;
    startChar=I_CmsMacroResolver.MACRO_START;
    endChar=I_CmsMacroResolver.MACRO_END;
  }
 else {
    delimPos=oldDelomPos;
    startChar=I_CmsMacroResolver.MACRO_START_OLD;
    endChar=I_CmsMacroResolver.MACRO_END_OLD;
  }
  m_context.getOut().print(input.substring(0,delimPos));
  do {
    delimPos1=delimPos + 1;
    delimPos2=delimPos1 + 1;
    if (delimPos2 >= len) {
      m_context.getOut().print(input.substring(delimPos,len));
      break;
    }
    if ((newDelimPos > -1) && (newDelimPos < delimPos1)) {
      newDelimPos=input.indexOf(I_CmsMacroResolver.MACRO_DELIMITER,delimPos1);
    }
    if ((oldDelomPos > -1) && (oldDelomPos < delimPos1)) {
      oldDelomPos=input.indexOf(I_CmsMacroResolver.MACRO_DELIMITER_OLD,delimPos1);
    }
    if ((oldDelomPos == -1) && (newDelimPos == -1)) {
      nextDelimPos=len;
    }
 else {
      if ((oldDelomPos == -1) || ((newDelimPos > -1) && (newDelimPos < oldDelomPos))) {
        nextDelimPos=newDelimPos;
      }
 else {
        nextDelimPos=oldDelomPos;
      }
    }
    char start=input.charAt(delimPos1);
    if (start == startChar) {
      endPos=input.indexOf(endChar,delimPos);
      if ((endPos > 0) && (endPos < nextDelimPos)) {
        macro=input.substring(delimPos2,endPos);
        try {
          printMacroValue(macro);
        }
 catch (        Exception ex) {
          LOG.error("Writing value for macro '" + macro + "' failed.",ex);
        }
        endPos++;
      }
 else {
        endPos=delimPos;
      }
    }
 else {
      endPos=delimPos;
    }
    if (nextDelimPos == newDelimPos) {
      startChar=I_CmsMacroResolver.MACRO_START;
      endChar=I_CmsMacroResolver.MACRO_END;
    }
 else {
      startChar=I_CmsMacroResolver.MACRO_START_OLD;
      endChar=I_CmsMacroResolver.MACRO_END_OLD;
    }
    m_context.getOut().print(input.substring(endPos,nextDelimPos));
    delimPos=nextDelimPos;
  }
 while (delimPos < len);
}
