{
  super.initialize(adminCms,configurationManager,module);
  OpenCms.getWorkplaceManager().addEditorCssHandlerToHead(TEMPLATETWO_EDITOR_CSS_HANDER);
  final CmsObject cms=adminCms;
  Thread thread=new Thread(new Runnable(){
    /** 
 * @see java.lang.Runnable#run()
 */
    public void run(){
synchronized (this) {
        try {
          wait(5000);
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
      if (!cms.existsResource(RELEASE_CONFIG)) {
        return;
      }
 else {
        try {
          int plainId;
          try {
            plainId=OpenCms.getResourceManager().getResourceType(CmsResourceTypePlain.getStaticTypeName()).getTypeId();
          }
 catch (          CmsLoaderException e) {
            plainId=CmsResourceTypePlain.getStaticTypeId();
          }
          if (cms.readResource(RELEASE_CONFIG + "default").getTypeId() != plainId) {
            return;
          }
        }
 catch (        CmsException e) {
          e.printStackTrace();
          return;
        }
      }
      String projectName="ReleaseModuleRepair";
      CmsProject project=null;
      try {
        project=cms.readProject(projectName);
      }
 catch (      CmsException ex) {
        try {
          project=cms.createProject(projectName,projectName,OpenCms.getDefaultUsers().getGroupAdministrators(),OpenCms.getDefaultUsers().getGroupAdministrators(),CmsProject.PROJECT_TYPE_TEMPORARY);
        }
 catch (        CmsException e) {
          e.printStackTrace();
        }
      }
      if (project == null) {
        return;
      }
      cms.getRequestContext().setCurrentProject(project);
      try {
        cms.copyResourceToProject(RELEASE_CONFIG);
        Iterator it=cms.readResources(RELEASE_CONFIG,CmsResourceFilter.DEFAULT,false).iterator();
        while (it.hasNext()) {
          CmsResource res=(CmsResource)it.next();
          int type=0;
          if (res.getName().equals("default")) {
            type=OpenCms.getResourceManager().getResourceType("ttconfig").getTypeId();
          }
 else           if (res.getName().equals("options")) {
            type=OpenCms.getResourceManager().getResourceType("ttoptions").getTypeId();
          }
 else           if (res.getName().equals("style")) {
            type=OpenCms.getResourceManager().getResourceType("ttstyle").getTypeId();
          }
 else           if (res.getName().equals("twocolums")) {
            type=OpenCms.getResourceManager().getResourceType("ttpreset").getTypeId();
          }
          if ((type == 0) || (type == res.getTypeId())) {
            continue;
          }
          String resName=cms.getSitePath(res);
          cms.lockResource(resName);
          cms.chtype(resName,type);
        }
        CmsLogReport report=new CmsLogReport(Locale.ENGLISH,CmsTemplateModuleAction.class);
        OpenCms.getPublishManager().publishProject(cms,report);
        OpenCms.getPublishManager().waitWhileRunning();
      }
 catch (      CmsException e) {
        e.printStackTrace();
      }
    }
  }
);
  thread.start();
}
