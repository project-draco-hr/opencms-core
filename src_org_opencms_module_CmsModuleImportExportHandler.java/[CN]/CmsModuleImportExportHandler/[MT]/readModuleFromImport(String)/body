{
  Digester digester=new Digester();
  digester.setUseContextClassLoader(true);
  digester.setValidating(false);
  digester.setRuleNamespaceURI(null);
  digester.setErrorHandler(new CmsXmlErrorHandler(importResource));
  CmsModuleImportExportHandler handler=new CmsModuleImportExportHandler();
  digester.push(handler);
  CmsModuleXmlHandler.addXmlDigesterRules(digester);
  InputStream stream=null;
  ZipFile importZip=null;
  try {
    File file=new File(importResource);
    if (file.isFile()) {
      importZip=new ZipFile(importResource);
      ZipEntry entry=importZip.getEntry(CmsImportExportManager.EXPORT_MANIFEST);
      if (entry != null) {
        stream=importZip.getInputStream(entry);
      }
 else {
        CmsMessageContainer message=Messages.get().container(Messages.ERR_NO_MANIFEST_MODULE_IMPORT_1,importResource);
        LOG.error(message.key());
        throw new CmsConfigurationException(message);
      }
    }
 else     if (file.isDirectory()) {
      file=new File(file,CmsImportExportManager.EXPORT_MANIFEST);
      stream=new FileInputStream(file);
    }
    digester.parse(stream);
  }
 catch (  IOException e) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_IO_MODULE_IMPORT_1,importResource);
    LOG.error(message.key(),e);
    throw new CmsConfigurationException(message,e);
  }
catch (  SAXException e) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_SAX_MODULE_IMPORT_1,importResource);
    LOG.error(message.key(),e);
    throw new CmsConfigurationException(message,e);
  }
 finally {
    try {
      if (importZip != null) {
        importZip.close();
      }
      if (stream != null) {
        stream.close();
      }
    }
 catch (    Exception e) {
    }
  }
  CmsModule importedModule=handler.getModule();
  if (importedModule == null) {
    throw new CmsConfigurationException(Messages.get().container(Messages.ERR_IMPORT_MOD_ALREADY_INSTALLED_1,importResource));
  }
  return importedModule;
}
