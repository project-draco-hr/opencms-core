{
  Set<CmsResource> published=getAlreadyPublishedResources();
  Set<CmsResource> exclude=new HashSet<CmsResource>(published);
  ResourcesAndRelated permissions=getResourcesWithoutPermissions(exclude);
  exclude.addAll(permissions.getResources());
  exclude.addAll(permissions.getRelatedResources());
  ResourcesAndRelated locked=getBlockingLockedResources(exclude);
  exclude.clear();
  exclude.addAll(published);
  exclude.addAll(permissions.getResources());
  exclude.addAll(locked.getResources());
  ResourcesAndRelated pubResources=new ResourcesAndRelated();
  pubResources.getResources().addAll(getPublishResources().getResources());
  pubResources.getResources().removeAll(exclude);
  pubResources.getRelatedResources().addAll(getPublishResources().getRelatedResources());
  pubResources.getRelatedResources().removeAll(permissions.getRelatedResources());
  pubResources.getRelatedResources().removeAll(locked.getRelatedResources());
  List<CmsResource> sortedResources=new ArrayList<CmsResource>(getPublishResources().getResources());
  Collections.sort(sortedResources,I_CmsResource.COMPARE_DATE_LAST_MODIFIED);
  if (sortedResources.isEmpty()) {
    return new ArrayList<CmsPublishGroupBean>();
  }
  Set<CmsResource> allPubRes=new HashSet<CmsResource>(pubResources.getRelatedResources());
  allPubRes.addAll(pubResources.getResources());
  List<CmsResource> pubList=new ArrayList<CmsResource>();
  try {
    pubList=OpenCms.getPublishManager().getUsersPubList(m_cms);
  }
 catch (  CmsException e) {
    LOG.error(e.getLocalizedMessage(),e);
  }
  int sessions=GROUP_SESSIONS_NUMBER;
  int days=GROUP_DAYS_NUMBER;
  List<CmsPublishGroupBean> groups=new ArrayList<CmsPublishGroupBean>();
  List<CmsPublishResourceBean> resources=new ArrayList<CmsPublishResourceBean>();
  long groupDate=sortedResources.get(0).getDateLastModified();
  ListIterator<CmsResource> itResources=sortedResources.listIterator();
  while (itResources.hasNext()) {
    CmsResource resource=itResources.next();
    try {
      List<CmsPublishResourceBean> related=getRelatedResources(resource,allPubRes,published,permissions,locked);
      CmsPublishResourceInfoBean info=getResourceInfo(resource,published,permissions,locked);
      CmsPublishResourceBean pubResource=resourceToBean(resource,info,pubList.contains(resource),related);
      resources.add(pubResource);
    }
 catch (    Exception e) {
      LOG.error(e.getLocalizedMessage(),e);
    }
    boolean newGroup=!itResources.hasNext();
    if (!newGroup) {
      CmsResource nextRes=itResources.next();
      itResources.previous();
      if (sessions > 0) {
        newGroup=(resource.getDateLastModified() - nextRes.getDateLastModified() > GROUP_SESSIONS_GAP);
      }
 else       if (days > 0) {
        Calendar oldCalendar=Calendar.getInstance();
        oldCalendar.setTimeInMillis(resource.getDateLastModified());
        Calendar newCalendar=Calendar.getInstance();
        newCalendar.setTimeInMillis(nextRes.getDateLastModified());
        newGroup=(oldCalendar.get(Calendar.DAY_OF_MONTH) == newCalendar.get(Calendar.DAY_OF_MONTH));
        newGroup&=(oldCalendar.get(Calendar.MONTH) == newCalendar.get(Calendar.MONTH));
        newGroup&=(oldCalendar.get(Calendar.YEAR) == newCalendar.get(Calendar.YEAR));
      }
    }
    if (newGroup) {
      try {
        String groupName;
        if (sessions > 0) {
          groupName=Messages.get().getBundle(m_locale).key(Messages.GUI_GROUPNAME_SESSION_1,new Date(groupDate));
          sessions--;
        }
 else         if (days > 0) {
          groupName=Messages.get().getBundle(m_locale).key(Messages.GUI_GROUPNAME_DAY_1,new Date(groupDate));
          days--;
        }
 else {
          groupName=Messages.get().getBundle(m_locale).key(Messages.GUI_GROUPNAME_EVERYTHING_ELSE_0);
        }
        if (itResources.hasNext()) {
          CmsResource nextRes=itResources.next();
          itResources.previous();
          groupDate=nextRes.getDateLastModified();
        }
        CmsPublishGroupBean group=new CmsPublishGroupBean(groupName,resources);
        groups.add(group);
        resources=new ArrayList<CmsPublishResourceBean>();
      }
 catch (      Exception e) {
        LOG.error(e.getLocalizedMessage(),e);
      }
    }
  }
  return groups;
}
