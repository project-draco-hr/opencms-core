{
  if (!locale.equals(m_model.getLocale())) {
    Object sortProperty=m_table.getSortContainerPropertyId();
    boolean isAcending=m_table.isSortAscending();
    Map<Object,Object> filters=getFilters();
    m_table.clearFilters();
    if (m_model.setLocale(locale)) {
      m_options.setEditedFilePath(m_model.getEditedFilePath());
      m_table.sort(new Object[]{sortProperty},new boolean[]{isAcending});
    }
 else {
      String caption=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_LOCALE_SWITCHING_FAILED_CAPTION_0);
      String description=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_LOCALE_SWITCHING_FAILED_DESCRIPTION_0);
      Notification warning=new Notification(caption,description,Type.WARNING_MESSAGE,true);
      warning.setDelayMsec(-1);
      warning.show(UI.getCurrent().getPage());
      m_options.setLanguage(m_model.getLocale());
    }
    setFilters(filters);
    m_table.select(m_table.getCurrentPageFirstItemId());
  }
}
