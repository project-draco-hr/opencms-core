{
  FormLayout languages=new FormLayout();
  languages.setHeight("100%");
  languages.setDefaultComponentAlignment(Alignment.MIDDLE_LEFT);
  ComboBox languageSelect=new ComboBox();
  languageSelect.setCaption(m_messages.key(Messages.GUI_LANGUAGE_SWITCHER_LABEL_0));
  languageSelect.setNullSelectionAllowed(false);
  for (  Locale locale : m_model.getLocales()) {
    languageSelect.addItem(locale);
    String caption=locale.getDisplayName(UI.getCurrent().getLocale());
    if (CmsLocaleManager.getDefaultLocale().equals(locale)) {
      caption+=" (" + Messages.get().getBundle(UI.getCurrent().getLocale()).key(Messages.GUI_DEFAULT_LOCALE_0) + ")";
    }
    languageSelect.setItemCaption(locale,caption);
  }
  languageSelect.setValue(m_model.getLocale());
  languageSelect.setNewItemsAllowed(false);
  languageSelect.setTextInputAllowed(false);
  if (m_model.getLocales().size() > 1) {
    languageSelect.addValueChangeListener(new ValueChangeListener(){
      @SuppressWarnings("synthetic-access") public void valueChange(      ValueChangeEvent event){
        Object sortProperty=m_table.getSortContainerPropertyId();
        boolean isAcending=m_table.isSortAscending();
        Map<Object,Object> filters=getFilters();
        m_table.clearFilters();
        if (m_model.setLocale((Locale)event.getProperty().getValue())) {
          m_fileName.setReadOnly(false);
          m_fileName.setValue(m_model.getEditedFilePath());
          m_fileName.setReadOnly(true);
          m_table.sort(new Object[]{sortProperty},new boolean[]{isAcending});
        }
 else {
          String caption=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_LOCALE_SWITCHING_FAILED_CAPTION_0);
          String description=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_LOCALE_SWITCHING_FAILED_DESCRIPTION_0);
          Notification warning=new Notification(caption,description,Type.WARNING_MESSAGE,true);
          warning.setDelayMsec(-1);
          warning.show(UI.getCurrent().getPage());
          event.getProperty().setValue(m_model.getLocale());
        }
        setFilters(filters);
        m_table.select(m_table.getCurrentPageFirstItemId());
      }
    }
);
  }
 else {
    languageSelect.setEnabled(false);
  }
  languages.addComponent(languageSelect);
  return languages;
}
