{
  final FilterTable table=new FilterTable();
  table.setSizeFull();
  table.setContainerDataSource(m_model.getContainerForCurrentLocale());
  if (table.getItemIds().isEmpty() && !m_model.hasDescriptor()) {
    table.addItem();
  }
  table.setColumnHeader(TableProperty.KEY,m_configurableMessages.getColumnHeader(TableProperty.KEY));
  table.setColumnCollapsible(TableProperty.KEY,false);
  table.setColumnHeader(TableProperty.DEFAULT,m_configurableMessages.getColumnHeader(TableProperty.DEFAULT));
  table.setColumnCollapsible(TableProperty.DEFAULT,true);
  table.setColumnHeader(TableProperty.DESCRIPTION,m_configurableMessages.getColumnHeader(TableProperty.DESCRIPTION));
  table.setColumnCollapsible(TableProperty.DESCRIPTION,true);
  table.setColumnHeader(TableProperty.TRANSLATION,m_configurableMessages.getColumnHeader(TableProperty.TRANSLATION));
  table.setColumnCollapsible(TableProperty.TRANSLATION,false);
  table.setColumnHeader(TableProperty.OPTIONS,m_configurableMessages.getColumnHeader(TableProperty.OPTIONS));
  table.setFilterDecorator(new CmsMessageBundleEditorFilterDecorator());
  table.setFilterBarVisible(true);
  table.setFilterFieldVisible(TableProperty.OPTIONS,false);
  table.setColumnCollapsible(TableProperty.OPTIONS,false);
  table.setSortEnabled(true);
  table.setEditable(true);
  table.setSelectable(true);
  table.setImmediate(true);
  table.setMultiSelect(false);
  table.setColumnCollapsingAllowed(m_model.hasDescriptor());
  table.setColumnReorderingAllowed(false);
  m_optionsColumn=generateOptionsColumn(table);
  if (m_model.isShowOptionsColumn(m_model.getEditMode())) {
    table.addGeneratedColumn(TableProperty.OPTIONS,m_optionsColumn);
  }
  table.setColumnWidth(TableProperty.OPTIONS,72);
  table.setColumnExpandRatio(TableProperty.KEY,1f);
  table.setColumnExpandRatio(TableProperty.DESCRIPTION,1f);
  table.setColumnExpandRatio(TableProperty.DEFAULT,1f);
  table.setColumnExpandRatio(TableProperty.TRANSLATION,1f);
  table.setPageLength(30);
  table.setCacheRate(1);
  table.sort(new Object[]{TableProperty.KEY},new boolean[]{true});
  table.addItemClickListener(new ItemClickListener(){
    private static final long serialVersionUID=5418404788437252894L;
    public void itemClick(    ItemClickEvent event){
      Object propertyId=event.getPropertyId();
      Object itemId=event.getItemId();
      int col=m_model.getEditableColumns().indexOf(propertyId);
      if (col >= 0) {
        AbstractTextField newTF=((TranslateTableFieldFactory)m_table.getTableFieldFactory()).getValueFields().get(Integer.valueOf(col + 1)).get(itemId);
        if (newTF != null) {
          newTF.focus();
        }
      }
    }
  }
);
  table.setNullSelectionAllowed(false);
  return table;
}
