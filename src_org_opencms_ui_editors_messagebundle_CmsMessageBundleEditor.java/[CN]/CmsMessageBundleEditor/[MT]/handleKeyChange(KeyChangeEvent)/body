{
  KeyChangeResult result=m_model.handleKeyChange(event,true);
  String caption=null;
  String description=null;
  Notification warning=null;
switch (result) {
case SUCCESS:
    return;
case FAILED_DUPLICATED_KEY:
  caption=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_KEY_ALREADY_EXISTS_CAPTION_0);
description=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_KEY_ALREADY_EXISTS_DESCRIPTION_0);
warning=new Notification(caption,description,Type.WARNING_MESSAGE,true);
break;
case FAILED_FOR_OTHER_LANGUAGE:
caption=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_KEY_RENAMING_FAILED_CAPTION_0);
description=m_messages.key(Messages.GUI_NOTIFICATION_MESSAGEBUNDLEEDITOR_KEY_RENAMING_FAILED_DESCRIPTION_0);
warning=new Notification(caption,description,Type.WARNING_MESSAGE,true);
break;
default :
throw new IllegalArgumentException();
}
warning.setDelayMsec(-1);
warning.show(UI.getCurrent().getPage());
event.getSource().focus();
}
