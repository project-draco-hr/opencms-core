{
  String userId=getSelectedItem().getId();
  String userName=getSelectedItem().get(LIST_COLUMN_LOGIN).toString();
  Map params=new HashMap();
  params.put(A_CmsEditUserDialog.PARAM_USERID,userId);
  params.put(A_CmsOrgUnitDialog.PARAM_OUFQN,getParamOufqn());
  params.put(CmsDialog.PARAM_ACTION,CmsDialog.DIALOG_INITIAL);
  if (getParamListAction().equals(LIST_ACTION_ROLE)) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/role",params);
  }
 else   if (getParamListAction().equals(LIST_DEFACTION_EDIT)) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit",params);
  }
 else   if (m_editActionIds.contains(getParamListAction())) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/user",params);
  }
 else   if (getParamListAction().equals(LIST_ACTION_GROUPS)) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/groups",params);
  }
 else   if (m_deleteActionIds.contains(getParamListAction())) {
    getToolManager().jspForwardTool(this,getCurrentToolPath() + "/edit/delete",params);
  }
 else   if (getParamListAction().startsWith(LIST_ACTION_ACTIVATE)) {
    try {
      CmsUser user=readUser(userName);
      user.setEnabled(true);
      getCms().writeUser(user);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_ACTIVATE_USER_1,userName),e);
    }
  }
 else   if (getParamListAction().startsWith(LIST_ACTION_DEACTIVATE)) {
    try {
      CmsUser user=readUser(userName);
      user.setEnabled(false);
      getCms().writeUser(user);
    }
 catch (    CmsException e) {
      throw new CmsRuntimeException(Messages.get().container(Messages.ERR_DEACTIVATE_USER_1,userName),e);
    }
  }
 else {
    throwListUnsupportedActionException();
  }
  listSave();
}
