{
  if (isGroupcontainerEditing()) {
    dragElement.removeFromParent();
    if (!getGroupcontainer().iterator().hasNext()) {
      getGroupcontainer().addStyleName(I_CmsLayoutBundle.INSTANCE.containerpageCss().emptyGroupContainer());
    }
    getGroupcontainer().refreshHighlighting();
  }
 else {
    final String id=dragElement.getId();
    if (id != null) {
      addToRecentList(id,null);
    }
    I_CmsDropContainer container=dragElement.getParentTarget();
switch (removeMode) {
case saveAndCheckReferences:
      dragElement.removeFromParent();
    if (container instanceof CmsContainerPageContainer) {
      ((CmsContainerPageContainer)container).checkEmptyContainers();
    }
  cleanUpContainers();
Runnable checkReferencesAction=new Runnable(){
  public void run(){
    checkReferencesToRemovedElement(id);
  }
}
;
setPageChanged(checkReferencesAction);
break;
case confirmRemove:
handleConfirmRemove(dragElement);
break;
case silent:
default :
dragElement.removeFromParent();
if (container instanceof CmsContainerPageContainer) {
((CmsContainerPageContainer)container).checkEmptyContainers();
}
cleanUpContainers();
setPageChanged();
break;
}
}
}
