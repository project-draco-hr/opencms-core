{
  I_CmsSimpleCallback<CmsContainerElementData> callback=new I_CmsSimpleCallback<CmsContainerElementData>(){
    public void execute(    CmsContainerElementData newElement){
      try {
        final CmsContainerPageElementPanel replacement=replaceContainerElement(elementWidget,newElement);
        Runnable joinAction=new Runnable(){
          public void run(){
            if (afterReloadAction != null) {
              afterReloadAction.onSuccess(replacement);
            }
          }
        }
;
        final CmsAsyncJoinHandler joinHandler=new CmsAsyncJoinHandler(joinAction);
        joinHandler.addTokens("recentDone");
        if (!isGroupcontainerEditing()) {
          joinHandler.addTokens("saveDone");
          setPageChanged(new Runnable(){
            public void run(){
              joinHandler.removeToken("saveDone");
            }
          }
);
        }
        resetEditableListButtons();
        addToRecentList(newElement.getClientId(),new Runnable(){
          public void run(){
            joinHandler.removeToken("recentDone");
          }
        }
);
      }
 catch (      Exception e) {
        CmsDebugLog.getInstance().printLine(e.getLocalizedMessage());
      }
    }
  }
;
  getElementWithSettings(clientId,settings,callback);
}
