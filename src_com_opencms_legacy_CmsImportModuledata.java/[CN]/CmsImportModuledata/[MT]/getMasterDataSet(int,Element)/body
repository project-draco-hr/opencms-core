{
  String datasetfile=null, username=null, groupname=null, accessFlags=null, publicationDate=null, purgeDate=null, creationDate=null, flags=null, feedId=null, feedReference=null, feedFilename=null, title=null, master_id=null;
  CmsMasterDataSet newDataset=new CmsMasterDataSet();
  datasetfile=((Element)masterElement.selectNodes("./" + CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASET).get(0)).getTextTrim();
  Document datasetXml=CmsImportVersion1.getXmlDocument(getFileInputStream(datasetfile));
  Element dataset=(Element)datasetXml.getRootElement().selectNodes("./" + CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASET).get(0);
  newDataset.m_subId=subId;
  master_id=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_ID);
  if (master_id != null) {
    newDataset.m_masterId=new CmsUUID(master_id);
  }
 else {
    newDataset.m_masterId=CmsUUID.getNullUUID();
  }
  username=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_USER);
  CmsUUID userId=null;
  try {
    if ((username != null) && !("".equals(username.trim()))) {
      userId=m_cms.readUser(username).getId();
    }
  }
 catch (  Exception e) {
    userId=m_cms.getRequestContext().currentUser().getId();
  }
  newDataset.m_userId=userId;
  groupname=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_GROUP);
  CmsUUID groupId=CmsUUID.getNullUUID();
  try {
    if ((groupname != null) && !("".equals(groupname.trim()))) {
      groupId=m_cms.readGroup(groupname).getId();
    }
  }
 catch (  Exception e) {
    try {
      groupId=m_cms.readGroup(OpenCms.getDefaultUsers().getGroupUsers()).getId();
    }
 catch (    Exception e2) {
    }
  }
  newDataset.m_groupId=groupId;
  accessFlags=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_ACCESSFLAGS);
  try {
    newDataset.m_accessFlags=Integer.parseInt(accessFlags);
  }
 catch (  Exception e) {
    newDataset.m_accessFlags=I_CmsConstants.C_ACCESS_DEFAULT_FLAGS;
  }
  publicationDate=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_PUBLICATIONDATE);
  try {
    newDataset.m_publicationDate=convertDate(publicationDate);
  }
 catch (  Exception e) {
  }
  purgeDate=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_PURGEDATE);
  try {
    newDataset.m_purgeDate=convertDate(purgeDate);
  }
 catch (  Exception e) {
  }
  try {
    creationDate=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_CREATEDATE);
    newDataset.m_dateCreated=convertDate(creationDate);
  }
 catch (  Exception e) {
  }
  flags=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_FLAGS);
  try {
    newDataset.m_flags=Integer.parseInt(flags);
  }
 catch (  Exception e) {
  }
  feedId=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDID);
  try {
    newDataset.m_feedId=Integer.parseInt(feedId);
  }
 catch (  Exception e) {
  }
  feedReference=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDREFERENCE);
  try {
    newDataset.m_feedReference=Integer.parseInt(feedReference);
  }
 catch (  Exception e) {
  }
  feedFilename=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_FEEDFILENAME);
  newDataset.m_feedFilename=feedFilename;
  title=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_TITLE);
  newDataset.m_title=title;
  for (int i=0; i < newDataset.m_dataBig.length; i++) {
    String filename=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_DATABIG + i);
    String value=new String();
    if (filename != null && !"".equals(filename.trim())) {
      value=new String(getFileBytes(filename));
    }
    newDataset.m_dataBig[i]=value;
  }
  for (int i=0; i < newDataset.m_dataMedium.length; i++) {
    String filename=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAMEDIUM + i);
    String value=new String();
    if (filename != null && !"".equals(filename.trim())) {
      value=new String(getFileBytes(filename));
    }
    newDataset.m_dataMedium[i]=value;
  }
  for (int i=0; i < newDataset.m_dataSmall.length; i++) {
    String filename=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_DATASMALL + i);
    String value=new String();
    if (filename != null && !"".equals(filename.trim())) {
      value=new String(getFileBytes(filename));
    }
    newDataset.m_dataSmall[i]=value;
  }
  for (int i=0; i < newDataset.m_dataInt.length; i++) {
    String value=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAINT + i);
    try {
      newDataset.m_dataInt[i]=new Integer(value).intValue();
    }
 catch (    Exception e) {
      newDataset.m_dataInt[i]=0;
    }
  }
  for (int i=0; i < newDataset.m_dataReference.length; i++) {
    String value=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_DATAREFERENCE + i);
    try {
      newDataset.m_dataReference[i]=new Integer(value).intValue();
    }
 catch (    Exception e) {
      newDataset.m_dataReference[i]=0;
    }
  }
  for (int i=0; i < newDataset.m_dataDate.length; i++) {
    String value=CmsImport.getChildElementTextValue(dataset,CmsExportModuledata.C_EXPORT_TAG_MASTER_DATADATE + i);
    try {
      newDataset.m_dataDate[i]=convertDate(value);
    }
 catch (    Exception e) {
      newDataset.m_dataDate[i]=0;
    }
  }
  return newDataset;
}
