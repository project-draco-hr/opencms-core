{
  String startLong=values.get(I_CmsCalendarSerialDateOptions.CONFIG_STARTDATE);
  m_startDateValue=new Date(getLongValue(startLong,0));
  DateTimeFormat timeformate=DateTimeFormat.getFormat("hh:mm aa");
  m_startDate.setValue(timeformate.format(m_startDateValue));
  m_dateboxbegin.setValue(m_startDateValue);
  String endLong=values.get(I_CmsCalendarSerialDateOptions.CONFIG_ENDDATE);
  m_endDateValue=new Date(getLongValue(endLong,0));
  m_endDate.setValue(timeformate.format(m_endDateValue));
  if (getLongValue(endLong,0) > getLongValue(startLong,0)) {
    long delta=getLongValue(endLong,0) - getLongValue(startLong,0);
    int test=new Long(delta / MILLIS_02_PER_DAY).intValue();
    m_duration.selectValue((test + 1) + "");
  }
  String endTypeStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_END_TYPE);
  int endType=getIntValue(endTypeStr,I_CmsCalendarSerialDateOptions.END_TYPE_NEVER);
  m_groupDuration.selectButton(m_lowRadioButton[endType - 1]);
  if (endType == I_CmsCalendarSerialDateOptions.END_TYPE_TIMES) {
    String occurStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_OCCURENCES);
    m_times.setText(occurStr);
  }
 else   if (endType == I_CmsCalendarSerialDateOptions.END_TYPE_DATE) {
    String endDateStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_SERIAL_ENDDATE);
    long endDate=getLongValue(endDateStr,0);
    m_dateboxend.setValue(new Date(endDate));
  }
  String type=values.get(I_CmsCalendarSerialDateOptions.CONFIG_TYPE);
  int entryType=getIntValue(type,1);
  m_groupPattern.selectButton(m_arrayRadiobox[entryType - 1]);
  changePattern();
switch (entryType) {
case I_CmsCalendarSerialDateOptions.TYPE_DAILY:
    String intervalStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_INTERVAL);
  String workingDaysStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_EVERY_WORKING_DAY);
boolean workingDays=Boolean.valueOf(workingDaysStr).booleanValue();
m_dailyPattern.setInterval(intervalStr);
if (workingDays) {
m_dailyPattern.setSelection(2);
}
 else {
m_dailyPattern.setSelection(1);
}
break;
case I_CmsCalendarSerialDateOptions.TYPE_WEEKLY:
intervalStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_INTERVAL);
String weekDaysStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_WEEKDAYS);
List<String> weekDaysStrList=CmsStringUtil.splitAsList(weekDaysStr,SEPARATOR_WEEKDAYS,true);
m_weeklyPattern.setInterval(intervalStr);
m_weeklyPattern.setWeekDays(weekDaysStrList);
break;
case I_CmsCalendarSerialDateOptions.TYPE_MONTHLY:
intervalStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_INTERVAL);
String dayOfMonthStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_DAY_OF_MONTH);
int dayOfMonth=getIntValue(dayOfMonthStr,1);
String weekDayStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_WEEKDAYS);
int weekDay=getIntValue(weekDayStr,-1);
m_monthlyPattern.setWeekDay(weekDay);
m_monthlyPattern.setInterval(intervalStr);
m_monthlyPattern.setDayOfMonth(dayOfMonth);
break;
case I_CmsCalendarSerialDateOptions.TYPE_YEARLY:
dayOfMonthStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_DAY_OF_MONTH);
dayOfMonth=getIntValue(dayOfMonthStr,1);
weekDayStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_WEEKDAYS);
weekDay=getIntValue(weekDayStr,-1);
String monthStr=values.get(I_CmsCalendarSerialDateOptions.CONFIG_MONTH);
int month=getIntValue(monthStr,0);
m_yearlyPattern.setWeekDay(weekDay);
m_yearlyPattern.setDayOfMonth(dayOfMonth);
m_yearlyPattern.setMonth(month);
break;
default :
}
selectValues();
}
