{
  OpenCms.getRoleManager().checkRole(cms,CmsRole.DATABASE_MANAGER);
  if (!m_modules.containsKey(moduleName)) {
    throw new CmsConfigurationException(Messages.get().container(Messages.ERR_MODULE_NOT_CONFIGURED_1,moduleName));
  }
  if (LOG.isInfoEnabled()) {
    LOG.info(Messages.get().getBundle().key(Messages.LOG_DEL_MOD_1,moduleName));
  }
  CmsModule module=m_modules.get(moduleName);
  if (!replace) {
    List<CmsModuleDependency> dependencies=checkDependencies(module,DEPENDENCY_MODE_DELETE);
    if (!dependencies.isEmpty()) {
      StringBuffer message=new StringBuffer();
      Iterator<CmsModuleDependency> it=dependencies.iterator();
      while (it.hasNext()) {
        message.append("  ").append(it.next().getName()).append("\r\n");
      }
      throw new CmsConfigurationException(Messages.get().container(Messages.ERR_MOD_DEPENDENCIES_2,moduleName,message.toString()));
    }
    try {
      I_CmsModuleAction moduleAction=module.getActionInstance();
      if (moduleAction != null) {
        moduleAction.moduleUninstall(module);
      }
    }
 catch (    Throwable t) {
      LOG.error(Messages.get().getBundle().key(Messages.LOG_MOD_UNINSTALL_ERR_1,moduleName),t);
      report.println(Messages.get().container(Messages.LOG_MOD_UNINSTALL_ERR_1,moduleName),I_CmsReport.FORMAT_WARNING);
    }
  }
  boolean removeResourceTypes=!module.getResourceTypes().isEmpty();
  if (removeResourceTypes) {
    OpenCms.getWorkplaceManager().removeExplorerTypeSettings(module);
  }
  CmsProject previousProject=cms.getRequestContext().getCurrentProject();
  CmsProject deleteProject=null;
  try {
    deleteProject=cms.readProject(Messages.get().getBundle(cms.getRequestContext().getLocale()).key(Messages.GUI_DELETE_MODULE_PROJECT_NAME_1,new Object[]{moduleName}));
  }
 catch (  CmsException e) {
    try {
      deleteProject=cms.createProject(Messages.get().getBundle(cms.getRequestContext().getLocale()).key(Messages.GUI_DELETE_MODULE_PROJECT_NAME_1,new Object[]{moduleName}),Messages.get().getBundle(cms.getRequestContext().getLocale()).key(Messages.GUI_DELETE_MODULE_PROJECT_DESC_1,new Object[]{moduleName}),OpenCms.getDefaultUsers().getGroupAdministrators(),OpenCms.getDefaultUsers().getGroupAdministrators(),CmsProject.PROJECT_TYPE_TEMPORARY);
    }
 catch (    CmsException e1) {
      throw new CmsConfigurationException(e1.getMessageContainer(),e1);
    }
  }
  try {
    cms.getRequestContext().setCurrentProject(deleteProject);
    List<String> lockedResources=new ArrayList<String>();
    CmsLockFilter filter1=CmsLockFilter.FILTER_ALL.filterNotLockableByUser(cms.getRequestContext().getCurrentUser());
    CmsLockFilter filter2=CmsLockFilter.FILTER_INHERITED;
    List<String> moduleResources=module.getResources();
    for (int iLock=0; iLock < moduleResources.size(); iLock++) {
      String resourceName=moduleResources.get(iLock);
      try {
        lockedResources.addAll(cms.getLockedResources(resourceName,filter1));
        lockedResources.addAll(cms.getLockedResources(resourceName,filter2));
      }
 catch (      CmsException e) {
        if (LOG.isDebugEnabled()) {
          LOG.debug(e.getMessageContainer(),e);
        }
        report.println(e.getMessageContainer(),I_CmsReport.FORMAT_WARNING);
      }
    }
    if (!lockedResources.isEmpty()) {
      CmsMessageContainer msg=Messages.get().container(Messages.ERR_DELETE_MODULE_CHECK_LOCKS_2,moduleName,CmsStringUtil.collectionAsString(lockedResources,","));
      report.addError(msg.key(cms.getRequestContext().getLocale()));
      report.println(msg);
      cms.getRequestContext().setCurrentProject(previousProject);
      try {
        cms.deleteProject(deleteProject.getUuid());
      }
 catch (      CmsException e1) {
        throw new CmsConfigurationException(e1.getMessageContainer(),e1);
      }
      throw new CmsLockException(msg);
    }
  }
  finally {
    cms.getRequestContext().setCurrentProject(previousProject);
  }
  module=m_modules.remove(moduleName);
  try {
    cms.getRequestContext().setCurrentProject(deleteProject);
    List<String> projectFiles=module.getResources();
    for (int i=0; i < projectFiles.size(); i++) {
      String resourceName=projectFiles.get(i);
      if (cms.existsResource(resourceName,CmsResourceFilter.ALL)) {
        try {
          cms.copyResourceToProject(resourceName);
        }
 catch (        CmsException e) {
          if (LOG.isDebugEnabled()) {
            LOG.debug(Messages.get().getBundle().key(Messages.LOG_MOVE_RESOURCE_FAILED_1,resourceName));
          }
          report.println(e.getMessageContainer(),I_CmsReport.FORMAT_WARNING);
        }
      }
    }
    report.print(Messages.get().container(Messages.RPT_DELETE_MODULE_BEGIN_0),I_CmsReport.FORMAT_HEADLINE);
    report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_HTML_ITAG_1,moduleName),I_CmsReport.FORMAT_HEADLINE);
    for (int i=0; i < module.getResources().size(); i++) {
      String currentResource=null;
      try {
        currentResource=module.getResources().get(i);
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_DEL_MOD_RESOURCE_1,currentResource));
        }
        CmsResource resource=null;
        try {
          resource=cms.readResource(currentResource,CmsResourceFilter.ALL);
        }
 catch (        CmsVfsResourceNotFoundException e) {
        }
        if (resource != null) {
          CmsLock lock=cms.getLock(currentResource);
          if (lock.isUnlocked()) {
            cms.lockResource(currentResource);
          }
 else           if (lock.isLockableBy(cms.getRequestContext().getCurrentUser())) {
            cms.changeLock(currentResource);
          }
          if (!resource.getState().isDeleted()) {
            cms.deleteResource(currentResource,CmsResource.DELETE_PRESERVE_SIBLINGS);
          }
          report.print(Messages.get().container(Messages.RPT_DELETE_0),I_CmsReport.FORMAT_NOTE);
          report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,currentResource));
          if (!resource.getState().isNew()) {
            cms.unlockResource(currentResource);
          }
        }
      }
 catch (      CmsException e) {
        LOG.error(Messages.get().getBundle().key(Messages.LOG_DEL_MOD_EXC_1,currentResource),e);
        report.println(e.getMessageContainer(),I_CmsReport.FORMAT_WARNING);
      }
    }
    report.println(Messages.get().container(Messages.RPT_PUBLISH_PROJECT_BEGIN_0),I_CmsReport.FORMAT_HEADLINE);
    cms.unlockProject(deleteProject.getUuid());
    OpenCms.getPublishManager().publishProject(cms,report);
    OpenCms.getPublishManager().waitWhileRunning();
    report.println(Messages.get().container(Messages.RPT_PUBLISH_PROJECT_END_0),I_CmsReport.FORMAT_HEADLINE);
    report.println(Messages.get().container(Messages.RPT_DELETE_MODULE_END_0),I_CmsReport.FORMAT_HEADLINE);
  }
 catch (  CmsException e) {
    throw new CmsConfigurationException(e.getMessageContainer(),e);
  }
 finally {
    cms.getRequestContext().setCurrentProject(previousProject);
  }
  initModuleExportPoints();
  updateModuleConfiguration();
  if (removeResourceTypes) {
    OpenCms.getResourceManager().initialize(cms);
  }
}
