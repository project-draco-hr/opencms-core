{
  if (OpenCms.getRunLevel() > OpenCms.RUNLEVEL_1_CORE_OBJECT) {
    cms.checkRole(CmsRole.MODULE_MANAGER);
  }
  Iterator it;
  int count=0;
  it=m_modules.keySet().iterator();
  while (it.hasNext()) {
    CmsModule module=(CmsModule)m_modules.get(it.next());
    if (module.getActionClass() != null) {
      I_CmsModuleAction moduleAction=module.getActionInstance();
      if (module.getActionClass() != null) {
        try {
          moduleAction=(I_CmsModuleAction)Class.forName(module.getActionClass()).newInstance();
        }
 catch (        Exception e) {
          CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_CREATE_INSTANCE_FAILED_1,module.getName()),e);
        }
      }
      if (moduleAction != null) {
        count++;
        module.setActionInstance(moduleAction);
        if (CmsLog.INIT.isInfoEnabled()) {
          CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_INITIALIZE_MOD_CLASS_1,moduleAction.getClass().getName()));
        }
        try {
          CmsObject adminCmsCopy=OpenCms.initCmsObject(cms);
          moduleAction.initialize(adminCmsCopy,configurationManager,module);
        }
 catch (        Throwable t) {
          LOG.error(Messages.get().getBundle().key(Messages.LOG_INSTANCE_INIT_ERR_1,moduleAction.getClass().getName()),t);
        }
      }
    }
  }
  initModuleExportPoints();
  if (CmsLog.INIT.isInfoEnabled()) {
    CmsLog.INIT.info(Messages.get().getBundle().key(Messages.INIT_NUM_CLASSES_INITIALIZED_1,new Integer(count)));
  }
}
