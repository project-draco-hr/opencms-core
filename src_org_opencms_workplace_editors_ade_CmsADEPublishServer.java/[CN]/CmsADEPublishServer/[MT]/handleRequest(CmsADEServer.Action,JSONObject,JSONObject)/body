{
  HttpServletRequest request=m_jsp.getRequest();
  CmsADESessionCache sessionCache=(CmsADESessionCache)request.getSession().getAttribute(CmsADESessionCache.SESSION_ATTR_ADE_CACHE);
  CmsPublishOptions options=sessionCache.getADEPublishOptions();
  if (action.equals(CmsADEServer.Action.PUBLISH_OPTIONS)) {
    result.merge(options.toJson(),true,false);
    return result;
  }
  if (checkParameters(data,null,ParamPublish.RELATED)) {
    options.setIncludeRelated(data.optBoolean(ParamPublish.RELATED.getName()));
  }
  if (checkParameters(data,null,ParamPublish.SIBLINGS)) {
    options.setIncludeSiblings(data.optBoolean(ParamPublish.SIBLINGS.getName()));
  }
  if (checkParameters(data,null,ParamPublish.PROJECT)) {
    String projectParam=data.optString(ParamPublish.PROJECT.getName());
    try {
      options.setProjectId(new CmsUUID(projectParam));
    }
 catch (    NumberFormatException e) {
      options.setProjectId(null);
      LOG.warn(e.getLocalizedMessage(),e);
    }
  }
 else {
    options.setProjectId(null);
  }
  CmsADEPublish publish=new CmsADEPublish(m_cms);
  publish.getOptions().setIncludeRelated(options.isIncludeRelated());
  publish.getOptions().setIncludeSiblings(options.isIncludeSiblings());
  publish.getOptions().setProjectId(options.getProjectId());
  if (action.equals(CmsADEServer.Action.PUBLISH_LIST)) {
    if (data.has(ParamPublish.REMOVE_RESOURCES.getName())) {
      removeFromPublishList(publish,data.optJSONArray(ParamPublish.REMOVE_RESOURCES.getName()));
    }
    JSONArray groupsToPublish=toJsonArray(publish.getPublishGroups());
    result.put(JsonResponse.GROUPS.getName(),groupsToPublish);
  }
 else   if (action.equals(CmsADEServer.Action.PROJECTS)) {
    JSONArray manageableProjects=toJsonArray(publish.getManageableProjects());
    result.put(JsonResponse.PROJECTS.getName(),manageableProjects);
  }
 else   if (action.equals(CmsADEServer.Action.PUBLISH)) {
    if (data.has(ParamPublish.REMOVE_RESOURCES.getName())) {
      removeFromPublishList(publish,data.optJSONArray(ParamPublish.REMOVE_RESOURCES.getName()));
    }
    if (!checkParameters(data,result,ParamPublish.RESOURCES)) {
      return result;
    }
    sessionCache.setCacheADEPublishOptions(new CmsPublishOptions(publish.getOptions().isIncludeRelated(),publish.getOptions().isIncludeSiblings(),publish.getOptions().getProjectId()));
    JSONArray idsToPublish=data.optJSONArray(ParamPublish.RESOURCES.getName());
    List<CmsResource> pubResources;
    try {
      pubResources=resourcesFromJson(idsToPublish);
    }
 catch (    CmsException e) {
      LOG.error(e.getLocalizedMessage(),e);
      result.put(CmsADEServer.JsonResponse.ERROR.getName(),e.getLocalizedMessage());
      return result;
    }
    Collections.sort(pubResources,I_CmsResource.COMPARE_DATE_LAST_MODIFIED);
    JSONArray resources=new JSONArray();
    if (!data.has(ParamPublish.FORCE.getName()) || !data.optBoolean(ParamPublish.FORCE.getName()) || !isCanPublish()) {
      resources=toJsonArray(publish.getBrokenResources(pubResources));
    }
    if (resources.length() == 0) {
      publish.publishResources(pubResources);
    }
 else {
      result.put(JsonResponse.RESOURCES.getName(),resources);
      result.put(JsonResponse.CANPUBLISH.getName(),isCanPublish());
    }
  }
  return result;
}
