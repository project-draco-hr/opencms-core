{
  JSONObject result=new JSONObject();
  HttpServletRequest request=getRequest();
  if (!checkParameters(request,result,ReqParam.action.name())) {
    return result;
  }
  String actionParam=request.getParameter(ReqParam.action.name());
  Action action=Action.valueOf(actionParam.toUpperCase());
  JSONObject data=new JSONObject();
  if (checkParameters(request,null,ReqParam.data.name())) {
    String dataParam=request.getParameter(ReqParam.data.name());
    data=new JSONObject(dataParam);
  }
  CmsADESessionCache sessionCache=(CmsADESessionCache)request.getSession().getAttribute(CmsADESessionCache.SESSION_ATTR_ADE_CACHE);
  if (sessionCache == null) {
    sessionCache=new CmsADESessionCache(getCmsObject());
    request.getSession().setAttribute(CmsADESessionCache.SESSION_ATTR_ADE_CACHE,sessionCache);
  }
  CmsPublishOptions options=sessionCache.getPublishOptions();
  if (action.equals(Action.PUBLISH_OPTIONS)) {
    result.merge(options.toJson(),true,false);
    return result;
  }
  if (checkParameters(data,null,ParamPublish.related.name())) {
    options.setIncludeRelated(data.optBoolean(ParamPublish.related.name()));
  }
  if (checkParameters(data,null,ParamPublish.siblings.name())) {
    options.setIncludeSiblings(data.optBoolean(ParamPublish.siblings.name()));
  }
  if (checkParameters(data,null,ParamPublish.project.name())) {
    String projectParam=data.optString(ParamPublish.project.name());
    try {
      options.setProjectId(new CmsUUID(projectParam));
    }
 catch (    NumberFormatException e) {
      options.setProjectId(null);
      LOG.warn(e.getLocalizedMessage(),e);
    }
  }
 else {
    options.setProjectId(null);
  }
  CmsObject cms=getCmsObject();
  cms.getRequestContext().setLocale(getWorkplaceLocale());
  CmsADEPublish publish=new CmsADEPublish(cms,request,getResponse());
  publish.getOptions().setIncludeRelated(options.isIncludeRelated());
  publish.getOptions().setIncludeSiblings(options.isIncludeSiblings());
  publish.getOptions().setProjectId(options.getProjectId());
  if (action.equals(Action.PUBLISH_LIST)) {
    if (data.has(ParamPublish.removeResources.name())) {
      removeFromPublishList(publish,data.optJSONArray(ParamPublish.removeResources.name()));
    }
    JSONArray groupsToPublish=toJsonArray(publish.getPublishGroups());
    result.put(JsonResponse.groups.name(),groupsToPublish);
  }
 else   if (action.equals(Action.PROJECTS)) {
    JSONArray manageableProjects=toJsonArray(publish.getManageableProjects());
    result.put(JsonResponse.projects.name(),manageableProjects);
  }
 else   if (action.equals(Action.PUBLISH)) {
    if (data.has(ParamPublish.removeResources.name())) {
      removeFromPublishList(publish,data.optJSONArray(ParamPublish.removeResources.name()));
    }
    if (!checkParameters(data,result,ParamPublish.resources.name())) {
      return result;
    }
    sessionCache.setCachePublishOptions(new CmsPublishOptions(publish.getOptions().isIncludeRelated(),publish.getOptions().isIncludeSiblings(),publish.getOptions().getProjectId()));
    JSONArray idsToPublish=data.optJSONArray(ParamPublish.resources.name());
    List<CmsResource> pubResources;
    try {
      pubResources=resourcesFromJson(idsToPublish);
    }
 catch (    CmsException e) {
      error(result,e.getLocalizedMessage());
      return result;
    }
    Collections.sort(pubResources,I_CmsResource.COMPARE_DATE_LAST_MODIFIED);
    JSONArray resources=new JSONArray();
    if (!data.has(ParamPublish.force.name()) || !data.optBoolean(ParamPublish.force.name()) || !isCanPublish()) {
      resources=toJsonArray(publish.getBrokenResources(pubResources));
    }
    if (resources.length() == 0) {
      publish.publishResources(pubResources);
    }
 else {
      result.put(JsonResponse.resources.name(),resources);
      result.put(JsonResponse.canPublish.name(),isCanPublish());
    }
  }
  return result;
}
