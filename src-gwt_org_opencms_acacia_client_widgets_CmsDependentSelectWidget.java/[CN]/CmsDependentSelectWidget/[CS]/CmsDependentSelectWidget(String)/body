{
  List<String> listConfig=CmsStringUtil.splitAsList(configuration,"|");
  if (listConfig.size() == 0) {
    Window.alert("Illegal dependent select widget configuration: " + configuration);
  }
  if (listConfig.size() == 1) {
    m_basePath=splitPath(listConfig.get(0));
    m_valuePath=splitPath("VALUE");
    m_descriptionPath=m_valuePath;
  }
 else   if (listConfig.size() == 2) {
    m_basePath=splitPath(listConfig.get(0));
    m_valuePath=splitPath(listConfig.get(1));
    m_descriptionPath=m_valuePath;
  }
 else   if (listConfig.size() >= 3) {
    m_basePath=splitPath(listConfig.get(0));
    m_valuePath=splitPath(listConfig.get(1));
    m_descriptionPath=splitPath(listConfig.get(2));
  }
  m_selectBox.addStyleName(I_CmsWidgetsLayoutBundle.INSTANCE.widgetCss().selectBoxPanel());
  m_selectBox.setPopupResize(false);
  m_selectBox.getOpener().addStyleName(I_CmsWidgetsLayoutBundle.INSTANCE.widgetCss().selectBoxSelected());
  m_selectBox.getSelectorPopup().addStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().selectBoxPopup());
  m_selectBox.addValueChangeHandler(new ValueChangeHandler<String>(){
    public void onValueChange(    ValueChangeEvent<String> event){
      fireChangeEvent();
    }
  }
);
  update(CmsContentEditor.getEntity());
  initWidget(m_selectBox);
}
