{
  CmsResource resource=null;
  List brokenLinks=null;
  Map offlineFilesLookup=null;
  List links=null;
  Map invalidResources=(Map)new HashMap();
  String resourceName=null;
  int index=I_CmsConstants.C_UNKNOWN_ID;
  I_CmsResourceType resourceType=null;
  report.println(report.key("report.linkvalidation.begin"),I_CmsReport.C_FORMAT_HEADLINE);
  offlineFilesLookup=(Map)new HashMap();
  for (index=0; index < offlineFiles.size(); index++) {
    resource=(CmsResource)offlineFiles.get(index);
    offlineFilesLookup.put(resource.getRootPath(),resource);
  }
  Iterator i=offlineFiles.iterator();
  while (i.hasNext()) {
    brokenLinks=null;
    resource=(CmsResource)i.next();
    resourceName=resource.getRootPath();
    try {
      if ((resourceType=cms.getResourceType(resource.getType())) instanceof I_CmsHtmlLinkValidatable) {
        report.print(report.key("report.linkvalidation.file"),I_CmsReport.C_FORMAT_NOTE);
        report.print(resourceName);
        report.print(report.key("report.dots"));
        links=((I_CmsHtmlLinkValidatable)resourceType).findLinks(cms,resource);
        if (links.size() > 0) {
          brokenLinks=validateLinks(links,offlineFilesLookup);
        }
        if (brokenLinks != null && brokenLinks.size() > 0) {
          invalidResources.put(resourceName,brokenLinks);
          report.println(report.key("report.linkvalidation.file.has_broken_links"),I_CmsReport.C_FORMAT_WARNING);
        }
 else {
          report.println(report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
        }
      }
    }
 catch (    CmsException e) {
      if (OpenCms.getLog(this).isErrorEnabled()) {
        OpenCms.getLog(this).error("Error retrieving resource type of " + resourceName,e);
      }
    }
  }
  report.println(report.key("report.linkvalidation.end"),I_CmsReport.C_FORMAT_HEADLINE);
  return invalidResources;
}
