{
  tc.storeResources(cms,resource1);
  cms.lockResource(resource1);
  cms.chacc(resource1,I_CmsPrincipal.PRINCIPAL_GROUP,group.getName(),permissions.getAllowedPermissions(),permissions.getDeniedPermissions(),flags);
  cms.unlockResource(resource1);
  tc.assertFilter(cms,resource1,OpenCmsTestResourceFilter.FILTER_CHACC);
  CmsResource res=cms.readResource(resource1,CmsResourceFilter.ALL);
  CmsAccessControlEntry ace=new CmsAccessControlEntry(res.getResourceId(),group.getId(),permissions.getAllowedPermissions(),permissions.getDeniedPermissions(),flags + CmsAccessControlEntry.ACCESS_FLAGS_GROUP);
  tc.assertAce(cms,resource1,ace);
  int denied=permissions.getDeniedPermissions();
  if ((flags & CmsAccessControlEntry.ACCESS_FLAGS_OVERWRITE) > 0) {
    denied=0;
  }
  CmsPermissionSet permission=new CmsPermissionSet(permissions.getAllowedPermissions(),denied);
  tc.assertAcl(cms,resource1,group.getId(),permission);
  List subresources=cms.readResources(resource1,CmsResourceFilter.ALL);
  Iterator j=subresources.iterator();
  while (j.hasNext()) {
    CmsResource subRes=(CmsResource)j.next();
    String subResName=cms.getSitePath(subRes);
    tc.assertFilter(cms,subResName,OpenCmsTestResourceFilter.FILTER_CHACC);
    ace=new CmsAccessControlEntry(res.getResourceId(),group.getId(),permissions.getAllowedPermissions(),permissions.getDeniedPermissions(),flags + CmsAccessControlEntry.ACCESS_FLAGS_GROUP + CmsAccessControlEntry.ACCESS_FLAGS_INHERITED);
    tc.assertAce(cms,subResName,ace);
    permission=new CmsPermissionSet(permissions.getAllowedPermissions(),denied);
    tc.assertAcl(cms,resource1,subResName,group.getId(),permission);
  }
}
