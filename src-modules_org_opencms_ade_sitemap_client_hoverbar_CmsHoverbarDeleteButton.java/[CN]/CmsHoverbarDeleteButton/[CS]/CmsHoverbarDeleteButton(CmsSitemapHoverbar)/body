{
  setImageClass(I_CmsImageBundle.INSTANCE.buttonCss().hoverbarDelete());
  setTitle(Messages.get().key(Messages.GUI_HOVERBAR_DELETE_0));
  setShowBorder(false);
  addClickHandler(new ClickHandler(){
    /** 
 * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)
 */
    public void onClick(    ClickEvent event){
      hoverbar.hide();
      CmsDomUtil.ensureMouseOut(getElement());
      final String sitePath=hoverbar.getSitePath();
      final CmsSitemapController controller=hoverbar.getController();
      CmsPair<List<CmsClientSitemapEntry>,List<CmsClientSitemapEntry>> openAndClosed=CmsSitemapView.getInstance().getOpenAndClosedDescendants(sitePath);
      List<CmsClientSitemapEntry> openEntries=openAndClosed.getFirst();
      List<CmsClientSitemapEntry> closedEntries=openAndClosed.getSecond();
      List<CmsUUID> open=getIds(openEntries);
      List<CmsUUID> closed=getIds(closedEntries);
      controller.getBrokenLinks(open,closed,new AsyncCallback<List<CmsSitemapBrokenLinkBean>>(){
        /** 
 * @see com.google.gwt.user.client.rpc.AsyncCallback#onFailure(java.lang.Throwable)
 */
        public void onFailure(        Throwable caught){
        }
        /** 
 * @see com.google.gwt.user.client.rpc.AsyncCallback#onSuccess(java.lang.Object)
 */
        public void onSuccess(        List<CmsSitemapBrokenLinkBean> result){
          if (result.size() > 0) {
            I_CmsConfirmDialogHandler handler=new I_CmsConfirmDialogHandler(){
              /** 
 * @see org.opencms.gwt.client.ui.I_CmsCloseDialogHandler#onClose()
 */
              public void onClose(){
              }
              /** 
 * @see org.opencms.gwt.client.ui.I_CmsConfirmDialogHandler#onOk()
 */
              public void onOk(){
                controller.delete(sitePath);
              }
            }
;
            CmsLinkWarningDialog dialog=new CmsLinkWarningDialog(handler,result);
            dialog.center();
          }
 else {
            if (controller.getEntry(sitePath).getSubEntries().isEmpty()) {
              controller.delete(sitePath);
              return;
            }
            CmsConfirmDialog dialog=new CmsConfirmDialog(Messages.get().key(Messages.GUI_DIALOG_DELETE_TITLE_0),Messages.get().key(Messages.GUI_DIALOG_DELETE_TEXT_0));
            dialog.setHandler(new I_CmsConfirmDialogHandler(){
              /** 
 * @see org.opencms.gwt.client.ui.I_CmsCloseDialogHandler#onClose()
 */
              public void onClose(){
              }
              /** 
 * @see org.opencms.gwt.client.ui.I_CmsConfirmDialogHandler#onOk()
 */
              public void onOk(){
                controller.delete(sitePath);
              }
            }
);
            dialog.center();
          }
        }
      }
);
    }
  }
);
  hoverbar.addShowHandler(new I_CmsHoverbarShowHandler(){
    /** 
 * @see org.opencms.ade.sitemap.client.hoverbar.I_CmsHoverbarShowHandler#onShow(org.opencms.ade.sitemap.client.hoverbar.CmsHoverbarShowEvent)
 */
    public void onShow(    CmsHoverbarShowEvent event){
      final String sitePath=hoverbar.getSitePath();
      final CmsSitemapController controller=hoverbar.getController();
      if (controller.isRoot(sitePath)) {
        disable(Messages.get().key(Messages.GUI_DISABLED_ROOT_ITEM_0));
      }
 else {
        enable();
      }
    }
  }
);
}
