{
  if (data == null) {
    setData(tag,"");
  }
 else {
    tag=tag.toLowerCase();
    Element newElement=(Element)data.cloneNode(true);
    if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {
      A_OpenCms.log(C_OPENCMS_DEBUG,getClassName() + "Putting datablock " + tag+ " into internal Hashtable.");
    }
    if (!(m_blocks.containsKey(tag))) {
      insertNewDatablock(tag,newElement);
    }
 else {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging() && C_DEBUG) {
        A_OpenCms.log(C_OPENCMS_DEBUG,getClassName() + "Datablock existed before. Replacing.");
      }
      Element originalBlock=(Element)(m_blocks.get(tag));
      while (originalBlock.hasChildNodes()) {
        originalBlock.removeChild(originalBlock.getFirstChild());
      }
      NodeList newNodes=data.getChildNodes();
      int len=newNodes.getLength();
      for (int i=0; i < len; i++) {
        Node newElement2=(Node)newNodes.item(i).cloneNode(true);
        originalBlock.appendChild(m_parser.importNode(originalBlock.getOwnerDocument(),newElement2));
      }
    }
  }
}
