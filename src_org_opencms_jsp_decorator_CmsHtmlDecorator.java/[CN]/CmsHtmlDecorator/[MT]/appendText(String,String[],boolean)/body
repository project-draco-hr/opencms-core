{
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_APPEND_TEXT_2,m_config,text));
  }
  if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(text) && m_decorate) {
    List<String> wordList=splitAsList(text,delimiters,false,true);
    int wordCount=wordList.size();
    for (int i=0; i < wordCount; i++) {
      String word=wordList.get(i);
      boolean alreadyDecorated=false;
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_PROCESS_WORD_2,word,Boolean.valueOf(mustDecode(word,wordList,i))));
      }
      if (mustDecode(word,wordList,i)) {
        word=Translate.decode(word);
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECODED_WORD_1,word));
        }
      }
      CmsDecorationObject decObj=null;
      CmsDecorationObject wordDecObj=null;
      if (!hasDelimiter(word,delimiters)) {
        wordDecObj=(CmsDecorationObject)m_decorations.get(word);
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECORATION_FOUND_2,wordDecObj,word));
      }
      if (recursive && hasDelimiter(word,DELIMITERS_SECOND_LEVEL) && !startsWithDelimiter(word,DELIMITERS_SECOND_LEVEL)) {
        String secondLevel=word;
        if (i < wordCount - 1) {
          String nextWord=wordList.get(i + 1);
          if (!nextWord.equals(" ")) {
            String afterNextWord="";
            if (i < wordCount - 2) {
              afterNextWord=wordList.get(i + 2);
            }
            if (nextWord.contains("&") && afterNextWord.equals(";")) {
              secondLevel=word + nextWord + ";";
              i+=2;
            }
 else {
              secondLevel=word + nextWord;
              i++;
            }
          }
        }
        int sizeBefore=m_result.length();
        appendText(secondLevel,DELIMITERS_SECOND_LEVEL,false);
        if (sizeBefore != m_result.length()) {
          alreadyDecorated=true;
        }
      }
 else {
        StringBuffer decKey=new StringBuffer();
        decKey.append(word);
        int forwardLookup=wordList.size() - i - 1;
        if (forwardLookup > FORWARD_LOOKUP) {
          forwardLookup=FORWARD_LOOKUP;
        }
        if (i < wordCount - forwardLookup) {
          for (int j=1; j <= forwardLookup; j++) {
            decKey.append(wordList.get(i + j));
            decObj=(CmsDecorationObject)m_decorations.get(decKey.toString());
            if (LOG.isDebugEnabled()) {
              LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECORATION_FOUND_FWL_3,decObj,word,new Integer(j)));
            }
            if (decObj != null) {
              if (LOG.isDebugEnabled()) {
                LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECORATION_APPEND_DECORATION_1,decObj.getContentDecoration(m_config,decKey.toString(),m_cms.getRequestContext().getLocale().toString())));
              }
              m_result.append(decObj.getContentDecoration(m_config,decKey.toString(),m_cms.getRequestContext().getLocale().toString()));
              i+=j;
              alreadyDecorated=true;
              break;
            }
          }
        }
        if ((decObj == null) && (wordDecObj == null)) {
          if (LOG.isDebugEnabled()) {
            LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECORATION_APPEND_WORD_1,word));
          }
          m_result.append(word);
        }
      }
      if ((wordDecObj != null) && !alreadyDecorated) {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECORATION_APPEND_DECORATION_1,wordDecObj.getContentDecoration(m_config,word,m_cms.getRequestContext().getLocale().toString())));
        }
        m_result.append(wordDecObj.getContentDecoration(m_config,word,m_cms.getRequestContext().getLocale().toString()));
      }
    }
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().getBundle().key(Messages.LOG_HTML_DECORATOR_DECORATION_APPEND_ORIGINALTEXT_1,text));
    }
    m_result.append(text);
  }
}
