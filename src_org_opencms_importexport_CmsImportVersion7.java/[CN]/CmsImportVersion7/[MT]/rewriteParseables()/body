{
  if (m_parseables.isEmpty()) {
    return;
  }
  I_CmsReport report=getReport();
  CmsObject cms=getCms();
  cms.getRequestContext().setAttribute(CmsLogEntry.ATTR_LOG_ENTRY,Boolean.FALSE);
  report.println(Messages.get().container(Messages.RPT_START_PARSE_LINKS_0),I_CmsReport.FORMAT_HEADLINE);
  int i=0;
  Iterator<String> it=m_parseables.iterator();
  while (it.hasNext()) {
    String resName=it.next();
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,String.valueOf(i + 1),String.valueOf(m_parseables.size())),I_CmsReport.FORMAT_NOTE);
    report.print(Messages.get().container(Messages.RPT_PARSE_LINKS_FOR_1,resName),I_CmsReport.FORMAT_NOTE);
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
    try {
      CmsFile file=cms.readFile(resName);
      file.setDateLastModified(file.getDateLastModified());
      CmsLock lock=cms.getLock(file);
      if (lock.isUnlocked()) {
        cms.lockResource(resName);
      }
 else       if (!lock.isDirectlyOwnedInProjectBy(cms)) {
        cms.changeLock(resName);
      }
      cms.writeFile(file);
      report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
    }
 catch (    Throwable e) {
      report.addWarning(e);
      report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_FAILED_0),I_CmsReport.FORMAT_ERROR);
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.LOG_IMPORTEXPORT_REWRITING_1,resName));
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug(e.getLocalizedMessage(),e);
      }
    }
    i++;
  }
  cms.getRequestContext().removeAttribute(CmsLogEntry.ATTR_LOG_ENTRY);
  report.println(Messages.get().container(Messages.RPT_END_PARSE_LINKS_0),I_CmsReport.FORMAT_HEADLINE);
  m_parseables=null;
}
