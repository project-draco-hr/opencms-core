{
  m_fileCounter=1;
  m_totalFiles=0;
  m_parseables=new ArrayList<CmsResource>();
  m_parameters=parameters;
  Digester digester=new Digester();
  digester.setUseContextClassLoader(true);
  digester.setValidating(m_parameters.isXmlValidation());
  digester.setEntityResolver(new CmsXmlEntityResolver(null));
  digester.setRuleNamespaceURI(null);
  digester.setErrorHandler(new CmsXmlErrorHandler(CmsImportExportManager.EXPORT_MANIFEST));
  digester.push(this);
  addXmlPreprocessingDigesterRules(digester);
  InputStream stream=null;
  m_helper=new CmsImportHelper(m_parameters);
  m_helper.cacheDtdSystemId(DTD_LOCATION,DTD_FILENAME,CmsConfigurationManager.DEFAULT_DTD_PREFIX);
  try {
    m_helper.openFile();
    stream=m_helper.getFileStream(CmsImportExportManager.EXPORT_MANIFEST);
    digester.parse(stream);
  }
 catch (  Exception ioe) {
    CmsMessageContainer msg=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_READING_FILE_1,CmsImportExportManager.EXPORT_MANIFEST);
    if (LOG.isErrorEnabled()) {
      LOG.error(msg.key(),ioe);
    }
    throw new CmsImportExportException(msg,ioe);
  }
 finally {
    try {
      if (stream != null) {
        stream.close();
      }
    }
 catch (    Exception e) {
    }
    m_helper.closeFile();
  }
  return (m_version == getVersion());
}
