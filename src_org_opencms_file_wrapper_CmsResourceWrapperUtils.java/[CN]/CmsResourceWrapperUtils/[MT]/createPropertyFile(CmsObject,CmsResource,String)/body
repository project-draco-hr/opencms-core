{
  StringBuffer content=new StringBuffer();
  content.append("# Properties for resource ");
  content.append(res.getRootPath());
  content.append("\n");
  content.append("#\n");
  content.append("# ${property_name}.i : individual property\n");
  content.append("# ${property_name}.s :     shared property\n\n");
  List<CmsPropertyDefinition> propertyDef=cms.readAllPropertyDefinitions();
  Map<String,CmsProperty> activeProperties=CmsPropertyAdvanced.getPropertyMap(cms.readPropertyObjects(res,false));
  Iterator<CmsPropertyDefinition> i=propertyDef.iterator();
  while (i.hasNext()) {
    CmsPropertyDefinition currentPropertyDef=i.next();
    String propName=currentPropertyDef.getName();
    CmsProperty currentProperty=activeProperties.get(propName);
    if (currentProperty == null) {
      currentProperty=new CmsProperty();
    }
    String individualValue=currentProperty.getStructureValue();
    String sharedValue=currentProperty.getResourceValue();
    if (individualValue == null) {
      individualValue="";
    }
    if (sharedValue == null) {
      sharedValue="";
    }
    individualValue=escapeString(individualValue);
    sharedValue=escapeString(sharedValue);
    content.append(propName);
    content.append(SUFFIX_PROP_INDIVIDUAL);
    content.append("=");
    content.append(individualValue);
    content.append("\n");
    content.append(propName);
    content.append(SUFFIX_PROP_SHARED);
    content.append("=");
    content.append(sharedValue);
    content.append("\n\n");
  }
  CmsWrappedResource wrap=new CmsWrappedResource(res);
  wrap.setRootPath(addFileExtension(cms,path,EXTENSION_PROPERTIES));
  wrap.setTypeId(CmsResourceTypePlain.getStaticTypeId());
  wrap.setFolder(false);
  CmsFile ret=wrap.getFile();
  try {
    ret.setContents(content.toString().getBytes(CmsEncoder.ENCODING_UTF_8));
  }
 catch (  UnsupportedEncodingException e) {
    ret.setContents(content.toString().getBytes());
  }
  return ret;
}
