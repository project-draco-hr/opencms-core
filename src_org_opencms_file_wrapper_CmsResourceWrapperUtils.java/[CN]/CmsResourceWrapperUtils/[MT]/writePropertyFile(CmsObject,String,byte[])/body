{
  Properties properties=new Properties();
  try {
    String props=CmsEncoder.createString(content,CmsEncoder.ENCODING_UTF_8);
    props=unescapeString(props);
    props=CmsEncoder.encodeJavaEntities(props,CmsEncoder.ENCODING_ISO_8859_1);
    byte[] modContent=props.getBytes(CmsEncoder.ENCODING_ISO_8859_1);
    properties.load(new ByteArrayInputStream(modContent));
    List<CmsProperty> propList=new ArrayList<CmsProperty>();
    Iterator<Map.Entry<Object,Object>> it=properties.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry<Object,Object> e=it.next();
      String key=(String)e.getKey();
      String value=(String)e.getValue();
      if (key.endsWith(SUFFIX_PROP_SHARED)) {
        propList.add(new CmsProperty(key.substring(0,key.length() - SUFFIX_PROP_SHARED.length()),null,value));
      }
 else       if (key.endsWith(SUFFIX_PROP_INDIVIDUAL)) {
        propList.add(new CmsProperty(key.substring(0,key.length() - SUFFIX_PROP_INDIVIDUAL.length()),value,null));
      }
    }
    cms.writePropertyObjects(resourcename,propList);
    String newType=properties.getProperty(PROPERTY_RESOURCE_TYPE);
    if (newType != null) {
      newType=newType.trim();
      if (OpenCms.getResourceManager().hasResourceType(newType)) {
        I_CmsResourceType newTypeObj=OpenCms.getResourceManager().getResourceType(newType);
        cms.chtype(resourcename,newTypeObj.getTypeId());
      }
    }
  }
 catch (  IOException e) {
  }
}
