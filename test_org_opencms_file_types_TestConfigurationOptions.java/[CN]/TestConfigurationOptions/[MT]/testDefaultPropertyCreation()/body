{
  CmsObject cms=getCmsObject();
  echo("Testing default property creation");
  String resourcename="/folder1/article_test.html";
  byte[] content=new byte[0];
  cms.createResource(resourcename,OpenCmsTestCase.ARTICLE_TYPEID,content,null);
  assertResourceType(cms,resourcename,OpenCmsTestCase.ARTICLE_TYPEID);
  assertProject(cms,resourcename,cms.getRequestContext().currentProject());
  assertState(cms,resourcename,CmsResource.STATE_NEW);
  assertUserLastModified(cms,resourcename,cms.getRequestContext().currentUser());
  CmsProperty property1, property2;
  property1=new CmsProperty(CmsPropertyDefinition.PROPERTY_TITLE,"Test title",null);
  property2=cms.readPropertyObject(resourcename,CmsPropertyDefinition.PROPERTY_TITLE,false);
  assertTrue(property1.isIdentical(property2));
  property1=new CmsProperty("template-elements","/system/modules/org.opencms.frontend.templateone.form/pages/form.html",null);
  property2=cms.readPropertyObject(resourcename,"template-elements",false);
  assertTrue(property1.isIdentical(property2));
  property1=new CmsProperty(CmsPropertyDefinition.PROPERTY_DESCRIPTION,null,"Admin_/folder1/article_test.html_/sites/default/folder1/article_test.html");
  property2=cms.readPropertyObject(resourcename,CmsPropertyDefinition.PROPERTY_DESCRIPTION,false);
  assertTrue(property1.isIdentical(property2));
  cms.unlockProject(cms.getRequestContext().currentProject().getUuid());
  OpenCms.getPublishManager().publishProject(cms);
  OpenCms.getPublishManager().waitWhileRunning();
  assertState(cms,resourcename,CmsResource.STATE_UNCHANGED);
}
