{
  String usedPool=null;
  String usedStatement=null;
  Connection con=null;
  PreparedStatement statement=null;
  if (filename.length() > C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Resourcename too long(>"+ C_MAX_LENGTH_RESOURCE_NAME+ ") ",CmsException.C_BAD_NAME);
  }
  int state=0;
  int modifiedBy=userId;
  long dateModified=System.currentTimeMillis();
  if (project.equals(onlineProject)) {
    state=file.getState();
    usedPool=m_poolNameOnline;
    usedStatement="_ONLINE";
    modifiedBy=file.getResourceLastModifiedBy();
    dateModified=file.getDateLastModified();
  }
 else {
    state=C_STATE_NEW;
    usedPool=m_poolName;
    usedStatement="";
  }
  try {
    CmsFile exFile=readFileHeader(project.getId(),filename);
    throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_RESOURCE_DELETED) {
      removeFile(project.getId(),filename);
      state=C_STATE_CHANGED;
    }
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  int newFileId=nextId(m_cq.get("C_TABLE_FILES" + usedStatement));
  int resourceId=nextId(m_cq.get("C_TABLE_RESOURCES" + usedStatement));
  try {
    con=DriverManager.getConnection(usedPool);
    try {
      statement=con.prepareStatement(m_cq.get("C_FILES_WRITE" + usedStatement));
      statement.setInt(1,newFileId);
      statement.setBytes(2,file.getContents());
      statement.executeUpdate();
      statement.close();
    }
 catch (    SQLException se) {
      if (I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING && A_OpenCms.isLogging()) {
        A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsAccessFileMySql] " + se.getMessage());
      }
    }
 finally {
      if (statement != null) {
        try {
          statement.close();
        }
 catch (        SQLException exc) {
        }
      }
    }
    statement=con.prepareStatement(m_cq.get("C_RESOURCES_WRITE" + usedStatement));
    statement.setInt(1,resourceId);
    statement.setInt(2,parentId);
    statement.setString(3,filename);
    statement.setInt(4,file.getType());
    statement.setInt(5,file.getFlags());
    statement.setInt(6,file.getOwnerId());
    statement.setInt(7,file.getGroupId());
    statement.setInt(8,project.getId());
    statement.setInt(9,newFileId);
    statement.setInt(10,file.getAccessFlags());
    statement.setInt(11,state);
    statement.setInt(12,file.isLockedBy());
    statement.setInt(13,file.getLauncherType());
    statement.setString(14,file.getLauncherClassname());
    statement.setTimestamp(15,new Timestamp(file.getDateCreated()));
    statement.setTimestamp(16,new Timestamp(dateModified));
    statement.setInt(17,file.getLength());
    statement.setInt(18,modifiedBy);
    statement.executeUpdate();
    statement.close();
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
 finally {
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException exc) {
      }
    }
  }
  return readFile(project.getId(),onlineProject.getId(),filename);
}
