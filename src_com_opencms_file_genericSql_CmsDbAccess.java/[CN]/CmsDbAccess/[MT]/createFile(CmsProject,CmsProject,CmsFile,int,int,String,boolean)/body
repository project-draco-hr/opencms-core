{
  if (filename.length() > C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Resourcename too long(>"+ C_MAX_LENGTH_RESOURCE_NAME+ ") ",CmsException.C_BAD_NAME);
  }
  int state=0;
  if (project.equals(onlineProject)) {
    state=file.getState();
  }
 else {
    state=C_STATE_NEW;
  }
  try {
    CmsFile exFile=readFileHeader(project.getId(),filename);
    throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_RESOURCE_DELETED) {
      removeFile(project.getId(),filename);
      state=C_STATE_CHANGED;
    }
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
    if (e.getType() == CmsException.C_NOT_FOUND) {
      try {
        readFileHeader(onlineProject.getId(),filename);
        throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
      }
 catch (      CmsException e2) {
        if (e2.getType() == CmsException.C_FILE_EXISTS) {
          throw e2;
        }
      }
    }
  }
  int newFileId=file.getFileId();
  int resourceId=nextId(C_TABLE_RESOURCES);
  if (copy) {
    Connection con=null;
    PreparedStatement statementFileWrite=null;
    try {
      con=DriverManager.getConnection(m_poolName);
      newFileId=nextId(C_TABLE_FILES);
      statementFileWrite=con.prepareStatement(m_cq.C_FILES_WRITE);
      statementFileWrite.setInt(1,newFileId);
      statementFileWrite.setBytes(2,file.getContents());
      statementFileWrite.executeUpdate();
    }
 catch (    SQLException se) {
      if ((A_OpenCms.isLogging() && I_CmsLogChannels.C_PREPROCESSOR_IS_LOGGING)) {
        A_OpenCms.log(C_OPENCMS_CRITICAL,"[CmsAccessFileMySql] " + se.getMessage());
      }
    }
 finally {
      if (statementFileWrite != null) {
        try {
          statementFileWrite.close();
        }
 catch (        SQLException exc) {
        }
      }
      if (con != null) {
        try {
          con.close();
        }
 catch (        SQLException exc) {
        }
      }
    }
  }
  Connection con=null;
  PreparedStatement statementResourceWrite=null;
  try {
    con=DriverManager.getConnection(m_poolName);
    statementResourceWrite=con.prepareStatement(m_cq.C_RESOURCES_WRITE);
    statementResourceWrite.setInt(1,resourceId);
    statementResourceWrite.setInt(2,parentId);
    statementResourceWrite.setString(3,filename);
    statementResourceWrite.setInt(4,file.getType());
    statementResourceWrite.setInt(5,file.getFlags());
    statementResourceWrite.setInt(6,file.getOwnerId());
    statementResourceWrite.setInt(7,file.getGroupId());
    statementResourceWrite.setInt(8,project.getId());
    statementResourceWrite.setInt(9,newFileId);
    statementResourceWrite.setInt(10,file.getAccessFlags());
    statementResourceWrite.setInt(11,state);
    statementResourceWrite.setInt(12,file.isLockedBy());
    statementResourceWrite.setInt(13,file.getLauncherType());
    statementResourceWrite.setString(14,file.getLauncherClassname());
    statementResourceWrite.setTimestamp(15,new Timestamp(file.getDateCreated()));
    statementResourceWrite.setTimestamp(16,new Timestamp(System.currentTimeMillis()));
    statementResourceWrite.setInt(17,file.getLength());
    statementResourceWrite.setInt(18,userId);
    statementResourceWrite.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
 finally {
    if (statementResourceWrite != null) {
      try {
        statementResourceWrite.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException exc) {
      }
    }
  }
  return readFile(project.getId(),onlineProject.getId(),filename);
}
