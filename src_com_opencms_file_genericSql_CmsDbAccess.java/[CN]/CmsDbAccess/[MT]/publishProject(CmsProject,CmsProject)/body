{
  CmsResource currentOnlineResource=null;
  CmsResource currentOfflineResource=null;
  Vector onlineResources;
  Vector offlineResources;
  onlineResources=new Vector();
  offlineResources=new Vector();
  publishRead(project,onlineProject,C_STATE_DELETED,onlineResources,offlineResources);
  for (int i=0; i < onlineResources.size(); i++) {
    currentOnlineResource=((CmsResource)onlineResources.elementAt(i));
    try {
      deleteAllProperties(currentOnlineResource.getResourceId());
    }
 catch (    CmsException exc) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,"[CmsDbAccess] error publishing, deleting properties for " + currentOnlineResource.toString() + " Message= "+ exc.getMessage());
      }
    }
    try {
      deleteResource(currentOnlineResource.getResourceId());
    }
 catch (    CmsException exc) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,"[CmsDbAccess] error publishing, deleting resource for " + currentOnlineResource.toString() + " Message= "+ exc.getMessage());
      }
    }
  }
  onlineResources=new Vector();
  offlineResources=new Vector();
  publishRead(project,onlineProject,C_STATE_CHANGED,onlineResources,offlineResources);
  for (int i=0; i < onlineResources.size(); i++) {
    currentOnlineResource=((CmsResource)onlineResources.elementAt(i));
    currentOfflineResource=((CmsResource)offlineResources.elementAt(i));
    try {
      deleteAllProperties(currentOnlineResource.getResourceId());
      Hashtable props=readAllProperties(currentOfflineResource.getResourceId(),currentOfflineResource.getType());
      writeProperties(props,currentOnlineResource.getResourceId(),currentOfflineResource.getType());
    }
 catch (    CmsException exc) {
      if (A_OpenCms.isLogging()) {
        A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INFO,"[CmsDbAccess] error publishing, deleting properties for " + currentOnlineResource.toString() + " Message= "+ exc.getMessage());
      }
    }
  }
}
