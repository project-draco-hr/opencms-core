{
  CmsBackupResource file=null;
  ResultSet res=null;
  Vector allHeaders=new Vector();
  PreparedStatement statement=null;
  Connection con=null;
  try {
    con=DriverManager.getConnection(m_poolNameBackup);
    statement=con.prepareStatement(m_cq.get("C_RESOURCES_READ_ALL_BACKUP"));
    statement.setString(1,resourceName);
    res=statement.executeQuery();
    while (res.next()) {
      int versionId=res.getInt(m_cq.get("C_RESOURCES_VERSION_ID"));
      int resId=res.getInt(m_cq.get("C_RESOURCES_RESOURCE_ID"));
      int parentId=res.getInt(m_cq.get("C_RESOURCES_PARENT_ID"));
      String resName=res.getString(m_cq.get("C_RESOURCES_RESOURCE_NAME"));
      int resType=res.getInt(m_cq.get("C_RESOURCES_RESOURCE_TYPE"));
      int resFlags=res.getInt(m_cq.get("C_RESOURCES_RESOURCE_FLAGS"));
      int userId=res.getInt(m_cq.get("C_RESOURCES_USER_ID"));
      String userName=res.getString(m_cq.get("C_RESOURCES_USER_NAME"));
      int groupId=res.getInt(m_cq.get("C_RESOURCES_GROUP_ID"));
      String groupName=res.getString(m_cq.get("C_RESOURCES_GROUP_NAME"));
      int projectID=res.getInt(m_cq.get("C_RESOURCES_PROJECT_ID"));
      int fileId=res.getInt(m_cq.get("C_RESOURCES_FILE_ID"));
      int accessFlags=res.getInt(m_cq.get("C_RESOURCES_ACCESS_FLAGS"));
      int state=res.getInt(m_cq.get("C_RESOURCES_STATE"));
      int launcherType=res.getInt(m_cq.get("C_RESOURCES_LAUNCHER_TYPE"));
      String launcherClass=res.getString(m_cq.get("C_RESOURCES_LAUNCHER_CLASSNAME"));
      long created=SqlHelper.getTimestamp(res,m_cq.get("C_RESOURCES_DATE_CREATED")).getTime();
      long modified=SqlHelper.getTimestamp(res,m_cq.get("C_RESOURCES_DATE_LASTMODIFIED")).getTime();
      int resSize=res.getInt(m_cq.get("C_RESOURCES_SIZE"));
      int modifiedBy=res.getInt(m_cq.get("C_RESOURCES_LASTMODIFIED_BY"));
      String modifiedByName=res.getString(m_cq.get("C_RESOURCES_LASTMODIFIED_BY_NAME"));
      file=new CmsBackupResource(versionId,resId,parentId,fileId,resName,resType,resFlags,userId,userName,groupId,groupName,projectID,accessFlags,state,launcherType,launcherClass,created,modified,modifiedBy,modifiedByName,new byte[0],resSize);
      allHeaders.addElement(file);
    }
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
catch (  Exception exc) {
    throw new CmsException("readAllFileHeaders " + exc.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
 finally {
    if (res != null) {
      try {
        res.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException exc) {
      }
    }
  }
  return allHeaders;
}
