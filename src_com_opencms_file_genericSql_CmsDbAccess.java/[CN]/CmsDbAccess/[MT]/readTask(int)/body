{
  ResultSet res;
  CmsTask task=null;
  Statement statement=null;
  try {
    statement=m_pool.getStatement();
    res=statement.executeQuery(C_TASK_READ_STATEMENT + id);
    if (res.next()) {
      int autofinish=res.getInt(C_TASK_AUTOFINISH);
      java.sql.Timestamp endtime=SqlHelper.getTimestamp(res,C_TASK_ENDTIME);
      int escalationtype=res.getInt(C_TASK_ESCALATIONTYPE);
      id=res.getInt(C_TASK_ID);
      int initiatoruser=res.getInt(C_TASK_INITIATORUSER);
      int milestone=res.getInt(C_TASK_MILESTONE);
      String name=res.getString(C_TASK_NAME);
      int originaluser=res.getInt(C_TASK_ORIGINALUSER);
      int agentuser=res.getInt(C_TASK_AGENTUSER);
      int parent=res.getInt(C_TASK_PARENT);
      int percentage=res.getInt(C_TASK_PERCENTAGE);
      String permission=res.getString(C_TASK_PERMISSION);
      int priority=res.getInt(C_TASK_PRIORITY);
      int role=res.getInt(C_TASK_ROLE);
      int root=res.getInt(C_TASK_ROOT);
      java.sql.Timestamp starttime=SqlHelper.getTimestamp(res,C_TASK_STARTTIME);
      int state=res.getInt(C_TASK_STATE);
      int tasktype=res.getInt(C_TASK_TASKTYPE);
      java.sql.Timestamp timeout=SqlHelper.getTimestamp(res,C_TASK_TIMEOUT);
      java.sql.Timestamp wakeuptime=SqlHelper.getTimestamp(res,C_TASK_WAKEUPTIME);
      String htmllink=res.getString(C_TASK_HTMLLINK);
      res.close();
      task=new CmsTask(id,name,state,tasktype,root,parent,initiatoruser,role,agentuser,originaluser,starttime,wakeuptime,timeout,endtime,percentage,permission,priority,escalationtype,htmllink,milestone,autofinish);
    }
  }
 catch (  SQLException exc) {
    throw new CmsException(exc.getMessage(),CmsException.C_SQL_ERROR,exc);
  }
catch (  Exception exc) {
    throw new CmsException(exc.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
 finally {
    if (statement != null) {
      m_pool.putStatement(statement);
    }
  }
  return task;
}
