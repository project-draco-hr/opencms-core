{
  CmsFolder oldFolder=null;
  int state=C_STATE_NEW;
  CmsProject onlineProject=null;
  String usedPool=null;
  String usedStatement=null;
  if (foldername.length() > C_MAX_LENGTH_RESOURCE_NAME) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ "Resourcename too long(>"+ C_MAX_LENGTH_RESOURCE_NAME+ ") ",CmsException.C_BAD_NAME);
  }
  onlineProject=getOnlineProject(project.getId());
  if (project.equals(onlineProject)) {
    usedPool=m_poolNameOnline;
    usedStatement="_ONLINE";
  }
 else {
    usedPool=m_poolName;
    usedStatement="";
  }
  try {
    oldFolder=readFolder(project.getId(),foldername);
    if (oldFolder.getState() == C_STATE_DELETED) {
      throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
    }
 else {
      if (oldFolder != null) {
        throw new CmsException("[" + this.getClass().getName() + "] ",CmsException.C_FILE_EXISTS);
      }
    }
  }
 catch (  CmsException e) {
    if (e.getType() == CmsException.C_FILE_EXISTS) {
      throw e;
    }
  }
  int resourceId=nextId(m_cq.get("C_TABLE_RESOURCES" + usedStatement));
  Connection con=null;
  PreparedStatement statement=null;
  try {
    con=DriverManager.getConnection(usedPool);
    statement=con.prepareStatement(m_cq.get("C_RESOURCES_WRITE" + usedStatement));
    statement.setInt(1,resourceId);
    statement.setInt(2,parentId);
    statement.setString(3,foldername);
    statement.setInt(4,C_TYPE_FOLDER);
    statement.setInt(5,flags);
    statement.setInt(6,user.getId());
    statement.setInt(7,user.getDefaultGroupId());
    statement.setInt(8,project.getId());
    statement.setInt(9,fileId);
    statement.setInt(10,C_ACCESS_DEFAULT_FLAGS);
    statement.setInt(11,state);
    statement.setInt(12,C_UNKNOWN_ID);
    statement.setInt(13,C_UNKNOWN_LAUNCHER_ID);
    statement.setString(14,C_UNKNOWN_LAUNCHER);
    statement.setTimestamp(15,new Timestamp(System.currentTimeMillis()));
    statement.setTimestamp(16,new Timestamp(System.currentTimeMillis()));
    statement.setInt(17,0);
    statement.setInt(18,user.getId());
    statement.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
 finally {
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException exc) {
      }
    }
  }
  String parent=new String();
  if (!foldername.equals(C_ROOT)) {
    parent=foldername.substring(0,foldername.length() - 1);
    parent=parent.substring(0,parent.lastIndexOf("/") + 1);
  }
  if (parentId == C_UNKNOWN_ID || parent.equals(C_ROOT)) {
    try {
      String rootFolder=null;
      try {
        rootFolder=readProjectResource(project.getId(),C_ROOT);
      }
 catch (      CmsException exc) {
      }
      if (rootFolder == null) {
        createProjectResource(project.getId(),foldername);
      }
    }
 catch (    CmsException e) {
      if (e.getType() != CmsException.C_FILE_EXISTS) {
        throw e;
      }
    }
  }
  return readFolder(project.getId(),foldername);
}
