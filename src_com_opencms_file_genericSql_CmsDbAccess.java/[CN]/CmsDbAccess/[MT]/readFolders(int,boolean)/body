{
  Vector folders=new Vector();
  CmsFolder folder;
  ResultSet res=null;
  PreparedStatement statement=null;
  Connection con=null;
  String usedPool;
  String usedStatement;
  String onlyChanged=new String();
  int onlineProject=getOnlineProject(projectId).getId();
  if (projectId == onlineProject) {
    usedPool=m_poolNameOnline;
    usedStatement="_ONLINE";
  }
 else {
    usedPool=m_poolName;
    usedStatement="";
  }
  if (!includeUnchanged) {
    onlyChanged=" AND CMS_RESOURCES.STATE != " + C_STATE_UNCHANGED + " ORDER BY CMS_RESOURCES.RESOURCE_NAME";
  }
 else {
    onlyChanged=" ORDER BY CMS_RESOURCES.RESOURCE_NAME";
  }
  try {
    con=DriverManager.getConnection(usedPool);
    statement=con.prepareStatement(m_cq.get("C_RESOURCES_READFOLDERSBYPROJECT" + usedStatement) + onlyChanged);
    statement.setInt(1,projectId);
    res=statement.executeQuery();
    while (res.next()) {
      int resId=res.getInt(m_cq.get("C_RESOURCES_RESOURCE_ID"));
      int parentId=res.getInt(m_cq.get("C_RESOURCES_PARENT_ID"));
      String resName=res.getString(m_cq.get("C_RESOURCES_RESOURCE_NAME"));
      int resType=res.getInt(m_cq.get("C_RESOURCES_RESOURCE_TYPE"));
      int resFlags=res.getInt(m_cq.get("C_RESOURCES_RESOURCE_FLAGS"));
      int userId=res.getInt(m_cq.get("C_RESOURCES_USER_ID"));
      int groupId=res.getInt(m_cq.get("C_RESOURCES_GROUP_ID"));
      int projectID=res.getInt(m_cq.get("C_RESOURCES_PROJECT_ID"));
      int fileId=res.getInt(m_cq.get("C_RESOURCES_FILE_ID"));
      int accessFlags=res.getInt(m_cq.get("C_RESOURCES_ACCESS_FLAGS"));
      int state=res.getInt(m_cq.get("C_RESOURCES_STATE"));
      int lockedBy=res.getInt(m_cq.get("C_RESOURCES_LOCKED_BY"));
      long created=SqlHelper.getTimestamp(res,m_cq.get("C_RESOURCES_DATE_CREATED")).getTime();
      long modified=SqlHelper.getTimestamp(res,m_cq.get("C_RESOURCES_DATE_LASTMODIFIED")).getTime();
      int modifiedBy=res.getInt(m_cq.get("C_RESOURCES_LASTMODIFIED_BY"));
      folder=new CmsFolder(resId,parentId,fileId,resName,resType,resFlags,userId,groupId,projectID,accessFlags,state,lockedBy,created,modified,modifiedBy);
      folders.addElement(folder);
    }
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + "]"+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
catch (  Exception ex) {
    throw new CmsException("[" + this.getClass().getName() + "]",ex);
  }
 finally {
    if (res != null) {
      try {
        res.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException exc) {
      }
    }
  }
  return folders;
}
