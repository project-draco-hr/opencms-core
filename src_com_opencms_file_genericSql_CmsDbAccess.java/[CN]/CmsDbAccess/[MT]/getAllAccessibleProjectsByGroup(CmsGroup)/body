{
  Vector projects=new Vector();
  ResultSet res;
  PreparedStatement statement=null;
  try {
    statement=m_pool.getPreparedStatement(m_cq.C_PROJECTS_READ_BYGROUP_KEY);
    statement.setInt(1,group.getId());
    statement.setInt(2,group.getId());
    res=statement.executeQuery();
    while (res.next()) {
      projects.addElement(new CmsProject(res.getInt(m_cq.C_PROJECTS_PROJECT_ID),res.getString(m_cq.C_PROJECTS_PROJECT_NAME),res.getString(m_cq.C_PROJECTS_PROJECT_DESCRIPTION),res.getInt(m_cq.C_PROJECTS_TASK_ID),res.getInt(m_cq.C_PROJECTS_USER_ID),res.getInt(m_cq.C_PROJECTS_GROUP_ID),res.getInt(m_cq.C_PROJECTS_MANAGERGROUP_ID),res.getInt(m_cq.C_PROJECTS_PROJECT_FLAGS),SqlHelper.getTimestamp(res,m_cq.C_PROJECTS_PROJECT_CREATEDATE),SqlHelper.getTimestamp(res,m_cq.C_PROJECTS_PROJECT_PUBLISHDATE),res.getInt(m_cq.C_PROJECTS_PROJECT_PUBLISHED_BY),res.getInt(m_cq.C_PROJECTS_PROJECT_TYPE)));
    }
    res.close();
  }
 catch (  Exception exc) {
    throw new CmsException("[" + this.getClass().getName() + "] "+ exc.getMessage(),CmsException.C_SQL_ERROR,exc);
  }
 finally {
    if (statement != null) {
      m_pool.putPreparedStatement(m_cq.C_PROJECTS_READ_BYGROUP_KEY,statement);
    }
  }
  return (projects);
}
