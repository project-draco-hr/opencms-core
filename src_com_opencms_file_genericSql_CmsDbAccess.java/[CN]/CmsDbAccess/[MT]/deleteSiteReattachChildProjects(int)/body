{
  PreparedStatement statement=null;
  ResultSet res=null;
  Integer statementid=null;
  try {
    CmsProject project=readProject(getSiteBySiteId(siteId).getOnlineProjectId());
    Vector sites=getAllSites();
    Hashtable onlineids=new Hashtable();
    for (int i=0; i < sites.size(); i++)     onlineids.put(new Integer(((CmsSite)sites.elementAt(i)).getOnlineProjectId()),"");
    statementid=m_cq.C_SITE_DELETESITE_FIND_ALL_CHILDREN_IDS_KEY;
    statement=m_pool.getPreparedStatement(statementid);
    statement.setInt(1,project.getId());
    res=statement.executeQuery();
    Vector ids=new Vector();
    while (res.next()) {
      Integer id=new Integer(res.getInt("PROJECT_ID"));
      if (onlineids.containsKey(id))       ids.addElement(id);
    }
    res.close();
    res=null;
    m_pool.putPreparedStatement(statementid,statement);
    statementid=m_cq.C_SITE_DELETESITE_REATTACH_CHILD_PROJECTS_KEY;
    statement=m_pool.getPreparedStatement(statementid);
    statement.setInt(1,project.getParentId());
    for (int i=0; i < ids.size(); i++) {
      statement.setInt(2,((Integer)ids.elementAt(i)).intValue());
      statement.executeUpdate();
    }
  }
 catch (  SQLException e) {
    throw new CmsException("[" + this.getClass().getName() + ".deleteSiteReattachChildProjects()]"+ e.getMessage(),CmsException.C_SQL_ERROR,e);
  }
 finally {
    if (statement != null) {
      m_pool.putPreparedStatement(statementid,statement);
    }
    if (res != null) {
      try {
        res.close();
      }
 catch (      SQLException e) {
      }
    }
  }
}
