{
  Vector projects=new Vector();
  ResultSet res=null;
  PreparedStatement stmt=null;
  Connection conn=null;
  try {
    conn=m_SqlQueries.getConnection();
    stmt=m_SqlQueries.getPreparedStatement(conn,"C_PROJECTS_READ_BYFLAG");
    stmt.setInt(1,state);
    res=stmt.executeQuery();
    while (res.next()) {
      projects.addElement(new CmsProject(res.getInt(m_SqlQueries.get("C_PROJECTS_PROJECT_ID")),res.getString(m_SqlQueries.get("C_PROJECTS_PROJECT_NAME")),res.getString(m_SqlQueries.get("C_PROJECTS_PROJECT_DESCRIPTION")),res.getInt(m_SqlQueries.get("C_PROJECTS_TASK_ID")),new CmsUUID(res.getString(m_SqlQueries.get("C_PROJECTS_USER_ID"))),new CmsUUID(res.getString(m_SqlQueries.get("C_PROJECTS_GROUP_ID"))),new CmsUUID(res.getString(m_SqlQueries.get("C_PROJECTS_MANAGERGROUP_ID"))),res.getInt(m_SqlQueries.get("C_PROJECTS_PROJECT_FLAGS")),SqlHelper.getTimestamp(res,m_SqlQueries.get("C_PROJECTS_PROJECT_CREATEDATE")),res.getInt(m_SqlQueries.get("C_PROJECTS_PROJECT_TYPE"))));
    }
  }
 catch (  SQLException exc) {
    throw m_SqlQueries.getCmsException(this,"getAllProjects(int)",CmsException.C_SQL_ERROR,exc);
  }
 finally {
    m_SqlQueries.closeAll(conn,stmt,res);
  }
  return (projects);
}
