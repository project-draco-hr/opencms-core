{
  boolean first=true;
  Vector tasks=new Vector();
  CmsTask task=null;
  ResultSet recset=null;
  Connection con=null;
  String sqlstr="SELECT * FROM " + m_SqlQueries.get("C_TABLENAME_TASK") + " WHERE ";
  if (project != null) {
    sqlstr=sqlstr + m_SqlQueries.get("C_TASK_ROOT") + "="+ project.getTaskId();
    first=false;
  }
 else {
    sqlstr=sqlstr + m_SqlQueries.get("C_TASK_ROOT") + "<> 0 AND "+ m_SqlQueries.get("C_TASK_PARENT")+ "<> 0";
    first=false;
  }
  if (agent != null) {
    if (!first) {
      sqlstr=sqlstr + " AND ";
    }
    sqlstr=sqlstr + m_SqlQueries.get("C_TASK_AGENTUSER") + "='"+ agent.getId()+ "'";
    first=false;
  }
  if (owner != null) {
    if (!first) {
      sqlstr=sqlstr + " AND ";
    }
    sqlstr=sqlstr + m_SqlQueries.get("C_TASK_INITIATORUSER") + "='"+ owner.getId()+ "'";
    first=false;
  }
  if (role != null) {
    if (!first) {
      sqlstr=sqlstr + " AND ";
    }
    sqlstr=sqlstr + m_SqlQueries.get("C_TASK_ROLE") + "='"+ role.getId()+ "'";
    first=false;
  }
  sqlstr=sqlstr + getTaskTypeConditon(first,tasktype);
  if (orderBy != null) {
    if (!orderBy.equals("")) {
      sqlstr=sqlstr + " ORDER BY " + orderBy;
      if (orderBy != null) {
        if (!orderBy.equals("")) {
          sqlstr=sqlstr + " " + sort;
        }
      }
    }
  }
  Statement statement=null;
  try {
    con=DriverManager.getConnection(m_poolName);
    statement=con.createStatement();
    recset=statement.executeQuery(sqlstr);
    while (recset.next()) {
      task=createTaskFromResultSet(recset);
      tasks.addElement(task);
    }
  }
 catch (  SQLException exc) {
    throw new CmsException(exc.getMessage(),CmsException.C_SQL_ERROR,exc);
  }
catch (  Exception exc) {
    throw new CmsException(exc.getMessage(),CmsException.C_UNKNOWN_EXCEPTION,exc);
  }
 finally {
    if (statement != null) {
      try {
        statement.close();
      }
 catch (      SQLException exc) {
      }
    }
    if (con != null) {
      try {
        con.close();
      }
 catch (      SQLException exc) {
      }
    }
  }
  return tasks;
}
