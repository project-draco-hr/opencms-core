{
  Vector retValue=new Vector();
  PreparedStatement stmt=null;
  ResultSet res=null;
  Connection conn=null;
  try {
    Vector firstResult=new Vector();
    Vector secondResult=new Vector();
    conn=m_SqlQueries.getConnection();
    stmt=m_SqlQueries.getPreparedStatement(conn,"C_EXPORT_GET_ALL_DEPENDENCIES");
    res=stmt.executeQuery();
    while (res.next()) {
      firstResult.add(res.getString(m_SqlQueries.get("C_EXPORT_DEPENDENCIES_RESOURCE")));
      secondResult.add(res.getString(m_SqlQueries.get("C_EXPORT_LINK")));
    }
    for (int i=0; i < resources.size(); i++) {
      for (int j=0; j < firstResult.size(); j++) {
        if (((String)firstResult.elementAt(j)).startsWith((String)resources.elementAt(i))) {
          if (!retValue.contains(secondResult.elementAt(j))) {
            retValue.add(secondResult.elementAt(j));
          }
        }
 else         if (((String)resources.elementAt(i)).startsWith((String)firstResult.elementAt(j))) {
          if (!retValue.contains(secondResult.elementAt(j))) {
            int index=((String)firstResult.elementAt(j)).length();
            String test=((String)resources.elementAt(i)).substring(index);
            index=test.indexOf("/");
            if (index == -1 || index + 1 == test.length()) {
              retValue.add(secondResult.elementAt(j));
            }
          }
        }
      }
    }
    return retValue;
  }
 catch (  SQLException e) {
    throw m_SqlQueries.getCmsException(this,"getDependingExportlinks(Vector)",CmsException.C_SQL_ERROR,e);
  }
catch (  Exception e) {
    throw m_SqlQueries.getCmsException(this,"getDependingExportLinks(Vector)",CmsException.C_UNKNOWN_EXCEPTION,e);
  }
 finally {
    m_SqlQueries.closeAll(conn,stmt,res);
  }
}
