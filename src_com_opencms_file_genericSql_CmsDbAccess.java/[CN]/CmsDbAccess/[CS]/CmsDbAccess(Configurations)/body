{
  String rbName=null;
  String driver=null;
  String url=null;
  String user=null;
  String password=null;
  String digest=null;
  boolean fillDefaults;
  int maxConn;
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] init the dbaccess-module.");
  }
  rbName=(String)config.getString(C_CONFIGURATION_RESOURCEBROKER);
  driver=config.getString(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_DRIVER);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read driver from configurations: " + driver);
  }
  url=config.getString(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_URL);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read url from configurations: " + url);
  }
  user=config.getString(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_USER);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read user from configurations: " + user);
  }
  password=config.getString(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_PASSWORD,"");
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read password from configurations: " + password);
  }
  maxConn=config.getInteger(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_MAX_CONN);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read maxConn from configurations: " + maxConn);
  }
  fillDefaults=config.getBoolean(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_FILLDEFAULTS,false);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read fillDefaults from configurations: " + fillDefaults);
  }
  digest=config.getString(C_CONFIGURATION_RESOURCEBROKER + "." + rbName+ "."+ C_CONFIGURATIONS_DIGEST,"MD5");
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] read digest from configurations: " + digest);
  }
  try {
    m_digest=MessageDigest.getInstance(digest);
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] digest created, using: " + m_digest.toString());
    }
  }
 catch (  NoSuchAlgorithmException e) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] error creating digest - using clear paswords: " + e.getMessage());
    }
  }
  m_pool=new CmsPreparedStatementPool(driver,url,user,password,maxConn);
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] pool created");
  }
  initStatements();
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] all statements initialized in the pool");
  }
  initMaxIdValues();
  if (A_OpenCms.isLogging()) {
    A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] max-ids initialized");
  }
  if (fillDefaults) {
    if (A_OpenCms.isLogging()) {
      A_OpenCms.log(I_CmsLogChannels.C_OPENCMS_INIT,"[CmsDbAccess] fill default resources");
    }
    fillDefaults();
  }
}
