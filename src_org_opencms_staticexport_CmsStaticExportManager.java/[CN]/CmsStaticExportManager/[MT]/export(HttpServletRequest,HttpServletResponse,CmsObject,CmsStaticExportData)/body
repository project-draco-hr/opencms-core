{
  int status=-1;
  CmsFile file;
  String vfsName=data.getVfsName();
  String rfsName=data.getRfsName();
  CmsResource resource=data.getResource();
  String siteRoot=CmsSiteManager.getSiteRoot(vfsName);
  CmsI18nInfo i18nInfo=OpenCms.getLocaleManager().getI18nInfo(req,cms.getRequestContext().currentUser(),cms.getRequestContext().currentProject(),vfsName);
  String remoteAddr=m_remoteAddr;
  if (remoteAddr == null) {
    remoteAddr=I_CmsConstants.C_IP_LOCALHOST;
  }
  CmsContextInfo contextInfo=new CmsContextInfo(cms.getRequestContext().currentUser(),cms.getRequestContext().currentProject(),vfsName,"/",i18nInfo.getLocale(),i18nInfo.getEncoding(),remoteAddr);
  cms=OpenCms.initCmsObject(null,contextInfo);
  if (siteRoot != null) {
    vfsName=vfsName.substring(siteRoot.length());
  }
 else {
    siteRoot="/";
  }
  if (OpenCms.getLog(this).isDebugEnabled()) {
    OpenCms.getLog(this).debug("Static export site root " + siteRoot + " / vfsName "+ vfsName);
  }
  cms.getRequestContext().setSiteRoot(siteRoot);
  String oldUri=null;
  boolean exportOnDemand=((req != null) && (res != null));
  if (OpenCms.getLog(this).isDebugEnabled()) {
    OpenCms.getLog(this).debug("Static export starting for resource " + data);
  }
  if (resource.isFile()) {
    file=cms.readFile(vfsName);
  }
 else {
    file=CmsFile.upgrade(OpenCmsCore.getInstance().initResource(cms,vfsName,req,res),cms);
    try {
      cms.readResource(vfsName + file.getName());
      vfsName=vfsName + file.getName();
    }
 catch (    CmsException e) {
    }
    rfsName+=C_EXPORT_DEFAULT_FILE;
  }
  I_CmsResourceLoader loader=OpenCms.getResourceManager().getLoader(file);
  if ((loader == null) || (!loader.isStaticExportEnabled())) {
    throw new CmsException("Unable to export VFS file " + vfsName + ", loader for type "+ file.getTypeId()+ " does not support static export");
  }
  FileOutputStream exportStream=null;
  File exportFile=null;
  String exportFileName=CmsFileUtil.normalizePath(getExportPath() + rfsName.substring(1));
  if (OpenCms.getLinkManager().exportRequired(cms,vfsName)) {
    createExportFolder(rfsName);
    status=HttpServletResponse.SC_OK;
    exportFile=new File(exportFileName);
  }
 else {
    status=HttpServletResponse.SC_SEE_OTHER;
  }
  if (exportOnDemand) {
    String mimetype=OpenCms.getResourceManager().getMimeType(file.getName(),cms.getRequestContext().getEncoding());
    res.setContentType(mimetype);
    oldUri=cms.getRequestContext().getUri();
    cms.getRequestContext().setUri(vfsName);
  }
  byte[] result=loader.export(cms,file,req,res);
  file=null;
  if (result != null) {
    if (exportFile != null) {
      try {
        exportStream=new FileOutputStream(exportFile);
        exportStream.write(result);
        exportStream.close();
        status=HttpServletResponse.SC_OK;
      }
 catch (      Throwable t) {
        throw new CmsException("Creation of static export output stream failed for RFS file " + exportFileName);
      }
      if (req != null) {
        Long dateLastModified=(Long)req.getAttribute(I_CmsConstants.C_HEADER_OPENCMS_EXPORT);
        if ((dateLastModified != null) && (dateLastModified.longValue() != -1)) {
          exportFile.setLastModified((dateLastModified.longValue() / 1000) * 1000);
          if (OpenCms.getLog(this).isDebugEnabled()) {
            OpenCms.getLog(this).debug("Setting RFS file " + exportFile.getName() + " 'date last modified' to "+ (dateLastModified.longValue() / 1000) * 1000);
          }
        }
      }
 else {
        exportFile.setLastModified((resource.getDateLastModified() / 1000) * 1000);
      }
    }
  }
 else {
    status=HttpServletResponse.SC_NOT_MODIFIED;
  }
  if (exportOnDemand) {
    cms.getRequestContext().setUri(oldUri);
  }
  if (OpenCms.getLog(this).isInfoEnabled()) {
    OpenCms.getLog(this).info("Static exported vfs file '" + vfsName + "' to rfs file '"+ exportFileName+ "'");
  }
  return status;
}
