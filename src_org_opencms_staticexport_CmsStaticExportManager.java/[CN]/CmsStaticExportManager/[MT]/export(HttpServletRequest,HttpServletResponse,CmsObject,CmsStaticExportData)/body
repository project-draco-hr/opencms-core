{
  CmsResource resource=data.getResource();
  String vfsName=data.getVfsName();
  String rfsName;
  if (data.isDetailPage()) {
    rfsName=CmsStringUtil.joinPaths(data.getRfsName(),CmsStaticExportManager.DEFAULT_FILE);
  }
 else   if (data.getParameters() != null) {
    rfsName=data.getRfsName();
  }
 else {
    rfsName=addDefaultFileNameToFolder(data.getRfsName(),resource.isFolder());
  }
  String siteRoot=OpenCms.getSiteManager().getSiteRoot(vfsName);
  CmsI18nInfo i18nInfo=OpenCms.getLocaleManager().getI18nInfo(req,cms.getRequestContext().getCurrentUser(),cms.getRequestContext().getCurrentProject(),vfsName);
  String remoteAddr=m_remoteAddr;
  if (remoteAddr == null) {
    remoteAddr=CmsContextInfo.LOCALHOST;
  }
  if (siteRoot != null) {
    vfsName=vfsName.substring(siteRoot.length());
  }
 else {
    siteRoot="/";
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_STATIC_EXPORT_SITE_ROOT_2,siteRoot,vfsName));
  }
  boolean usesSecureSite=(req != null) && OpenCms.getSiteManager().usesSecureSite(req);
  CmsContextInfo contextInfo=new CmsContextInfo(cms.getRequestContext().getCurrentUser(),cms.getRequestContext().getCurrentProject(),vfsName,siteRoot,usesSecureSite,i18nInfo.getLocale(),i18nInfo.getEncoding(),remoteAddr,CmsContextInfo.CURRENT_TIME,cms.getRequestContext().getOuFqn());
  CmsObject exportCms=OpenCms.initCmsObject(null,contextInfo);
  if (!isExportLink(exportCms,exportCms.getRequestContext().removeSiteRoot(data.getVfsName()))) {
    return HttpServletResponse.SC_SEE_OTHER;
  }
  boolean exportOnDemand=((req != null) && (res != null));
  CmsStaticExportResponseWrapper wrapRes=null;
  if (res != null) {
    wrapRes=new CmsStaticExportResponseWrapper(res);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().getBundle().key(Messages.LOG_SE_RESOURCE_START_1,data));
  }
  CmsFile file=exportCms.readFile(OpenCms.initResource(exportCms,vfsName,req,wrapRes));
  vfsName=exportCms.getSitePath(file);
  I_CmsResourceLoader loader=OpenCms.getResourceManager().getLoader(file);
  if ((loader == null) || (!loader.isStaticExportEnabled())) {
    Object[] arguments=new Object[]{vfsName,new Integer(file.getTypeId())};
    throw new CmsStaticExportException(Messages.get().container(Messages.ERR_EXPORT_NOT_SUPPORTED_2,arguments));
  }
  if (exportOnDemand) {
    String mimetype=OpenCms.getResourceManager().getMimeType(file.getName(),exportCms.getRequestContext().getEncoding());
    if (wrapRes != null) {
      wrapRes.setContentType(mimetype);
    }
    exportCms.getRequestContext().setUri(vfsName);
  }
  int status=-1;
  List<Locale> locales=OpenCms.getLocaleManager().getDefaultLocales(exportCms,vfsName);
  boolean exported=false;
  boolean matched=false;
  Iterator<CmsStaticExportRfsRule> it=getRfsRules().iterator();
  while (it.hasNext()) {
    CmsStaticExportRfsRule rule=it.next();
    boolean export=rule.getSource().matcher(siteRoot + vfsName).matches();
    matched|=export;
    export|=(vfsName.startsWith(CmsWorkplace.VFS_PATH_SYSTEM) && rule.match(vfsName));
    if (export) {
      CmsObject locCms=exportCms;
      Locale locale=CmsLocaleManager.getLocale(rule.getName());
      if (locales.contains(locale)) {
        CmsContextInfo ctxInfo=new CmsContextInfo(exportCms.getRequestContext());
        ctxInfo.setLocale(locale);
        locCms=OpenCms.initCmsObject(exportCms,ctxInfo);
      }
      byte[] content=loader.export(locCms,file,req,wrapRes);
      if (content != null) {
        exported=true;
        String locRfsName=rfsName;
        if (locales.contains(locale)) {
          locRfsName=rule.getLocalizedRfsName(rfsName,"/");
        }
        writeResource(req,rule.getExportPath(),locRfsName,resource,content);
      }
    }
  }
  if (!matched) {
    String exportPath=getExportPath(siteRoot + vfsName);
    byte[] content=loader.export(exportCms,file,req,wrapRes);
    if (content != null) {
      exported=true;
      writeResource(req,exportPath,rfsName,resource,content);
    }
  }
  if (exported) {
    status=(wrapRes != null) ? wrapRes.getStatus() : -1;
    if (status < 0) {
      status=HttpServletResponse.SC_OK;
    }
  }
 else {
    status=HttpServletResponse.SC_NOT_MODIFIED;
  }
  return status;
}
