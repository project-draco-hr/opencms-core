{
  String rfsName=vfsName;
  try {
    CmsProperty exportNameProperty=cms.readPropertyObject(CmsResource.getFolderPath(rfsName),CmsPropertyDefinition.PROPERTY_EXPORTNAME,true);
    if (exportNameProperty.isNullProperty()) {
      rfsName=cms.getRequestContext().addSiteRoot(rfsName);
    }
 else {
      String exportname=exportNameProperty.getValue();
      if (exportname.charAt(0) != '/') {
        exportname='/' + exportname;
      }
      if (exportname.charAt(exportname.length() - 1) != '/') {
        exportname=exportname + '/';
      }
      String value=null;
      boolean cont;
      String resourceName=rfsName;
      do {
        try {
          CmsProperty prop=cms.readPropertyObject(resourceName,CmsPropertyDefinition.PROPERTY_EXPORTNAME,false);
          if (prop.isIdentical(exportNameProperty)) {
            value=prop.getValue();
          }
          cont=(value == null) && (resourceName.length() > 1);
        }
 catch (        CmsVfsResourceNotFoundException e) {
          cont=(resourceName.length() > 1);
        }
catch (        CmsSecurityException se) {
          cont=false;
        }
        if (cont) {
          resourceName=CmsResource.getParentFolder(resourceName);
        }
      }
 while (cont);
      rfsName=exportname + rfsName.substring(resourceName.length());
    }
    String extension=CmsFileUtil.getExtension(rfsName);
    boolean isJsp=extension.equals(".jsp");
    if (isJsp) {
      String suffix=null;
      try {
        CmsResource res=cms.readResource(vfsName);
        isJsp=(CmsResourceTypeJsp.isJSP(res));
        if (isJsp) {
          suffix=cms.readPropertyObject(vfsName,CmsPropertyDefinition.PROPERTY_EXPORTSUFFIX,true).getValue(".html");
        }
      }
 catch (      CmsVfsResourceNotFoundException e) {
        File rfsFile=new File(CmsFileUtil.normalizePath(OpenCms.getStaticExportManager().getExportPath(cms.getRequestContext().addSiteRoot(vfsName)) + rfsName));
        File parent=rfsFile.getParentFile();
        if (parent != null) {
          File[] paramVariants=parent.listFiles(new CmsPrefixFileFilter(rfsFile.getName()));
          if ((paramVariants != null) && (paramVariants.length > 0)) {
            suffix=paramVariants[0].getAbsolutePath().substring(rfsFile.getAbsolutePath().length());
          }
        }
 else {
          suffix=".html";
        }
      }
      if ((suffix != null) && !extension.equals(suffix.toLowerCase())) {
        rfsName+=suffix;
        extension=suffix;
      }
    }
    if (parameters != null) {
      rfsName=CmsFileUtil.getRfsPath(rfsName,extension,parameters);
      try {
        cms.writeStaticExportPublishedResource(rfsName,EXPORT_LINK_WITH_PARAMETER,parameters,System.currentTimeMillis());
      }
 catch (      CmsException e) {
        LOG.error(Messages.get().getBundle().key(Messages.LOG_WRITE_FAILED_1,rfsName),e);
      }
    }
  }
 catch (  CmsException e) {
    if (LOG.isDebugEnabled()) {
      LOG.debug(e.getLocalizedMessage(),e);
    }
    rfsName=vfsName;
  }
  if (!vfsName.startsWith(CmsWorkplace.VFS_PATH_SYSTEM)) {
    return getRfsPrefix(cms.getRequestContext().addSiteRoot(vfsName)).concat(rfsName);
  }
 else {
    String source=cms.getRequestContext().addSiteRoot(cms.getRequestContext().getUri());
    Iterator<CmsStaticExportRfsRule> it=m_rfsRules.iterator();
    while (it.hasNext()) {
      CmsStaticExportRfsRule rule=it.next();
      if (rule.getSource().matcher(source).matches() && rule.match(vfsName)) {
        return rule.getRfsPrefix().concat(rfsName);
      }
    }
    return getRfsPrefix(cms.getRequestContext().getSiteRoot() + "/").concat(rfsName);
  }
}
