{
  CmsStaticExportManager exportManager=new CmsStaticExportManager();
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isDebugEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).debug("Created static export manager" + ((cms != null) ? (" with CmsObject " + cms) : ""));
  }
  exportManager.setStaticExportEnabled("true".equalsIgnoreCase(configuration.getString("staticexport.enabled","false")));
  exportManager.setStaticExportOnDemand(!"true".equalsIgnoreCase(configuration.getString("staticexport.onpublish","false")));
  exportManager.setExportPropertyDefault("true".equalsIgnoreCase(configuration.getString("staticexport.export_default","false")));
  exportManager.setQuickPlainExport("true".equalsIgnoreCase(configuration.getString("staticexport.quick_plain_export","true")));
  exportManager.setExportUrl(configuration.getString("staticexport.url","http://127.0.0.1:8080/opencms/handle404"));
  String[] exportSuffixes=configuration.getStringArray("staticexport.export_suffixes");
  if (exportSuffixes == null) {
    exportSuffixes=new String[0];
  }
  exportManager.setExportSuffixes(exportSuffixes);
  String[] exportVfsFolders=configuration.getStringArray("staticexport.vfs_folders");
  if (exportVfsFolders == null) {
    exportVfsFolders=new String[0];
  }
  exportManager.setTestResource(configuration.getString("staticexport.testresource","/system/shared/page.dtd"));
  m_exportFolderMatcher=new CmsExportFolderMatcher(exportVfsFolders,exportManager.getTestResource());
  exportManager.setExportPath(OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebApplication(configuration.getString("staticexport.export_path","export")));
  String servletName=OpenCms.getSystemInfo().getServletPath();
  String contextName=OpenCms.getSystemInfo().getContextPath();
  configuration.setProperty("CONTEXT_NAME",contextName);
  configuration.setProperty("SERVLET_NAME",servletName);
  exportManager.setExportUrl(configuration.getString("staticexport.url","http://127.0.0.1:8080/opencms/handle404"));
  String rfsPrefix=configuration.getString("staticexport.prefix_rfs",contextName + "/export");
  String vfsPrefix=configuration.getString("staticexport.prefix_vfs",contextName + servletName);
  exportManager.setRfsPrefix(rfsPrefix);
  exportManager.setVfsPrefix(vfsPrefix);
  exportManager.setExportRelativeLinks(configuration.getBoolean("staticexport.relative_links",false));
  exportManager.setExportnames();
  if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
    OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Static export        : " + (exportManager.isStaticExportEnabled() ? "enabled" : "disabled"));
    if (exportManager.isStaticExportEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Export default       : " + exportManager.getExportPropertyDefault());
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Export path          : " + exportManager.getExportPath());
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Export rfs prefix    : " + exportManager.getRfsPrefix());
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Export vfs prefix    : " + exportManager.getVfsPrefix());
      OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Export link style    : " + (exportManager.relativLinksInExport() ? "relative" : "absolute"));
    }
  }
  String[] exportHeaders=null;
  try {
    exportHeaders=configuration.getStringArray("staticexport.headers");
    for (int i=0; i < exportHeaders.length; i++) {
      if (CmsStringSubstitution.split(exportHeaders[i],":").length == 2) {
        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {
          OpenCms.getLog(CmsLog.CHANNEL_INIT).info(". Export headers       : " + exportHeaders[i]);
        }
      }
 else {
        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isWarnEnabled()) {
          OpenCms.getLog(CmsLog.CHANNEL_INIT).warn(". Export headers       : " + "invalid header: " + exportHeaders[i] + ", using default headers");
        }
        exportHeaders=null;
        break;
      }
    }
  }
 catch (  Exception e) {
    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isWarnEnabled()) {
      OpenCms.getLog(CmsLog.CHANNEL_INIT).warn(". Export headers       : non-critical error " + e.toString());
    }
  }
  exportManager.setExportHeaders(exportHeaders);
  return exportManager;
}
