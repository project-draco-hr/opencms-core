{
  int size=publishedTemplateResources.size();
  int count=1;
  if (LOG.isDebugEnabled()) {
    LOG.debug(Messages.get().key(Messages.LOG_EXPORT_TEMPLATES_1,new Integer(size)));
  }
  report.println(Messages.get().container(Messages.RPT_STATICEXPORT_TEMPLATE_RESOURCES_BEGIN_0),I_CmsReport.C_FORMAT_HEADLINE);
  Iterator i=publishedTemplateResources.iterator();
  while (i.hasNext()) {
    String rfsName=(String)i.next();
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,new Integer(count++),new Integer(size)),I_CmsReport.C_FORMAT_NOTE);
    report.print(Messages.get().container(Messages.RPT_EXPORTING_0),I_CmsReport.C_FORMAT_NOTE);
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,rfsName));
    report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
    String exportUrlStr=getExportUrl() + getRfsPrefix() + rfsName;
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().key(Messages.LOG_SENDING_REQUEST_2,rfsName,exportUrlStr));
    }
    try {
      URL exportUrl=new URL(exportUrlStr);
      HttpURLConnection.setFollowRedirects(false);
      HttpURLConnection urlcon=(HttpURLConnection)exportUrl.openConnection();
      urlcon.setRequestMethod("GET");
      urlcon.setRequestProperty(I_CmsConstants.C_HEADER_OPENCMS_EXPORT,"true");
      if (getAcceptLanguageHeader() != null) {
        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_ACCEPT_LANGUAGE,getAcceptLanguageHeader());
      }
 else {
        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_ACCEPT_LANGUAGE,m_defaultAcceptLanguageHeader);
      }
      if (getAcceptCharsetHeader() != null) {
        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_ACCEPT_CHARSET,getAcceptCharsetHeader());
      }
 else {
        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_ACCEPT_CHARSET,m_defaultAcceptCharsetHeader);
      }
      String exportFileName=CmsFileUtil.normalizePath(getExportPath() + rfsName);
      File exportFile=new File(exportFileName);
      if (exportFile != null) {
        long dateLastModified=exportFile.lastModified();
        urlcon.setIfModifiedSince(dateLastModified);
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().key(Messages.LOG_IF_MODIFIED_SINCE_SET_2,exportFile.getName(),new Long((dateLastModified / 1000) * 1000)));
        }
      }
      urlcon.connect();
      int status=urlcon.getResponseCode();
      urlcon.disconnect();
      if (LOG.isInfoEnabled()) {
        LOG.info(Messages.get().key(Messages.LOG_REQUEST_RESULT_3,rfsName,exportUrlStr,new Integer(status)));
      }
      if (status == HttpServletResponse.SC_OK) {
        report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.C_FORMAT_OK);
      }
 else       if (status == HttpServletResponse.SC_NOT_MODIFIED) {
        report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SKIPPED_0),I_CmsReport.C_FORMAT_NOTE);
      }
 else       if (status == HttpServletResponse.SC_SEE_OTHER) {
        report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_IGNORED_0),I_CmsReport.C_FORMAT_NOTE);
      }
 else {
        report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_ARGUMENT_1,new Integer(status)),I_CmsReport.C_FORMAT_OK);
      }
    }
 catch (    IOException e) {
      report.println(e);
    }
  }
  report.println(Messages.get().container(Messages.RPT_STATICEXPORT_TEMPLATE_RESOURCES_END_0),I_CmsReport.C_FORMAT_HEADLINE);
}
