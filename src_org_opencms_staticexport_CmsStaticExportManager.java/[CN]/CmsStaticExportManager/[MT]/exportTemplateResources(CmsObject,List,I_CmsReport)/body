{
  String rfsName;
  String url;
  int size=publishedTemplateResources.size();
  int count=1;
  if (OpenCms.getLog(this).isDebugEnabled()) {
    OpenCms.getLog(this).debug("Starting export of template resources. " + size + " possible canditates in list.");
  }
  report.println(report.key("report.staticexport.templateresources_begin"),I_CmsReport.C_FORMAT_HEADLINE);
  Iterator i=publishedTemplateResources.iterator();
  try {
    while (i.hasNext()) {
      rfsName=(String)i.next();
      CmsStaticExportData data=getExportData(getRfsPrefix() + rfsName,null,cms);
      report.print("(" + count++ + " / "+ size+ ") ",I_CmsReport.C_FORMAT_NOTE);
      report.print(report.key("report.exporting"),I_CmsReport.C_FORMAT_NOTE);
      report.print(rfsName);
      report.print(report.key("report.dots"));
      url=getExportUrl() + getRfsPrefix() + rfsName;
      if (data.getParameters() != null && data.getParameters().length() > 0) {
        url+=data.getParameters();
      }
      if (OpenCms.getLog(this).isDebugEnabled()) {
        OpenCms.getLog(this).debug("Sending request for " + rfsName + " with url ("+ url+ ")...");
      }
      if (url != null) {
        try {
          URL export=new URL(url);
          HttpURLConnection.setFollowRedirects(false);
          HttpURLConnection urlcon=(HttpURLConnection)export.openConnection();
          urlcon.setRequestMethod("GET");
          urlcon.setRequestProperty(I_CmsConstants.C_HEADER_OPENCMS_EXPORT,"true");
          String exportFileName=CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));
          File exportFile=new File(exportFileName);
          if (exportFile != null) {
            long dateLastModified=exportFile.lastModified();
            urlcon.setIfModifiedSince(dateLastModified);
            if (OpenCms.getLog(this).isDebugEnabled()) {
              OpenCms.getLog(this).debug("req " + exportFile.getName() + " [Timestamp="+ (dateLastModified / 1000) * 1000 + "]");
            }
          }
          urlcon.connect();
          int status=urlcon.getResponseCode();
          urlcon.disconnect();
          if (OpenCms.getLog(this).isInfoEnabled()) {
            OpenCms.getLog(this).info("Requested " + rfsName + " with url ("+ url+ ") [STATUS"+ status+ "]");
          }
          if (status == HttpServletResponse.SC_OK) {
            report.println(report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
          }
 else           if (status == HttpServletResponse.SC_NOT_MODIFIED) {
            report.println(report.key("report.skipped"),I_CmsReport.C_FORMAT_NOTE);
          }
 else           if (status == HttpServletResponse.SC_SEE_OTHER) {
            report.println(report.key("report.ignored"),I_CmsReport.C_FORMAT_NOTE);
          }
 else {
            report.println(String.valueOf(status),I_CmsReport.C_FORMAT_OK);
          }
        }
 catch (        IOException e) {
          report.println(e);
        }
      }
    }
  }
  finally {
  }
  report.println(report.key("report.staticexport.templateresources_end"),I_CmsReport.C_FORMAT_HEADLINE);
}
