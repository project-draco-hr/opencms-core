{
  try {
    copyFileToServer(OpenCms.getSystemInfo().getPackagesRfsPath() + File.separator + CmsSystemInfo.FOLDER_MODULES);
  }
 catch (  CmsException e) {
    setException(e);
    return;
  }
  List errors=new ArrayList();
  CmsModule module=null;
  try {
    String importpath=OpenCms.getSystemInfo().getPackagesRfsPath();
    importpath=OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(importpath + "modules/" + getParamImportfile());
    module=CmsModuleImportExportHandler.readModuleFromImport(importpath);
    List dependencies=OpenCms.getModuleManager().checkDependencies(module,CmsModuleManager.DEPENDENCY_MODE_IMPORT);
    if (!dependencies.isEmpty()) {
      StringBuffer dep=new StringBuffer(32);
      for (int i=0; i < dependencies.size(); i++) {
        CmsModuleDependency dependency=(CmsModuleDependency)dependencies.get(i);
        dep.append("\n - ");
        dep.append(dependency.getName());
        dep.append(" (Version: ");
        dep.append(dependency.getVersion());
        dep.append(")");
      }
      errors.add(Messages.get().container(Messages.ERR_ACTION_MODULE_DEPENDENCY_2,getParamImportfile(),new String(dep)));
    }
  }
 catch (  CmsConfigurationException e) {
    errors.add(Messages.get().container(Messages.ERR_ACTION_MODULE_UPLOAD_1,getParamImportfile()));
  }
  if (errors.isEmpty()) {
    Map objects=(Map)getSettings().getListObject();
    if (objects != null) {
      objects.remove(CmsModulesList.class.getName());
    }
    Map param=new HashMap();
    param.put(CmsModulesList.PARAM_MODULE,getParamImportfile());
    param.put(PARAM_STYLE,CmsToolDialog.STYLE_NEW);
    param.put(PARAM_CLOSELINK,CmsToolManager.linkForToolPath(getJsp(),"/modules"));
    if (OpenCms.getModuleManager().hasModule(module.getName())) {
      param.put(CmsModulesUploadFromServer.PARAM_MODULENAME,module.getName());
      getToolManager().jspForwardPage(this,CmsModulesUploadFromServer.REPLACE_ACTION_REPORT,param);
    }
 else {
      getToolManager().jspForwardPage(this,CmsModulesUploadFromServer.IMPORT_ACTION_REPORT,param);
    }
  }
 else {
    Iterator it=errors.iterator();
    CmsMessageContainer msg;
    while (it.hasNext()) {
      msg=(CmsMessageContainer)it.next();
      if (LOG.isErrorEnabled()) {
        LOG.error(msg.key(getLocale()));
      }
      throw new CmsIllegalStateException(msg);
    }
  }
}
