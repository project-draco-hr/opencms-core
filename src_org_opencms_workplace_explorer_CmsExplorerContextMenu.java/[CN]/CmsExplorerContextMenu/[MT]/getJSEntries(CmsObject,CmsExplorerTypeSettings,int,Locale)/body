{
  String entries=(String)m_generatedScripts.get(locale);
  if (entries == null) {
    CmsWorkplaceMessages messages=new CmsWorkplaceMessages(locale);
    StringBuffer result=new StringBuffer(3072);
    String jspWorkplaceUri=OpenCms.getLinkManager().substituteLink(cms,CmsWorkplace.C_PATH_WORKPLACE);
    String xmlWorkplaceUri=OpenCms.getLinkManager().substituteLink(cms,CmsWorkplaceAction.C_PATH_XML_WORKPLACE);
    result.append("\nvi.resource[" + resTypeId + "]=new res(\""+ settings.getName()+ "\", ");
    result.append("\"" + messages.key(settings.getKey()) + "\", vi.skinPath + \"filetypes/"+ settings.getIcon()+ "\", \""+ settings.getNewResourceUri()+ "\", true);\n");
    Iterator i=getAllEntries().iterator();
    while (i.hasNext()) {
      CmsExplorerContextMenuItem item=(CmsExplorerContextMenuItem)i.next();
      result.append("addMenuEntry(" + resTypeId + ", ");
      if (CmsExplorerContextMenuItem.C_TYPE_ENTRY.equals(item.getType())) {
        result.append("\"" + messages.key(item.getKey()) + "\", ");
        if (item.isXml()) {
          result.append("\"" + xmlWorkplaceUri + item.getUri());
          String paramPrefix="?";
          if (item.getUri().indexOf("?") != -1) {
            paramPrefix="&";
          }
          result.append(paramPrefix + "initial=true");
          result.append("\", ");
        }
 else {
          result.append("\"" + jspWorkplaceUri + item.getUri()+ "\", ");
        }
        String target=item.getTarget();
        if (target == null) {
          target="";
        }
        result.append("\"'" + target + "'\", ");
        String rules=CmsStringUtil.substitute(item.getRules()," ","");
        rules=parseRules(rules,item.getKey());
        result.append("\"" + rules + "\");\n");
      }
 else {
        result.append("\"-\", \" \", \"''\", \"\");\n");
      }
    }
    entries=result.toString();
    m_generatedScripts.put(locale,entries);
  }
  CmsPermissionSet permissions;
  try {
    permissions=settings.getAccess().getAccessControlList().getPermissions(cms.getRequestContext().currentUser(),cms.getGroupsOfUser(cms.getRequestContext().currentUser().getName()));
  }
 catch (  CmsException e) {
    permissions=settings.getAccess().getAccessControlList().getPermissions(cms.getRequestContext().currentUser());
    if (OpenCms.getLog(this).isErrorEnabled()) {
      OpenCms.getLog(this).error("Error reading groups of user " + cms.getRequestContext().currentUser().getName());
    }
  }
  if (permissions.getPermissionString().indexOf("+w") == -1) {
    entries+="vi.resource[" + resTypeId + "].editable = false;\n";
  }
  return entries;
}
