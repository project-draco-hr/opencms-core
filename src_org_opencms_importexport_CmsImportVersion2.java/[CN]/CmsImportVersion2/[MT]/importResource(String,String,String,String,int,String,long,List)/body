{
  byte[] content=null;
  CmsResource res=null;
  String targetName=null;
  try {
    if (source != null) {
      content=getFileBytes(source);
    }
    content=convertContent(source,destination,content,resourceTypeName);
    int size=0;
    if (content != null) {
      size=content.length;
    }
    CmsUUID curUser=m_cms.getRequestContext().currentUser().getId();
    CmsUUID newUuidstructure=new CmsUUID();
    CmsUUID newUuidresource=new CmsUUID();
    if (uuid != null) {
      newUuidstructure=new CmsUUID(uuid);
    }
    if (uuidresource != null) {
      newUuidresource=new CmsUUID(uuidresource);
    }
    targetName=destination;
    if (targetName.endsWith("/")) {
      targetName=targetName.substring(0,targetName.length() - 1);
    }
    boolean isFolder=false;
    try {
      isFolder=CmsFolder.isFolderType(resourceTypeId);
    }
 catch (    Throwable t) {
      isFolder=((size == 0) && CmsResourceTypeFolder.RESOURCE_TYPE_NAME.equalsIgnoreCase(resourceTypeName));
    }
    CmsResource resource=new CmsResource(newUuidstructure,newUuidresource,targetName,resourceTypeId,isFolder,0,m_cms.getRequestContext().currentProject().getUuid(),CmsResource.STATE_NEW,lastmodified,curUser,lastmodified,curUser,CmsResource.DATE_RELEASED_DEFAULT,CmsResource.DATE_EXPIRED_DEFAULT,1,size,0,0);
    if (RESOURCE_TYPE_LINK_ID == resourceTypeId) {
      m_report.print(Messages.get().container(Messages.RPT_STORING_LINK_0),I_CmsReport.FORMAT_NOTE);
      m_linkStorage.put(m_importPath + destination,new String(content));
      m_linkPropertyStorage.put(m_importPath + destination,properties);
      res=resource;
    }
 else {
      String resName=m_importPath + destination;
      res=m_cms.importResource(resName,resource,content,properties);
      try {
        m_cms.unlockResource(resName);
      }
 catch (      CmsLockException e) {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().getBundle().key(Messages.LOG_IMPORTEXPORT_UNABLE_TO_UNLOCK_RESOURCE_1,resName),e);
        }
      }
    }
    m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
  }
 catch (  CmsException exc) {
    CmsMessageContainer message=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_IMPORTING_RESOURCE_1,targetName);
    if (LOG.isDebugEnabled()) {
      LOG.debug(message.key(),exc);
    }
    m_report.println(exc);
    try {
      Thread.sleep(1000);
    }
 catch (    Exception e) {
    }
  }
  return res;
}
