{
  try {
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_START_MERGING_1,resourcename));
    }
    CmsFile pagefile=m_cms.readFile(resourcename,CmsResourceFilter.ALL);
    Document contentXml=CmsXmlUtils.unmarshalHelper(pagefile.getContents(),null);
    String masterTemplateNodeName="//masterTemplate";
    Node masterTemplateNode=contentXml.selectSingleNode(masterTemplateNodeName);
    if (masterTemplateNode == null) {
      masterTemplateNode=contentXml.selectSingleNode(masterTemplateNodeName.toLowerCase());
    }
    if (masterTemplateNode == null) {
      masterTemplateNode=contentXml.selectSingleNode(masterTemplateNodeName.toUpperCase());
    }
    String mastertemplate=null;
    if (masterTemplateNode != null) {
      mastertemplate=masterTemplateNode.getText().trim();
    }
    String elementDefNodeName="//ELEMENTDEF";
    Node bodyNode=contentXml.selectSingleNode(elementDefNodeName);
    if (bodyNode == null) {
      bodyNode=contentXml.selectSingleNode(elementDefNodeName.toLowerCase());
    }
    if (bodyNode != null) {
      String bodyclass=null;
      String bodyname=null;
      Map bodyparams=null;
      List nodes=((Element)bodyNode).elements();
      for (int i=0, n=nodes.size(); i < n; i++) {
        Node node=(Node)nodes.get(i);
        if ("CLASS".equalsIgnoreCase(node.getName())) {
          bodyclass=node.getText().trim();
        }
 else         if ("TEMPLATE".equalsIgnoreCase(node.getName())) {
          bodyname=node.getText().trim();
          if (!bodyname.startsWith("/")) {
            bodyname=CmsResource.getFolderPath(resourcename) + bodyname;
          }
        }
 else         if ("PARAMETER".equalsIgnoreCase(node.getName())) {
          Element paramElement=(Element)node;
          if (bodyparams == null) {
            bodyparams=new HashMap();
          }
          bodyparams.put((paramElement.attribute("name")).getText(),paramElement.getTextTrim());
        }
      }
      if (mastertemplate == null || bodyname == null) {
        CmsMessageContainer message=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_CANNOT_MERGE_PAGE_FILE_3,resourcename,mastertemplate,bodyname);
        if (LOG.isDebugEnabled()) {
          LOG.debug(message.key());
        }
        throw new CmsImportExportException(message);
      }
      m_cms.lockResource(resourcename);
      List properties=m_cms.readPropertyObjects(resourcename,false);
      CmsFile bodyfile=m_cms.readFile(bodyname,CmsResourceFilter.IGNORE_EXPIRATION);
      String encoding=CmsProperty.get(CmsPropertyDefinition.PROPERTY_CONTENT_ENCODING,properties).getValue();
      if (encoding == null) {
        encoding=OpenCms.getSystemInfo().getDefaultEncoding();
      }
      if (m_convertToXmlPage) {
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_START_CONVERTING_TO_XML_0));
        }
        CmsXmlPage xmlPage=CmsXmlPageConverter.convertToXmlPage(m_cms,bodyfile.getContents(),getLocale(resourcename,properties),encoding);
        if (LOG.isDebugEnabled()) {
          LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_END_CONVERTING_TO_XML_0));
        }
        if (xmlPage != null) {
          pagefile.setContents(xmlPage.marshal());
          pagefile.setType(CmsResourceTypeXmlPage.getStaticTypeId());
        }
      }
      CmsProperty newProperty=new CmsProperty(CmsPropertyDefinition.PROPERTY_TEMPLATE,mastertemplate,null);
      properties.remove(newProperty);
      properties.add(newProperty);
      if (bodyclass != null && !"".equals(bodyclass)) {
        newProperty=new CmsProperty(CmsPropertyDefinition.PROPERTY_TEMPLATE,mastertemplate,null);
        newProperty.setAutoCreatePropertyDefinition(true);
        properties.remove(newProperty);
        properties.add(newProperty);
      }
      if (bodyparams != null) {
        for (Iterator p=bodyparams.keySet().iterator(); p.hasNext(); ) {
          String key=(String)p.next();
          newProperty=new CmsProperty(key,(String)bodyparams.get(key),null);
          newProperty.setAutoCreatePropertyDefinition(true);
          properties.remove(newProperty);
          properties.add(newProperty);
        }
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_START_IMPORTING_XML_PAGE_0));
      }
      m_cms.importResource(resourcename,pagefile,pagefile.getContents(),properties);
      m_cms.lockResource(bodyname);
      m_cms.deleteResource(bodyname,CmsResource.DELETE_PRESERVE_SIBLINGS);
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_END_IMPORTING_XML_PAGE_0));
      }
      m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
    }
 else {
      m_cms.lockResource(resourcename);
      pagefile.setType(CmsResourceTypePlain.getStaticTypeId());
      m_cms.writeFile(pagefile);
      m_cms.unlockResource(resourcename);
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_CANNOT_CONVERT_XML_STRUCTURE_1,resourcename));
      }
      m_report.println(Messages.get().container(Messages.RPT_NOT_CONVERTED_0),I_CmsReport.FORMAT_OK);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(Messages.get().key(Messages.LOG_IMPORTEXPORT_END_MERGING_1,resourcename));
    }
  }
 catch (  CmsXmlException e) {
    throw e;
  }
catch (  CmsException e) {
    m_report.println(e);
    CmsMessageContainer message=Messages.get().container(Messages.ERR_IMPORTEXPORT_ERROR_MERGING_PAGE_FILE_1,resourcename);
    if (LOG.isDebugEnabled()) {
      LOG.debug(message.key(),e);
    }
    throw new CmsImportExportException(message,e);
  }
}
