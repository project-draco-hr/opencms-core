{
  List result=new ArrayList();
  if (xmlPage != null) {
    List elementNames=xmlPage.getNames(locale);
    Iterator i=elementNames.iterator();
    while (i.hasNext()) {
      String name=(String)i.next();
      CmsDialogElement element=new CmsDialogElement(name,null,false,false,true);
      result.add(element);
    }
  }
  String currentTemplate=null;
  try {
    currentTemplate=cms.readPropertyObject(xmlPageUri,CmsPropertyDefinition.PROPERTY_TEMPLATE,true).getValue();
  }
 catch (  CmsException e) {
    if (LOG.isWarnEnabled()) {
      LOG.warn(e.getLocalizedMessage(),e);
    }
  }
  if (currentTemplate != null && currentTemplate.length() > 0) {
    String elements=null;
    try {
      elements=cms.readPropertyObject(currentTemplate,CmsPropertyDefinition.PROPERTY_TEMPLATE_ELEMENTS,false).getValue(null);
    }
 catch (    CmsException e) {
      if (LOG.isWarnEnabled()) {
        LOG.warn(e.getLocalizedMessage(),e);
      }
    }
    if (elements != null) {
      List tokens=CmsStringUtil.splitAsList(elements,',');
      Iterator it=tokens.iterator();
      while (it.hasNext()) {
        String currentElement=(String)it.next();
        String niceName=null;
        boolean mandatory=false;
        int sepIndex=currentElement.indexOf("|");
        if (sepIndex != -1) {
          niceName=currentElement.substring(sepIndex + 1);
          currentElement=currentElement.substring(0,sepIndex);
        }
        if (currentElement.endsWith("*")) {
          mandatory=true;
          currentElement=currentElement.substring(0,currentElement.length() - 1);
        }
        CmsDialogElement element=new CmsDialogElement(currentElement,niceName,mandatory,true,false);
        if (result.contains(element)) {
          element.setExisting(true);
          result.remove(element);
        }
        result.add(element);
      }
    }
  }
  Collections.sort(result);
  return result;
}
