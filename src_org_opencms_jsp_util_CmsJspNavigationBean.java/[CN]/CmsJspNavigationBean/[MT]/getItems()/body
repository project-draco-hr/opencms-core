{
  if (m_items == null) {
    CmsJspNavBuilder builder=new CmsJspNavBuilder(m_cms);
switch (m_type) {
case FOR_FOLDER:
      if (m_startLevel == Integer.MIN_VALUE) {
        if (m_resource == null) {
          m_items=builder.getNavigationForFolder();
        }
 else {
          m_items=builder.getNavigationForFolder(m_resource);
        }
      }
 else {
        if (m_resource == null) {
          m_items=builder.getNavigationForFolder(m_startLevel);
        }
 else {
          m_items=builder.getNavigationForFolder(m_resource,m_startLevel);
        }
      }
    break;
case FOR_SITE:
  if (m_resource == null) {
    m_items=builder.getSiteNavigation();
  }
 else {
    m_items=builder.getSiteNavigation(m_resource,m_startLevel);
  }
break;
case BREAD_CRUMB:
if (m_resource != null) {
m_items=builder.getNavigationBreadCrumb(m_resource,m_startLevel,m_endLevel,Boolean.valueOf(m_param).booleanValue());
}
 else {
if (m_startLevel == Integer.MIN_VALUE) {
  m_items=builder.getNavigationBreadCrumb();
}
 else {
  if (m_endLevel == Integer.MIN_VALUE) {
    m_items=builder.getNavigationBreadCrumb(m_startLevel,m_endLevel);
  }
 else {
    m_items=builder.getNavigationBreadCrumb(m_startLevel,Boolean.valueOf(m_param).booleanValue());
  }
}
}
break;
case TREE_FOR_FOLDER:
if (m_resource == null) {
m_items=builder.getNavigationTreeForFolder(m_startLevel,m_endLevel);
}
 else {
m_items=builder.getNavigationTreeForFolder(m_resource,m_startLevel,m_endLevel);
}
break;
case FOR_RESOURCE:
default :
List<CmsJspNavElement> items=new ArrayList<CmsJspNavElement>(1);
if (m_resource == null) {
items.add(builder.getNavigationForResource());
}
 else {
items.add(builder.getNavigationForResource(m_resource));
}
m_items=items;
break;
}
}
return m_items;
}
