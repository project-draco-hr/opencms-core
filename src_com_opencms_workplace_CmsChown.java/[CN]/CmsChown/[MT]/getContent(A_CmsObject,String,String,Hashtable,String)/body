{
  HttpSession session=((HttpServletRequest)cms.getRequestContext().getRequest().getOriginalRequest()).getSession(true);
  String lasturl=getLastUrl(cms,parameters);
  String initial=(String)parameters.get(C_PARA_INITIAL);
  if (initial != null) {
    session.removeValue(C_PARA_FILE);
  }
  String template=null;
  CmsXmlWpTemplateFile xmlTemplateDocument=new CmsXmlWpTemplateFile(cms,templateFile);
  String newowner=(String)parameters.get(C_PARA_NEWOWNER);
  String filename=(String)parameters.get(C_PARA_FILE);
  String flags=(String)parameters.get(C_PARA_FLAGS);
  if (flags == null) {
    flags="false";
  }
  if (filename != null) {
    session.putValue(C_PARA_FILE,filename);
  }
  filename=(String)session.getValue(C_PARA_FILE);
  A_CmsResource file=(A_CmsResource)cms.readFileHeader(filename);
  if (file.isFile()) {
    template="file";
  }
 else {
    template="folder";
  }
  if (newowner != null) {
    if ((cms.getRequestContext().currentUser().equals(cms.readOwner(file))) || (cms.userInGroup(cms.getRequestContext().currentUser().getName(),C_GROUP_ADMIN))) {
      cms.chown(file.getAbsolutePath(),newowner);
      if ((cms.getResourceType(file.getType()).getResourceName()).equals(C_TYPE_PAGE_NAME)) {
        String bodyPath=getBodyPath(cms,(CmsFile)file);
        int help=C_CONTENTBODYPATH.lastIndexOf("/");
        String hbodyPath=(C_CONTENTBODYPATH.substring(0,help)) + (file.getAbsolutePath());
        if (hbodyPath.equals(bodyPath)) {
          cms.chown(hbodyPath,newowner);
        }
      }
      if (file.isFolder()) {
        String bodyFolder=C_CONTENTBODYPATH.substring(0,C_CONTENTBODYPATH.lastIndexOf("/")) + file.getAbsolutePath();
        try {
          cms.readFolder(bodyFolder);
          cms.lockResource(bodyFolder);
          cms.chown(bodyFolder,newowner);
          cms.unlockResource(bodyFolder);
        }
 catch (        CmsException ex) {
        }
      }
      if (flags.equals("true")) {
        Vector allFolders=new Vector();
        Vector allFiles=new Vector();
        getAllResources(cms,filename,allFiles,allFolders);
        cms.unlockResource(file.getAbsolutePath());
        for (int i=0; i < allFolders.size(); i++) {
          CmsFolder folder=(CmsFolder)allFolders.elementAt(i);
          cms.lockResource(folder.getAbsolutePath());
          cms.chown(folder.getAbsolutePath(),newowner);
          cms.unlockResource(folder.getAbsolutePath());
          String bodyFolder=C_CONTENTBODYPATH.substring(0,C_CONTENTBODYPATH.lastIndexOf("/")) + folder.getAbsolutePath();
          try {
            cms.readFolder(bodyFolder);
            cms.lockResource(bodyFolder);
            cms.chown(bodyFolder,newowner);
            cms.unlockResource(bodyFolder);
          }
 catch (          CmsException ex) {
          }
        }
        for (int i=0; i < allFiles.size(); i++) {
          CmsFile newfile=(CmsFile)allFiles.elementAt(i);
          cms.lockResource(newfile.getAbsolutePath());
          cms.chown(newfile.getAbsolutePath(),newowner);
          cms.unlockResource(newfile.getAbsolutePath());
          if ((cms.getResourceType(newfile.getType()).getResourceName()).equals(C_TYPE_PAGE_NAME)) {
            String bodyPath=getBodyPath(cms,(CmsFile)newfile);
            int help=C_CONTENTBODYPATH.lastIndexOf("/");
            String hbodyPath=(C_CONTENTBODYPATH.substring(0,help)) + (newfile.getAbsolutePath());
            if (hbodyPath.equals(bodyPath)) {
              cms.lockResource(hbodyPath);
              cms.chown(hbodyPath,newowner);
              cms.unlockResource(hbodyPath);
            }
          }
        }
        cms.lockResource(file.getAbsolutePath());
      }
      session.removeValue(C_PARA_FILE);
      try {
        if (lasturl == null || "".equals(lasturl)) {
          cms.getRequestContext().getResponse().sendCmsRedirect(getConfigFile(cms).getWorkplaceActionPath() + C_WP_EXPLORER_FILELIST);
        }
 else {
          ((HttpServletResponse)(cms.getRequestContext().getResponse().getOriginalResponse())).sendRedirect(lasturl);
        }
      }
 catch (      Exception e) {
        throw new CmsException("Redirect fails :" + getConfigFile(cms).getWorkplaceActionPath() + C_WP_EXPLORER_FILELIST,CmsException.C_UNKNOWN_EXCEPTION,e);
      }
    }
 else {
      xmlTemplateDocument.setData("details","the current user is not allowed to change the file owner");
      template="error";
      session.removeValue(C_PARA_FILE);
    }
  }
  String title=cms.readProperty(file.getAbsolutePath(),C_PROPERTY_TITLE);
  if (title == null) {
    title="";
  }
  A_CmsUser owner=cms.readOwner(file);
  xmlTemplateDocument.setData("TITLE",title);
  xmlTemplateDocument.setData("STATE",getState(cms,file,new CmsXmlLanguageFile(cms)));
  xmlTemplateDocument.setData("OWNER",owner.getFirstname() + " " + owner.getLastname()+ "("+ owner.getName()+ ")");
  xmlTemplateDocument.setData("GROUP",cms.readGroup(file).getName());
  xmlTemplateDocument.setData("FILENAME",file.getName());
  return startProcessing(cms,xmlTemplateDocument,"",parameters,template);
}
