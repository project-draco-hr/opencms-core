{
  CmsBrokenLinkData result=null;
  try {
    CmsObject cms=getCmsObject();
    List<CmsInternalSitemapEntry> entries=getEntriesForIds(cms,open);
    List<CmsInternalSitemapEntry> closedEntries=getEntriesForIds(cms,closed);
    CmsSitemapManager sitemapManager=OpenCms.getSitemapManager();
    List<CmsInternalSitemapEntry> descendants=sitemapManager.getDescendants(closedEntries,true);
    entries.addAll(descendants);
    MultiValueMap linkMap=MultiValueMap.decorate(new HashMap<Object,Object>(),FactoryUtils.instantiateFactory(HashSet.class));
    for (    CmsInternalSitemapEntry entry : entries) {
      List<CmsResource> linkSources=getLinkSources(cms,entry.getId());
      for (      CmsResource source : linkSources) {
        linkMap.put(entry,source);
      }
    }
    List<CmsClientSitemapEntry> closedEntryTrees=new ArrayList<CmsClientSitemapEntry>();
    for (    CmsUUID id : closed) {
      closedEntryTrees.add(getSubTree(cms,sitemapManager.getEntryForId(cms,id).getSitePath(cms)));
    }
    result=new CmsBrokenLinkData();
    result.setBrokenLinks(getBrokenLinkBeans(linkMap));
    result.setClosedEntries(closedEntryTrees);
  }
 catch (  Throwable e) {
    error(e);
  }
  return result;
}
