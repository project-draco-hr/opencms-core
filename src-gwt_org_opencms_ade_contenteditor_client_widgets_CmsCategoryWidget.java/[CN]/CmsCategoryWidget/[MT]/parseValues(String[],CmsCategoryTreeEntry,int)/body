{
  for (int i=0; i < values.length; i++) {
    String value=values[i];
    if ((value.indexOf("/") == (value.length() - 1)) && (parent == null)) {
      try {
        String name=value.replace("/","");
        CmsCategory category=new CmsCategory(null,m_categoryFolder + value,name,null,m_categoryFolder);
        CmsCategoryTreeEntry categoryEntry=new CmsCategoryTreeEntry(category);
        m_results.add(categoryEntry);
        List<String> test=new ArrayList<String>();
        for (int y=0; y < values.length; y++) {
          if (!values[i].equals(values[y])) {
            test.add(values[y]);
          }
        }
        parseValues(test.toArray(new String[0]),categoryEntry,level + 1);
      }
 catch (      Exception e) {
      }
    }
 else     if (parent != null) {
      if (value.contains(parent.getPath()) && (value.split("/").length == level)) {
        CmsCategory category;
        try {
          String name=value.replace(parent.getPath(),"").replace("/","");
          category=new CmsCategory(null,m_categoryFolder + value,name,null,m_categoryFolder);
          CmsCategoryTreeEntry categoryEntry=new CmsCategoryTreeEntry(category);
          parent.addChild(categoryEntry);
          List<String> test=new ArrayList<String>();
          for (int y=0; y < values.length; y++) {
            if (!values[i].equals(values[y])) {
              test.add(values[y]);
            }
          }
          parseValues(test.toArray(new String[0]),categoryEntry,level + 1);
        }
 catch (        Exception e) {
        }
      }
    }
  }
}
