{
  if (m_parseables.isEmpty()) {
    return;
  }
  m_report.println(Messages.get().container(Messages.RPT_START_PARSE_LINKS_0),I_CmsReport.FORMAT_HEADLINE);
  int i=0;
  Iterator it=m_parseables.iterator();
  while (it.hasNext()) {
    CmsResource res=(CmsResource)it.next();
    m_report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_SUCCESSION_2,String.valueOf(i + 1),String.valueOf(m_parseables.size())),I_CmsReport.FORMAT_NOTE);
    m_report.print(Messages.get().container(Messages.RPT_PARSE_LINKS_FOR_1,m_cms.getSitePath(res)),I_CmsReport.FORMAT_NOTE);
    m_report.print(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_DOTS_0));
    try {
      CmsFile file=m_cms.readFile(res);
      file.setDateLastModified(res.getDateLastModified());
      m_cms.writeFile(file);
      m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_OK_0),I_CmsReport.FORMAT_OK);
    }
 catch (    Throwable e) {
      m_report.addWarning(e);
      m_report.println(org.opencms.report.Messages.get().container(org.opencms.report.Messages.RPT_FAILED_0),I_CmsReport.FORMAT_ERROR);
      if (LOG.isWarnEnabled()) {
        LOG.warn(Messages.get().getBundle().key(Messages.LOG_IMPORTEXPORT_REWRITING_1,res.getRootPath()));
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug(e.getLocalizedMessage(),e);
      }
    }
    i++;
  }
  m_report.println(Messages.get().container(Messages.RPT_END_PARSE_LINKS_0),I_CmsReport.FORMAT_HEADLINE);
}
