{
  byte[] content=null;
  CmsResource res=null;
  try {
    if (source != null) {
      content=getFileBytes(source);
    }
    int size=0;
    if (content != null) {
      size=content.length;
    }
    CmsUUID newUserlastmodified;
    CmsUUID newUsercreated;
    try {
      newUserlastmodified=m_cms.readUser(userlastmodified).getId();
    }
 catch (    CmsException e) {
      newUserlastmodified=m_cms.getRequestContext().currentUser().getId();
    }
    try {
      newUsercreated=m_cms.readUser(usercreated).getId();
    }
 catch (    CmsException e) {
      newUsercreated=m_cms.getRequestContext().currentUser().getId();
    }
    CmsUUID newUuidresource=null;
    if ((uuidresource != null) && (resType != CmsResourceTypeFolder.C_RESOURCE_TYPE_ID)) {
      newUuidresource=new CmsUUID(uuidresource);
    }
 else {
      newUuidresource=new CmsUUID();
    }
    String resname=destination;
    if (resname.endsWith("/")) {
      resname=resname.substring(0,resname.length() - 1);
    }
    if (resname.lastIndexOf("/") > 0) {
      resname=resname.substring(resname.lastIndexOf("/") + 1,resname.length());
    }
    if (m_convertToXmlPage && (resType == A_CmsImport.C_RESOURCE_TYPE_PAGE_ID || resType == C_RESOURCE_TYPE_NEWPAGE_ID)) {
      if (content != null) {
        String encoding=null;
        encoding=CmsProperty.get(I_CmsConstants.C_PROPERTY_CONTENT_ENCODING,properties).getValue();
        if (encoding == null) {
          encoding=OpenCms.getSystemInfo().getDefaultEncoding();
        }
        CmsXmlPage xmlPage=CmsXmlPageConverter.convertToXmlPage(m_cms,new String(content,encoding),"body",getLocale(destination,properties),encoding);
        content=xmlPage.marshal();
      }
      resType=CmsResourceTypeXmlPage.C_RESOURCE_TYPE_ID;
    }
    CmsResource resource=new CmsResource(new CmsUUID(),newUuidresource,CmsUUID.getNullUUID(),resname,resType,new Integer(flags).intValue(),m_cms.getRequestContext().currentProject().getId(),I_CmsConstants.C_STATE_NEW,datecreated,newUsercreated,datelastmodified,newUserlastmodified,datereleased,dateexpired,1,size);
    if (C_RESOURCE_TYPE_LINK_ID == resType) {
      m_report.print(m_report.key("report.storing_link"),I_CmsReport.C_FORMAT_NOTE);
      m_linkStorage.put(m_importPath + destination,new String(content));
      m_linkPropertyStorage.put(m_importPath + destination,properties);
      res=resource;
      res.setRootPath(m_cms.getRequestContext().addSiteRoot(m_importPath + destination));
    }
 else {
      res=m_cms.importResource(m_importPath + destination,resource,content,properties);
    }
    if (res != null) {
      if (C_RESOURCE_TYPE_PAGE_ID == resType) {
        m_importedPages.add(I_CmsConstants.C_FOLDER_SEPARATOR + destination);
      }
      m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
    }
  }
 catch (  Exception exc) {
    m_report.println(exc);
    try {
      Thread.sleep(1000);
    }
 catch (    Exception e) {
    }
  }
  return res;
}
