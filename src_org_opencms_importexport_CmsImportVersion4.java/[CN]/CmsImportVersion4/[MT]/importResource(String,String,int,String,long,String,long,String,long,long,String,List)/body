{
  byte[] content=null;
  CmsResource res=null;
  try {
    if (source != null) {
      content=getFileBytes(source);
    }
    int size=0;
    if (content != null) {
      size=content.length;
    }
    CmsUUID newUserlastmodified;
    CmsUUID newUsercreated;
    try {
      newUserlastmodified=m_cms.readUser(userlastmodified).getId();
    }
 catch (    CmsException e) {
      newUserlastmodified=m_cms.getRequestContext().currentUser().getId();
    }
    try {
      newUsercreated=m_cms.readUser(usercreated).getId();
    }
 catch (    CmsException e) {
      newUsercreated=m_cms.getRequestContext().currentUser().getId();
    }
    boolean isFolder=CmsFolder.isFolderType(resType);
    CmsUUID newUuidresource=null;
    if ((uuidresource != null) && (!isFolder)) {
      newUuidresource=new CmsUUID(uuidresource);
    }
 else {
      newUuidresource=new CmsUUID();
    }
    String resname=destination;
    if (resname.endsWith("/")) {
      resname=resname.substring(0,resname.length() - 1);
    }
    if (resname.lastIndexOf("/") > 0) {
      resname=resname.substring(resname.lastIndexOf("/") + 1,resname.length());
    }
    CmsResource resource=new CmsResource(new CmsUUID(),newUuidresource,destination,resType,isFolder,new Integer(flags).intValue(),m_cms.getRequestContext().currentProject().getId(),I_CmsConstants.C_STATE_NEW,datecreated,newUsercreated,datelastmodified,newUserlastmodified,datereleased,dateexpired,1,size);
    if (C_RESOURCE_TYPE_LINK_ID == resType) {
      m_report.print(m_report.key("report.storing_link"),I_CmsReport.C_FORMAT_NOTE);
      m_linkStorage.put(destination,new String(content));
      m_linkPropertyStorage.put(destination,properties);
      res=resource;
    }
 else {
      res=m_cms.importResource(destination,resource,content,properties);
    }
    if (res != null) {
      if (C_RESOURCE_TYPE_PAGE_ID == resType) {
        m_importedPages.add(destination);
      }
      m_report.println(m_report.key("report.ok"),I_CmsReport.C_FORMAT_OK);
    }
  }
 catch (  Exception exc) {
    m_report.println(exc);
    try {
      Thread.sleep(1000);
    }
 catch (    Exception e) {
    }
  }
  return res;
}
