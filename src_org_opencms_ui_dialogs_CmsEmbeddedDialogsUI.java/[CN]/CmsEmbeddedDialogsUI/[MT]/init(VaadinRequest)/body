{
  super.init(request);
  Throwable t=null;
  String errorMessage=null;
  try {
    OpenCms.getRoleManager().checkRole(getCmsObject(),CmsRole.ELEMENT_AUTHOR);
    try {
      String resources=request.getParameter("resources");
      List<CmsResource> resourceList;
      if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(resources)) {
        resourceList=new ArrayList<CmsResource>();
        String[] resIds=resources.split(";");
        for (int i=0; i < resIds.length; i++) {
          if (CmsUUID.isValidUUID(resIds[i])) {
            resourceList.add(getCmsObject().readResource(new CmsUUID(resIds[i]),CmsResourceFilter.IGNORE_EXPIRATION));
          }
        }
      }
 else {
        resourceList=Collections.<CmsResource>emptyList();
      }
      String typeParam=request.getParameter("contextType");
      ContextType type=ContextType.valueOf(typeParam);
      I_CmsDialogContext context=new CmsEmbeddedDialogContext(type,resourceList);
      I_CmsWorkplaceAction action=getAction(request);
      if (action.isActive(context)) {
        action.executeAction(context);
      }
 else {
        errorMessage=CmsVaadinUtils.getMessageText(Messages.GUI_WORKPLACE_ACCESS_DENIED_TITLE_0);
      }
    }
 catch (    Throwable e) {
      t=e;
      errorMessage=CmsVaadinUtils.getMessageText(org.opencms.ui.dialogs.Messages.ERR_DAILOG_INSTANTIATION_FAILED_1,request.getPathInfo());
    }
  }
 catch (  CmsRoleViolationException ex) {
    t=ex;
    errorMessage=CmsVaadinUtils.getMessageText(Messages.GUI_WORKPLACE_ACCESS_DENIED_TITLE_0);
  }
  if (errorMessage != null) {
    CmsErrorDialog.showErrorDialog(errorMessage,t,new Runnable(){
      public void run(){
        new CmsEmbeddedDialogContext(null,Collections.<CmsResource>emptyList()).finish(null);
      }
    }
);
  }
}
