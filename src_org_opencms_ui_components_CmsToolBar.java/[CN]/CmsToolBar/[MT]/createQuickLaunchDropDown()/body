{
  PopupView pv=new PopupView(new PopupView.Content(){
    private static final long serialVersionUID=1L;
    public String getMinimizedValueAsHTML(){
      return getDropDownButtonHtml(FontOpenCms.APPS);
    }
    public Component getPopupComponent(){
      CmsObject cms=A_CmsUI.getCmsObject();
      Locale locale=UI.getCurrent().getLocale();
      HorizontalLayout layout=new HorizontalLayout();
      layout.addStyleName(ValoTheme.LAYOUT_HORIZONTAL_WRAPPING);
      layout.addStyleName(OpenCmsTheme.QUICK_LAUNCH);
      layout.setMargin(true);
      List<String> names=Arrays.asList(CmsAppHierarchyConfiguration.APP_ID,CmsPageEditorConfiguration.APP_ID,CmsSitemapEditorConfiguration.APP_ID,CmsFileExplorerConfiguration.APP_ID,"/accounts","/workplace");
      Map<String,I_CmsWorkplaceAppConfiguration> confMap=Maps.newHashMap();
      for (      I_CmsWorkplaceAppConfiguration config : OpenCms.getWorkplaceAppManager().getWorkplaceApps()) {
        confMap.put(config.getId(),config);
      }
      List<I_CmsWorkplaceAppConfiguration> configs=Lists.newArrayList();
      for (      String name : names) {
        I_CmsWorkplaceAppConfiguration config=confMap.get(name);
        if (config == null) {
          continue;
        }
        CmsAppVisibilityStatus status=config.getVisibility(cms);
        if (status.isVisible()) {
          layout.addComponent(CmsDefaultAppButtonProvider.createAppIconWidget(cms,config,locale));
        }
      }
      return layout;
    }
  }
);
  pv.setDescription(CmsVaadinUtils.getMessageText(Messages.GUI_QUICK_LAUNCH_TITLE_0));
  pv.addStyleName(OpenCmsTheme.NAVIGATOR_DROPDOWN);
  pv.setHideOnMouseOut(false);
  return pv;
}
