{
  CmsJspNavElement navElem=CmsJspNavBuilder.getNavigationForResource(cms,resourcePath);
  String name=navElem.getNavText();
  if (CmsMessages.isUnknownKey(name)) {
    name=navElem.getTitle();
  }
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(name)) {
    name="${key." + Messages.GUI_TOOLS_DEFAULT_NAME_0 + "}";
  }
  String shortName=name;
  if (name.indexOf(VALUE_SEPARATOR) >= 0) {
    shortName=name.substring(name.indexOf(VALUE_SEPARATOR) + 1);
    name=name.substring(0,name.indexOf(VALUE_SEPARATOR));
  }
  setName(name);
  setShortName(shortName);
  String iconPath=navElem.getNavImage();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(iconPath)) {
    iconPath="admin/images/default_tool_big.png:admin/images/default_tool_small.png";
  }
  String smallIconPath=iconPath;
  if (iconPath.indexOf(VALUE_SEPARATOR) >= 0) {
    smallIconPath=iconPath.substring(iconPath.indexOf(VALUE_SEPARATOR) + 1);
    iconPath=iconPath.substring(0,iconPath.indexOf(VALUE_SEPARATOR));
  }
  setIconPath(iconPath);
  setSmallIconPath(smallIconPath);
  String helpText=navElem.getDescription();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(helpText)) {
    helpText="${key." + Messages.GUI_TOOLS_DEFAULT_HELP_0 + "}";
  }
  String disabledHelpText=DEFAULT_DISABLED_HELPTEXT;
  if (helpText.indexOf(VALUE_SEPARATOR) >= 0) {
    disabledHelpText=helpText.substring(helpText.indexOf(VALUE_SEPARATOR) + 1);
    helpText=helpText.substring(0,helpText.indexOf(VALUE_SEPARATOR));
  }
  setHelpText(helpText);
  setDisabledHelpText(disabledHelpText);
  String group=navElem.getInfo();
  if (CmsStringUtil.isEmptyOrWhitespaceOnly(group)) {
    group="${key." + Messages.GUI_TOOLS_DEFAULT_GROUP_0 + "}";
  }
  String link=resourcePath;
  String path=resourcePath;
  boolean isFolder=false;
  try {
    cms.readFolder(resourcePath);
    isFolder=true;
    if (path.endsWith(CmsToolManager.TOOLPATH_SEPARATOR)) {
      path=path.substring(0,path.lastIndexOf(CmsToolManager.TOOLPATH_SEPARATOR));
    }
    link=CmsToolManager.VIEW_JSPPAGE_LOCATION;
    CmsProperty prop=cms.readPropertyObject(path,CmsPropertyDefinition.PROPERTY_DEFAULT_FILE,true);
    String defFile="index.html";
    if (!prop.isNullProperty()) {
      defFile=prop.getValue();
    }
    if (!defFile.startsWith(CmsToolManager.TOOLPATH_SEPARATOR)) {
      defFile=path + CmsToolManager.TOOLPATH_SEPARATOR + defFile;
    }
    cms.readResource(defFile);
    link=defFile;
  }
 catch (  CmsException e) {
  }
  setLink(link);
  if (isFolder) {
    path=resourcePath.substring(CmsToolManager.ADMINTOOLS_ROOT_LOCATION.length(),resourcePath.lastIndexOf(CmsToolManager.TOOLPATH_SEPARATOR));
  }
 else {
    path=resourcePath.substring(CmsToolManager.ADMINTOOLS_ROOT_LOCATION.length(),resourcePath.lastIndexOf('.'));
  }
  try {
    CmsProperty prop=cms.readPropertyObject(resourcePath,ARGS_PROPERTY_DEFINITION,false);
    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(prop.getValue())) {
      Map argsMap=new HashMap();
      Iterator itArgs=CmsStringUtil.splitAsList(prop.getValue(),ARGUMENT_SEPARATOR).iterator();
      while (itArgs.hasNext()) {
        String arg=(String)itArgs.next();
        int pos=arg.indexOf(VALUE_SEPARATOR);
        argsMap.put(arg.substring(0,pos),arg.substring(pos + 1));
      }
      if (argsMap.get(ARG_PATH_NAME) != null) {
        path=(String)argsMap.get(ARG_PATH_NAME);
      }
      if (argsMap.get(ARG_CONFIRMATION_NAME) != null) {
        setConfirmationMessage((String)argsMap.get(ARG_CONFIRMATION_NAME));
      }
      if (argsMap.get(ARG_PARAM_NAME) != null) {
        setParameterString((String)argsMap.get(ARG_PARAM_NAME));
      }
    }
  }
 catch (  CmsException e) {
  }
  setPath(path);
  setGroup(group);
  setPosition(navElem.getNavPosition());
  return true;
}
