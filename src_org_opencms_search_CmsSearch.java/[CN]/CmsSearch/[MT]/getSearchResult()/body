{
  if ((m_cms != null) && (m_result == null) && (m_parameters.getIndex() != null)&& CmsStringUtil.isNotEmpty(m_parameters.getQuery())) {
    if ((getQueryLength() > 0) && (m_parameters.getQuery().trim().length() < getQueryLength())) {
      m_lastException=new CmsSearchException(Messages.get().container(Messages.ERR_QUERY_TOO_SHORT_1,new Integer(getQueryLength())));
      return m_result;
    }
    try {
      CmsSearchResultList result=m_parameters.getSearchIndex().search(m_cms,getParameters());
      if (result.size() > 0) {
        m_result=result;
        m_searchResultCount=result.getHitCount();
        m_categoriesFound=result.getCategories();
        m_pageCount=m_searchResultCount / m_parameters.getMatchesPerPage();
        if ((m_searchResultCount % m_parameters.getMatchesPerPage()) != 0) {
          m_pageCount++;
        }
        String url=m_cms.getRequestContext().getUri() + m_parameters.toQueryString() + "&searchPage=";
        if (m_parameters.getSearchPage() > 1) {
          m_prevUrl=url + (m_parameters.getSearchPage() - 1);
        }
        if (m_parameters.getSearchPage() < m_pageCount) {
          m_nextUrl=url + (m_parameters.getSearchPage() + 1);
        }
      }
 else {
        m_result=Collections.EMPTY_LIST;
        m_searchResultCount=0;
        m_categoriesFound=null;
        m_pageCount=0;
        m_prevUrl=null;
        m_nextUrl=null;
      }
    }
 catch (    Exception exc) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(Messages.get().getBundle().key(Messages.LOG_SEARCHING_FAILED_0),exc);
      }
      m_result=null;
      m_searchResultCount=0;
      m_pageCount=0;
      m_lastException=exc;
    }
  }
  return m_result;
}
