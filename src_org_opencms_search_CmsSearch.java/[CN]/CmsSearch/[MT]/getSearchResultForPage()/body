{
  if (this.getMatchesPerPage() < 0) {
    return getSearchResult();
  }
  if (this.getPage() <= 0) {
    this.setPage(1);
  }
  List result=new ArrayList(this.getMatchesPerPage());
  if (m_result == null) {
    getSearchResult();
    if (m_result == null) {
      return null;
    }
  }
  int startIndex=(this.getPage() - 1) * this.getMatchesPerPage();
  int endIndex=this.getPage() * this.getMatchesPerPage();
  if (this.getMatchesPerPage() < 1) {
    m_pageCount=1;
  }
 else {
    m_pageCount=m_result.size() / this.getMatchesPerPage();
    if ((m_result.size() % this.getMatchesPerPage()) != 0) {
      m_pageCount++;
    }
  }
  String url=m_cms.getRequestContext().getUri() + this.getSearchParameters() + "&page=";
  if (this.getPage() > 1) {
    m_prevUrl=url + (this.getPage() - 1);
  }
  if (this.getPage() < m_pageCount) {
    m_nextUrl=url + (this.getPage() + 1);
  }
  for (int i=startIndex; i < endIndex; i++) {
    try {
      result.add(m_result.get(i));
    }
 catch (    IndexOutOfBoundsException e) {
      break;
    }
  }
  return result;
}
